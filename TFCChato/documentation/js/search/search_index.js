var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.248,1,0.971]],["body/components/AboutPage.html",[0,0.417,1,1.731,2,1.612,3,0.16,4,0.123,5,1.315,6,1.315,7,1.315,8,1.273,9,0.108,10,4.108,11,1.561,12,1.915,13,1.12,14,2.409,15,2.333,16,1.719,17,6.852,18,1.719,19,6.15,20,0.396,21,0.886,22,2.031,23,1.344,24,0.886,25,4.703,26,4.703,27,0.584,28,0.013,29,1.017,30,0.185,31,0.34,32,0.123,33,0.154,34,5.372,35,6.15,36,6.15,37,6.15,38,6.15,39,6.15,40,6.15,41,4.476,42,6.15,43,6.15,44,6.15,45,2.497,46,2.782,47,2.143,48,2.143,49,2.233,50,1.841,51,3.423,52,2.33,53,3.698,54,3.423,55,3.916,56,4.703,57,2.782,58,2.588,59,5.372,60,4.703,61,4.171,62,2.828,63,2.33,64,2.233,65,2.828,66,2.436,67,6.15,68,3.062,69,3.451,70,4.703,71,2.499,72,3.002,73,1.91,74,4.703,75,6.15,76,3.423,77,3.338,78,2.682,79,4.703,80,4.108,81,4.703,82,3.423,83,2.33,84,2.233,85,2.553,86,4.108,87,2.497,88,2.694,89,4.108,90,1.601,91,1.982,92,4.108,93,4.703,94,2.436,95,0.953,96,1.719,97,1.719,98,1.315,99,1.623,100,1.315,101,0.649,102,1.315,103,1.12,104,1.315,105,1.156,106,1.315,107,1.156,108,1.194,109,1.719,110,1.12,111,1.612,112,1.915,113,1.12,114,1.561,115,1.915,116,1.156,117,1.273,118,1.315,119,1.12,120,1.915,121,1.156,122,1.315,123,1.156,124,1.233,125,1.085,126,1.315,127,1.12,128,1.017,129,1.156,130,1.561,131,1.612,132,1.719,133,1.156,134,1.156,135,1.612,136,1.719,137,1.156,138,1.719,139,1.156,140,1.194,141,1.719,142,1.156,143,1.273,144,1.12,145,1.156,146,1.156,147,1.194,148,1.12,149,1.315,150,1.156,151,1.017,152,1.156,153,1.426,154,1.12,155,1.12,156,1.12,157,1.156,158,1.194,159,1.315,160,1.315,161,0.009,162,0.009]],["title/modules/AboutPageModule.html",[163,1.139,164,2.967]],["body/modules/AboutPageModule.html",[1,1.967,3,0.16,4,0.16,9,0.14,28,0.013,30,0.326,31,0.442,32,0.16,33,0.2,95,1.241,161,0.011,162,0.011,163,1.712,164,6.12,165,2.157,166,2.907,167,4,168,3.172,169,2.233,170,2.313,171,5.348,172,5.348,173,5.348,174,5.603,175,3.755,176,2.791,177,2.486,178,6.123,179,2.838,180,2.838,181,4.134,182,3.324,183,4.359,184,2.016,185,3.935,186,1.95,187,3.492,188,5.348]],["title/modules/AboutPageRoutingModule.html",[163,1.139,174,2.764]],["body/modules/AboutPageRoutingModule.html",[0,0.39,1,1.773,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,161,0.011,162,0.011,165,2.257,170,2.42,174,5.048,179,2.508,180,2.914,188,5.596,189,6.407,190,3.654,191,3.317,192,4.246,193,2.182,194,1.679,195,3.042,196,3.853]],["title/components/AccessPage.html",[0,0.248,103,0.971]],["body/components/AccessPage.html",[0,0.425,1,0.618,2,1.568,3,0.144,4,0.068,5,0.725,6,0.725,7,0.725,8,0.702,9,0.059,11,1.019,12,1.373,13,0.618,14,2.291,15,2.24,16,1.122,18,1.122,20,0.218,21,0.862,22,1.546,23,1.45,24,1.049,27,0.785,28,0.013,29,1.368,30,0.26,31,0.187,32,0.068,33,0.085,45,2.429,46,2.679,47,2.239,48,1.83,49,1.232,50,1.572,52,2.434,53,1.56,55,1.652,57,1.63,62,4.674,63,1.285,64,2.332,65,2.414,69,1.232,71,0.946,78,2.29,82,1.888,84,1.232,87,2.679,88,2.423,90,0.883,91,1.093,95,0.526,96,1.122,97,1.122,98,0.725,99,1.235,100,0.725,101,0.697,102,0.725,103,1.317,104,0.725,105,0.638,106,0.725,107,0.638,108,0.658,109,1.122,110,0.618,111,1.052,112,1.373,113,0.618,114,1.019,115,1.373,116,0.638,117,0.702,118,0.725,119,0.618,120,1.373,121,0.638,122,0.725,123,0.638,124,0.68,125,0.598,126,0.725,127,0.618,128,0.561,129,0.638,130,1.019,131,1.052,132,1.122,133,0.638,134,0.638,135,1.052,136,1.122,137,0.638,138,1.122,139,0.638,140,1.815,141,1.122,142,0.638,143,0.702,144,0.618,145,0.638,146,0.638,147,1.247,148,0.618,149,0.725,150,0.638,151,0.561,152,0.638,153,1.562,154,0.618,155,0.618,156,0.618,157,0.638,158,0.658,159,0.725,160,0.725,161,0.006,162,0.006,169,1.464,191,2.071,193,0.883,197,2.266,198,6.041,199,3.88,200,4.912,201,4.015,202,0.6,203,5.53,204,5.53,205,6.326,206,4.998,207,4.998,208,1.888,209,2.667,210,1.758,211,3.134,212,4.869,213,4.998,214,3.661,215,4.015,216,1.639,217,1.989,218,3.809,219,0.965,220,4.998,221,3.043,222,4.055,223,2.872,224,4.291,225,2.643,226,2.037,227,3.247,228,3.128,229,3.004,230,2.334,231,2.802,232,3.128,233,4.354,234,3.804,235,3.107,236,3.881,237,2.434,238,3.881,239,3.322,240,3.597,241,3.881,242,2.964,243,2.575,244,4.291,245,2.396,246,4.291,247,4.291,248,4.291,249,3.331,250,2.239,251,2.434,252,2.954,253,2.152,254,0.6,255,0.831,256,0.771,257,2.434,258,1.83,259,3.507,260,1.237,261,2.594,262,4.015,263,1.17,264,1.63,265,4.015,266,3.581,267,2.594,268,2.179,269,2.414,270,2.922,271,4.37,272,3.507,273,2.922,274,2.922,275,3.236,276,1.146,277,1.759,278,1.83,279,3.809,280,3.099,281,2.594,282,4.015,283,3.763,284,2.594,285,2.29,286,2.179,287,2.922,288,2.557,289,4.025,290,2.179,291,2.545,292,2.434,293,4.291,294,4.912,295,3.881,296,1.906,297,3.172,298,1.184,299,2.594,300,1.906,301,4.604,302,2.331,303,3.172,304,2.594,305,3.412,306,1.367,307,3.881,308,3.881,309,0.598,310,2.017,311,2.049,312,1.285,313,1.652,314,1.56,315,1.888,316,1.888,317,1.759,318,0.902,319,1.294,320,2.594,321,2.594,322,2.594,323,5.53,324,4.015,325,2.594,326,2.594,327,3.002,328,2.423,329,4.015,330,4.015,331,2.594,332,2.62,333,4.354,334,4.354,335,3.172,336,4.291,337,4.912,338,1.759,339,2.557,340,1.888,341,1.759,342,1.759,343,2.594,344,3.576,345,2.922,346,1.759,347,2.594,348,2.594,349,2.594,350,2.594,351,1.888,352,2.594,353,3.172,354,2.922,355,3.172,356,2.414,357,3.172,358,3.172,359,2.723,360,2.049,361,2.049,362,4.015,363,4.015,364,2.08,365,4.291,366,2.049,367,4.015,368,1.285,369,1.692,370,1.232,371,4.015,372,3.507,373,2.434,374,2.423,375,2.266,376,4.015,377,2.594,378,2.429,379,4.015,380,2.594,381,1.344,382,2.594,383,2.594,384,1.182,385,1.888,386,1.888,387,1.053,388,1.053,389,1.136,390,1.759,391,1.344]],["title/modules/AccessPageModule.html",[163,1.139,392,2.967]],["body/modules/AccessPageModule.html",[3,0.141,4,0.141,9,0.124,28,0.013,30,0.337,31,0.39,32,0.141,33,0.177,95,1.096,103,1.91,139,1.972,140,1.372,146,1.972,147,1.372,161,0.01,162,0.01,163,1.511,165,1.904,166,2.566,167,3.788,168,2.8,169,1.971,170,2.041,175,3.481,176,2.463,177,2.195,179,2.631,180,2.631,181,3.833,182,2.934,183,4.041,184,1.779,185,3.648,186,1.721,187,3.083,199,2.934,210,1.329,243,2.041,392,6.181,393,4.721,394,4.721,395,4.721,396,5.44,397,4.354,398,5.405,399,4.891,400,4.721,401,4.27,402,6.72,403,4.27,404,3.481,405,2.934,406,3.083,407,3.833,408,2.8,409,2.8,410,3.481,411,3.442,412,5.31,413,4.27,414,2.678,415,5.31,416,4.27,417,4.557,418,3.665,419,5.31,420,4.27,421,3.934,422,4.557,423,3.665,424,3.25,425,2.8,426,2.368,427,3.083,428,3.083,429,4.27,430,5.405]],["title/modules/AccessPageRoutingModule.html",[163,1.139,396,2.764]],["body/modules/AccessPageRoutingModule.html",[0,0.39,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,103,1.773,161,0.011,162,0.011,165,2.257,170,2.42,179,2.508,180,2.914,190,3.654,191,3.317,192,4.246,193,2.182,194,1.679,195,3.042,196,3.853,396,5.048,400,5.596,431,6.407]],["title/guards/AdminGuard.html",[432,3.221,433,2.967]],["body/guards/AdminGuard.html",[2,1.704,3,0.11,4,0.11,9,0.097,11,1.074,20,0.356,21,0.826,23,1.275,24,0.826,27,0.953,28,0.013,30,0.287,31,0.306,32,0.11,33,0.212,52,3.22,101,0.605,153,1.623,161,0.008,162,0.008,177,2.327,193,1.44,199,3.11,208,3.079,209,3.291,212,5.244,214,4.171,216,1.459,219,0.99,221,2.544,222,2.968,223,2.847,224,3.694,225,2.631,226,2.213,230,1.709,235,2.962,239,3.564,243,2.75,245,2.471,250,3.421,251,3.719,252,3.908,254,0.584,255,0.796,256,0.739,257,3.607,258,2.962,260,2.146,263,1.548,269,4.378,276,1.042,286,3.528,291,3.366,296,2.721,302,3.069,310,2.737,318,0.898,319,0.915,433,4.171,434,3.342,435,3.694,436,6.47,437,4.229,438,4.138,439,6.499,440,6.499,441,3.719,442,3.694,443,6.359,444,3.43,445,6.82,446,4.229,447,3.607,448,7.107,449,5.005,450,3.446,451,6.556,452,5.09,453,4.73,454,5.135,455,4.138,456,6.499,457,4.937,458,4.407,459,3.022,460,7.053,461,2.36,462,4.407,463,4.514,464,2.397,465,3.886,466,2.164,467,1.551,468,1.221,469,2.096,470,4.229,471,3.694,472,1.717,473,1.656,474,1.853,475,1.817,476,4.229,477,4.229,478,4.229,479,4.229,480,3.694,481,4.229,482,1.49]],["title/components/AppComponent.html",[0,0.248,105,1.002]],["body/components/AppComponent.html",[0,0.316,1,0.675,2,1.127,3,0.112,4,0.074,5,0.793,6,0.793,7,0.793,8,0.768,9,0.065,11,1.091,12,1.451,13,0.675,14,2.313,15,2.249,16,1.202,18,1.202,20,0.239,21,0.62,22,1.62,23,1.46,24,1.055,27,0.891,28,0.013,29,1.472,30,0.268,31,0.205,32,0.074,33,0.214,49,1.347,50,1.11,52,2.573,53,1.706,55,1.806,57,2.765,58,1.624,61,2.916,62,1.706,63,2.13,64,2.041,68,2.528,69,2.465,71,2.39,72,1.883,73,1.746,77,1.539,78,2.452,83,2.573,84,3.623,85,2.334,86,2.477,87,2.108,88,1.242,89,2.477,90,0.966,91,1.196,95,0.575,96,1.202,97,1.202,98,0.793,99,1.464,100,0.793,101,0.657,102,0.793,103,0.675,104,0.793,105,1.425,106,0.793,107,0.697,108,0.72,109,1.202,110,0.675,111,1.127,112,1.451,113,0.675,114,1.091,115,1.451,116,0.697,117,0.768,118,0.793,119,0.675,120,1.451,121,0.697,122,0.793,123,0.697,124,1.127,125,0.654,126,0.793,127,0.675,128,0.613,129,0.697,130,1.091,131,1.127,132,1.202,133,0.697,134,0.697,135,1.361,136,1.202,137,0.697,138,1.202,139,0.697,140,0.72,141,1.202,142,0.697,143,0.768,144,0.675,145,0.697,146,0.697,147,0.72,148,0.675,149,0.793,150,0.697,151,0.613,152,0.697,153,1.336,154,0.675,155,0.675,156,0.675,157,0.697,158,0.72,159,0.793,160,0.793,161,0.006,162,0.006,186,0.903,191,2.189,193,0.966,199,2.818,202,0.642,208,2.064,209,2.763,210,1.8,212,4.466,214,4.012,216,1.641,217,2.573,219,0.67,223,2.713,225,2.911,226,2.12,229,2.465,230,2.142,235,2.366,238,4.103,239,3.41,242,2.573,243,2.882,250,2.987,251,3.373,252,3.122,253,2.275,254,0.587,255,0.722,256,0.67,257,3.373,258,2.838,260,1.325,263,1.71,264,2.661,268,2.334,276,0.689,277,1.883,291,2.227,292,2.13,296,2.041,298,1.174,300,3.112,309,0.992,310,1.034,315,2.064,316,2.064,317,1.923,318,0.803,319,1.347,332,1.883,333,2.064,334,2.064,344,2.064,364,2.227,369,1.196,370,1.347,372,3.755,373,2.13,378,2.108,384,1.959,385,3.129,387,1.746,388,1.746,389,1.883,390,1.923,391,1.469,438,4.173,441,3.957,447,2.13,455,2.738,459,2.81,461,1.282,463,3.484,464,2.158,466,1.961,468,0.819,473,1.683,475,1.202,480,2.477,482,2.041,483,2.477,484,5.192,485,4.299,486,5.192,487,5.192,488,6.554,489,5.541,490,5.794,491,6.554,492,6.554,493,6.554,494,6.554,495,5.227,496,4.299,497,1.683,498,3.755,499,2.916,500,4.103,501,2.961,502,2.957,503,3.226,504,4.318,505,4.535,506,3.475,507,3.779,508,4.299,509,2.836,510,5.192,511,5.192,512,2.227,513,2.836,514,3.755,515,2.836,516,4.299,517,5.794,518,2.836,519,3.755,520,7.321,521,2.836,522,2.836,523,3.397,524,3.755,525,2.738,526,2.836,527,2.041,528,2.836,529,2.836,530,2.836,531,2.477,532,2.836,533,1.806,534,2.836,535,4.299,536,2.836,537,3.755,538,2.836,539,2.836,540,2.477,541,2.836,542,2.836,543,2.836,544,2.241,545,2.836,546,2.836,547,5.794,548,4.299,549,4.299,550,3.755,551,4.299,552,4.299,553,4.299,554,4.299,555,4.299,556,4.535,557,2.241,558,2.916,559,4.299,560,2.836,561,4.299,562,4.299,563,4.299,564,1.923,565,1.923,566,3.755,567,2.836,568,2.836,569,2.836,570,1.923,571,2.836,572,3.755,573,1.347,574,1.812,575,2.836,576,2.836,577,2.836,578,2.836,579,1.923,580,2.241,581,2.477]],["title/modules/AppModule.html",[163,1.139,582,2.967]],["body/modules/AppModule.html",[3,0.121,4,0.121,9,0.106,15,1.257,28,0.013,30,0.339,31,0.335,32,0.189,33,0.152,95,0.941,105,2.03,161,0.009,162,0.009,163,1.298,165,1.636,166,2.205,167,3.528,168,3.528,169,2.224,170,1.754,175,3.16,176,2.117,177,1.886,179,2.388,180,2.388,185,2.521,186,1.479,187,2.649,193,1.581,209,2.571,216,1.426,309,1.407,339,3.884,397,4.185,404,3.528,405,2.521,406,2.649,407,3.479,408,3.16,409,2.406,410,3.16,417,3.15,418,3.15,422,4.137,423,3.15,425,2.406,426,3.442,427,4.125,428,4.125,475,1.904,531,4.057,582,6.041,583,4.057,584,4.057,585,4.057,586,4.057,587,5.228,588,5.228,589,3.67,590,6.1,591,5.949,592,3.381,593,6.1,594,6.1,595,4.645,596,6.1,597,6.1,598,4.645,599,4.057,600,4.645,601,4.645,602,3.381,603,6.1,604,3.67,605,2.099,606,4.645,607,6.1,608,3.15,609,3.67,610,3.381,611,6.1,612,3.67,613,4.645,614,3.479,615,4.645,616,3.67,617,4.645,618,3.15,619,4.645,620,4.137,621,4.057,622,4.645,623,6.1,624,5.328,625,5.949,626,4.057,627,4.645,628,4.645,629,6.1,630,4.645,631,4.057,632,3.15,633,6.1,634,4.645,635,4.819,636,6.1,637,6.1,638,6.1,639,2.169,640,1.847,641,4.645,642,4.137,643,6.1,644,6.1,645,4.819,646,4.645,647,4.645,648,4.819,649,4.645,650,4.057,651,4.645,652,2.958,653,4.645,654,4.645,655,4.337,656,4.645,657,4.645,658,4.645]],["title/modules/AppRoutingModule.html",[163,1.139,588,2.764]],["body/modules/AppRoutingModule.html",[3,0.144,4,0.144,9,0.126,28,0.013,30,0.312,31,0.398,32,0.144,33,0.18,128,1.192,161,0.01,162,0.01,165,1.942,170,2.082,179,2.158,180,2.663,190,3.144,191,3.11,192,3.88,193,1.877,194,1.445,195,3.974,199,3.693,276,0.884,433,5.946,436,6.369,525,3.51,527,2.617,588,4.614,659,5.513,660,6.803,661,5.946,662,5.513,663,5.513,664,3.738,665,5.513,666,4.614,667,5.513,668,6.803,669,8.169,670,5.513,671,6.913,672,5.513,673,5.513,674,5.513,675,3.738,676,5.513,677,5.513,678,5.513,679,5.513,680,5.513,681,5.513,682,5.513,683,5.513,684,5.513,685,5.513,686,5.513,687,5.513,688,5.513,689,5.513,690,5.513,691,5.513,692,5.513,693,5.513,694,5.513]],["title/guards/AuthGuard.html",[432,3.221,661,2.967]],["body/guards/AuthGuard.html",[3,0.137,4,0.137,8,1.785,9,0.12,11,1.331,20,0.442,21,0.95,23,1.293,24,0.95,27,0.818,28,0.013,30,0.298,31,0.379,32,0.137,33,0.171,101,0.696,153,1.293,161,0.01,162,0.01,193,1.785,199,2.846,202,0.783,208,3.816,209,3.356,212,4.966,214,4.16,219,0.85,254,0.529,255,0.916,256,0.85,257,3.574,258,3.005,260,2.032,298,1.057,318,0.976,319,1.722,434,4.143,436,6.385,441,3.267,442,4.58,443,6.611,444,3.356,445,6.611,447,3.267,449,5.759,451,5.759,452,5.133,454,5.21,457,5.133,459,2.859,460,6.3,463,4.338,464,2.568,467,1.785,468,1.514,469,2.598,471,4.58,472,2.129,473,2.052,475,2.016,525,3.339,661,5.509,695,4.58,696,6.594,697,6.594,698,5.243,699,2.49,700,5.21,701,4.199,702,4.799,703,5.243,704,4.199,705,3.131,706,3.416,707,4.199,708,4.143,709,5.243,710,5.243,711,5.243,712,5.243]],["title/injectables/AuthService.html",[209,1.718,467,1.103]],["body/injectables/AuthService.html",[3,0.19,4,0.124,9,0.108,20,0.399,21,0.891,24,1.167,27,1.005,28,0.013,30,0.271,31,0.342,32,0.124,33,0.155,101,0.726,140,1.968,147,1.569,151,1.336,153,1.679,161,0.009,162,0.009,177,2.509,202,0.923,209,2.604,219,0.887,245,2.689,251,3.841,254,0.551,255,0.956,256,0.887,263,1.735,266,2.571,269,3.715,270,5.304,277,3.507,285,3.524,289,5.304,290,3.956,309,1.681,318,0.887,464,2.817,467,1.672,468,1.368,472,1.923,473,1.854,489,5.758,501,3.922,533,4.936,640,1.906,701,3.934,706,3.775,713,2.249,714,4.138,715,6.006,716,4.135,717,2.627,718,6.13,719,4.19,720,5.397,721,4.737,722,6.179,723,3.649,724,6.179,725,4.737,726,4.737,727,2.707,728,5.397,729,4.737,730,4.497,731,3.069,732,4.737,733,2.419,734,2.604,735,5.397,736,4.737,737,4.882,738,4.737,739,5.397,740,4.737,741,5.397,742,4.737,743,2.849,744,3.016]],["title/pipes/CapitalizeInitialPipe.html",[587,2.764,745,2.02]],["body/pipes/CapitalizeInitialPipe.html",[3,0.141,4,0.141,9,0.124,11,1.372,13,1.287,21,0.779,24,0.779,27,0.95,28,0.013,30,0.213,31,0.39,32,0.141,33,0.177,101,0.772,161,0.01,162,0.01,216,1.703,219,0.697,223,2.451,254,0.433,255,0.751,256,0.697,263,2.015,292,3.33,296,3.191,298,1.379,306,2.288,318,0.697,462,5.516,465,4.96,475,2.044,512,3.481,550,5.87,587,4.557,745,3.33,746,4.27,747,5.87,748,4.721,749,4.96,750,5.87,751,2.799,752,5.405,753,6.874,754,5.87,755,6.72,756,7.181,757,5.728,758,7.869,759,5.728,760,5.728,761,7.869,762,7.313,763,5.323,764,6.388,765,6.388,766,6.388,767,5.87,768,5.405]],["title/components/CategoriesInfoComponent.html",[0,0.248,107,1.002]],["body/components/CategoriesInfoComponent.html",[0,0.459,1,0.817,2,1.297,3,0.176,4,0.089,5,0.958,6,0.958,7,0.958,8,0.928,9,0.078,11,1.256,12,1.622,13,0.817,14,2.354,15,2.279,16,1.383,18,1.383,20,0.289,21,0.713,22,1.776,23,1.322,24,1.119,27,0.836,28,0.013,29,1.457,30,0.195,31,0.248,32,0.089,33,0.112,45,1.392,46,1.392,53,2.062,54,2.496,57,2.357,61,2.325,66,1.776,68,1.392,69,3.436,71,1.804,72,2.167,73,1.392,77,1.861,78,1.956,84,3.2,85,4.021,87,3.065,88,1.502,90,1.685,91,2.086,95,0.695,96,1.383,97,1.383,98,0.958,99,1.419,100,0.958,101,0.764,102,0.958,103,0.817,104,0.958,105,0.843,106,0.958,107,1.563,108,1.97,109,1.383,110,0.817,111,2.157,112,1.622,113,0.817,114,1.256,115,1.622,116,0.843,117,0.928,118,0.958,119,0.817,120,1.622,121,0.843,122,0.958,123,0.843,124,0.899,125,0.791,126,0.958,127,0.817,128,0.742,129,0.843,130,1.256,131,1.297,132,1.383,133,0.843,134,0.843,135,1.297,136,1.383,137,0.843,138,1.383,139,0.843,140,0.87,141,1.383,142,0.843,143,0.928,144,0.817,145,0.843,146,0.843,147,0.87,148,0.817,149,0.958,150,0.843,151,0.742,152,0.843,153,1.247,154,0.817,155,0.817,156,0.817,157,0.843,158,0.87,159,0.958,160,0.958,161,0.007,162,0.007,202,0.739,210,1.822,216,1.036,219,0.869,245,1.629,254,0.594,255,0.937,256,0.869,263,0.817,264,2.851,276,0.55,302,2.959,306,2.164,309,0.791,318,0.82,319,1.255,364,2.563,370,1.628,378,1.392,385,3.601,387,2.357,388,1.392,389,1.502,390,2.325,391,1.776,447,2.451,459,2.4,466,2.4,482,1.743,497,1.937,499,4.908,558,2.325,570,3.355,573,1.628,574,1.445,640,1.216,700,3.909,704,4.291,723,2.896,733,2.272,751,1.685,769,6.85,770,6.196,771,2.496,772,4.586,773,3.909,774,4.586,775,3.909,776,3.909,777,4.321,778,3.909,779,2.451,780,2.685,781,5.805,782,5.805,783,3.909,784,3.909,785,3.429,786,2.009,787,3.601,788,5.718,789,4.099,790,2.086,791,2.995,792,3.151,793,3.298,794,2.995,795,3.928,796,6.355,797,5.024,798,2.995,799,4.947,800,2.709,801,3.607,802,2.709,803,4.947,804,4.586,805,5.324,806,5.547,807,3.909,808,2.952,809,3.429,810,1.804,811,3.151,812,4.321,813,3.429,814,2.563,815,2.822,816,4.947,817,3.429,818,3.909,819,3.429,820,3.909,821,2.496,822,3.909,823,3.429,824,2.709,825,2.325,826,2.709,827,3.429,828,3.429,829,2.709,830,2.709,831,3.909,832,3.355,833,4.321,834,4.947,835,4.321,836,4.947,837,3.696,838,2.062,839,2.183,840,2.325,841,4.321,842,4.321,843,3.151,844,2.709,845,2.183,846,2.995]],["title/injectables/CategoriesService.html",[467,1.103,847,2.596]],["body/injectables/CategoriesService.html",[0,0.333,3,0.143,4,0.103,9,0.09,20,0.333,21,0.789,23,1.231,24,1.025,27,0.936,28,0.013,30,0.28,31,0.285,32,0.103,33,0.129,101,0.796,111,2.232,128,1.183,161,0.008,162,0.008,194,1.645,216,1.145,219,0.917,221,3.091,222,4.168,226,1.863,230,1.631,245,2.421,250,2.493,254,0.57,255,0.988,256,0.873,298,1.232,305,4.194,318,0.917,462,4.592,464,2.668,466,3.039,467,1.481,468,1.141,469,2.711,472,1.605,473,1.547,474,1.731,475,2.265,605,2.404,639,1.742,640,1.889,699,2.066,713,1.877,733,2.142,734,2.854,745,2.711,760,5.352,776,4.322,786,2.221,789,4.286,812,4.778,815,3.862,835,4.778,847,3.484,848,3.452,849,4.778,850,5.471,851,6.274,852,3.123,853,3.953,854,2.598,855,5.471,856,3.953,857,4.072,858,4.987,859,3.953,860,3.29,861,5.471,862,3.953,863,5.471,864,3.953,865,7.109,866,3.953,867,5.48,868,2.517,869,3.953,870,3.452,871,2.68,872,6.585,873,3.123,874,3.953,875,3.953,876,3.953,877,3.953,878,3.953,879,3.953,880,3.953,881,7.801,882,4.567,883,3.953,884,5.471,885,3.953,886,3.953,887,3.953,888,3.953,889,3.953,890,3.953,891,3.953,892,3.953,893,3.953,894,3.953,895,3.507,896,2.877,897,3.953,898,3.953,899,3.953,900,5.471,901,6.274,902,5.48,903,3.452,904,6.274,905,2.877,906,7.109,907,5.48,908,4.322,909,5.471,910,5.471,911,5.471,912,3.982,913,3.982,914,5.471,915,5.471,916,5.471,917,5.471,918,5.471,919,5.471,920,3.953,921,3.953,922,5.471,923,3.953,924,3.953,925,5.471,926,3.982,927,3.953,928,3.953,929,3.953,930,3.953]],["title/interfaces/CategoryInfo.html",[789,2.111,931,1.177]],["body/interfaces/CategoryInfo.html",[3,0.164,4,0.164,9,0.144,20,0.53,28,0.012,32,0.164,101,0.85,161,0.011,162,0.011,202,1.101,254,0.658,256,1.039,298,1.386,448,7.034,789,3.816,825,4.267,895,4.172,931,1.816,932,2.868,933,4.007,934,8.053]],["title/components/CategorySelectableComponent.html",[0,0.248,110,0.971]],["body/components/CategorySelectableComponent.html",[0,0.481,1,0.633,2,1.072,3,0.107,4,0.069,5,0.743,6,0.743,7,0.743,8,0.719,9,0.061,11,1.038,12,1.394,13,0.633,14,2.297,15,2.224,16,1.143,18,1.143,20,0.224,21,0.59,22,1.566,23,0.802,24,1.162,27,0.944,28,0.013,29,1.661,30,0.238,31,0.192,32,0.107,33,0.087,95,0.539,96,1.143,97,1.143,98,0.743,99,1.251,100,0.743,101,0.803,102,0.743,103,0.633,104,0.743,105,0.653,106,0.743,107,0.653,108,1.95,109,1.143,110,1.44,111,2.205,112,1.394,113,0.633,114,1.422,115,1.394,116,0.653,117,0.719,118,0.743,119,0.633,120,1.394,121,0.653,122,0.743,123,0.653,124,1.744,125,0.613,126,0.743,127,0.633,128,0.575,129,0.653,130,1.038,131,1.072,132,1.143,133,0.653,134,0.653,135,1.072,136,1.143,137,0.653,138,1.143,139,0.653,140,0.674,141,1.143,142,0.653,143,0.719,144,0.633,145,0.653,146,0.653,147,1.535,148,0.633,149,0.743,150,0.653,151,0.575,152,0.653,153,1.099,154,0.633,155,0.633,156,0.633,157,0.653,158,0.674,159,0.743,160,0.743,161,0.006,162,0.006,169,1.492,184,0.875,186,0.846,194,0.696,202,0.611,210,1.006,216,1.438,219,0.958,221,1.601,226,1.698,240,3.368,243,1.545,253,1.792,254,0.634,255,1.057,256,0.958,260,1.26,263,1.912,276,0.799,278,1.864,285,3.194,298,1.024,306,2.399,309,1.473,310,2.205,318,0.991,319,1.381,327,1.442,328,3.087,332,1.164,414,2.775,426,1.164,444,1.724,459,2.807,461,1.984,482,1.441,502,2.659,503,2.901,605,2.117,639,2.244,640,1.571,655,2.605,699,1.545,705,1.942,717,1.968,751,2.266,779,2.027,790,2.971,793,3.033,801,2.911,810,1.492,831,3.232,837,4.067,847,4.375,854,2.368,935,5.89,936,5.89,937,1.802,938,3.94,939,3.94,940,3.232,941,4.356,942,5.283,943,2.805,944,3.382,945,2.977,946,4.077,947,2.977,948,3.573,949,2.977,950,4.077,951,2.774,952,2.774,953,4.356,954,2.774,955,2.774,956,3.63,957,2.333,958,2.321,959,3.573,960,3.573,961,2.707,962,3.573,963,3.176,964,2.583,965,4.403,966,2.321,967,2.22,968,2.605,969,2.977,970,4.077,971,2.977,972,4.649,973,2.657,974,4.077,975,4.131,976,2.657,977,2.977,978,5.33,979,2.657,980,2.977,981,2.119,982,4.402,983,2.977,984,2.657,985,2.333,986,2.657,987,3.165,988,2.119,989,3.573,990,2.657,991,2.775,992,2.977,993,2.977,994,2.657,995,2.977,996,2.977,997,2.321,998,2.977,999,2.774,1000,2.657,1001,4.375,1002,2.553,1003,4.101,1004,2.774,1005,2.657,1006,2.774,1007,2.321,1008,4.844,1009,2.321,1010,2.977,1011,2.505,1012,2.977,1013,2.774,1014,1.802,1015,2.657,1016,3.382,1017,2.774,1018,2.657,1019,2.774,1020,3.798,1021,2.774,1022,2.321,1023,2.321,1024,2.321,1025,2.321,1026,2.321,1027,2.774,1028,2.605,1029,2.774,1030,2.321,1031,3.573,1032,2.321,1033,2.605,1034,2.605,1035,2.099,1036,1.316,1037,1.692,1038,1.692,1039,1.261,1040,2.321,1041,1.598,1042,2.321,1043,2.321,1044,1.598,1045,1.598,1046,1.802,1047,2.321,1048,4.356,1049,2.321,1050,2.321,1051,1.802,1052,1.802,1053,1.934,1054,1.934,1055,1.934,1056,1.934,1057,2.321,1058,2.977,1059,1.934,1060,1.934,1061,2.321,1062,3.573]],["title/components/CategorySelectableMobileComponent.html",[0,0.248,113,0.971]],["body/components/CategorySelectableMobileComponent.html",[0,0.479,1,0.616,2,1.05,3,0.105,4,0.067,5,0.723,6,0.723,7,0.723,8,0.7,9,0.059,11,1.017,12,1.371,13,0.616,14,2.29,15,2.218,16,1.12,18,1.12,20,0.218,21,0.577,22,1.543,23,0.786,24,1.158,27,0.939,28,0.013,29,1.653,30,0.235,31,0.187,32,0.105,33,0.084,95,0.524,96,1.12,97,1.12,98,0.723,99,1.233,100,0.723,101,0.799,102,0.723,103,0.616,104,0.723,105,0.636,106,0.723,107,0.636,108,1.94,109,1.12,110,0.616,111,2.201,112,1.371,113,1.423,114,2.162,115,1.371,116,0.636,117,0.7,118,0.723,119,0.616,120,1.371,121,0.636,122,0.723,123,0.636,124,1.727,125,0.596,126,0.723,127,0.616,128,0.559,129,0.636,130,1.017,131,1.05,132,1.12,133,0.636,134,0.636,135,1.05,136,1.12,137,0.636,138,1.12,139,0.636,140,0.657,141,1.12,142,0.636,143,0.7,144,0.616,145,0.636,146,0.636,147,1.516,148,0.616,149,0.723,150,0.636,151,0.559,152,0.636,153,1.083,154,0.616,155,0.616,156,0.616,157,0.636,158,0.657,159,0.723,160,0.723,161,0.006,162,0.006,169,1.461,184,0.851,186,0.824,194,0.678,202,0.599,210,0.985,216,1.426,219,0.952,221,1.568,226,1.669,240,3.32,243,1.513,253,1.755,254,0.631,255,1.052,256,0.952,260,1.234,263,1.904,276,0.786,278,1.826,285,3.149,298,1.013,306,2.38,309,1.457,310,2.178,318,0.986,319,1.366,327,1.404,328,3.062,332,1.133,414,2.736,426,1.133,444,1.689,459,2.789,461,1.965,482,1.411,502,2.622,503,2.86,605,2.098,639,2.226,640,1.554,655,2.551,699,1.513,705,1.902,717,1.947,751,2.244,779,1.985,790,2.947,793,3.003,801,2.88,810,1.461,831,3.165,837,4.023,847,4.336,854,2.328,935,5.87,941,4.283,942,5.218,943,2.778,944,3.325,945,2.916,946,4.019,947,2.916,948,3.499,949,2.916,950,4.019,951,2.717,952,2.717,953,4.283,954,2.717,955,2.717,956,3.569,957,2.285,958,2.259,960,3.499,961,2.661,963,3.122,964,2.54,965,4.373,967,2.174,968,2.551,969,2.916,970,4.019,971,2.916,972,4.599,974,4.019,975,4.095,977,2.916,978,5.293,980,2.916,981,2.075,982,4.348,983,2.916,985,2.285,987,3.131,988,2.075,989,3.499,991,2.736,992,2.916,993,2.916,995,2.916,996,2.916,998,2.916,999,2.717,1001,4.336,1002,2.516,1003,4.051,1004,2.717,1006,2.717,1007,2.259,1008,4.797,1010,2.916,1011,2.483,1012,2.916,1013,2.717,1014,1.754,1016,3.325,1017,2.717,1019,2.717,1020,3.744,1021,2.717,1027,2.717,1028,2.551,1029,2.717,1030,2.259,1031,3.499,1033,2.551,1034,2.551,1035,2.043,1036,1.281,1037,1.647,1038,1.647,1039,1.228,1040,2.259,1041,1.555,1042,2.259,1043,2.259,1044,1.555,1045,1.555,1046,1.754,1047,2.259,1048,4.283,1049,2.259,1050,2.259,1051,1.754,1052,1.754,1053,1.882,1054,1.882,1055,1.882,1056,1.882,1057,2.259,1058,2.916,1059,1.882,1060,1.882,1061,2.259,1062,3.499,1063,5.87,1064,1.754,1065,3.874,1066,2.717,1067,3.874,1068,3.165,1069,3.499,1070,3.499,1071,2.259,1072,2.586,1073,2.586,1074,2.586,1075,2.586,1076,2.586,1077,2.586,1078,2.586,1079,2.259,1080,2.259,1081,2.586,1082,2.259,1083,2.586,1084,2.586,1085,2.259,1086,2.259,1087,2.259,1088,2.259,1089,2.259]],["title/components/ConfirmDialogComponent.html",[0,0.248,116,1.002]],["body/components/ConfirmDialogComponent.html",[0,0.482,1,1.077,2,1.571,3,0.156,4,0.118,5,1.264,6,1.264,7,1.264,8,1.224,9,0.103,11,1.521,12,1.879,13,1.077,14,2.403,15,2.327,16,1.675,18,1.675,20,0.381,21,0.864,22,2,23,1.404,24,1.073,27,0.744,28,0.013,29,1.296,30,0.265,31,0.327,32,0.118,33,0.148,62,3.603,95,0.916,96,1.675,97,1.675,98,1.264,99,1.598,100,1.264,101,0.71,102,1.264,103,1.077,104,1.264,105,1.112,106,1.264,107,1.112,108,1.148,109,1.675,110,1.077,111,1.571,112,1.879,113,1.077,114,1.521,115,1.879,116,1.76,117,2.145,118,1.264,119,1.077,120,1.879,121,1.112,122,1.264,123,1.112,124,1.185,125,1.043,126,1.264,127,1.077,128,0.978,129,1.112,130,1.521,131,1.571,132,1.675,133,1.112,134,1.112,135,1.571,136,1.675,137,1.112,138,1.675,139,1.112,140,1.148,141,1.675,142,1.112,143,1.224,144,1.077,145,1.112,146,1.112,147,1.148,148,1.077,149,1.264,150,1.112,151,0.978,152,1.112,153,1.404,154,1.077,155,1.077,156,1.077,157,1.112,158,1.148,159,1.264,160,1.264,161,0.009,162,0.009,202,0.895,210,1.919,211,3.546,216,1.255,219,0.583,222,4.258,254,0.539,255,0.628,256,0.583,298,1.147,301,4.892,314,2.719,318,0.773,319,0.978,327,2.454,354,3.291,632,3.066,717,2.358,786,2.433,821,3.291,1090,5.569,1091,5.189,1092,3.949,1093,6.4,1094,6.721,1095,5.992,1096,5.883,1097,5.209,1098,4.521,1099,7.926,1100,4.521,1101,4.892,1102,4.521,1103,5.234,1104,4.521,1105,4.521,1106,5.992,1107,4.521,1108,3.291,1109,4.521,1110,4.521,1111,4.521,1112,4.521,1113,4.521,1114,5.992,1115,5.992]],["title/injectables/CustomTranslateService.html",[211,2.02,467,1.103]],["body/injectables/CustomTranslateService.html",[3,0.12,4,0.12,9,0.105,20,0.387,21,0.873,23,1.329,24,1.13,27,0.973,28,0.013,29,0.994,30,0.267,31,0.332,32,0.12,33,0.235,101,0.715,161,0.009,162,0.009,202,0.905,210,1.841,211,3.001,216,1.666,219,0.874,223,2.803,225,3.005,226,2.307,227,4.444,230,2.021,236,4.786,239,3.217,253,2.653,254,0.616,255,0.942,256,0.874,260,1.866,263,1.783,268,3.288,292,3.001,296,2.876,298,1.354,302,2.553,309,1.661,318,0.874,319,1.662,328,2.968,342,5.213,356,4.783,408,2.381,409,2.381,461,1.806,464,2.58,467,1.64,468,1.327,472,1.866,473,1.799,474,2.013,475,1.693,497,2.82,507,6.146,512,3.138,514,5.291,527,2.876,537,4.014,640,1.489,704,3.857,705,3.217,708,3.631,713,2.182,717,2.088,727,2.653,733,2.371,743,4.501,810,2.209,964,3.138,1116,4.014,1117,6.776,1118,7.203,1119,5.79,1120,4.596,1121,8.124,1122,6.057,1123,5.918,1124,6.057,1125,4.596,1126,6.057,1127,6.057,1128,3.643,1129,4.596,1130,4.596,1131,5.291,1132,6.057,1133,4.596,1134,4.409,1135,5.291,1136,4.596,1137,6.057,1138,4.596,1139,4.596,1140,4.596,1141,4.596,1142,4.596,1143,4.596,1144,4.596,1145,4.596,1146,3.117,1147,4.596,1148,4.596]],["title/components/DataPage.html",[0,0.248,119,0.971]],["body/components/DataPage.html",[0,0.404,1,0.525,2,1.324,3,0.168,4,0.057,5,0.616,6,0.616,7,0.616,8,0.596,9,0.142,11,0.896,12,1.235,13,0.525,14,2.248,15,2.19,16,0.987,18,0.987,20,0.186,21,0.509,22,1.412,23,0.991,24,1.038,27,0.88,28,0.013,29,1.506,30,0.284,31,0.159,32,0.115,33,0.072,45,2.396,46,1.434,49,1.676,50,2.426,52,1.749,53,1.325,55,3.217,57,2.517,58,2.229,62,4.443,63,1.092,64,2.098,66,2.617,68,1.794,69,1.046,71,2.586,72,1.935,73,1.434,76,1.604,77,1.916,78,1.257,82,2.57,83,1.749,84,1.046,85,1.196,87,2.245,90,0.75,91,1.862,94,1.829,95,0.447,96,0.987,97,0.987,98,0.616,99,1.128,100,0.616,101,0.76,102,0.616,103,0.525,104,0.616,105,0.542,106,0.616,107,0.542,108,1.122,109,0.987,110,0.525,111,2.046,112,1.235,113,0.525,114,0.896,115,1.235,116,0.868,117,0.596,118,0.616,119,1.203,120,1.235,121,0.542,122,0.616,123,0.542,124,0.578,125,0.508,126,0.616,127,0.525,128,0.476,129,0.542,130,1.122,131,1.324,132,0.987,133,0.542,134,0.542,135,0.925,136,0.987,137,0.542,138,0.987,139,0.542,140,0.559,141,0.987,142,1.242,143,1.743,144,0.525,145,0.542,146,0.542,147,0.559,148,0.525,149,0.616,150,0.542,151,0.764,152,0.542,153,1.366,154,0.525,155,0.525,156,0.525,157,0.542,158,0.559,159,0.616,160,0.616,161,0.009,162,0.005,169,1.287,186,0.702,193,0.75,194,1.937,198,5.602,202,0.528,206,4.662,207,4.662,209,0.929,210,1.743,211,2.924,214,3.513,216,1.427,219,0.857,220,3.992,221,2.601,222,3.827,223,1.843,225,1.334,226,1.72,227,2.743,228,2.248,229,2.399,230,2.315,231,2.014,233,2.57,234,2.123,235,1.609,237,2.503,239,1.676,240,3.325,241,2.79,243,1.334,245,1.943,250,1.609,252,2.123,254,0.585,255,0.923,256,0.857,260,1.088,263,1.052,276,1.184,277,2.213,278,1.609,297,2.79,298,1.285,300,2.399,301,4.295,302,2.13,303,2.79,305,3.365,306,1.202,307,3.491,308,3.491,311,1.741,313,1.403,314,1.325,315,1.604,316,1.604,317,1.494,318,0.963,319,1.196,327,3.001,328,2.986,332,2.986,333,3.678,334,3.678,335,2.79,344,2.57,353,2.79,354,2.57,355,2.79,356,3.873,357,2.79,358,2.79,359,2.394,360,1.741,361,1.741,364,2.288,369,1.862,373,2.74,378,2.517,384,2.303,387,2.245,388,2.245,389,1.935,390,1.494,441,1.749,450,2.123,461,1.507,475,0.987,504,2.123,533,1.403,544,4.662,556,3.084,557,3.491,564,1.494,565,1.494,573,2.098,574,1.488,605,1.985,632,1.494,639,1.879,640,1.086,706,1.141,717,2.047,727,1.547,731,1.434,776,2.79,777,3.084,786,1.434,789,3.938,790,1.488,814,2.288,815,2.014,818,2.79,825,1.494,839,1.403,847,3.757,849,4.413,854,1.676,860,2.123,943,1.488,1011,1.287,1035,1.741,1036,1.092,1066,2.394,1090,1.604,1091,1.494,1093,5.838,1096,1.741,1149,1.924,1150,3.531,1151,3.531,1152,3.491,1153,2.79,1154,3.531,1155,5.053,1156,3.531,1157,3.531,1158,1.604,1159,5.053,1160,5.626,1161,3.678,1162,3.365,1163,2.203,1164,3.216,1165,3.859,1166,2.57,1167,2.203,1168,4.662,1169,2.394,1170,3.531,1171,2.203,1172,3.531,1173,5.529,1174,2.203,1175,5.901,1176,4.295,1177,7.848,1178,5.053,1179,3.531,1180,3.531,1181,2.203,1182,3.084,1183,2.203,1184,4.688,1185,2.014,1186,5.154,1187,3.531,1188,2.394,1189,3.217,1190,5.053,1191,3.531,1192,4.418,1193,2.203,1194,5.053,1195,4.418,1196,3.531,1197,2.203,1198,3.531,1199,2.203,1200,3.531,1201,2.394,1202,2.203,1203,2.203,1204,3.531,1205,2.203,1206,2.014,1207,2.203,1208,2.203,1209,1.741,1210,1.494,1211,1.604,1212,1.604,1213,2.203,1214,1.604,1215,2.203,1216,5.053,1217,2.203,1218,2.203,1219,3.531,1220,2.203,1221,2.203,1222,1.741,1223,2.203,1224,1.494,1225,2.203,1226,2.203,1227,2.79,1228,2.203,1229,2.203,1230,2.203,1231,2.203,1232,2.203,1233,2.203,1234,2.203,1235,2.203,1236,2.203,1237,1.494,1238,1.092,1239,2.203,1240,2.203,1241,1.494,1242,2.203,1243,2.203,1244,2.203,1245,2.203,1246,2.203,1247,2.203,1248,2.203,1249,2.203,1250,2.203,1251,2.203,1252,1.924,1253,1.924,1254,2.203,1255,2.203,1256,2.203,1257,2.394,1258,2.57,1259,2.79,1260,2.57,1261,2.57,1262,2.57,1263,2.57,1264,3.531,1265,2.203,1266,2.203,1267,1.924,1268,1.604,1269,3.859,1270,4.418,1271,1.196,1272,2.203,1273,2.203,1274,3.531,1275,3.531,1276,3.084,1277,3.531,1278,2.79,1279,2.098,1280,2.52,1281,2.52,1282,2.014,1283,1.829,1284,1.829,1285,1.609,1286,2.203,1287,2.79,1288,2.394,1289,2.203,1290,1.924,1291,2.203,1292,1.924,1293,1.604,1294,2.203,1295,2.203,1296,2.203]],["title/modules/DataPageModule.html",[163,1.139,1297,2.967]],["body/modules/DataPageModule.html",[3,0.14,4,0.14,9,0.122,28,0.013,30,0.338,31,0.386,32,0.14,33,0.175,95,1.084,119,1.905,142,1.967,143,1.448,161,0.01,162,0.01,163,1.495,165,1.885,166,2.54,167,3.771,168,2.771,169,1.951,170,2.021,175,3.459,176,2.438,177,2.172,179,2.614,180,2.614,181,3.808,182,2.904,183,4.015,184,1.761,185,3.624,186,1.704,187,3.051,210,1.315,243,2.021,276,0.858,374,2.343,397,4.491,399,4.86,404,3.459,405,2.904,406,3.051,407,3.808,408,2.771,409,2.771,410,3.459,411,3.407,412,5.276,413,4.227,414,2.651,415,5.276,416,4.227,417,4.528,418,3.628,419,5.276,420,4.227,421,3.894,422,4.528,423,3.628,424,3.217,425,2.771,426,2.343,427,3.051,428,3.051,429,4.227,1210,3.628,1211,3.894,1297,6.174,1298,4.673,1299,4.673,1300,4.673,1301,5.426,1302,5.35,1303,3.407,1304,6.677,1305,5.35,1306,5.833,1307,4.673,1308,5.833,1309,4.673,1310,4.673]],["title/modules/DataPageRoutingModule.html",[163,1.139,1301,2.764]],["body/modules/DataPageRoutingModule.html",[0,0.39,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,119,1.773,161,0.011,162,0.011,165,2.257,170,2.42,179,2.508,180,2.914,190,3.654,191,3.317,192,4.246,193,2.182,194,1.679,195,3.042,196,3.853,1301,5.048,1303,4.08,1311,6.407]],["title/injectables/DataService.html",[467,1.103,618,2.764]],["body/injectables/DataService.html",[3,0.119,4,0.119,9,0.104,20,0.384,21,0.868,24,1.076,27,1.007,28,0.013,30,0.266,31,0.329,32,0.119,33,0.149,101,0.788,135,2.252,151,1.303,161,0.009,162,0.009,218,5.206,219,1.062,254,0.65,255,1.037,256,0.963,276,1.333,298,1.359,318,1.024,346,4.084,464,2.821,467,1.63,468,1.315,472,1.85,473,1.784,618,4.084,640,1.481,699,2.275,707,3.835,713,2.163,717,2.574,718,6.103,723,3.697,727,2.638,733,2.358,734,2.539,814,3.718,815,3.435,857,3.622,860,3.622,1128,3.622,1169,4.084,1271,3.269,1312,3.98,1313,4.384,1314,5.261,1315,4.556,1316,5.062,1317,7.527,1318,5.261,1319,4.556,1320,5.261,1321,6.023,1322,5.261,1323,4.556,1324,5.261,1325,4.556,1326,5.261,1327,5.261,1328,3.98,1329,5.225,1330,4.556,1331,6.023,1332,5.261,1333,6.023,1334,2.74,1335,4.556]],["title/classes/EmailValidation.html",[33,0.133,1336,2.967]],["body/classes/EmailValidation.html",[3,0.152,4,0.152,9,0.133,20,0.49,21,1.013,24,0.839,27,0.873,28,0.013,30,0.229,32,0.152,33,0.19,101,0.798,161,0.01,162,0.01,184,1.915,216,1.472,219,0.75,254,0.466,255,0.809,256,0.75,263,1.385,275,4.025,298,1.258,309,1.342,310,2.122,318,0.75,475,2.112,717,1.793,790,2.964,1336,5.117,1337,3.705,1338,5.082,1339,6.599,1340,7.031,1341,5.818,1342,6.141,1343,6.451,1344,6.141,1345,6.141,1346,6.855,1347,6.141,1348,6.141,1349,6.141,1350,4.228,1351,6.141,1352,4.597,1353,5.082,1354,5.082,1355,5.818,1356,6.599,1357,7.031,1358,5.818,1359,5.818,1360,5.818]],["title/components/FilterComponent.html",[0,0.248,121,1.002]],["body/components/FilterComponent.html",[0,0.415,1,0.844,2,1.328,3,0.132,4,0.092,5,0.991,6,0.991,7,0.991,8,0.959,9,0.081,11,1.286,12,1.653,13,0.844,14,2.36,15,2.293,16,1.416,18,1.416,20,0.299,21,0.73,22,1.804,23,0.695,24,1.097,27,0.847,28,0.013,29,1.476,30,0.233,31,0.256,32,0.092,33,0.116,45,2.057,46,2.883,47,1.615,48,1.615,49,2.406,50,1.984,51,2.58,52,1.756,57,2.401,58,1.339,63,2.51,64,2.406,65,2.131,66,1.836,68,2.401,69,1.683,71,2.589,72,1.553,73,2.057,77,1.924,78,3.68,83,2.93,87,2.968,88,2.827,90,1.207,91,2.493,95,0.718,96,1.416,97,1.416,98,0.991,99,1.441,100,0.991,101,0.624,102,0.991,103,0.844,104,0.991,105,0.871,106,0.991,107,0.871,108,0.9,109,1.416,110,0.844,111,1.55,112,1.653,113,0.844,114,1.638,115,1.653,116,0.871,117,0.959,118,0.991,119,0.844,120,1.653,121,1.746,122,0.991,123,0.871,124,2.148,125,0.817,126,0.991,127,0.844,128,0.767,129,0.871,130,1.286,131,1.328,132,1.416,133,0.871,134,0.871,135,1.328,136,1.416,137,0.871,138,1.416,139,0.871,140,0.9,141,1.416,142,0.871,143,0.959,144,0.844,145,0.871,146,0.871,147,0.9,148,0.844,149,0.991,150,0.871,151,0.767,152,0.871,153,1.339,154,0.844,155,0.844,156,0.844,157,0.871,158,0.9,159,0.991,160,0.991,161,0.007,162,0.007,176,2.695,184,1.167,194,0.929,202,0.757,210,1.587,217,3.197,219,0.457,237,2.51,251,2.51,254,0.517,255,0.493,256,0.457,260,1.561,309,1.169,318,0.457,368,2.51,369,2.493,370,2.406,374,3.422,378,2.401,384,2.695,386,2.58,387,2.057,388,1.439,444,3.151,461,1.511,474,1.553,482,2.083,497,2.526,527,3.064,558,2.404,564,2.404,565,2.404,574,2.136,580,2.801,640,2.006,699,1.914,704,3.227,723,2.309,733,1.984,751,1.725,757,2.58,780,2.75,787,3.688,793,3.331,795,3.21,801,2.309,838,2.131,840,3.436,843,3.227,844,2.801,943,1.494,968,3.227,985,2.89,987,2.51,988,2.625,1002,3.236,1206,3.68,1278,2.801,1279,2.406,1283,1.836,1284,1.836,1285,1.615,1293,2.58,1350,2.131,1361,3.096,1362,5.913,1363,5.067,1364,5.636,1365,5.636,1366,5.636,1367,5.636,1368,5.165,1369,5.165,1370,3.544,1371,4.845,1372,5.067,1373,3.544,1374,4.003,1375,5.067,1376,3.544,1377,3.544,1378,3.544,1379,3.544,1380,3.688,1381,3.227,1382,3.544,1383,4.003,1384,3.544,1385,4.269,1386,2.257,1387,2.404,1388,2.801,1389,4.109,1390,4.376,1391,5.098,1392,4.697,1393,5.098,1394,4.376,1395,4.426,1396,3.096,1397,4.426,1398,3.096,1399,3.096,1400,3.096,1401,3.096,1402,3.096,1403,3.096,1404,4.426,1405,3.096,1406,3.544,1407,3.096,1408,4.426,1409,2.58,1410,3.096,1411,4.426,1412,4.426,1413,4.426,1414,4.426,1415,2.89,1416,2.801,1417,2.801,1418,4.003,1419,2.801,1420,2.801,1421,2.801,1422,3.096,1423,3.096,1424,2.58,1425,2.257,1426,2.801,1427,3.096]],["title/components/FilterMobileComponent.html",[0,0.248,123,1.002]],["body/components/FilterMobileComponent.html",[0,0.41,1,0.818,2,1.298,3,0.129,4,0.09,5,0.96,6,0.96,7,0.96,8,0.929,9,0.079,11,1.257,12,1.624,13,0.818,14,2.354,15,2.279,16,1.384,18,1.384,20,0.289,21,0.714,22,1.777,23,0.971,24,1.105,27,0.872,28,0.013,29,1.519,30,0.251,31,0.248,32,0.09,33,0.112,45,2.359,46,2.94,47,2.647,48,2.647,49,2.351,50,1.939,57,1.394,64,2.351,65,2.065,68,2.359,69,1.63,71,2.561,72,1.504,73,2.011,77,1.864,78,3.627,87,2.359,88,2.545,91,1.447,95,0.696,96,1.384,97,1.384,98,0.96,99,1.42,100,0.96,101,0.613,102,0.96,103,0.818,104,0.96,105,0.844,106,0.96,107,0.844,108,0.872,109,1.384,110,0.818,111,1.298,112,1.624,113,0.818,114,1.257,115,1.624,116,0.844,117,0.929,118,0.96,119,0.818,120,1.624,121,0.844,122,0.96,123,1.564,124,2.165,125,0.792,126,0.96,127,0.818,128,0.742,129,0.844,130,1.257,131,1.298,132,1.384,133,0.844,134,0.844,135,1.298,136,1.384,137,0.844,138,1.384,139,0.844,140,0.872,141,1.384,142,0.844,143,2.142,144,0.818,145,0.844,146,0.844,147,0.872,148,0.818,149,0.96,150,0.844,151,0.742,152,0.844,153,1.247,154,0.818,155,0.818,156,0.818,157,0.844,158,0.872,159,0.96,160,0.96,161,0.007,162,0.007,176,2.647,184,1.13,186,1.093,194,0.9,202,0.74,210,1.564,217,3.151,219,0.443,230,2.21,237,3.151,251,2.454,254,0.51,255,0.477,256,0.443,260,1.526,276,0.794,306,1.169,309,1.142,318,0.749,319,1.256,369,2.087,370,2.351,374,3.4,378,2.359,384,2.647,387,1.394,388,1.394,444,2.961,461,1.896,482,2.24,497,2.489,527,3.019,574,2.087,580,2.713,640,1.929,699,1.87,723,2.257,751,2.165,780,2.688,787,3.605,792,3.153,793,3.3,795,3.153,839,2.186,840,3.358,844,2.713,943,1.447,968,3.153,985,2.824,987,3.151,988,2.565,1002,2.898,1064,2.328,1066,3.358,1067,4.59,1068,3.913,1080,2.999,1097,3.605,1162,4.006,1166,3.605,1206,3.627,1278,2.713,1279,1.63,1283,1.778,1284,1.778,1285,1.565,1350,2.065,1364,5.554,1365,5.554,1366,5.554,1367,5.554,1368,5.074,1369,5.074,1371,4.72,1380,3.605,1381,3.153,1383,3.913,1385,4.054,1386,4.808,1388,2.713,1389,4.049,1390,4.312,1391,3.913,1392,4.628,1393,3.913,1394,4.312,1395,2.999,1396,2.999,1397,4.326,1398,2.999,1399,2.999,1400,2.999,1401,2.999,1402,2.999,1403,2.999,1404,4.326,1405,2.999,1407,2.999,1408,4.326,1409,2.499,1410,2.999,1411,4.326,1412,4.326,1413,4.326,1414,4.326,1420,2.713,1421,2.713,1422,2.999,1423,2.999,1424,2.499,1425,2.186,1428,6.78,1429,5.65,1430,5.024,1431,2.328,1432,4.952,1433,4.952,1434,3.605,1435,4.326,1436,3.433,1437,3.433,1438,3.433,1439,3.433,1440,3.433,1441,3.913,1442,4.952,1443,5.55,1444,3.605,1445,3.433,1446,3.433,1447,2.328,1448,3.913,1449,3.433]],["title/injectables/FilterService.html",[467,1.103,1371,2.596]],["body/injectables/FilterService.html",[3,0.143,4,0.143,9,0.125,20,0.461,21,0.977,24,1.108,27,0.954,28,0.013,29,1.466,30,0.29,31,0.396,32,0.143,33,0.179,101,0.578,124,2.192,161,0.01,162,0.01,184,1.804,194,1.436,202,1.012,219,0.707,242,3.358,251,3.809,254,0.439,255,0.761,256,0.707,263,1.305,278,3.504,309,1.697,318,0.707,319,1.591,374,3.526,444,3.474,467,1.834,468,1.581,472,2.224,473,2.145,475,1.531,497,2.653,527,3.218,640,2.006,713,2.601,727,2.968,733,2.653,734,2.857,737,5.354,743,4.906,1206,3.124,1350,3.294,1371,4.315,1381,4.315,1385,4.751,1390,3.715,1391,5.354,1392,3.987,1393,5.354,1394,3.715,1450,4.785,1451,7.358,1452,7.688,1453,7.688,1454,6.777,1455,5.478,1456,5.478,1457,6.777,1458,5.478,1459,5.478,1460,5.478,1461,5.478,1462,5.478,1463,5.478]],["title/classes/FirebaseAuthService.html",[33,0.133,602,2.967]],["body/classes/FirebaseAuthService.html",[3,0.207,4,0.073,9,0.064,20,0.235,21,0.612,23,0.547,24,1.068,27,1.007,28,0.013,30,0.226,32,0.073,33,0.168,99,0.623,101,0.793,140,1.305,145,0.686,147,1.305,151,0.918,153,1.684,161,0.006,162,0.006,177,2.333,202,0.924,209,3.167,216,1.363,217,2.104,219,0.797,221,2.901,223,2.254,242,2.547,245,2.623,250,1.935,251,3.226,253,1.86,254,0.543,255,0.859,256,0.741,258,2.968,263,1.368,264,2.833,266,3.355,269,3.455,270,5.306,275,3.092,276,1.205,277,3.131,280,2.976,283,3.526,285,2.421,286,2.304,289,5.078,290,3.118,291,2.662,292,2.104,293,3.708,295,3.355,296,2.728,300,3.092,309,1.325,318,0.741,319,1.112,327,1.514,336,2.436,339,2.704,341,3.486,444,2.422,447,2.547,458,2.879,461,1.713,462,4.192,463,4.071,464,2.719,466,2.753,468,1.484,469,1.382,474,1.222,475,1.95,482,1.496,489,5.145,501,3.277,502,2.016,506,2.547,512,2.199,523,3.355,533,3.658,602,4.182,604,2.204,605,2.15,639,2.276,640,1.848,642,2.879,699,2.557,701,4.443,708,3.355,715,5.688,716,3.916,717,2.455,719,2.879,720,3.708,727,2.517,728,3.708,730,3.09,731,3.196,733,2.549,734,2.941,735,2.436,737,2.204,739,2.436,741,2.436,744,1.776,745,2.104,753,3.708,754,5.399,760,3.09,765,4.49,786,1.724,790,2.745,810,1.548,871,1.892,895,3.202,903,2.436,961,2.304,967,3.118,981,2.199,1002,1.935,1146,2.879,1185,2.421,1224,2.879,1267,2.436,1271,2.304,1337,1.776,1464,3.486,1465,2.436,1466,2.879,1467,6.977,1468,2.789,1469,2.789,1470,4.246,1471,2.879,1472,4.182,1473,4.246,1474,4.246,1475,5.202,1476,2.789,1477,2.789,1478,2.789,1479,2.789,1480,2.789,1481,4.246,1482,3.09,1483,4.182,1484,3.09,1485,6.977,1486,4.246,1487,4.182,1488,5.745,1489,3.09,1490,4.246,1491,2.789,1492,3.09,1493,3.09,1494,3.09,1495,4.246,1496,3.708,1497,2.789,1498,4.732,1499,4.927,1500,4.499,1501,6.512,1502,3.355,1503,4.192,1504,4.182,1505,4.246,1506,2.789,1507,3.09,1508,4.591,1509,5.14,1510,5.14,1511,5.14,1512,5.14,1513,2.789,1514,3.09,1515,3.09,1516,2.879,1517,3.708,1518,4.246,1519,4.246,1520,4.246,1521,4.246,1522,2.879,1523,2.789,1524,4.246,1525,5.745,1526,4.246,1527,4.246,1528,4.246,1529,4.246,1530,4.246,1531,5.14,1532,4.246,1533,3.273,1534,2.789,1535,1.892,1536,2.789,1537,2.789,1538,4.246,1539,4.246,1540,2.789,1541,4.246,1542,4.246,1543,4.246,1544,4.246,1545,2.03,1546,2.789,1547,2.789,1548,4.246,1549,4.246,1550,4.246,1551,4.246,1552,4.246,1553,2.789,1554,2.789,1555,4.246,1556,4.246,1557,2.789,1558,2.789,1559,2.789,1560,2.789,1561,4.246,1562,2.789,1563,2.789,1564,5.14,1565,5.14,1566,2.789,1567,2.789,1568,2.789,1569,2.789,1570,2.789,1571,2.704,1572,2.789,1573,2.789,1574,2.304,1575,2.789,1576,2.789,1577,2.789,1578,2.789,1579,2.789,1580,2.436,1581,2.789,1582,2.789,1583,2.789,1584,2.789,1585,2.789,1586,2.789,1587,2.789,1588,2.789,1589,2.789,1590,2.789,1591,2.789,1592,2.03,1593,2.789,1594,2.789]],["title/classes/FirebaseDataService.html",[33,0.133,1595,3.221]],["body/classes/FirebaseDataService.html",[3,0.093,4,0.093,9,0.081,20,0.299,21,1.024,23,0.696,24,1.024,27,0.98,28,0.013,30,0.254,32,0.093,33,0.116,58,2.235,65,2.134,101,0.847,151,1.097,161,0.007,162,0.007,195,3.55,218,4.523,219,1.027,225,2.439,230,1.925,232,3.23,253,2.222,254,0.672,255,0.987,256,0.916,271,4.007,276,1.302,298,1.333,300,2.408,318,0.982,346,3.439,450,2.134,455,3.23,461,1.512,462,3.439,464,2.764,466,2.917,468,1.025,469,1.759,475,2.127,506,3.199,605,2.253,618,5.071,639,2.599,640,1.747,699,1.916,717,2.488,723,2.311,727,3.276,733,1.985,734,2.722,745,1.759,786,2.059,814,3.345,815,3.682,857,4.271,860,3.883,867,4.43,868,2.26,871,2.407,895,2.627,961,2.753,981,2.627,1011,2.727,1101,3.692,1185,2.893,1271,2.753,1313,3.692,1314,4.43,1316,5.534,1317,7.006,1318,4.43,1320,4.43,1322,4.43,1324,4.43,1326,4.43,1328,4.43,1329,4.7,1332,4.43,1334,3.559,1337,2.26,1464,3.439,1466,3.439,1475,4.971,1496,4.43,1498,5.237,1503,5.44,1508,5.824,1516,3.439,1522,4.379,1535,2.407,1580,3.1,1595,5.102,1596,3.1,1597,3.1,1598,3.549,1599,5.072,1600,5.072,1601,4.7,1602,3.439,1603,3.549,1604,5.072,1605,7.103,1606,7.103,1607,3.549,1608,6.457,1609,6.457,1610,5.072,1611,3.549,1612,3.692,1613,3.549,1614,5.072,1615,5.072,1616,3.549,1617,3.692,1618,5.072,1619,5.072,1620,5.072,1621,3.549,1622,3.549,1623,3.549,1624,3.549,1625,3.549,1626,3.692,1627,3.692,1628,2.26,1629,3.1,1630,5.072,1631,3.1,1632,3.1,1633,3.549,1634,5.918,1635,3.549,1636,3.549,1637,3.549,1638,5.072,1639,5.072,1640,3.692,1641,3.549,1642,5.072,1643,3.549,1644,3.549,1645,3.549,1646,3.549]],["title/interfaces/FirebaseDocument.html",[931,1.177,1647,2.764]],["body/interfaces/FirebaseDocument.html",[3,0.064,4,0.037,9,0.161,13,0.769,20,0.12,27,0.987,28,0.013,29,0.698,30,0.2,31,0.103,32,0.1,33,0.046,41,1.034,50,0.556,58,0.537,90,0.484,99,0.317,101,0.726,108,0.361,128,0.307,130,0.361,151,1.024,153,1.497,158,0.361,161,0.004,162,0.004,177,1.311,194,1.937,195,2.765,202,0.647,216,1.728,217,1.6,218,2.758,219,0.416,221,2.893,222,0.736,223,2.871,225,2.2,226,0.484,229,2.854,234,0.854,235,0.647,239,0.675,242,2.347,245,1.264,251,0.704,253,1.682,254,0.527,257,1.214,258,2.158,260,0.438,263,1.637,264,1.923,268,2.571,269,0.854,273,4.239,274,1.034,275,3.265,276,1.286,277,3.081,278,1.974,279,3.016,280,3.408,287,1.034,288,2.758,290,1.753,291,2.244,292,2.779,296,1.163,298,1.338,300,0.675,302,3.094,305,2.19,306,0.834,309,0.328,310,1.177,318,1.013,319,1.213,328,2.223,332,3.048,338,0.963,339,3.231,340,1.034,341,2.604,342,2.19,345,3.153,351,1.034,356,0.854,368,0.704,374,0.622,381,2.244,414,2.979,441,1.903,444,0.599,447,0.704,452,2.19,453,1.034,455,0.905,457,5.429,458,4.663,459,2.118,461,0.963,464,1.426,465,2.19,466,0.925,467,0.663,468,0.707,472,0.577,473,0.556,475,2.102,482,1.137,497,0.556,501,0.81,502,1.823,503,1.989,506,3.637,512,2.453,527,1.163,605,0.438,639,2.161,640,1.849,642,1.661,652,1.56,699,1.22,701,2.445,702,1.034,705,2.249,706,0.736,707,1.56,716,0.854,717,2.291,723,0.647,727,1.898,731,0.995,733,1.696,734,1.033,743,3.956,744,0.905,749,1.661,751,0.834,759,1.034,763,1.034,789,1.269,790,2.773,808,1.073,810,0.518,811,0.905,814,1.673,815,0.81,857,0.854,858,0.963,860,1.473,882,1.783,896,2.35,905,1.034,913,1.034,926,1.034,931,0.932,932,0.647,961,0.771,964,0.736,975,0.854,981,0.736,1002,1.116,1011,2.565,1039,2.057,1041,3.224,1044,3.224,1045,1.473,1108,1.034,1119,1.034,1128,2.605,1134,4.082,1146,2.19,1176,1.034,1184,2.35,1185,0.81,1188,0.963,1189,2.445,1201,0.963,1212,1.034,1214,1.034,1224,1.661,1237,0.963,1238,3.2,1268,1.034,1271,2.084,1285,0.647,1381,0.905,1425,0.905,1472,1.034,1483,1.034,1484,1.034,1487,2.35,1489,1.034,1492,1.034,1493,1.783,1494,3.447,1498,4.904,1499,5.005,1500,2.35,1503,5.354,1504,1.034,1507,1.034,1508,5.546,1514,1.034,1515,1.034,1516,5.1,1522,0.963,1533,2.445,1545,2.795,1601,4.605,1612,2.35,1617,1.034,1626,2.795,1627,3.153,1640,1.034,1647,3.949,1648,1.034,1649,4.236,1650,1.122,1651,1.122,1652,1.935,1653,1.122,1654,1.122,1655,1.122,1656,1.122,1657,2.551,1658,1.122,1659,1.122,1660,2.551,1661,3.423,1662,1.122,1663,1.935,1664,1.935,1665,1.122,1666,1.122,1667,1.034,1668,1.122,1669,1.122,1670,1.122,1671,1.122,1672,1.935,1673,1.122,1674,3.742,1675,3.034,1676,1.122,1677,1.935,1678,1.122,1679,1.935,1680,1.935,1681,1.034,1682,1.661,1683,1.122,1684,1.122,1685,1.783,1686,1.122,1687,1.122,1688,1.122,1689,1.122,1690,1.122,1691,1.122,1692,1.122,1693,1.122,1694,1.122,1695,1.122,1696,1.122,1697,2.35,1698,3.423,1699,1.783,1700,1.122,1701,1.935,1702,2.19,1703,1.034,1704,1.034,1705,1.034,1706,1.034,1707,1.034,1708,1.034,1709,1.034,1710,3.447,1711,1.122,1712,1.122,1713,1.122,1714,4.881,1715,1.122,1716,1.935,1717,1.122,1718,4.75,1719,1.122,1720,1.122,1721,1.122,1722,2.551,1723,1.122,1724,1.122,1725,1.122,1726,1.122,1727,1.122,1728,4.601,1729,1.935,1730,1.122,1731,1.935,1732,1.122,1733,1.122,1734,1.935,1735,1.935,1736,6.238,1737,2.551,1738,3.742,1739,1.122,1740,2.551,1741,1.122,1742,1.122,1743,1.122,1744,4.432,1745,1.56,1746,3.212,1747,3.212,1748,1.122,1749,1.122,1750,1.935,1751,2.445,1752,1.935,1753,3.034,1754,3.742,1755,3.153,1756,2.551,1757,1.122,1758,1.122,1759,1.935,1760,0.963,1761,1.122,1762,5.942,1763,2.056,1764,1.122,1765,1.122,1766,1.935,1767,3.423,1768,1.122,1769,0.963,1770,3.742,1771,1.935,1772,1.122,1773,2.551,1774,1.122,1775,1.935,1776,1.122,1777,1.122,1778,4.998,1779,5.972,1780,5.909,1781,4.601,1782,1.122,1783,3.423,1784,1.122,1785,1.122,1786,4.601,1787,1.122,1788,1.122,1789,1.122,1790,1.122,1791,1.122,1792,1.935,1793,1.122,1794,1.935,1795,2.551,1796,1.935,1797,2.551,1798,0.963,1799,1.122,1800,2.551,1801,1.935,1802,1.122,1803,1.034,1804,1.122,1805,1.122,1806,2.551,1807,1.935,1808,1.122,1809,1.935,1810,1.122,1811,2.551,1812,3.034,1813,1.122,1814,1.122,1815,4.236,1816,2.445,1817,1.122,1818,1.935,1819,3.423,1820,1.122,1821,2.551,1822,1.935,1823,2.19,1824,1.122,1825,3.441,1826,2.938,1827,1.122,1828,3.694,1829,2.35,1830,2.551,1831,1.935,1832,2.551,1833,1.122,1834,1.935,1835,1.122,1836,1.122,1837,1.935,1838,1.122,1839,1.122,1840,1.122,1841,1.122,1842,1.122,1843,1.122,1844,1.122,1845,1.122,1846,1.122,1847,1.122,1848,2.551,1849,3.034,1850,1.122,1851,1.122,1852,1.122,1853,1.122,1854,1.122,1855,1.122,1856,1.122,1857,3.034,1858,1.122,1859,1.122,1860,1.122,1861,1.122,1862,1.122,1863,1.122,1864,1.122,1865,1.122,1866,3.034,1867,1.122,1868,1.034,1869,1.122,1870,1.122,1871,1.122,1872,3.034,1873,1.935,1874,1.122,1875,3.742,1876,1.122,1877,1.122,1878,1.122,1879,3.034,1880,3.034,1881,1.122,1882,1.935,1883,1.935,1884,1.122,1885,2.551,1886,1.122,1887,1.122,1888,1.935,1889,1.122,1890,3.423,1891,1.122,1892,2.551,1893,1.122,1894,1.122,1895,1.935,1896,3.034,1897,1.661,1898,1.122,1899,1.122,1900,1.122,1901,2.551,1902,3.016,1903,1.935,1904,1.122,1905,1.935,1906,1.122,1907,1.122,1908,1.122,1909,1.122,1910,1.935,1911,1.122,1912,0.963,1913,3.034,1914,2.551,1915,1.122,1916,1.122,1917,1.122,1918,1.122,1919,1.122,1920,1.122,1921,1.122,1922,1.122,1923,1.122,1924,1.034,1925,0.963,1926,1.935,1927,1.122,1928,1.935,1929,1.122,1930,1.122,1931,1.122,1932,1.122,1933,1.122,1934,1.122,1935,1.935,1936,1.122,1937,1.122,1938,1.122,1939,1.122,1940,1.122,1941,3.742,1942,1.122,1943,1.122,1944,1.122,1945,3.742,1946,1.034,1947,1.122,1948,3.034,1949,1.122,1950,1.935,1951,1.122,1952,1.122,1953,1.122,1954,1.122]],["title/classes/FirebaseMediaService.html",[33,0.133,608,2.764]],["body/classes/FirebaseMediaService.html",[3,0.128,4,0.128,9,0.186,20,0.414,21,1.065,23,0.964,24,0.912,27,0.917,28,0.013,30,0.276,32,0.165,33,0.16,90,2.798,99,1.413,101,0.668,161,0.009,162,0.009,219,0.816,221,3.065,225,2.39,230,2.204,232,4.029,235,2.884,245,2.083,254,0.507,255,0.879,256,0.816,276,1.185,277,2.772,278,2.884,288,4.457,290,3.435,291,3.278,298,1.185,318,0.816,381,3.278,438,4.029,461,1.887,464,2.724,466,2.791,468,1.419,474,2.153,475,1.374,605,2.454,608,5.012,609,3.883,614,4.215,639,2.536,640,1.208,705,3.004,706,3.278,717,2.156,786,2.569,808,2.153,868,3.129,931,1.419,967,4.151,1011,1.792,1101,4.606,1189,4.029,1222,3.883,1238,3.997,1337,3.129,1464,4.291,1466,4.291,1471,4.291,1475,3.577,1535,3.333,1597,4.292,1602,4.291,1702,4.291,1745,4.029,1746,4.291,1747,5.012,1751,4.029,1763,5.071,1798,3.333,1825,5.309,1826,4.291,1912,4.291,1955,3.883,1956,4.914,1957,5.527,1958,5.527,1959,5.527,1960,4.999,1961,4.999,1962,4.914,1963,5.527,1964,5.527,1965,4.999,1966,5.527,1967,5.527,1968,5.527,1969,5.527,1970,6.113,1971,3.333,1972,3.333,1973,3.333,1974,3.333,1975,4.292,1976,4.292,1977,4.292,1978,4.292,1979,4.292,1980,4.292,1981,4.292,1982,4.292]],["title/interfaces/FirebaseStorageFile.html",[931,1.177,1682,2.764]],["body/interfaces/FirebaseStorageFile.html",[3,0.064,4,0.037,9,0.165,13,0.769,20,0.12,27,0.987,28,0.013,29,0.698,30,0.2,31,0.103,32,0.1,33,0.046,41,1.034,50,0.556,58,0.537,90,0.484,99,0.317,101,0.726,108,0.361,128,0.307,130,0.361,151,1.024,153,1.497,158,0.361,161,0.004,162,0.004,177,1.311,194,1.937,195,3.004,202,0.647,216,1.728,217,1.6,218,2.758,219,0.416,221,2.893,222,0.736,223,2.871,225,2.2,226,0.484,229,2.854,234,0.854,235,0.647,239,0.675,242,2.347,245,1.264,251,0.704,253,1.682,254,0.527,257,1.214,258,2.158,260,0.438,263,1.637,264,1.923,268,2.571,269,0.854,273,4.239,274,1.034,275,3.265,276,1.278,277,3.081,278,1.974,279,3.016,280,3.408,287,1.034,288,2.758,290,1.753,291,2.244,292,2.779,296,1.163,298,1.34,300,0.675,302,3.094,305,2.19,306,0.834,309,0.328,310,1.177,318,1.013,319,1.213,328,2.223,332,3.048,338,0.963,339,3.231,340,1.034,341,2.604,342,2.19,345,3.153,351,1.034,356,0.854,368,0.704,374,0.622,381,2.244,414,2.979,441,1.903,444,0.599,447,0.704,452,2.19,453,1.034,455,0.905,457,5.429,458,4.663,459,2.118,461,0.963,464,1.426,465,2.19,466,0.925,467,0.663,468,0.707,472,0.577,473,0.556,475,2.102,482,1.137,497,0.556,501,0.81,502,1.823,503,1.989,506,3.637,512,2.453,527,1.163,605,0.438,639,2.161,640,1.849,642,1.661,652,1.56,699,1.22,701,2.445,702,1.034,705,2.249,706,0.736,707,1.56,716,0.854,717,2.291,723,0.647,727,1.898,731,0.995,733,1.696,734,1.033,743,3.956,744,0.905,749,1.661,751,0.834,759,1.034,763,1.034,789,1.269,790,2.773,808,1.073,810,0.518,811,0.905,814,1.673,815,0.81,857,0.854,858,0.963,860,1.473,882,1.783,896,2.35,905,1.034,913,1.034,926,1.034,931,0.932,932,0.647,961,0.771,964,0.736,975,0.854,981,0.736,1002,1.116,1011,2.474,1039,2.057,1041,3.224,1044,3.224,1045,1.473,1108,1.034,1119,1.034,1128,2.605,1134,4.082,1146,2.19,1176,1.034,1184,2.35,1185,0.81,1188,0.963,1189,2.445,1201,0.963,1212,1.034,1214,1.034,1224,1.661,1237,0.963,1238,3.2,1268,1.034,1271,2.084,1285,0.647,1381,0.905,1425,0.905,1472,1.034,1483,1.034,1484,1.034,1487,2.35,1489,1.034,1492,1.034,1493,1.783,1494,3.447,1498,4.904,1499,5.005,1500,2.35,1503,5.354,1504,1.034,1507,1.034,1508,5.546,1514,1.034,1515,1.034,1516,5.1,1522,0.963,1533,2.445,1545,2.795,1601,4.605,1612,2.35,1617,1.034,1626,2.795,1627,3.153,1640,1.034,1647,3.804,1648,1.034,1649,3.742,1650,1.122,1651,1.122,1652,1.935,1653,1.122,1654,1.122,1655,1.122,1656,1.122,1657,2.551,1658,1.122,1659,1.122,1660,2.551,1661,3.423,1662,1.122,1663,1.935,1664,1.935,1665,1.122,1666,1.122,1667,1.034,1668,1.122,1669,1.122,1670,1.122,1671,1.122,1672,1.935,1673,1.122,1674,3.742,1675,3.034,1676,1.122,1677,1.935,1678,1.122,1679,1.935,1680,1.935,1681,1.034,1682,2.19,1683,1.122,1684,1.122,1685,1.783,1686,1.122,1687,1.122,1688,1.122,1689,1.122,1690,1.122,1691,1.122,1692,1.122,1693,1.122,1694,1.122,1695,1.122,1696,1.122,1697,2.35,1698,3.423,1699,1.783,1700,1.122,1701,1.935,1702,2.19,1703,1.034,1704,1.034,1705,1.034,1706,1.034,1707,1.034,1708,1.034,1709,1.034,1710,3.447,1711,1.122,1712,1.122,1713,1.122,1714,4.881,1715,1.122,1716,1.935,1717,1.122,1718,4.75,1719,1.122,1720,1.122,1721,1.122,1722,2.551,1723,1.122,1724,1.122,1725,1.122,1726,1.122,1727,1.122,1728,4.601,1729,1.935,1730,1.122,1731,1.935,1732,1.122,1733,1.122,1734,1.935,1735,1.935,1736,6.238,1737,2.551,1738,3.742,1739,1.122,1740,2.551,1741,1.122,1742,1.122,1743,1.122,1744,4.432,1745,1.56,1746,3.212,1747,3.212,1748,1.122,1749,1.122,1750,1.935,1751,2.445,1752,1.935,1753,3.034,1754,3.742,1755,3.153,1756,2.551,1757,1.122,1758,1.122,1759,1.935,1760,0.963,1761,1.122,1762,5.942,1763,2.056,1764,1.122,1765,1.122,1766,1.935,1767,3.423,1768,1.122,1769,0.963,1770,3.742,1771,1.935,1772,1.122,1773,2.551,1774,1.122,1775,1.935,1776,1.122,1777,1.122,1778,4.998,1779,5.972,1780,5.909,1781,4.601,1782,1.122,1783,3.423,1784,1.122,1785,1.122,1786,4.601,1787,1.122,1788,1.122,1789,1.122,1790,1.122,1791,1.122,1792,1.935,1793,1.122,1794,1.935,1795,2.551,1796,1.935,1797,2.551,1798,0.963,1799,1.122,1800,2.551,1801,1.935,1802,1.122,1803,1.034,1804,1.122,1805,1.122,1806,2.551,1807,1.935,1808,1.122,1809,1.935,1810,1.122,1811,2.551,1812,3.034,1813,1.122,1814,1.122,1815,4.236,1816,2.445,1817,1.122,1818,1.935,1819,3.423,1820,1.122,1821,2.551,1822,1.935,1823,2.19,1824,1.122,1825,3.441,1826,2.938,1827,1.122,1828,3.694,1829,2.35,1830,2.551,1831,1.935,1832,2.551,1833,1.122,1834,1.935,1835,1.122,1836,1.122,1837,1.935,1838,1.122,1839,1.122,1840,1.122,1841,1.122,1842,1.122,1843,1.122,1844,1.122,1845,1.122,1846,1.122,1847,1.122,1848,2.551,1849,3.034,1850,1.122,1851,1.122,1852,1.122,1853,1.122,1854,1.122,1855,1.122,1856,1.122,1857,3.034,1858,1.122,1859,1.122,1860,1.122,1861,1.122,1862,1.122,1863,1.122,1864,1.122,1865,1.122,1866,3.034,1867,1.122,1868,1.034,1869,1.122,1870,1.122,1871,1.122,1872,3.034,1873,1.935,1874,1.122,1875,3.742,1876,1.122,1877,1.122,1878,1.122,1879,3.034,1880,3.034,1881,1.122,1882,1.935,1883,1.935,1884,1.122,1885,2.551,1886,1.122,1887,1.122,1888,1.935,1889,1.122,1890,3.423,1891,1.122,1892,2.551,1893,1.122,1894,1.122,1895,1.935,1896,3.034,1897,1.661,1898,1.122,1899,1.122,1900,1.122,1901,2.551,1902,3.016,1903,1.935,1904,1.122,1905,1.935,1906,1.122,1907,1.122,1908,1.122,1909,1.122,1910,1.935,1911,1.122,1912,0.963,1913,3.034,1914,2.551,1915,1.122,1916,1.122,1917,1.122,1918,1.122,1919,1.122,1920,1.122,1921,1.122,1922,1.122,1923,1.122,1924,1.034,1925,0.963,1926,1.935,1927,1.122,1928,1.935,1929,1.122,1930,1.122,1931,1.122,1932,1.122,1933,1.122,1934,1.122,1935,1.935,1936,1.122,1937,1.122,1938,1.122,1939,1.122,1940,1.122,1941,3.742,1942,1.122,1943,1.122,1944,1.122,1945,3.742,1946,1.034,1947,1.122,1948,3.034,1949,1.122,1950,1.935,1951,1.122,1952,1.122,1953,1.122,1954,1.122]],["title/interfaces/FirebaseUserCredential.html",[931,1.177,1533,2.596]],["body/interfaces/FirebaseUserCredential.html",[3,0.064,4,0.037,9,0.161,13,0.77,20,0.12,27,0.987,28,0.013,29,0.699,30,0.2,31,0.103,32,0.1,33,0.046,41,1.036,50,0.557,58,0.538,90,0.485,99,0.318,101,0.726,108,0.361,128,0.308,130,0.361,151,1.025,153,1.515,158,0.361,161,0.004,162,0.004,177,1.313,194,1.938,195,2.767,202,0.648,216,1.728,217,1.602,218,2.762,219,0.417,221,2.894,222,0.737,223,2.872,225,2.201,226,0.485,229,2.856,234,0.856,235,0.649,239,0.676,242,2.349,245,1.266,251,0.705,253,1.684,254,0.518,257,1.216,258,2.161,260,0.439,263,1.638,264,1.925,268,2.573,269,0.856,273,4.242,274,1.036,275,3.266,276,1.278,277,3.083,278,1.976,279,3.019,280,3.41,287,1.036,288,2.762,290,1.755,291,2.246,292,2.781,296,1.165,298,1.336,300,0.676,302,3.095,305,2.193,306,0.835,309,0.328,310,1.179,318,1.013,319,1.214,328,2.225,332,3.05,338,0.965,339,3.235,340,1.036,341,2.607,342,2.193,345,3.157,351,1.036,356,0.856,368,0.705,374,0.623,381,2.246,414,2.981,441,1.905,444,0.6,447,0.705,452,2.193,453,1.036,455,0.906,457,5.431,458,4.665,459,2.12,461,0.964,464,1.428,465,2.193,466,0.927,467,0.664,468,0.708,472,0.578,473,0.557,475,2.103,482,1.139,497,0.557,501,0.812,502,1.826,503,1.992,506,3.638,512,2.456,527,1.165,605,0.439,639,2.162,640,1.85,642,1.664,652,1.562,699,1.221,701,2.448,702,1.036,705,2.251,706,0.737,707,1.562,716,0.856,717,2.292,723,0.649,727,1.9,731,0.996,733,1.698,734,1.034,743,3.958,744,0.906,749,1.664,751,0.835,759,1.036,763,1.036,789,1.271,790,2.775,808,1.075,810,0.519,811,0.906,814,1.675,815,0.812,857,0.856,858,0.965,860,1.475,882,1.786,896,2.354,905,1.036,913,1.036,926,1.036,931,0.934,932,0.649,961,0.773,964,0.737,975,0.856,981,0.737,1002,1.118,1011,2.476,1039,2.059,1041,3.227,1044,3.227,1045,1.475,1108,1.036,1119,1.036,1128,2.608,1134,4.086,1146,2.193,1176,1.036,1184,2.354,1185,0.812,1188,0.965,1189,2.448,1201,0.965,1212,1.036,1214,1.036,1224,1.664,1237,0.965,1238,3.202,1268,1.036,1271,2.087,1285,0.649,1381,0.906,1425,0.906,1472,1.036,1483,1.036,1484,1.036,1487,2.354,1489,1.036,1492,1.036,1493,1.786,1494,3.451,1498,4.906,1499,5.007,1500,2.354,1503,5.355,1504,1.036,1507,1.036,1508,5.547,1514,1.036,1515,1.036,1516,5.102,1522,0.965,1533,2.762,1545,2.799,1601,4.608,1612,2.354,1617,1.036,1626,2.799,1627,3.157,1640,1.036,1647,3.807,1648,1.036,1649,3.746,1650,1.125,1651,1.125,1652,1.939,1653,1.125,1654,1.125,1655,1.125,1656,1.125,1657,2.555,1658,1.125,1659,1.125,1660,2.555,1661,3.427,1662,1.125,1663,1.939,1664,1.939,1665,1.125,1666,1.125,1667,1.036,1668,1.125,1669,1.125,1670,1.125,1671,1.125,1672,1.939,1673,1.125,1674,3.746,1675,3.038,1676,1.125,1677,1.939,1678,1.125,1679,1.939,1680,3.038,1681,1.036,1682,1.664,1683,1.125,1684,1.125,1685,1.786,1686,1.125,1687,1.125,1688,1.125,1689,1.125,1690,1.125,1691,1.125,1692,1.125,1693,1.125,1694,1.125,1695,1.125,1696,1.125,1697,2.354,1698,3.427,1699,1.786,1700,1.125,1701,1.939,1702,2.193,1703,1.036,1704,1.036,1705,1.036,1706,1.036,1707,1.036,1708,1.036,1709,1.036,1710,3.451,1711,1.125,1712,1.125,1713,1.125,1714,4.885,1715,1.125,1716,1.939,1717,1.125,1718,4.753,1719,1.125,1720,1.125,1721,1.125,1722,2.555,1723,1.125,1724,1.125,1725,1.125,1726,1.125,1727,1.125,1728,4.605,1729,1.939,1730,1.125,1731,1.939,1732,1.125,1733,1.125,1734,1.939,1735,1.939,1736,6.239,1737,2.555,1738,3.746,1739,1.125,1740,2.555,1741,1.125,1742,1.125,1743,1.125,1744,4.435,1745,1.562,1746,3.215,1747,3.215,1748,1.125,1749,1.125,1750,1.939,1751,2.448,1752,1.939,1753,3.038,1754,3.746,1755,3.157,1756,2.555,1757,1.125,1758,1.125,1759,1.939,1760,0.965,1761,1.125,1762,5.944,1763,2.059,1764,1.125,1765,1.125,1766,1.939,1767,3.427,1768,1.125,1769,0.965,1770,3.746,1771,1.939,1772,1.125,1773,2.555,1774,1.125,1775,1.939,1776,1.125,1777,1.125,1778,5.002,1779,5.974,1780,5.911,1781,4.605,1782,1.125,1783,3.427,1784,1.125,1785,1.125,1786,4.605,1787,1.125,1788,1.125,1789,1.125,1790,1.125,1791,1.125,1792,1.939,1793,1.125,1794,1.939,1795,2.555,1796,1.939,1797,2.555,1798,0.965,1799,1.125,1800,2.555,1801,1.939,1802,1.125,1803,1.036,1804,1.125,1805,1.125,1806,2.555,1807,1.939,1808,1.125,1809,1.939,1810,1.125,1811,2.555,1812,3.038,1813,1.125,1814,1.125,1815,4.24,1816,2.448,1817,1.125,1818,1.939,1819,3.427,1820,1.125,1821,2.555,1822,1.939,1823,2.193,1824,1.125,1825,3.445,1826,2.941,1827,1.125,1828,3.697,1829,2.354,1830,2.555,1831,1.939,1832,2.555,1833,1.125,1834,1.939,1835,1.125,1836,1.125,1837,1.939,1838,1.125,1839,1.125,1840,1.125,1841,1.125,1842,1.125,1843,1.125,1844,1.125,1845,1.125,1846,1.125,1847,1.125,1848,2.555,1849,3.038,1850,1.125,1851,1.125,1852,1.125,1853,1.125,1854,1.125,1855,1.125,1856,1.125,1857,3.038,1858,1.125,1859,1.125,1860,1.125,1861,1.125,1862,1.125,1863,1.125,1864,1.125,1865,1.125,1866,3.038,1867,1.125,1868,1.036,1869,1.125,1870,1.125,1871,1.125,1872,3.038,1873,1.939,1874,1.125,1875,3.746,1876,1.125,1877,1.125,1878,1.125,1879,3.038,1880,3.038,1881,1.125,1882,1.939,1883,1.939,1884,1.125,1885,2.555,1886,1.125,1887,1.125,1888,1.939,1889,1.125,1890,3.427,1891,1.125,1892,2.555,1893,1.125,1894,1.125,1895,1.939,1896,3.038,1897,1.664,1898,1.125,1899,1.125,1900,1.125,1901,2.555,1902,3.019,1903,1.939,1904,1.125,1905,1.939,1906,1.125,1907,1.125,1908,1.125,1909,1.125,1910,1.939,1911,1.125,1912,0.965,1913,3.038,1914,2.555,1915,1.125,1916,1.125,1917,1.125,1918,1.125,1919,1.125,1920,1.125,1921,1.125,1922,1.125,1923,1.125,1924,1.036,1925,0.965,1926,1.939,1927,1.125,1928,1.939,1929,1.125,1930,1.125,1931,1.125,1932,1.125,1933,1.125,1934,1.125,1935,1.939,1936,1.125,1937,1.125,1938,1.125,1939,1.125,1940,1.125,1941,3.746,1942,1.125,1943,1.125,1944,1.125,1945,3.746,1946,1.036,1947,1.125,1948,3.038,1949,1.125,1950,1.939,1951,1.125,1952,1.125,1953,1.125,1954,1.125]],["title/components/HomePage.html",[0,0.248,125,0.94]],["body/components/HomePage.html",[0,0.457,1,0.754,2,1.605,3,0.17,4,0.083,5,0.886,6,0.886,7,0.886,8,0.858,9,0.072,13,0.754,14,2.337,15,2.272,16,1.305,18,1.305,20,0.267,21,0.673,22,1.711,23,1.201,24,1.045,27,0.81,28,0.013,29,1.324,30,0.301,31,0.229,32,0.083,33,0.103,45,2.65,46,3.055,47,1.444,48,2.128,49,2.634,50,2.172,52,2.314,57,1.286,58,2.312,63,2.748,64,2.634,66,1.641,68,1.286,71,1.703,73,1.286,76,2.306,78,2.664,87,2.486,88,2.046,90,1.59,91,1.969,92,2.767,95,0.642,96,1.305,97,1.305,98,0.886,99,1.367,100,0.886,101,0.689,102,0.886,103,0.754,104,0.886,105,0.779,106,0.886,107,0.779,108,0.804,109,1.305,110,0.754,111,1.224,112,1.55,113,0.754,114,1.186,115,1.55,116,0.779,117,0.858,118,0.886,119,0.754,120,1.55,121,1.148,122,0.886,123,1.364,124,2.062,125,1.412,126,0.886,127,0.754,128,1.477,129,0.779,130,1.937,131,1.224,132,1.305,133,0.779,134,0.779,135,1.224,136,1.305,137,0.779,138,1.305,139,0.779,140,0.804,141,1.305,142,1.148,143,1.767,144,0.754,145,0.779,146,0.779,147,0.804,148,0.754,149,0.886,150,0.779,151,0.685,152,0.779,153,1.34,154,0.754,155,0.754,156,0.754,157,0.779,158,0.804,159,0.886,160,0.886,161,0.009,162,0.007,176,1.444,186,1.009,193,1.079,194,1.79,202,0.698,209,2.879,210,1.148,214,3.826,216,0.978,219,0.715,225,1.764,226,2.222,230,2.326,235,2.128,237,3.033,243,1.764,250,2.528,252,2.808,254,0.523,255,0.771,256,0.715,258,2.128,259,4.079,260,1.439,263,0.754,276,0.889,298,1.046,309,0.731,313,2.017,318,0.911,319,1.324,328,2.43,332,2.43,366,2.503,368,2.748,369,1.335,370,2.218,373,2.314,378,1.286,386,2.306,387,1.286,444,1.969,450,2.808,461,1.393,464,1.826,468,0.915,469,1.57,475,1.825,497,1.828,504,2.808,506,2.314,525,2.974,527,3.243,564,2.148,565,2.148,566,2.767,572,2.767,574,1.335,605,2.424,639,1.766,717,1.709,786,1.896,840,2.148,843,2.974,854,2.634,908,2.503,912,3.399,965,2.808,985,2.664,987,2.314,988,2.419,1002,2.128,1011,2.49,1036,1.57,1066,3.167,1161,4.456,1162,3.895,1166,3.399,1168,3.69,1210,2.148,1211,2.306,1257,2.148,1258,2.306,1261,2.306,1262,2.306,1263,4.038,1279,1.504,1293,2.306,1371,4.615,1383,4.837,1388,2.503,1415,1.807,1416,2.503,1417,2.503,1418,3.69,1419,2.503,1424,2.306,1425,2.974,1426,2.503,1427,2.767,1429,2.306,1444,3.399,1685,4.038,1983,2.767,1984,5.547,1985,4.67,1986,5.547,1987,3.681,1988,4.67,1989,6.122,1990,6.122,1991,3.168,1992,4.67,1993,4.67,1994,3.168,1995,3.168,1996,4.67,1997,4.67,1998,4.67,1999,3.168,2000,5.547,2001,3.168,2002,3.168,2003,4.67,2004,4.67,2005,5.547,2006,3.168,2007,2.148,2008,3.168,2009,2.767,2010,2.767,2011,3.168,2012,3.168,2013,5.547,2014,3.168,2015,3.168,2016,3.168,2017,4.67,2018,3.168,2019,3.168,2020,2.767,2021,3.168,2022,7.062,2023,3.168,2024,6.829,2025,3.168,2026,6.527,2027,3.168,2028,6.527,2029,3.168,2030,5.347,2031,5.347,2032,4.67,2033,4.67,2034,3.399,2035,4.845,2036,3.168,2037,3.168]],["title/modules/HomePageModule.html",[163,1.139,2038,2.967]],["body/modules/HomePageModule.html",[3,0.133,4,0.133,9,0.116,28,0.013,30,0.337,31,0.368,32,0.133,33,0.166,95,1.032,110,1.882,111,1.696,113,1.882,114,1.901,121,1.943,123,1.943,124,1.334,125,1.822,134,1.943,135,1.696,137,1.943,153,1.27,155,1.882,156,1.882,161,0.009,162,0.009,163,1.423,165,1.793,166,2.417,167,3.686,168,2.637,169,1.856,170,1.923,175,3.352,176,2.32,177,2.067,179,2.534,180,2.534,181,3.691,182,2.763,183,3.892,184,1.676,185,3.513,186,1.621,187,2.903,210,1.252,397,4.289,399,4.711,404,3.352,405,2.763,406,2.903,407,3.691,408,2.637,409,2.637,410,3.352,411,3.242,421,3.705,424,3.061,425,2.637,426,2.23,427,2.903,428,2.903,525,3.242,936,3.705,1063,3.705,1211,3.705,1429,3.705,2009,4.446,2010,6.215,2038,6.285,2039,4.446,2040,4.446,2041,4.446,2042,5.358,2043,5.09,2044,4.446,2045,5.653,2046,6.472,2047,5.09,2048,3.705,2049,4.022,2050,4.022,2051,3.705,2052,3.705]],["title/modules/HomePageRoutingModule.html",[163,1.139,2042,2.764]],["body/modules/HomePageRoutingModule.html",[0,0.39,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,125,1.717,161,0.011,162,0.011,165,2.257,170,2.42,179,2.508,180,2.914,190,3.654,191,3.317,192,4.246,193,2.182,194,1.679,195,3.042,196,3.853,2042,5.048,2044,5.596,2053,6.407]],["title/injectables/HttpClientProvider.html",[467,1.103,620,2.764]],["body/injectables/HttpClientProvider.html",[3,0.099,4,0.099,9,0.086,20,0.318,21,0.764,24,1.073,27,0.999,28,0.013,29,1.147,30,0.209,31,0.273,32,0.099,33,0.123,50,2.838,101,0.786,161,0.008,162,0.008,219,1.03,254,0.662,255,1.035,256,0.96,298,1.324,309,1.413,318,1.076,346,4.743,441,4.233,459,2.917,464,2.774,467,1.435,468,1.531,472,1.534,473,1.479,620,3.596,713,1.794,717,2.571,718,6.091,810,1.934,814,3.623,1227,6.715,1260,5.419,1313,5.09,1316,4.743,1329,5.811,1902,5.084,2054,6.004,2055,3.301,2056,5.8,2057,6.108,2058,5.35,2059,3.301,2060,3.779,2061,6.837,2062,7.498,2063,4.631,2064,3.779,2065,4.631,2066,3.779,2067,3.301,2068,7.217,2069,6.973,2070,3.779,2071,6.125,2072,5.729,2073,3.301,2074,3.779,2075,3.301,2076,3.779,2077,3.301,2078,4.84,2079,5.35,2080,5.35,2081,3.779,2082,5.8,2083,4.833,2084,3.859]],["title/injectables/HttpClientWebProvider.html",[467,1.103,610,2.967]],["body/injectables/HttpClientWebProvider.html",[3,0.079,4,0.079,9,0.069,20,0.254,21,0.649,23,1.057,24,1.072,27,0.989,28,0.013,29,0.973,30,0.235,31,0.218,32,0.079,33,0.098,50,2.91,99,0.673,101,0.785,161,0.007,162,0.007,169,1.099,219,1.014,243,2.256,254,0.661,255,1.033,256,0.959,263,1.597,298,1.285,309,1.684,318,1.066,319,1.45,346,4.335,374,1.32,404,3.599,405,1.636,441,4.191,459,2.969,464,2.713,467,1.218,468,1.299,472,1.224,473,1.18,474,1.32,475,2.041,482,2.516,610,3.276,612,5.298,620,5.042,621,2.632,640,1.469,713,1.431,717,2.505,810,1.641,814,3.311,1227,6.733,1238,1.493,1260,5.058,1271,3.242,1313,4.653,1316,4.335,1329,5.763,1352,2.381,1466,3.052,1475,5.058,1535,2.044,1902,4.866,2054,4.72,2056,5.218,2057,5.583,2058,4.704,2059,2.632,2061,6.828,2062,7.461,2063,2.632,2065,3.931,2067,2.632,2068,7.285,2069,7.27,2072,5.874,2073,2.632,2075,2.632,2077,2.632,2078,4.256,2079,4.704,2080,4.704,2082,5.218,2083,4.348,2084,3.276,2085,2.632,2086,4.5,2087,5.386,2088,3.014,2089,3.014,2090,4.5,2091,4.5,2092,3.014,2093,6.706,2094,3.014,2095,3.014,2096,5.386,2097,3.014,2098,3.014,2099,3.014,2100,3.014,2101,3.014,2102,3.014,2103,3.014,2104,3.014,2105,4.5,2106,3.014,2107,5.386,2108,6.392,2109,3.014,2110,5.386,2111,3.014,2112,3.014,2113,4.5,2114,3.014,2115,4.5,2116,3.014,2117,3.014,2118,3.014,2119,2.632]],["title/components/IncidentDataPage.html",[0,0.248,127,0.971]],["body/components/IncidentDataPage.html",[0,0.451,1,0.664,2,1.113,3,0.161,4,0.073,5,0.78,6,0.78,7,0.78,8,0.755,9,0.064,11,1.078,12,1.437,13,0.664,14,2.309,15,2.236,16,1.187,18,1.187,20,0.235,21,0.612,22,1.606,23,1.328,24,1.051,27,0.767,28,0.013,29,1.242,30,0.282,31,0.201,32,0.073,33,0.091,45,2.087,46,2.51,47,1.271,48,1.271,49,2.016,50,1.662,52,2.846,57,2.749,58,1.941,62,4.662,63,1.382,64,2.44,66,2.662,68,2.333,69,2.016,71,2.254,72,1.222,73,1.724,83,1.382,84,1.324,85,1.514,87,3.088,88,2.252,90,0.95,91,1.176,94,1.445,95,0.565,96,1.187,97,1.187,98,0.78,99,1.283,100,0.78,101,0.737,102,0.78,103,0.664,104,0.78,105,0.686,106,0.78,107,0.686,108,0.708,109,1.187,110,0.664,111,1.113,112,1.437,113,0.664,114,1.078,115,1.437,116,1.044,117,0.755,118,0.78,119,0.664,120,1.437,121,0.686,122,0.78,123,0.686,124,0.731,125,0.643,126,0.78,127,1.368,128,1.747,129,0.686,130,1.458,131,1.113,132,1.187,133,0.686,134,0.686,135,1.113,136,1.187,137,0.686,138,1.187,139,0.686,140,0.708,141,1.187,142,0.686,143,0.755,144,0.664,145,0.686,146,0.686,147,0.708,148,0.664,149,0.78,150,0.686,151,0.603,152,0.686,153,1.328,154,0.664,155,0.664,156,0.664,157,0.686,158,0.708,159,0.78,160,0.78,161,0.006,162,0.006,169,1.548,191,2.422,193,0.95,194,0.731,198,5.937,199,2.304,202,0.634,206,5.145,207,5.145,210,1.601,211,3.226,212,4.311,213,5.145,214,3.947,216,1.573,219,0.741,220,4.539,221,2.65,222,4.016,223,2.469,225,2.17,226,1.446,227,3.118,228,2.704,229,2.728,230,2.399,231,2.421,233,3.09,234,2.553,235,2.618,237,2.104,239,3.092,240,3.717,241,3.355,242,2.104,243,2.799,244,3.708,245,1.398,246,3.708,247,3.708,248,3.708,252,3.455,253,2.517,254,0.559,255,0.798,256,0.797,260,1.584,263,0.664,276,0.824,297,3.355,298,1.232,300,2.728,301,4.74,302,2.422,303,3.355,305,3.714,306,1.446,307,4.061,308,4.061,309,0.643,310,1.548,311,2.204,314,1.677,315,2.03,316,2.03,317,1.892,318,0.922,319,1.242,327,3.118,328,2.708,332,1.86,333,3.09,334,3.09,335,2.204,344,2.03,353,3.355,354,3.09,355,3.355,356,2.553,357,3.355,358,3.355,359,3.896,360,2.204,361,2.204,364,1.445,368,1.382,369,1.176,370,2.016,373,1.382,378,2.087,381,2.199,384,1.271,387,1.724,388,2.087,389,1.86,391,1.445,482,0.983,497,1.662,504,2.553,505,5.018,506,2.846,525,2.704,540,2.436,544,2.204,573,1.324,574,1.79,579,1.892,632,1.892,675,5.026,706,2.199,717,2.006,751,1.446,786,1.724,790,1.79,810,1.548,838,2.553,845,1.776,912,3.09,943,1.176,1090,2.03,1091,1.892,1093,5.647,1096,2.204,1152,4.061,1153,3.355,1160,6.094,1165,4.49,1209,2.204,1241,1.892,1252,2.436,1253,2.436,1269,2.436,1279,1.324,1280,1.591,1281,1.591,1282,1.591,1283,1.445,1284,1.445,1285,1.271,1288,2.879,1394,4.192,1415,2.931,1987,3.916,2007,1.892,2030,3.708,2031,2.436,2034,3.09,2120,5.394,2121,2.204,2122,4.49,2123,5.688,2124,4.246,2125,2.436,2126,5.306,2127,3.708,2128,2.789,2129,2.436,2130,4.246,2131,2.789,2132,4.246,2133,2.789,2134,2.789,2135,2.789,2136,2.436,2137,2.789,2138,2.789,2139,2.436,2140,4.246,2141,2.436,2142,2.789,2143,3.708,2144,2.789,2145,2.789,2146,2.789,2147,2.789,2148,2.789,2149,4.246,2150,4.246,2151,4.246,2152,4.246,2153,2.436,2154,2.204,2155,3.355,2156,3.09,2157,2.03,2158,2.204]],["title/modules/IncidentDataPageModule.html",[163,1.139,2159,2.967]],["body/modules/IncidentDataPageModule.html",[3,0.153,4,0.153,9,0.134,28,0.013,30,0.333,31,0.422,32,0.153,33,0.191,95,1.185,127,1.946,128,1.525,161,0.01,162,0.01,163,1.633,165,2.059,166,2.775,167,3.921,168,3.027,169,2.131,170,2.207,175,3.652,176,2.663,177,2.373,179,2.76,180,2.76,181,4.021,182,3.172,183,4.239,184,1.924,185,3.826,186,1.861,187,3.333,210,1.437,276,0.937,404,3.652,405,3.172,406,3.333,407,4.021,408,3.027,409,3.027,410,3.652,411,3.721,422,4.781,423,3.963,424,3.514,425,3.027,426,2.56,427,3.333,428,3.333,675,3.963,1303,3.721,2120,4.254,2159,6.07,2160,5.104,2161,5.104,2162,5.104,2163,5.543,2164,5.104]],["title/modules/IncidentDataPageRoutingModule.html",[163,1.139,2163,2.764]],["body/modules/IncidentDataPageRoutingModule.html",[0,0.388,3,0.167,4,0.167,9,0.146,28,0.013,30,0.31,31,0.461,32,0.167,33,0.208,127,1.769,128,1.381,161,0.011,162,0.011,165,2.249,170,2.411,179,2.499,180,2.908,190,3.641,191,3.312,192,4.237,193,2.174,194,1.673,195,3.031,196,3.839,276,1.023,675,4.329,1303,4.065,2120,4.647,2163,5.038]],["title/components/IncidentsCircleGraphicComponent.html",[0,0.248,129,1.002]],["body/components/IncidentsCircleGraphicComponent.html",[0,0.483,1,1.026,2,1.521,3,0.151,4,0.112,5,1.205,6,1.205,7,1.205,8,1.166,9,0.099,11,1.473,12,1.834,13,1.026,14,2.395,15,2.319,16,1.622,18,1.622,20,0.363,21,0.836,22,1.962,23,1.377,24,1.012,27,0.535,28,0.013,29,0.932,30,0.277,31,0.311,32,0.112,33,0.141,58,1.628,65,2.591,71,1.571,95,1.176,96,1.622,97,1.622,98,1.205,99,1.568,100,1.205,101,0.693,102,1.205,103,1.026,104,1.205,105,1.06,106,1.205,107,1.06,108,1.094,109,1.622,110,1.026,111,1.521,112,1.834,113,1.026,114,1.473,115,1.834,116,1.06,117,1.166,118,1.205,119,1.026,120,1.834,121,1.06,122,1.205,123,1.06,124,1.13,125,0.994,126,1.205,127,1.026,128,1.255,129,1.726,130,2.017,131,2.205,132,1.622,133,1.06,134,1.06,135,1.521,136,1.622,137,1.06,138,1.622,139,1.06,140,1.094,141,1.622,142,1.06,143,1.166,144,1.026,145,1.06,146,1.06,147,1.094,148,1.026,149,1.205,150,1.06,151,0.932,152,1.06,153,1.481,154,1.026,155,1.026,156,1.026,157,1.06,158,1.094,159,1.205,160,1.205,161,0.008,162,0.008,194,1.521,202,0.867,210,1.726,211,3.739,216,1.215,219,0.556,226,2.39,227,3.15,228,3.695,229,2.755,230,2.251,231,3.31,250,2.645,254,0.526,255,0.599,256,0.556,276,1.21,314,2.591,318,0.748,319,1.255,468,1.244,469,2.135,475,1.622,497,2.272,605,2.325,639,2.235,745,2.135,786,2.356,854,2.755,871,2.922,912,3.137,1036,2.135,1158,3.137,1164,4.776,1185,3.31,1287,4.585,1390,2.922,2020,3.764,2084,4.776,2165,5.789,2166,5.789,2167,3.405,2168,5.731,2169,5.069,2170,5.069,2171,4.309,2172,5.069,2173,5.069,2174,4.309,2175,3.764,2176,4.309,2177,4.309,2178,4.309,2179,5.803,2180,3.764,2181,5.069,2182,4.309,2183,3.764,2184,4.309,2185,3.764,2186,5.803,2187,5.803,2188,5.803,2189,3.764,2190,4.309,2191,3.764,2192,3.764,2193,3.764,2194,3.764,2195,3.764]],["title/components/IncidentsInfoComponent.html",[0,0.248,133,1.002]],["body/components/IncidentsInfoComponent.html",[0,0.466,1,0.771,2,1.244,3,0.186,4,0.084,5,0.905,6,0.905,7,0.905,8,0.876,9,0.074,11,1.204,12,1.57,13,0.771,14,2.342,15,2.268,16,1.326,18,1.326,20,0.273,21,0.684,22,1.729,23,1.102,24,1.118,27,0.768,28,0.013,29,1.338,30,0.221,31,0.234,32,0.084,33,0.106,45,1.926,46,2.28,47,1.475,48,1.475,49,1.537,50,1.267,51,2.356,52,1.604,55,2.061,57,2.511,58,1.222,61,3.217,63,1.604,64,1.537,68,2.28,69,3.376,71,2.255,73,2.28,76,2.356,83,1.604,84,1.537,85,1.757,87,2.961,88,1.418,90,1.102,91,1.364,94,1.676,95,0.656,96,1.326,97,1.326,98,0.905,99,1.381,100,0.905,101,0.751,102,0.905,103,0.771,104,0.905,105,0.796,106,0.905,107,0.796,108,0.822,109,1.326,110,0.771,111,1.244,112,1.57,113,0.771,114,1.204,115,1.57,116,0.796,117,0.876,118,0.905,119,0.771,120,1.57,121,0.796,122,0.905,123,0.796,124,0.848,125,0.746,126,0.905,127,0.771,128,1.636,129,0.796,130,1.889,131,1.244,132,1.326,133,1.521,134,0.796,135,1.244,136,1.326,137,0.796,138,1.326,139,0.796,140,0.822,141,1.326,142,0.796,143,0.876,144,0.771,145,0.796,146,0.796,147,0.822,148,0.771,149,0.905,150,0.796,151,0.7,152,0.796,153,1.395,154,0.771,155,0.771,156,0.771,157,0.796,158,0.822,159,0.905,160,0.905,161,0.007,162,0.007,194,1.472,202,0.709,210,1.859,216,0.993,219,0.849,230,1.415,237,2.351,245,1.562,250,2.162,254,0.606,255,0.915,256,0.849,263,0.771,264,2.511,271,3.748,298,1.14,302,2.607,306,2.106,309,0.746,318,0.798,319,1.215,364,2.457,368,1.604,369,2,370,1.537,378,1.926,386,2.356,387,1.926,388,1.314,389,1.418,391,2.457,447,2.351,459,2.336,474,1.418,482,1.671,497,2.421,499,4.466,558,3.217,564,2.195,565,2.195,573,1.537,574,2.367,581,4.144,640,1.166,700,3.748,704,4.193,723,2.162,733,2.199,751,2.483,771,2.356,772,4.438,773,3.748,774,4.438,775,3.748,778,3.748,779,2.351,780,2.575,783,3.748,784,3.748,786,1.926,787,3.453,788,5.618,792,3.021,793,2.819,794,4.144,795,3.357,797,3.217,800,2.557,801,3.723,802,2.557,804,4.438,805,5.203,806,5.437,807,3.748,808,2.884,810,1.73,811,3.021,820,3.748,821,2.356,822,3.748,824,2.557,826,2.557,829,2.557,830,2.557,839,3.021,843,3.021,854,2.253,1279,2.253,1293,2.356,1415,2.706,1416,4.438,1417,2.557,1418,3.748,1419,2.557,1424,3.453,1426,2.557,1574,3.859,1760,2.195,1769,3.217,1987,3.377,2007,2.195,2078,2.557,2143,2.827,2165,6.188,2196,6.188,2197,6.585,2198,6.585,2199,4.744,2200,5.616,2201,2.557,2202,3.925,2203,3.809,2204,3.236,2205,3.236,2206,4.744,2207,3.236,2208,3.236,2209,4.744,2210,3.236,2211,4.887,2212,2.827,2213,3.236,2214,3.236,2215,2.195,2216,2.827,2217,4.744,2218,3.236,2219,4.744,2220,3.236,2221,4.744,2222,3.236,2223,2.827,2224,3.236,2225,3.236,2226,3.236,2227,3.236,2228,3.236,2229,2.557,2230,3.236,2231,2.827,2232,6.185,2233,3.748,2234,4.744,2235,4.744,2236,4.744,2237,4.744,2238,4.744,2239,3.236,2240,3.236,2241,3.236,2242,3.236,2243,4.744,2244,3.236,2245,3.236,2246,3.236]],["title/injectables/IncidentsService.html",[467,1.103,2126,2.967]],["body/injectables/IncidentsService.html",[0,0.423,3,0.164,4,0.127,9,0.111,20,0.409,21,0.904,23,1.53,24,1.003,27,0.913,28,0.013,30,0.29,31,0.35,32,0.127,33,0.259,101,0.734,128,1.813,161,0.009,162,0.009,199,3.775,216,1.314,219,0.897,221,2.879,222,3.809,223,2.288,230,2.074,231,3.967,242,3.446,245,2.421,249,4.717,254,0.558,255,0.967,256,0.897,260,1.933,264,2.548,276,0.778,292,3.446,298,1.221,300,3.616,305,3.967,310,1.769,318,0.897,319,1.357,464,2.677,466,2.947,467,1.698,468,1.4,469,2.403,472,1.97,473,1.899,474,2.125,475,1.754,497,2.456,605,2.602,640,1.193,713,2.303,727,2.749,733,2.456,734,3.1,751,2.136,760,5.353,852,3.833,858,4.255,868,3.089,870,4.237,872,5.481,873,3.833,902,4.237,907,4.237,908,3.833,1011,2.682,1128,3.773,1902,3.089,1987,4.691,2122,6.075,2126,4.567,2247,4.237,2248,6.275,2249,6.275,2250,4.851,2251,6.018,2252,6.018,2253,6.075,2254,6.075,2255,6.075,2256,6.275,2257,4.851,2258,4.958,2259,6.275,2260,4.851,2261,4.851,2262,4.237,2263,4.851,2264,4.851,2265,6.275,2266,4.851,2267,4.851,2268,4.851]],["title/components/ItemCategoryComponent.html",[0,0.248,134,1.002]],["body/components/ItemCategoryComponent.html",[0,0.402,1,1.04,2,1.535,3,0.153,4,0.114,5,1.221,6,1.221,7,1.221,8,1.182,9,0.1,11,1.486,12,1.846,13,1.04,14,2.397,15,2.321,16,1.637,18,1.637,20,0.368,21,0.844,22,1.973,23,1.296,24,1.134,27,0.913,28,0.013,29,1.428,30,0.172,31,0.315,32,0.114,33,0.143,95,0.885,96,1.637,97,1.637,98,1.221,99,1.576,100,1.221,101,0.697,102,1.221,103,1.04,104,1.221,105,1.074,106,1.221,107,1.074,108,1.109,109,1.637,110,1.04,111,1.85,112,1.846,113,1.04,114,1.486,115,1.846,116,1.074,117,1.182,118,1.221,119,1.04,120,1.846,121,1.074,122,1.221,123,1.074,124,1.145,125,1.007,126,1.221,127,1.04,128,0.944,129,1.074,130,1.486,131,1.535,132,1.637,133,1.074,134,1.735,135,2.239,136,1.637,137,1.074,138,1.637,139,1.074,140,1.109,141,1.637,142,1.074,143,1.182,144,1.04,145,1.074,146,1.074,147,1.109,148,1.04,149,1.221,150,1.074,151,0.944,152,1.074,153,1.486,154,1.04,155,1.04,156,1.04,157,1.074,158,1.109,159,1.221,160,1.221,161,0.009,162,0.009,202,0.875,219,0.563,254,0.566,255,0.607,256,0.563,264,2.377,276,1.29,306,1.487,318,0.563,319,1.428,461,2.195,466,2.211,475,1.221,640,1.074,723,2.668,751,2.678,779,2.901,780,3.178,793,3.01,795,3.585,797,4.479,801,3.453,957,3.339,963,4.206,964,3.422,991,2.901,1039,3.136,2049,6.295,2211,5.576,2269,6.295,2270,3.45,2271,5.769,2272,5.114,2273,6.618,2274,4.786,2275,4.367,2276,5.855,2277,4.367,2278,4.367,2279,4.367,2280,5.114,2281,4.367,2282,3.814,2283,4.367,2284,5.114,2285,5.855,2286,3.814,2287,3.814,2288,3.814,2289,5.114,2290,3.814,2291,3.814,2292,5.114]],["title/components/ItemUserComponent.html",[0,0.248,137,1.002]],["body/components/ItemUserComponent.html",[0,0.402,1,1.04,2,1.535,3,0.153,4,0.114,5,1.221,6,1.221,7,1.221,8,1.182,9,0.1,11,1.486,12,1.846,13,1.04,14,2.397,15,2.321,16,1.637,18,1.637,20,0.368,21,0.844,22,1.973,23,1.296,24,1.134,27,0.913,28,0.013,29,1.428,30,0.172,31,0.315,32,0.114,33,0.143,95,0.885,96,1.637,97,1.637,98,1.221,99,1.576,100,1.221,101,0.697,102,1.221,103,1.04,104,1.221,105,1.074,106,1.221,107,1.074,108,1.109,109,1.637,110,1.04,111,1.535,112,1.846,113,1.04,114,1.486,115,1.846,116,1.074,117,1.182,118,1.221,119,1.04,120,1.846,121,1.074,122,1.221,123,1.074,124,1.145,125,1.007,126,1.221,127,1.04,128,0.944,129,1.074,130,1.486,131,1.535,132,1.637,133,1.074,134,1.074,135,2.239,136,1.637,137,1.735,138,1.637,139,1.074,140,1.109,141,1.637,142,1.074,143,1.182,144,1.04,145,1.074,146,1.074,147,1.109,148,1.04,149,1.221,150,1.074,151,0.944,152,1.074,153,1.543,154,1.04,155,1.04,156,1.04,157,1.074,158,1.109,159,1.221,160,1.221,161,0.009,162,0.009,202,0.875,219,0.563,254,0.566,255,0.607,256,0.563,264,2.988,276,1.29,306,2.403,318,0.563,319,1.428,461,1.746,466,2.211,475,1.221,640,1.074,751,2.678,779,2.901,780,3.178,793,3.01,795,3.585,797,4.479,801,3.453,957,3.339,967,3.178,991,2.901,1039,3.597,1128,3.521,2050,6.295,2211,5.576,2269,6.295,2273,6.618,2274,4.786,2280,5.114,2282,3.814,2284,5.114,2286,3.814,2287,3.814,2288,3.814,2289,5.114,2290,3.814,2291,3.814,2292,5.114,2293,3.45,2294,5.769,2295,5.114,2296,4.367,2297,5.855,2298,4.367,2299,3.814,2300,4.367,2301,4.367,2302,4.367]],["title/injectables/LocalService.html",[467,1.103,495,2.967]],["body/injectables/LocalService.html",[0,0.455,3,0.149,4,0.149,9,0.131,12,1.594,20,0.48,23,1.629,24,1.152,27,0.708,28,0.013,30,0.274,31,0.412,32,0.149,33,0.186,58,2.155,101,0.602,161,0.01,162,0.01,202,1.038,211,4.114,216,1.455,219,0.736,223,2.533,225,2.829,227,4.066,229,3.557,230,2.234,253,3.043,254,0.641,255,0.793,256,0.736,263,1.784,264,3.042,298,1.114,309,1.316,318,0.736,319,1.502,467,1.88,472,2.316,473,2.233,474,2.499,495,5.056,507,5.817,512,3.598,592,5.056,713,2.708,810,2.533,1135,6.543,1471,5.08,2303,4.982,2304,7.491,2305,5.704,2306,6.947,2307,7.491,2308,6.98,2309,5.704,2310,5.704,2311,5.704,2312,5.704,2313,5.704]],["title/components/LoginFormComponent.html",[0,0.248,139,1.002]],["body/components/LoginFormComponent.html",[0,0.396,1,1.013,2,1.508,3,0.17,4,0.111,5,1.189,6,1.189,7,1.189,8,1.151,9,0.097,11,1.46,12,1.822,13,1.013,14,2.393,15,2.317,16,1.608,18,1.608,20,0.358,21,0.829,22,1.952,23,0.834,24,1.051,27,0.714,28,0.013,29,1.244,30,0.275,31,0.307,32,0.111,33,0.139,45,1.727,46,2.336,47,1.939,48,1.939,57,1.727,68,1.727,71,2.66,72,1.863,73,1.727,77,2.309,83,2.107,87,1.727,94,2.203,95,0.862,96,1.608,97,1.608,98,1.189,99,1.559,100,1.189,101,0.688,102,1.189,103,1.013,104,1.189,105,1.046,106,1.189,107,1.046,108,1.08,109,1.608,110,1.013,111,1.508,112,1.822,113,1.013,114,1.46,115,1.822,116,1.046,117,1.151,118,1.189,119,1.013,120,1.822,121,1.046,122,1.189,123,1.046,124,1.115,125,0.981,126,1.189,127,1.013,128,0.92,129,1.046,130,1.46,131,1.508,132,1.608,133,1.046,134,1.046,135,1.508,136,1.608,137,1.046,138,1.608,139,1.849,140,1.985,141,1.608,142,1.046,143,1.151,144,1.013,145,1.046,146,1.046,147,1.08,148,1.013,149,1.189,150,1.046,151,0.92,152,1.046,153,1.475,154,1.013,155,1.013,156,1.013,157,1.046,158,1.08,159,1.189,160,1.189,161,0.008,162,0.008,184,1.4,193,1.448,202,0.859,210,1.97,214,2.107,219,0.549,230,1.715,254,0.522,255,0.591,256,0.549,266,2.309,270,4.187,275,2.02,280,2.203,312,2.107,318,0.549,369,1.793,370,2.02,373,2.107,374,3.59,378,2.647,384,1.939,387,2.336,388,2.336,389,1.863,401,5.94,414,2.107,466,2.173,474,1.863,573,2.02,574,1.793,640,1.046,780,3.122,786,2.336,793,2.97,795,3.122,801,3.182,943,1.793,991,2.85,1279,2.02,1280,2.426,1281,2.426,1282,2.426,1283,2.203,1284,2.203,1285,1.939,1350,2.558,1374,4.545,1380,4.187,1385,3.919,1386,5.101,1387,2.885,1389,2.709,1409,3.096,1421,3.361,1431,2.885,1434,4.187,1447,2.885,1482,4.187,2157,3.096,2314,6.567,2315,3.361,2316,5.693,2317,5.024,2318,5.082,2319,6.371,2320,5.024,2321,4.253,2322,4.253,2323,5.082,2324,4.253,2325,4.187,2326,3.715,2327,5.024,2328,5.082,2329,5.024,2330,5.752,2331,3.361,2332,4.253]],["title/interfaces/Media.html",[90,1.388,931,1.177]],["body/interfaces/Media.html",[3,0.139,4,0.139,9,0.179,20,0.448,21,0.766,27,0.826,28,0.013,30,0.286,32,0.174,33,0.174,90,2.76,99,1.486,161,0.01,162,0.01,202,0.994,221,2.604,225,2.008,230,1.984,232,3.386,235,2.423,245,1.751,254,0.628,276,1.066,277,2.329,278,2.423,288,3.386,290,2.886,291,2.754,298,1.348,318,0.858,381,2.754,438,3.386,461,1.586,464,2.63,466,2.513,468,1.535,474,2.329,475,1.486,605,2.344,608,4.511,609,4.201,614,3.794,639,2.422,640,1.307,705,2.525,706,2.754,717,1.638,786,2.159,808,3.18,868,3.386,931,1.535,932,2.423,967,3.611,1011,2.774,1101,3.87,1189,3.386,1222,4.201,1238,3.769,1464,3.606,1466,3.606,1471,3.606,1535,3.606,1602,3.606,1702,3.606,1745,3.386,1746,3.606,1747,4.511,1751,3.386,1763,4.236,1798,3.606,1825,4.923,1826,3.606,1912,3.606,1955,4.201,1957,4.644,1958,4.644,1959,4.644,1960,4.201,1961,4.201,1963,4.644,1964,4.644,1965,4.201,1966,4.644,1967,4.644,1968,4.644,1969,4.644,1970,4.644,1971,5.159,1972,5.159,1973,5.159,1974,5.159,1975,4.644,1976,4.644,1977,4.644,1978,4.644,1979,4.644,1980,4.644,1981,4.644,1982,4.644]],["title/injectables/MediaService.html",[467,1.103,614,2.325]],["body/injectables/MediaService.html",[3,0.159,4,0.159,9,0.139,20,0.512,21,1.041,24,0.876,27,0.896,28,0.013,30,0.284,31,0.439,32,0.159,33,0.199,90,2.712,101,0.642,161,0.011,162,0.011,219,0.784,254,0.487,255,0.845,256,0.784,290,3.918,318,0.784,464,2.716,467,1.954,468,1.755,472,2.469,473,2.38,614,4.117,705,3.428,706,3.739,713,2.887,717,2.372,718,5.797,723,3.29,1238,4.207,1745,4.597,1763,5.253,1961,5.704,2333,5.311,2334,6.081]],["title/components/ModalCategoryComponent.html",[0,0.248,142,1.002]],["body/components/ModalCategoryComponent.html",[0,0.481,1,0.859,2,1.345,3,0.156,4,0.094,5,1.008,6,1.008,7,1.008,8,0.976,9,0.083,11,1.303,12,1.669,13,0.859,14,2.363,15,2.289,16,1.434,18,1.434,20,0.304,21,0.74,22,1.818,23,1.276,24,1.117,27,0.853,28,0.013,29,1.486,30,0.256,31,0.261,32,0.094,33,0.118,45,1.465,46,2.083,47,1.644,48,1.644,68,1.465,71,2.604,72,2.248,73,1.465,84,1.713,85,1.958,94,1.869,95,0.731,96,1.434,97,1.434,98,1.008,99,1.453,100,1.008,101,0.754,102,1.008,103,0.859,104,1.008,105,0.887,106,1.008,107,0.887,108,0.916,109,1.434,110,0.859,111,2.075,112,1.669,113,0.859,114,1.303,115,1.669,116,0.887,117,0.976,118,1.008,119,0.859,120,1.669,121,0.887,122,1.008,123,0.887,124,0.946,125,0.832,126,1.008,127,0.859,128,0.78,129,0.887,130,1.303,131,1.345,132,1.434,133,0.887,134,0.887,135,1.345,136,1.434,137,0.887,138,1.434,139,0.887,140,0.916,141,1.434,142,1.599,143,2.223,144,0.859,145,0.887,146,0.887,147,0.916,148,0.859,149,1.008,150,0.887,151,0.78,152,0.887,153,1.401,154,0.859,155,0.859,156,0.859,157,0.887,158,0.916,159,1.008,160,1.008,161,0.007,162,0.007,184,1.188,186,1.149,202,0.767,210,2.001,216,1.074,219,0.77,230,1.94,237,3.223,243,1.938,245,2.419,254,0.589,255,0.83,256,0.839,263,0.859,276,0.823,298,1.204,306,2.033,309,0.832,318,0.839,319,1.11,369,2.163,373,1.788,374,3.347,378,2.425,384,1.644,387,2.083,388,2.083,389,1.58,391,1.869,573,1.713,574,1.521,671,5.682,734,2.163,779,2.542,786,2.083,789,4.061,792,3.267,810,2.604,825,2.447,832,3.48,833,4.482,895,1.869,943,1.521,957,2.927,991,3.223,1028,3.267,1039,3.391,1097,3.735,1162,4.073,1166,3.735,1169,3.48,1210,5.317,1257,4.05,1260,5.561,1276,5.682,1279,1.713,1280,2.058,1281,2.058,1282,2.058,1283,1.869,1284,1.869,1285,1.644,1385,3.591,1386,4.866,1387,2.447,1389,2.297,1430,5.139,1431,2.447,1441,4.054,1443,5.139,1444,3.735,1447,2.447,1448,2.851,2270,2.851,2271,5.216,2272,4.482,2318,4.735,2323,3.735,2325,3.735,2328,4.735,2335,6.848,2336,3.608,2337,5.131,2338,5.131,2339,3.608,2340,3.608,2341,5.139,2342,3.608,2343,4.482,2344,3.608,2345,3.608,2346,3.608,2347,3.608,2348,3.608,2349,3.608,2350,3.608,2351,3.608,2352,3.608,2353,3.608,2354,3.151,2355,5.682]],["title/interfaces/PaginatedData.html",[931,1.177,1334,2.451]],["body/interfaces/PaginatedData.html",[3,0.166,4,0.166,9,0.145,20,0.535,28,0.012,32,0.205,161,0.011,162,0.011,202,1.107,254,0.594,276,1.257,298,1.295,808,2.783,931,2.264,932,2.895,1011,2.317,1316,5.023,1334,4.454,1628,5.304,1971,4.308,1972,4.308,1973,4.308,1974,4.308,2356,4.624,2357,5.02,2358,5.02,2359,5.02,2360,5.02,2361,5.02,2362,5.02,2363,3.448]],["title/interfaces/Pagination.html",[931,1.177,1628,2.596]],["body/interfaces/Pagination.html",[3,0.163,4,0.163,9,0.143,20,0.526,28,0.012,32,0.203,161,0.011,162,0.011,202,1.096,254,0.644,298,1.288,450,4.683,808,3.717,931,2.248,932,2.847,1011,2.278,1334,3.757,1628,4.671,1629,6.802,1631,6.802,1632,6.802,1971,4.237,1972,4.237,1973,4.237,1974,4.237,2356,4.547,2357,4.936,2358,4.936,2359,4.936,2360,4.936,2361,4.936,2362,4.936,2363,3.391]],["title/classes/PasswordValidation.html",[33,0.133,2364,2.967]],["body/classes/PasswordValidation.html",[3,0.13,4,0.13,9,0.114,20,0.421,21,0.922,24,0.922,27,0.923,28,0.013,30,0.197,32,0.13,33,0.163,101,0.855,117,2.013,161,0.009,162,0.009,184,1.646,194,1.677,216,1.557,219,0.825,254,0.513,255,0.889,256,0.825,263,1.19,272,7.071,277,2.802,280,4.429,298,1.337,309,1.153,310,2.573,318,0.91,475,2.198,506,3.169,717,1.971,790,2.974,814,2.589,1337,3.183,1339,6.869,1342,6.496,1343,6.46,1344,5.587,1345,5.587,1346,6.983,1347,6.496,1348,6.496,1349,6.162,1350,3.847,1351,6.162,1352,3.949,1353,4.366,1354,4.366,1356,4.366,1829,5.413,2216,5.587,2364,4.656,2365,4.366,2366,7.687,2367,7.055,2368,4.998,2369,7.437,2370,4.998,2371,7.055,2372,6.397,2373,4.998,2374,6.397,2375,6.397,2376,4.998,2377,4.998,2378,4.998,2379,4.998,2380,4.998,2381,6.397,2382,4.998,2383,6.397,2384,4.998,2385,6.397,2386,4.998]],["title/interfaces/Photo.html",[931,1.177,2363,2.212]],["body/interfaces/Photo.html",[3,0.162,4,0.162,9,0.142,20,0.522,28,0.012,32,0.203,161,0.011,162,0.011,202,1.091,254,0.655,298,1.374,808,3.399,931,2.24,932,2.824,1011,2.922,1334,3.726,1628,3.945,1971,5.434,1972,5.434,1973,5.434,1974,5.434,2356,4.509,2357,4.895,2358,4.895,2359,4.895,2360,4.895,2361,4.895,2362,4.895,2363,3.962]],["title/components/PictureSelectableComponent.html",[0,0.248,144,0.971]],["body/components/PictureSelectableComponent.html",[0,0.47,1,0.721,2,1.183,3,0.118,4,0.079,5,0.846,6,0.846,7,0.846,8,0.819,9,0.154,11,1.146,12,1.509,13,0.721,14,2.327,15,2.254,16,1.262,18,1.262,20,0.255,21,0.651,22,1.673,23,0.594,24,1.142,27,0.924,28,0.013,29,1.701,30,0.236,31,0.219,32,0.118,33,0.099,45,1.833,46,1.833,49,1.437,50,2.113,53,1.819,54,2.202,55,4.077,57,1.229,58,2.419,59,2.643,63,2.675,64,2.563,66,2.338,77,1.642,82,2.202,83,1.499,84,2.842,87,1.833,88,1.977,91,1.275,95,0.613,96,1.673,97,1.673,98,0.846,99,1.5,100,0.846,101,0.786,102,0.846,103,0.721,104,0.846,105,0.744,106,0.846,107,0.744,108,0.768,109,1.262,110,0.721,111,1.183,112,1.509,113,0.721,114,1.52,115,1.509,116,0.744,117,0.819,118,0.846,119,0.721,120,1.509,121,0.744,122,0.846,123,0.744,124,0.793,125,0.698,126,0.846,127,0.721,128,0.654,129,0.744,130,1.146,131,1.183,132,1.262,133,0.744,134,0.744,135,1.183,136,1.262,137,0.744,138,1.262,139,0.744,140,0.768,141,1.262,142,0.744,143,1.733,144,1.657,145,2.056,146,0.744,147,1.626,148,0.721,149,0.846,150,0.744,151,0.654,152,0.744,153,1.174,154,0.721,155,0.721,156,0.721,157,0.744,158,0.768,159,0.846,160,0.846,161,0.007,162,0.007,169,1.646,184,0.996,186,0.964,194,0.793,202,0.674,216,1.497,219,0.922,221,1.184,237,2.236,243,1.705,254,0.597,255,1.034,256,0.922,260,1.391,263,1.873,285,3.414,292,2.236,298,0.959,306,1.537,309,1.477,310,1.646,318,0.943,319,1.168,368,2.675,369,2.523,384,2.057,388,1.229,389,1.325,426,1.325,444,1.903,450,1.819,459,2.761,461,1.785,468,0.873,474,1.325,482,2.109,498,3.943,502,2.143,519,5.228,579,2.052,640,1.797,699,1.705,717,1.664,743,4.184,757,3.285,801,3.655,810,1.646,937,2.052,939,4.266,940,3.566,943,2.523,944,3.661,951,3.061,952,3.061,954,3.061,955,3.061,965,4.038,987,2.966,991,2.966,999,3.061,1001,4.554,1002,3.061,1003,4.342,1004,3.061,1006,3.061,1013,3.061,1014,2.052,1016,4.554,1017,3.061,1019,3.061,1020,4.059,1021,3.061,1027,3.061,1028,2.874,1029,3.061,1033,2.874,1034,2.874,1037,1.927,1038,1.927,1051,2.052,1052,2.052,1103,3.943,1162,3.83,1201,3.061,1288,2.052,1760,2.052,1823,2.052,1897,3.061,1960,4.729,2035,2.643,2231,3.943,2387,6.3,2388,5.804,2389,4.266,2390,5.399,2391,5.399,2392,4.514,2393,5.986,2394,4.514,2395,4.514,2396,3.026,2397,4.514,2398,5.399,2399,3.566,2400,4.514,2401,3.026,2402,3.026,2403,3.026,2404,4.514,2405,4.514,2406,4.514,2407,4.514,2408,4.514,2409,4.514,2410,4.514,2411,4.514,2412,4.514,2413,3.026,2414,4.514,2415,5.986,2416,5.399,2417,3.026,2418,4.514,2419,5.986,2420,4.514,2421,3.026,2422,4.514,2423,3.026,2424,3.026,2425,3.026,2426,3.026,2427,3.026,2428,3.026,2429,4.514,2430,3.026,2431,3.026,2432,3.026,2433,3.026,2434,4.514,2435,3.026,2436,3.026,2437,3.026,2438,3.026,2439,3.026,2440,3.026,2441,3.026,2442,3.026,2443,3.026,2444,3.026,2445,3.026,2446,3.026,2447,3.026,2448,3.026,2449,3.026,2450,3.026,2451,3.026,2452,3.026,2453,3.026,2454,3.026,2455,3.026,2456,3.026,2457,3.026,2458,3.026,2459,3.026]],["title/components/RegisterFormComponent.html",[0,0.248,146,1.002]],["body/components/RegisterFormComponent.html",[0,0.416,1,0.852,2,1.337,3,0.155,4,0.093,5,0.999,6,0.999,7,0.999,8,0.968,9,0.082,11,1.294,12,1.661,13,0.852,14,2.362,15,2.287,16,1.425,18,1.425,20,0.301,21,0.735,22,1.811,23,0.701,24,1.026,27,0.633,28,0.013,29,1.103,30,0.27,31,0.258,32,0.093,33,0.117,45,2.07,46,2.07,47,1.63,48,1.63,57,2.07,68,1.452,71,2.498,72,1.566,73,1.452,83,1.772,87,1.452,90,1.217,91,1.507,94,1.852,95,0.725,96,1.425,97,1.425,98,0.999,99,1.447,100,0.999,101,0.723,102,0.999,103,0.852,104,0.999,105,0.879,106,0.999,107,0.879,108,0.908,109,1.425,110,0.852,111,1.337,112,1.661,113,0.852,114,1.294,115,1.661,116,0.879,117,0.968,118,0.999,119,0.852,120,1.661,121,0.879,122,0.999,123,0.879,124,0.937,125,0.825,126,0.999,127,0.852,128,0.773,129,0.879,130,1.294,131,1.337,132,1.425,133,0.879,134,0.879,135,1.337,136,1.425,137,0.879,138,1.425,139,0.879,140,0.908,141,1.425,142,0.879,143,0.968,144,0.852,145,0.879,146,1.802,147,1.936,148,0.852,149,0.999,150,0.879,151,0.773,152,0.879,153,1.397,154,0.852,155,0.852,156,0.852,157,0.879,158,0.908,159,0.999,160,0.999,161,0.007,162,0.007,184,1.177,202,0.762,210,2.074,219,0.461,230,1.521,245,1.679,249,2.425,254,0.519,255,0.497,256,0.461,263,0.852,264,2.07,275,2.421,276,0.573,278,1.63,280,2.641,283,2.908,289,3.711,309,0.825,310,1.859,312,1.772,318,0.461,364,2.641,365,3.123,369,1.507,370,1.698,373,2.526,374,3.578,378,2.413,384,1.63,387,2.07,388,2.07,389,1.566,403,5.79,466,1.926,474,1.566,497,1.996,499,2.425,523,2.825,573,1.698,574,1.507,640,1.254,780,2.768,786,2.07,793,3.122,795,3.718,801,2.953,832,3.458,845,2.277,943,1.507,967,1.941,991,2.526,1169,2.425,1241,2.425,1279,1.698,1280,2.039,1281,2.039,1282,2.039,1283,1.852,1284,1.852,1285,1.63,1292,3.123,1336,2.603,1350,2.15,1374,4.029,1380,3.711,1385,3.573,1386,4.925,1387,4.394,1389,2.277,1409,2.603,1420,4.029,1431,2.425,1434,3.711,1447,2.425,1482,3.711,1571,3.247,1574,2.768,1925,2.425,2315,2.825,2316,5.191,2317,4.454,2318,4.716,2319,6.401,2320,3.123,2323,4.716,2325,5.183,2326,3.123,2327,4.454,2328,5.63,2329,4.454,2331,2.825,2341,2.825,2364,2.603,2460,6.401,2461,6.849,2462,5.099,2463,3.576,2464,3.576,2465,3.576,2466,3.576,2467,3.576,2468,3.576,2469,3.576,2470,3.576,2471,5.099,2472,5.942,2473,3.576,2474,4.029,2475,5.099,2476,4.029,2477,5.099,2478,5.099,2479,5.099,2480,5.099,2481,5.099,2482,3.576]],["title/components/SettingsPage.html",[0,0.248,148,0.971]],["body/components/SettingsPage.html",[0,0.443,1,0.709,2,1.17,3,0.166,4,0.078,5,0.833,6,0.833,7,0.833,8,0.806,9,0.068,11,1.133,12,1.495,13,0.709,14,2.324,15,2.25,16,1.247,18,1.247,20,0.251,21,0.917,22,1.66,23,1.165,24,0.962,27,0.664,28,0.013,29,0.965,30,0.297,31,0.215,32,0.078,33,0.097,45,2.583,46,2.891,47,2.034,48,1.358,49,2.82,50,2.614,51,2.169,52,2.211,57,2.811,58,2.02,62,3.217,63,1.476,64,2.82,66,2.771,68,2.412,69,2.119,71,2.32,72,1.955,73,1.812,83,1.476,87,3.159,88,2.343,90,2.357,91,1.256,94,1.543,95,0.604,96,1.247,97,1.247,98,0.833,99,1.327,100,0.833,101,0.731,102,0.833,103,0.709,104,0.833,105,0.733,106,0.833,107,0.733,108,0.756,109,1.247,110,0.709,111,1.17,112,1.495,113,0.709,114,1.133,115,1.495,116,0.733,117,0.806,118,0.833,119,0.709,120,1.495,121,0.733,122,0.833,123,0.733,124,0.781,125,0.687,126,0.833,127,0.709,128,0.644,129,0.733,130,1.133,131,1.17,132,1.247,133,0.733,134,0.733,135,1.17,136,1.247,137,0.733,138,1.247,139,0.733,140,0.756,141,1.247,142,0.733,143,0.806,144,0.709,145,0.733,146,0.733,147,0.756,148,1.415,149,0.833,150,1.315,151,0.644,152,0.733,153,1.614,154,1.274,155,0.709,156,0.709,157,0.733,158,0.756,159,0.833,160,0.833,161,0.009,162,0.007,186,0.949,191,1.881,193,1.014,194,1.17,202,0.667,209,2.815,210,1.823,211,3.308,214,3.308,216,1.244,219,0.69,223,2.524,225,2.522,226,1.821,227,3.453,228,3.406,229,2.54,230,1.991,231,3.051,232,3.406,233,3.894,234,3.217,235,2.438,236,4.693,237,3.152,238,4.227,239,3.38,245,1.956,250,3.043,252,2.683,254,0.594,255,0.743,256,0.69,257,2.943,258,2.034,260,1.375,268,2.422,276,0.857,286,1.617,298,1.188,302,1.881,312,1.476,313,1.897,314,1.792,318,0.939,319,1.444,328,2.343,332,2.343,338,3.628,359,3.026,364,1.543,366,2.354,368,1.476,369,1.881,370,2.54,373,1.476,375,2.602,378,2.172,381,2.311,384,1.358,387,2.172,388,1.812,389,1.305,391,1.543,461,1.771,463,2.683,506,2.65,507,5.663,527,2.119,533,1.897,557,2.354,570,2.021,573,1.415,574,1.881,579,3.026,605,2.057,614,3.808,639,1.421,699,1.685,719,3.026,727,1.955,730,3.248,731,2.583,734,1.881,751,1.519,808,1.305,810,1.627,838,3.217,839,1.897,843,1.897,845,1.897,854,3.38,943,1.256,965,1.792,981,2.311,987,2.211,988,2.311,1036,1.476,1039,2.54,1158,2.169,1161,4.324,1162,3.808,1164,3.894,1169,3.026,1238,2.211,1241,2.021,1257,2.021,1258,2.169,1259,2.354,1261,2.169,1262,2.169,1263,2.169,1279,2.119,1280,2.545,1281,1.699,1282,1.699,1283,1.543,1284,1.543,1285,1.358,1288,3.026,1327,3.897,1415,3.051,1502,3.526,1574,1.617,1816,3.406,1925,3.628,2034,3.248,2051,2.169,2154,2.354,2155,3.526,2156,3.894,2157,2.169,2158,2.354,2202,3.808,2203,4.028,2215,2.021,2258,2.354,2308,6.218,2331,2.354,2483,2.602,2484,5.349,2485,4.462,2486,5.349,2487,6.677,2488,5.188,2489,4.462,2490,4.462,2491,2.979,2492,4.462,2493,2.979,2494,2.979,2495,2.979,2496,2.169,2497,2.602,2498,2.354,2499,2.021,2500,2.602,2501,4.462,2502,2.979,2503,2.979,2504,2.979,2505,2.979,2506,2.602,2507,2.602,2508,2.602,2509,2.602,2510,2.602,2511,2.602,2512,2.602,2513,2.602,2514,2.602,2515,2.602,2516,4.672,2517,2.602,2518,4.672,2519,2.602,2520,2.979,2521,4.462,2522,4.462,2523,4.462,2524,3.248,2525,3.897,2526,2.979,2527,2.979]],["title/modules/SettingsPageModule.html",[163,1.139,2528,2.967]],["body/modules/SettingsPageModule.html",[3,0.153,4,0.153,9,0.134,28,0.013,30,0.333,31,0.424,32,0.153,33,0.191,95,1.188,148,1.948,161,0.01,162,0.01,163,1.639,165,2.066,166,2.784,167,3.927,168,3.037,169,2.138,170,2.215,175,3.659,176,2.672,177,2.381,179,2.765,180,2.765,181,4.029,182,3.183,183,4.559,184,1.93,185,3.834,186,1.867,187,3.344,210,1.442,404,3.659,405,3.183,406,3.344,407,4.029,408,3.037,409,3.037,410,3.659,411,3.734,424,3.526,425,3.037,426,2.568,427,3.344,428,3.344,527,2.784,1308,6.17,1309,5.121,2528,6.074,2529,5.121,2530,5.121,2531,5.121,2532,5.547,2533,5.863,2534,5.121]],["title/modules/SettingsPageRoutingModule.html",[163,1.139,2532,2.764]],["body/modules/SettingsPageRoutingModule.html",[0,0.39,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,148,1.773,161,0.011,162,0.011,165,2.257,170,2.42,179,2.508,180,2.914,190,3.654,191,3.317,192,4.246,193,2.182,194,1.679,195,3.042,196,3.853,2532,5.048,2534,5.596,2535,6.407]],["title/modules/SharedModule.html",[163,1.139,397,2.212]],["body/modules/SharedModule.html",[3,0.128,4,0.128,9,0.112,28,0.013,30,0.335,31,0.354,32,0.128,33,0.16,95,0.993,107,2.045,116,2.045,129,2.045,131,1.935,133,2.045,144,1.981,152,2.045,157,2.045,161,0.009,162,0.009,163,1.37,165,1.726,166,2.327,167,3.62,168,2.538,169,1.787,170,2.64,175,3.272,176,2.233,177,1.99,179,2.473,180,2.473,181,3.602,182,2.66,185,2.66,186,1.561,210,1.205,397,4.69,404,3.272,405,2.66,406,2.795,407,3.602,408,2.538,409,2.538,410,3.272,417,4.283,418,3.323,422,3.323,423,3.323,424,2.947,425,2.538,426,2.147,427,2.795,428,2.795,599,4.28,631,5.517,632,3.323,650,4.28,770,3.872,1091,3.323,1209,3.872,2045,4.28,2166,3.872,2196,3.872,2388,3.567,2536,4.28,2537,4.28,2538,4.28,2539,4.28,2540,5.525,2541,4.9,2542,4.9,2543,3.872,2544,6.989,2545,4.9,2546,4.9,2547,4.9,2548,6.316,2549,4.9,2550,4.9,2551,6.316,2552,4.9,2553,4.9,2554,3.872,2555,6.316]],["title/pipes/ShortenTextPipe.html",[745,2.02,2540,2.764]],["body/pipes/ShortenTextPipe.html",[3,0.13,4,0.13,9,0.114,11,1.267,13,1.188,21,0.719,24,0.719,27,0.922,28,0.013,30,0.197,31,0.36,32,0.13,33,0.163,101,0.744,161,0.009,162,0.009,216,1.725,219,0.643,223,2.71,254,0.4,255,0.98,256,0.643,263,2.056,296,3.529,298,1.368,302,2.693,306,2.175,309,1.714,310,2.33,318,0.824,447,3.492,475,1.786,506,3.166,512,3.651,745,3.166,746,3.942,749,5.488,750,5.581,751,2.616,756,6.865,757,5.13,764,6.157,766,6.157,767,5.581,808,3.5,1131,5.581,1517,5.581,1697,5.13,1755,4.65,1828,5.13,1924,6.164,2233,5.048,2540,4.333,2556,5.581,2557,4.358,2558,6.389,2559,8.578,2560,4.989,2561,6.389,2562,6.389,2563,8.173,2564,7.048,2565,7.048,2566,7.048,2567,6.389,2568,6.389,2569,4.989,2570,4.989]],["title/components/UpdateUserComponent.html",[0,0.248,150,1.002]],["body/components/UpdateUserComponent.html",[0,0.438,1,0.801,2,1.279,3,0.15,4,0.088,5,0.941,6,0.941,7,0.941,8,0.911,9,0.077,11,1.239,12,1.605,13,0.801,14,2.35,15,2.275,16,1.364,18,1.364,20,0.283,21,0.704,22,1.761,23,1.312,24,1.062,27,0.782,28,0.013,29,1.362,30,0.264,31,0.243,32,0.088,33,0.11,45,1.366,46,1.982,47,1.534,48,1.534,68,1.366,71,2.544,72,2.138,73,1.366,84,1.598,85,1.826,94,1.743,95,0.682,96,1.364,97,1.364,98,0.941,99,1.407,100,0.941,101,0.706,102,0.941,103,0.801,104,0.941,105,0.827,106,0.941,107,0.827,108,0.854,109,1.364,110,0.801,111,1.279,112,1.605,113,0.801,114,1.239,115,1.605,116,0.827,117,0.911,118,0.941,119,0.801,120,1.605,121,0.827,122,0.941,123,0.827,124,0.882,125,0.776,126,0.941,127,0.801,128,0.728,129,0.827,130,1.239,131,1.279,132,1.364,133,0.827,134,0.827,135,1.279,136,1.364,137,0.827,138,1.364,139,0.827,140,0.854,141,1.364,142,0.827,143,2.092,144,0.801,145,1.2,146,0.827,147,0.854,148,0.801,149,0.941,150,1.715,151,1.594,152,0.827,153,1.622,154,0.801,155,0.801,156,0.801,157,0.827,158,0.854,159,0.941,160,0.941,161,0.007,162,0.007,184,1.108,186,1.072,202,0.729,209,2.94,210,2.032,217,2.846,219,0.629,223,1.78,225,1.844,226,1.662,230,1.456,237,2.418,239,2.727,242,2.846,245,2.512,250,2.617,254,0.577,255,0.678,256,0.629,257,3.456,258,2.617,260,1.504,263,1.5,264,2.332,276,0.782,286,1.826,306,1.662,309,0.776,310,1.78,312,1.667,313,2.143,318,0.812,319,1.242,369,2.057,373,1.667,374,3.386,378,2.332,384,1.534,387,1.982,388,1.982,389,1.474,438,3.657,459,2.526,461,1.713,463,3.454,464,2.297,466,2.169,482,1.185,500,4.538,501,3.276,502,2.727,503,2.975,504,3.454,573,1.598,574,1.418,699,1.844,731,3.051,734,2.057,779,2.418,792,3.108,818,5.285,832,3.31,895,1.743,943,1.418,957,2.784,963,3.657,964,2.975,991,3.121,1039,1.598,1097,3.553,1162,3.979,1279,1.598,1280,1.919,1281,1.919,1282,1.919,1283,1.743,1284,1.743,1285,1.534,1385,3.454,1386,4.784,1387,2.282,1389,3.108,1415,1.919,1430,4.978,1431,2.282,1434,3.553,1435,4.263,1441,3.856,1443,4.978,1444,3.553,1447,2.282,1448,2.659,1571,2.143,1574,1.826,1592,2.449,1946,4.18,2293,2.659,2294,5.016,2295,4.263,2299,2.939,2318,4.585,2323,3.553,2325,4.868,2328,5.077,2341,4.978,2343,4.263,2354,2.939,2355,5.503,2399,3.856,2474,3.856,2476,3.856,2498,5.936,2499,5.095,2524,3.553,2571,5.095,2572,5.743,2573,4.881,2574,5.743,2575,3.365,2576,3.365,2577,3.365,2578,3.365,2579,3.365,2580,3.365,2581,3.365,2582,3.365,2583,3.365,2584,3.365,2585,3.365,2586,3.365,2587,3.365,2588,3.365,2589,2.939,2590,4.881,2591,3.365,2592,4.263,2593,3.856]],["title/components/UserCircleGraphicComponent.html",[0,0.248,152,1.002]],["body/components/UserCircleGraphicComponent.html",[0,0.482,1,1.012,2,1.507,3,0.15,4,0.111,5,1.188,6,1.188,7,1.188,8,1.15,9,0.097,11,1.46,12,1.821,13,1.012,14,2.393,15,2.317,16,1.607,18,1.607,20,0.358,21,0.829,22,1.951,23,1.369,24,1.006,27,0.527,28,0.013,29,0.919,30,0.275,31,0.307,32,0.111,33,0.139,58,1.605,65,2.556,71,1.55,95,1.165,96,1.607,97,1.607,98,1.188,99,1.559,100,1.188,101,0.688,102,1.188,103,1.012,104,1.188,105,1.045,106,1.188,107,1.045,108,1.079,109,1.607,110,1.012,111,1.507,112,1.821,113,1.012,114,1.46,115,1.821,116,1.045,117,1.15,118,1.188,119,1.012,120,1.821,121,1.045,122,1.188,123,1.045,124,1.114,125,0.98,126,1.188,127,1.012,128,0.919,129,1.045,130,1.46,131,2.202,132,1.607,133,1.045,134,1.045,135,1.507,136,1.607,137,1.045,138,1.607,139,1.045,140,1.079,141,1.607,142,1.045,143,1.15,144,1.012,145,1.045,146,1.045,147,1.079,148,1.012,149,1.188,150,1.045,151,0.919,152,1.716,153,1.617,154,1.012,155,1.012,156,1.012,157,1.045,158,1.079,159,1.188,160,1.188,161,0.008,162,0.008,194,1.507,202,0.859,210,1.716,211,3.724,216,1.204,219,0.548,226,2.377,227,3.121,228,3.661,229,2.73,230,2.242,231,3.279,250,2.62,254,0.522,255,0.591,256,0.548,276,1.205,314,2.556,318,0.741,319,1.243,468,1.227,469,2.106,475,1.821,497,2.251,605,2.316,639,2.223,745,2.106,786,2.334,854,2.73,871,3.899,1036,2.106,1123,3.712,1158,3.093,1164,4.742,1185,3.279,1287,4.542,2084,4.742,2167,3.358,2168,5.691,2169,5.022,2170,3.712,2172,5.022,2173,5.022,2175,5.022,2180,3.712,2181,5.022,2183,3.712,2185,3.712,2189,3.712,2191,3.712,2192,3.712,2193,3.712,2194,3.712,2195,3.712,2554,5.762,2594,6.37,2595,5.749,2596,4.25,2597,4.25,2598,4.25,2599,6.515,2600,4.25,2601,5.749,2602,6.515,2603,4.25,2604,5.749,2605,4.25,2606,4.25,2607,4.25,2608,4.25,2609,4.25,2610,4.25,2611,4.25,2612,4.25]],["title/interfaces/UserCredentials.html",[266,2.212,931,1.177]],["body/interfaces/UserCredentials.html",[3,0.162,4,0.162,9,0.142,20,0.524,28,0.012,30,0.245,32,0.203,101,0.773,145,1.531,161,0.011,162,0.011,202,1.094,254,0.587,266,3.973,275,3.886,276,0.998,280,4.028,283,3.55,286,3.973,298,1.387,312,3.084,731,2.528,895,3.224,931,2.245,932,2.837,933,3.964,1571,4.661,1574,3.973,2363,3.379,2613,4.918,2614,5.783]],["title/components/UserDataPage.html",[0,0.248,154,0.971]],["body/components/UserDataPage.html",[0,0.417,1,0.762,2,1.234,3,0.171,4,0.084,5,0.895,6,0.895,7,0.895,8,0.866,9,0.073,11,1.195,12,1.56,13,0.762,14,2.339,15,2.265,16,1.315,18,1.315,20,0.27,21,0.678,22,1.72,23,0.923,24,0.988,27,0.693,28,0.013,29,1.018,30,0.297,31,0.231,32,0.084,33,0.105,45,2.662,46,2.662,47,1.459,48,1.459,49,2.234,50,1.842,57,2.877,58,2.108,63,1.586,64,2.65,66,2.891,68,2.498,69,2.234,71,2.39,72,1.402,73,1.911,83,1.586,84,1.52,85,1.737,87,3.142,88,2.445,90,2.412,91,1.349,94,1.658,95,0.649,96,1.315,97,1.315,98,0.895,99,1.374,100,0.895,101,0.724,102,0.895,103,0.762,104,0.895,105,0.787,106,0.895,107,0.787,108,0.813,109,1.315,110,0.762,111,1.234,112,1.56,113,0.762,114,1.195,115,1.56,116,0.787,117,0.866,118,0.895,119,0.762,120,1.56,121,0.787,122,0.895,123,0.787,124,0.839,125,0.738,126,0.895,127,0.762,128,0.692,129,0.787,130,1.195,131,1.234,132,1.315,133,0.787,134,0.787,135,1.234,136,1.315,137,0.787,138,1.315,139,0.787,140,0.813,141,1.315,142,0.787,143,1.918,144,0.762,145,0.787,146,0.787,147,0.813,148,0.762,149,0.895,150,1.372,151,1.331,152,0.787,153,1.656,154,1.632,155,0.762,156,0.762,157,0.787,158,0.813,159,0.895,160,0.895,161,0.009,162,0.007,186,1.019,193,1.09,194,1.234,202,0.703,210,1.685,212,4.174,213,5.416,214,3.602,216,0.985,217,2.332,219,0.884,226,1.602,230,1.835,243,1.777,245,1.549,254,0.493,255,0.654,256,0.607,260,1.45,263,0.762,276,1.273,286,1.737,298,0.754,300,2.234,309,0.738,312,1.586,318,0.914,319,1.482,328,2.445,332,2.445,359,3.191,364,1.658,368,1.586,369,1.349,370,2.234,373,1.586,378,2.266,381,2.438,384,1.459,387,1.911,388,2.266,389,2.061,391,1.658,441,3.048,450,2.83,454,3.718,461,1.835,504,2.83,573,1.52,574,1.984,579,2.171,605,2.112,614,3.909,639,1.499,666,4.805,699,1.777,719,3.191,730,3.425,731,2.662,733,1.842,734,1.984,751,1.602,790,1.984,808,1.402,838,2.83,845,2.038,854,2.234,943,1.349,987,2.332,988,2.438,1002,2.145,1011,1.716,1036,1.586,1152,4.409,1153,3.718,1161,4.478,1162,3.509,1168,3.718,1182,5.374,1206,3.183,1238,2.332,1241,2.171,1257,2.171,1258,2.33,1259,2.529,1261,2.33,1262,2.33,1263,2.33,1279,1.52,1280,1.826,1281,1.826,1282,1.826,1283,1.658,1284,1.658,1285,1.459,1288,3.191,1343,3.718,1415,3.183,1574,1.737,1602,3.191,1681,2.33,2034,3.425,2051,2.33,2083,3.425,2121,2.529,2123,5.987,2125,2.796,2127,4.11,2129,2.796,2136,2.796,2139,2.796,2141,2.796,2153,2.796,2154,2.529,2155,3.718,2156,3.425,2157,2.33,2158,2.529,2202,3.909,2203,4.172,2215,2.171,2229,3.718,2258,2.529,2399,3.718,2488,5.374,2496,2.33,2497,2.796,2499,2.171,2500,2.796,2506,2.796,2507,2.796,2508,2.796,2509,2.796,2510,2.796,2511,2.796,2512,2.796,2513,2.796,2514,2.796,2515,2.796,2516,4.874,2517,2.796,2518,4.874,2519,2.796,2524,3.425,2525,4.11,2571,4.805,2593,3.718,2615,6.152,2616,4.706,2617,4.706,2618,3.201,2619,4.706,2620,4.706,2621,3.201,2622,4.11,2623,4.706,2624,4.706,2625,3.201,2626,6.152,2627,4.11,2628,4.11]],["title/modules/UserDataPageModule.html",[163,1.139,664,2.764]],["body/modules/UserDataPageModule.html",[3,0.143,4,0.143,9,0.125,28,0.013,30,0.337,31,0.395,32,0.143,33,0.179,95,1.109,150,1.978,151,1.184,153,1.329,154,1.916,161,0.01,162,0.01,163,1.53,165,1.928,166,2.598,167,3.81,168,2.835,169,1.996,170,2.067,175,3.508,176,2.494,177,2.222,179,2.651,180,2.651,181,3.862,182,2.97,183,4.072,184,1.802,185,3.676,186,1.743,187,3.121,210,1.346,243,2.067,276,0.877,374,2.397,397,4.367,399,4.929,404,3.508,405,2.97,406,3.121,407,3.862,408,2.835,409,2.835,410,3.508,411,3.485,412,5.351,413,4.324,414,2.711,415,5.351,416,4.324,417,4.593,418,3.711,419,5.351,420,4.324,421,3.983,424,3.291,425,2.835,426,2.397,427,3.121,428,3.121,429,4.324,664,5.726,666,3.711,1303,3.485,1306,5.915,1307,4.78,1310,4.78,2051,3.983,2164,4.78,2499,3.711,2571,3.711,2629,4.78,2630,4.78,2631,4.78,2632,5.457]],["title/modules/UserDataPageRoutingModule.html",[163,1.139,2632,2.764]],["body/modules/UserDataPageRoutingModule.html",[0,0.388,3,0.167,4,0.167,9,0.146,28,0.013,30,0.31,31,0.461,32,0.167,33,0.208,153,1.252,154,1.769,161,0.011,162,0.011,165,2.249,170,2.411,179,2.499,180,2.908,190,3.641,191,3.312,192,4.237,193,2.174,194,1.673,195,3.031,196,3.839,276,1.023,666,4.329,1303,4.065,2571,4.329,2632,5.038]],["title/interfaces/UserInfo.html",[731,1.655,931,1.177]],["body/interfaces/UserInfo.html",[3,0.155,4,0.155,9,0.136,20,0.501,28,0.013,30,0.234,32,0.199,101,0.854,145,1.944,161,0.01,162,0.01,202,1.065,254,0.665,255,1.099,266,3.229,275,3.839,276,0.954,283,3.393,286,4.388,298,1.397,312,2.948,731,2.893,895,4.096,931,2.202,932,2.712,933,3.789,1571,5.148,1574,4.388,2363,3.229,2613,4.701,2614,5.63]],["title/interfaces/UserRegisterInfo.html",[283,2.325,931,1.177]],["body/interfaces/UserRegisterInfo.html",[3,0.157,4,0.157,9,0.138,20,0.507,28,0.013,30,0.237,32,0.2,101,0.857,145,1.481,161,0.01,162,0.01,202,1.073,254,0.66,266,3.27,275,3.852,276,0.966,280,3.973,283,4.095,286,4.403,298,1.396,312,2.985,731,2.446,895,3.121,931,2.214,932,2.746,933,3.837,1571,5.166,1574,4.403,2363,3.27,2613,4.76,2614,5.673]],["title/components/UserSelectableComponent.html",[0,0.248,155,0.971]],["body/components/UserSelectableComponent.html",[0,0.481,1,0.632,2,1.072,3,0.107,4,0.069,5,0.742,6,0.742,7,0.742,8,0.719,9,0.061,11,1.038,12,1.393,13,0.632,14,2.297,15,2.224,16,1.143,18,1.143,20,0.224,21,0.589,22,1.565,23,0.802,24,1.162,27,0.944,28,0.013,29,1.661,30,0.238,31,0.192,32,0.107,33,0.087,95,0.538,96,1.143,97,1.143,98,0.742,99,1.251,100,0.742,101,0.803,102,0.742,103,0.632,104,0.742,105,0.653,106,0.742,107,0.653,108,1.038,109,1.143,110,0.632,111,1.072,112,1.393,113,0.632,114,1.422,115,1.393,116,0.653,117,0.719,118,0.742,119,0.632,120,1.393,121,0.653,122,0.742,123,0.653,124,1.744,125,0.612,126,0.742,127,0.632,128,0.574,129,0.653,130,1.038,131,1.072,132,1.143,133,0.653,134,0.653,135,1.072,136,1.143,137,0.653,138,1.143,139,0.653,140,0.674,141,1.143,142,0.653,143,0.719,144,0.632,145,0.653,146,0.653,147,1.535,148,0.632,149,0.742,150,0.653,151,0.574,152,0.653,153,1.656,154,0.632,155,1.584,156,0.632,157,0.653,158,1.931,159,0.742,160,0.742,161,0.006,162,0.006,169,1.491,184,0.874,186,0.846,194,0.696,202,0.611,210,1.005,216,1.438,219,0.958,221,1.601,226,1.697,240,3.367,243,1.544,253,1.791,254,0.634,255,1.057,256,0.958,260,1.26,263,1.911,276,0.799,278,1.863,285,3.194,298,1.024,306,2.399,309,1.473,310,2.205,318,0.991,319,1.381,327,2.219,328,3.087,332,1.163,414,2.774,426,1.163,444,1.723,459,2.806,461,1.984,482,1.44,502,2.659,503,2.901,605,2.116,639,2.244,640,1.57,655,2.604,699,1.544,705,1.941,716,2.459,717,1.968,751,2.265,779,2.026,790,2.97,793,3.032,801,2.911,810,1.491,837,4.067,854,2.367,937,1.801,939,3.939,940,3.23,943,2.805,944,3.381,945,2.976,946,4.076,947,2.976,949,2.976,950,4.076,951,2.773,952,2.773,954,2.773,955,2.773,956,3.629,957,2.332,959,3.571,961,2.706,962,3.571,963,3.175,964,2.582,965,4.403,966,2.319,967,2.219,968,2.604,969,2.976,970,4.076,971,2.976,972,4.648,974,4.076,975,4.13,977,2.976,978,5.329,980,2.976,981,2.118,982,4.401,983,2.976,985,2.332,987,3.164,988,2.118,991,2.774,992,2.976,993,2.976,995,2.976,996,2.976,997,2.319,998,2.976,999,2.773,1001,4.374,1002,2.552,1003,4.1,1004,2.773,1006,2.773,1008,4.843,1009,2.319,1010,2.976,1011,2.426,1012,2.976,1013,2.773,1014,1.801,1016,3.381,1017,2.773,1019,2.773,1020,3.797,1021,2.773,1022,2.319,1023,2.319,1024,2.319,1025,2.319,1026,2.319,1027,2.773,1028,2.604,1029,2.773,1032,2.319,1033,2.604,1034,2.604,1036,1.316,1037,1.691,1038,1.691,1039,1.261,1041,1.597,1044,1.597,1045,1.597,1046,1.801,1051,1.801,1052,1.801,1053,1.933,1054,1.933,1055,1.933,1056,1.933,1058,2.976,1059,1.933,1060,1.933,2048,5.889,2201,2.098,2202,3.917,2203,4.1,2215,1.801,2274,2.773,2633,5.889,2634,3.939,2635,4.355,2636,3.571,2637,2.655,2638,2.655,2639,2.655,2640,2.655,2641,2.655,2642,2.655,2643,3.571,2644,2.655,2645,2.655,2646,2.655,2647,3.571,2648,2.655,2649,2.655,2650,2.319,2651,2.319,2652,2.319,2653,2.098,2654,2.319,2655,4.355,2656,2.319,2657,2.319,2658,2.319,2659,2.319,2660,3.23,2661,3.571]],["title/components/UserSelectableMobileComponent.html",[0,0.248,156,0.971]],["body/components/UserSelectableMobileComponent.html",[0,0.479,1,0.616,2,1.05,3,0.105,4,0.067,5,0.723,6,0.723,7,0.723,8,0.7,9,0.059,11,1.017,12,1.37,13,0.616,14,2.29,15,2.218,16,1.119,18,1.119,20,0.218,21,0.577,22,1.543,23,0.786,24,1.158,27,0.939,28,0.013,29,1.652,30,0.235,31,0.187,32,0.105,33,0.084,95,0.524,96,1.119,97,1.119,98,0.723,99,1.233,100,0.723,101,0.799,102,0.723,103,0.616,104,0.723,105,0.636,106,0.723,107,0.636,108,1.017,109,1.119,110,0.616,111,1.05,112,1.37,113,0.616,114,2.162,115,1.37,116,0.636,117,0.7,118,0.723,119,0.616,120,1.37,121,0.636,122,0.723,123,0.636,124,1.727,125,0.596,126,0.723,127,0.616,128,0.559,129,0.636,130,1.017,131,1.05,132,1.119,133,0.636,134,0.636,135,1.05,136,1.119,137,0.636,138,1.119,139,0.636,140,0.656,141,1.119,142,0.636,143,0.7,144,0.616,145,0.636,146,0.636,147,1.516,148,0.616,149,0.723,150,0.636,151,0.559,152,0.636,153,1.653,154,0.616,155,1.167,156,1.422,157,0.636,158,1.921,159,0.723,160,0.723,161,0.006,162,0.006,169,1.46,184,0.851,186,0.823,194,0.678,202,0.598,210,0.985,216,1.426,219,0.952,221,1.568,226,1.669,240,3.319,243,1.512,253,1.754,254,0.631,255,1.051,256,0.952,260,1.234,263,1.904,276,0.786,278,1.825,285,3.148,298,1.013,306,2.38,309,1.457,310,2.178,318,0.985,319,1.366,327,2.174,328,3.062,332,1.132,414,2.735,426,1.132,444,1.688,459,2.789,461,1.965,482,1.411,502,2.621,503,2.859,605,2.098,639,2.226,640,1.553,655,2.55,699,1.512,705,1.901,716,2.408,717,1.946,751,2.243,779,1.984,790,2.946,793,3.003,801,2.879,810,1.46,837,4.023,854,2.327,943,2.777,944,3.324,945,2.915,946,4.018,947,2.915,949,2.915,950,4.018,951,2.716,952,2.716,954,2.716,955,2.716,956,3.568,957,2.284,961,2.661,963,3.121,964,2.539,965,4.373,967,2.174,968,2.55,969,2.915,970,4.018,971,2.915,972,4.598,974,4.018,975,4.094,977,2.915,978,5.293,980,2.915,981,2.074,982,4.347,983,2.915,985,2.284,987,3.13,988,2.074,991,2.735,992,2.915,993,2.915,995,2.915,996,2.915,998,2.915,999,2.716,1001,4.336,1002,2.516,1003,4.05,1004,2.716,1006,2.716,1008,4.796,1010,2.915,1011,2.403,1012,2.915,1013,2.716,1014,1.753,1016,3.324,1017,2.716,1019,2.716,1020,3.744,1021,2.716,1027,2.716,1028,2.55,1029,2.716,1033,2.55,1034,2.55,1036,1.281,1037,1.646,1038,1.646,1039,1.227,1041,1.554,1044,1.554,1045,1.554,1046,1.753,1051,1.753,1052,1.753,1053,1.881,1054,1.881,1055,1.881,1056,1.881,1058,2.915,1059,1.881,1060,1.881,1064,1.753,1066,2.716,1067,3.873,1068,3.164,1069,3.498,1070,3.498,1071,2.258,1079,2.258,1082,2.258,1085,2.258,1086,2.258,1087,2.258,1088,2.258,1089,2.258,2052,5.869,2201,2.042,2202,3.883,2203,4.05,2215,1.753,2274,2.716,2633,5.869,2635,4.281,2636,3.498,2643,3.498,2647,3.498,2650,2.258,2651,2.258,2652,2.258,2653,2.042,2654,2.258,2655,4.281,2656,2.258,2657,2.258,2658,2.258,2659,2.258,2660,3.164,2661,3.498,2662,3.873,2663,2.585,2664,2.585,2665,2.585,2666,2.585,2667,2.585,2668,2.585,2669,2.585,2670,2.585,2671,2.585,2672,2.585,2673,2.585]],["title/components/UsersInfoComponent.html",[0,0.248,157,1.002]],["body/components/UsersInfoComponent.html",[0,0.42,1,0.705,2,1.663,3,0.166,4,0.077,5,0.828,6,0.828,7,0.828,8,0.801,9,0.068,11,1.127,12,1.49,13,0.705,14,2.322,15,2.249,16,1.241,18,1.241,20,0.249,21,0.64,22,1.655,23,1.426,24,1.067,27,0.735,28,0.013,29,1.281,30,0.262,31,0.214,32,0.077,33,0.218,52,2.641,53,1.781,54,2.155,57,2.164,61,2.008,66,1.534,68,1.202,69,3.012,71,1.62,72,1.945,73,1.202,77,1.607,84,3.012,87,2.951,88,1.297,90,1.512,91,1.872,95,0.6,96,1.241,97,1.241,98,0.828,99,1.323,100,0.828,101,0.729,102,0.828,103,0.705,104,0.828,105,0.728,106,0.828,107,0.728,108,0.752,109,1.241,110,0.705,111,1.164,112,1.49,113,0.705,114,1.127,115,1.49,116,0.728,117,0.801,118,0.828,119,0.705,120,1.49,121,0.728,122,0.828,123,0.728,124,0.776,125,0.683,126,0.828,127,0.705,128,0.64,129,0.728,130,1.127,131,1.164,132,1.241,133,0.728,134,0.728,135,1.164,136,1.241,137,0.728,138,1.241,139,0.728,140,0.752,141,1.241,142,0.728,143,0.801,144,0.705,145,0.728,146,0.728,147,0.752,148,0.705,149,0.828,150,0.728,151,0.64,152,0.728,153,1.559,154,0.705,155,0.705,156,0.705,157,1.456,158,1.973,159,0.828,160,0.828,161,0.006,162,0.006,193,1.008,202,0.664,209,2.808,210,1.966,214,3.814,216,0.93,217,2.641,219,0.818,223,2.429,225,1.677,226,1.512,230,1.324,235,2.429,239,3.163,243,2.013,245,1.462,249,3.614,250,2.429,254,0.61,255,0.882,256,0.818,257,3.301,258,2.891,263,1.511,264,2.951,268,2.411,276,0.854,277,1.945,296,2.109,298,1.017,302,2.496,306,2.016,309,1.024,312,1.467,313,1.885,318,0.859,319,1.441,364,2.301,378,1.202,385,3.233,387,2.164,388,1.202,389,1.297,390,2.008,391,1.534,438,3.394,447,2.2,459,2.609,461,1.324,463,3.205,464,2.393,466,2.396,468,0.855,469,1.467,482,1.565,499,4.303,500,4.211,501,3.04,502,2.53,503,2.761,504,3.205,524,4.655,533,2.828,558,2.008,570,3.012,573,1.406,574,1.248,605,2.281,639,1.886,640,0.728,704,4.04,723,2.024,727,1.945,731,2.164,733,2.086,745,1.467,751,2.352,771,2.155,772,4.211,773,3.509,774,4.211,775,3.509,778,3.509,779,2.2,780,2.411,783,3.509,784,3.509,788,5.013,790,2.808,791,2.586,792,2.828,793,2.699,795,3.214,797,4.016,798,2.586,800,2.339,801,3.425,802,2.339,804,4.211,805,5.013,806,5.263,807,3.509,808,2.779,810,1.62,811,2.828,820,3.509,821,2.155,822,3.509,824,2.339,826,2.339,829,2.339,830,2.339,832,3.012,837,3.394,838,1.781,839,1.885,840,2.008,841,3.879,842,3.879,843,2.828,845,1.885,846,2.586,985,2.533,987,2.2,988,2.301,1011,1.62,1036,1.467,1206,2.533,1592,2.155,1602,3.012,2212,3.879,2229,4.679,2233,5.848,2251,3.509,2252,4.211,2274,3.614,2474,3.509,2476,3.509,2524,4.31,2543,5.938,2589,2.586,2592,3.879,2593,4.679,2627,5.172,2628,5.172,2653,2.339,2660,3.509,2674,6.565,2675,4.441,2676,2.961,2677,4.441,2678,4.441,2679,2.961,2680,4.441,2681,2.961,2682,2.961,2683,2.961,2684,4.441,2685,2.961,2686,2.961,2687,2.961,2688,2.961,2689,2.961,2690,2.961]],["title/injectables/UsersService.html",[467,1.103,2202,2.325]],["body/injectables/UsersService.html",[0,0.416,3,0.16,4,0.123,9,0.107,20,0.395,21,0.885,23,1.545,24,0.987,27,0.901,28,0.013,29,1.015,30,0.297,31,0.339,32,0.123,33,0.257,101,0.816,153,1.612,161,0.009,162,0.009,199,3.716,209,3.061,216,1.673,219,0.883,223,2.82,230,2.349,231,3.905,242,3.392,245,2.594,249,4.643,254,0.631,255,0.951,256,0.883,257,3.392,258,2.799,260,1.893,264,2.494,268,3.334,275,3.251,276,1.164,279,4.36,291,3.546,292,3.734,295,5.409,298,1.208,300,3.741,302,2.589,318,0.883,319,1.571,464,2.594,467,1.663,468,1.355,469,2.326,472,1.906,473,1.838,475,1.717,497,2.405,512,3.182,604,3.709,605,2.592,639,1.956,713,2.229,719,5.244,727,2.691,731,3.245,733,2.405,734,2.886,744,2.989,751,2.091,852,3.709,868,2.989,873,3.709,1011,2.24,1206,4.299,1502,5.409,1592,3.417,1710,4.471,1816,3.911,1868,4.983,2202,3.503,2251,5.955,2252,5.955,2253,5.98,2254,5.98,2255,5.98,2262,4.101,2691,4.101,2692,7.262,2693,4.695,2694,6.142,2695,4.695,2696,6.142,2697,6.142,2698,4.695,2699,4.695,2700,4.695,2701,4.695,2702,4.695]],["title/coverage.html",[2703,4.881]],["body/coverage.html",[0,0.517,1,0.963,9,0.093,10,3.532,28,0.013,33,0.234,58,3.207,88,2.434,90,1.377,103,0.963,105,0.994,107,0.994,110,0.963,113,0.963,114,1.961,116,0.994,119,0.963,121,0.994,123,0.994,125,0.933,127,0.963,129,0.994,131,1.792,133,0.994,134,0.994,137,0.994,139,0.994,142,0.994,144,0.963,146,0.994,148,0.963,150,0.994,152,0.994,154,0.963,155,0.963,156,0.963,157,0.994,161,0.008,162,0.008,197,3.532,209,1.705,211,2.004,216,1.501,254,0.324,266,2.195,283,2.306,312,3.146,401,3.195,403,3.195,410,2.095,432,4.391,433,2.943,435,3.532,467,2.186,483,3.532,495,2.943,587,2.742,589,5.017,602,2.943,605,1.246,608,2.742,610,2.943,612,3.195,614,2.306,616,4.391,618,2.742,620,2.742,635,3.195,640,0.994,645,3.195,648,3.195,652,2.575,661,2.943,666,2.742,675,2.742,695,3.532,714,3.532,731,1.642,745,2.754,747,3.532,748,3.532,769,3.532,770,3.195,771,4.622,789,2.095,825,2.742,838,2.432,847,2.575,848,3.532,931,2.332,933,4.564,935,4.976,936,4.045,937,5.022,938,3.195,1063,4.045,1064,4.86,1065,3.195,1090,2.943,1091,2.742,1092,3.532,1116,3.532,1149,3.532,1210,2.742,1290,6.26,1312,3.532,1334,2.432,1336,2.943,1338,3.532,1361,3.532,1371,2.575,1428,3.532,1429,2.943,1450,3.532,1464,4.637,1465,3.532,1533,2.575,1595,3.195,1596,3.532,1628,2.575,1647,2.742,1648,4.976,1682,2.742,1816,2.575,1955,4.391,1983,3.532,1987,2.432,2007,2.742,2048,4.045,2049,3.195,2050,3.195,2052,4.045,2054,4.391,2055,3.532,2085,3.532,2120,2.943,2121,4.391,2126,2.943,2156,4.622,2165,4.391,2166,3.195,2167,4.391,2196,3.195,2202,2.306,2247,3.532,2269,4.391,2270,4.391,2293,4.391,2303,3.532,2314,3.532,2315,4.391,2333,3.532,2335,3.532,2356,4.622,2363,2.195,2364,2.943,2365,3.532,2387,4.391,2388,4.045,2389,3.195,2460,3.532,2483,3.532,2496,2.943,2498,3.195,2499,2.742,2540,2.742,2543,3.195,2554,3.195,2556,3.532,2557,3.532,2571,3.769,2594,3.532,2633,4.976,2634,3.195,2662,3.195,2674,3.532,2691,3.532,2703,3.532,2704,4.044,2705,4.044,2706,3.532,2707,7.726,2708,8.133,2709,4.044,2710,4.044,2711,7.405,2712,6.35,2713,6.35,2714,3.532,2715,5.557,2716,6.35,2717,7.167,2718,4.044,2719,4.044,2720,4.044,2721,4.044,2722,5.557,2723,6.35,2724,5.557,2725,4.044,2726,4.044,2727,4.044,2728,4.044,2729,4.044,2730,4.044,2731,4.044,2732,5.557,2733,4.044,2734,4.044,2735,4.044,2736,4.044,2737,4.044,2738,4.044,2739,4.044,2740,4.044,2741,5.557,2742,5.557,2743,4.044,2744,5.557,2745,3.532,2746,4.044,2747,4.044,2748,4.044,2749,4.044,2750,4.044,2751,4.044,2752,4.044,2753,6.837,2754,6.837,2755,6.35,2756,6.35,2757,4.044,2758,4.044,2759,4.044,2760,5.557,2761,5.557,2762,5.557,2763,5.557,2764,4.044,2765,4.044,2766,4.044,2767,4.044,2768,4.044,2769,3.532,2770,3.532,2771,4.044,2772,4.044]],["title/dependencies.html",[166,2.331,2773,2.963]],["body/dependencies.html",[28,0.013,31,0.428,80,5.173,161,0.01,162,0.01,166,2.812,182,3.215,184,1.95,186,1.886,193,2.017,317,4.017,408,3.944,409,3.068,425,3.068,468,1.71,570,4.017,591,6.207,592,5.173,624,6.207,625,5.173,626,5.173,639,1.886,2774,5.923,2775,8.36,2776,5.923,2777,7.107,2778,5.923,2779,5.923,2780,5.923,2781,5.923,2782,7.107,2783,5.923,2784,7.614,2785,5.923,2786,5.923,2787,5.923,2788,5.923,2789,5.923,2790,5.923,2791,6.207,2792,5.923,2793,7.107,2794,5.923,2795,7.107,2796,5.923,2797,5.923,2798,5.923,2799,5.923,2800,5.923,2801,5.923,2802,5.923,2803,5.923,2804,5.923,2805,5.923,2806,5.923,2807,5.923,2808,5.923,2809,5.923,2810,5.923,2811,5.923,2812,5.923,2813,5.923,2814,5.923,2815,5.923]],["title/miscellaneous/functions.html",[2816,2.469,2817,4.288]],["body/miscellaneous/functions.html",[20,0.481,28,0.012,101,0.844,161,0.01,162,0.01,216,1.723,219,1.031,223,2.733,225,2.157,227,3.773,229,2.711,232,3.636,254,0.641,255,1.111,256,0.897,260,1.76,276,1.25,277,3.283,279,3.636,296,2.711,298,1.331,302,2.407,404,4.141,410,3.601,425,2.958,441,3.713,589,4.512,605,2.403,635,5.493,639,2.484,645,5.493,648,5.493,655,4.427,707,3.636,857,3.434,1001,5.09,1046,3.873,1186,4.988,1188,4.714,1238,3.864,1271,3.1,1471,3.873,1482,4.156,1751,3.636,1803,4.156,1823,3.873,1897,3.873,1965,5.493,2061,5.493,2072,4.512,2496,5.819,2622,6.072,2714,4.988,2745,4.988,2816,4.156,2817,4.988,2818,7.494,2819,5.71,2820,5.71,2821,5.71,2822,5.71,2823,5.71,2824,5.71,2825,5.71,2826,6.951,2827,5.71,2828,5.71,2829,5.71,2830,5.71,2831,5.71]],["title/interfaces/incidentInfo.html",[931,1.177,1987,2.451]],["body/interfaces/incidentInfo.html",[3,0.156,4,0.156,9,0.136,20,0.502,28,0.013,30,0.281,32,0.156,161,0.01,162,0.01,202,1.066,254,0.675,256,1.021,276,0.956,298,1.379,381,4.099,459,3.102,895,4.099,931,1.722,932,2.718,933,3.797,1206,4.513,1390,5.367,1392,5.76,1394,5.367,1667,4.341,1769,5.367,1987,4.291,2007,4.044,2223,6.912,2363,4.295,2832,7.914]],["title/index.html",[20,0.343,2833,3.56]],["body/index.html",[1,1.61,2,1.199,28,0.013,95,0.928,103,1.61,105,1.925,107,1.925,110,1.61,113,1.61,116,1.925,119,1.61,121,1.662,123,1.662,125,1.559,127,1.61,129,1.925,133,1.925,134,1.662,137,1.662,139,1.662,142,1.662,144,1.864,146,1.662,148,1.61,150,1.662,152,1.925,154,1.61,155,1.61,156,1.61,157,1.925,161,0.009,162,0.009,163,1.279,164,5.588,165,1.612,166,2.173,167,2.37,168,2.37,169,1.669,170,1.728,171,3.997,172,3.997,173,3.997,174,4.585,175,3.129,176,2.085,177,1.858,191,1.929,391,2.37,392,5.995,393,3.997,394,3.997,395,3.997,396,4.585,397,4.687,434,3.616,582,5.955,583,3.997,584,3.997,585,3.997,586,3.997,587,4.585,588,4.585,664,5.505,713,2.173,746,3.616,932,2.085,1297,5.995,1298,3.997,1299,3.997,1300,3.997,1301,4.585,1337,2.914,1415,3.445,2038,6.221,2039,3.997,2040,3.997,2041,3.997,2042,4.585,2159,5.588,2160,3.997,2161,3.997,2162,3.997,2163,4.585,2528,5.588,2529,3.997,2530,3.997,2531,3.997,2532,4.585,2536,3.997,2537,3.997,2538,3.997,2539,3.997,2540,4.876,2629,3.997,2630,3.997,2631,3.997,2632,4.585,2833,3.997,2834,4.576,2835,4.576,2836,6.04,2837,4.576]],["title/modules.html",[165,1.968]],["body/modules.html",[28,0.011,161,0.011,162,0.011,164,4.483,165,2.17,174,4.177,392,4.483,396,4.177,397,3.343,582,4.483,588,4.177,592,6.162,664,4.177,1237,5.708,1297,4.483,1301,4.177,2038,4.483,2042,4.177,2159,4.483,2163,4.177,2528,4.483,2532,4.177,2632,4.177,2791,7.395,2838,8.466,2839,8.657,2840,8.417]],["title/properties.html",[202,0.733,2773,2.963]],["body/properties.html",[28,0.012,125,1.534,161,0.011,162,0.011,202,0.994,256,0.858,2841,6.65,2842,6.65,2843,7.606,2844,6.65,2845,6.65,2846,6.65,2847,6.65]],["title/routes.html",[191,2.355]],["body/routes.html",[28,0.011,161,0.011,162,0.011,191,2.854]],["title/miscellaneous/variables.html",[2816,2.469,2848,4.288]],["body/miscellaneous/variables.html",[20,0.447,28,0.013,34,6.977,110,1.265,113,1.265,114,2.028,144,1.265,155,1.265,156,1.265,161,0.01,162,0.01,254,0.657,263,1.951,277,2.912,309,1.89,310,2.913,426,3.43,482,1.871,616,6.008,652,4.233,935,4.839,936,3.866,937,5.417,938,5.253,1033,4.986,1034,4.986,1037,4.986,1038,4.986,1063,3.866,1064,5.157,1065,5.253,1699,4.839,1703,4.839,1704,4.839,1705,4.839,1706,4.839,1707,4.839,1708,5.282,1709,4.839,2048,3.866,2052,3.866,2083,3.866,2119,4.64,2387,4.197,2388,3.866,2389,5.253,2633,4.839,2634,5.253,2662,5.253,2706,5.807,2769,4.64,2770,4.64,2816,3.866,2848,4.64,2849,6.648,2850,5.312,2851,5.312,2852,5.312,2853,6.648,2854,5.312,2855,5.312,2856,5.312,2857,5.312,2858,5.312,2859,5.312,2860,5.312,2861,6.648,2862,6.648,2863,6.648,2864,6.648,2865,6.648,2866,6.648,2867,6.648,2868,6.648,2869,6.648,2870,6.648]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":58,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2842,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":2815,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":846,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["0.24",{"_index":1419,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["0.25",{"_index":1295,"title":{},"body":{"components/DataPage.html":{}}}],["0.5rem",{"_index":386,"title":{},"body":{"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["0.8em",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2708,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2719,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2736,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2717,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2718,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2716,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2721,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2720,"title":{},"body":{"coverage.html":{}}}],["0f212d",{"_index":72,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["0px",{"_index":1293,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["1",{"_index":65,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["1.6rem",{"_index":2158,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["1/1",{"_index":2715,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2741,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2743,"title":{},"body":{"coverage.html":{}}}],["10.10.0",{"_index":2803,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":2738,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":88,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["100px",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":83,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["11.0.2",{"_index":2806,"title":{},"body":{"dependencies.html":{}}}],["11/17",{"_index":2768,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2836,"title":{},"body":{"index.html":{}}}],["12/14",{"_index":2750,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2566,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["15.0.0",{"_index":2798,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1416,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["16px",{"_index":1423,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["17",{"_index":2834,"title":{},"body":{"index.html":{}}}],["17.0.2",{"_index":2775,"title":{},"body":{"dependencies.html":{}}}],["17.13.0",{"_index":2810,"title":{},"body":{"dependencies.html":{}}}],["17.3.3",{"_index":2777,"title":{},"body":{"dependencies.html":{}}}],["19/23",{"_index":2754,"title":{},"body":{"coverage.html":{}}}],["190px",{"_index":2241,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["1:770666336001:web:96e7751d6f04cea0b39500",{"_index":2868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b3e56",{"_index":1282,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["1px",{"_index":569,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["2",{"_index":1415,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"index.html":{}}}],["2.0.4",{"_index":2797,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2813,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":2712,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2713,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2747,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2749,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":2454,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["20px",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{}}}],["22/37",{"_index":2735,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":2837,"title":{},"body":{"index.html":{}}}],["24px",{"_index":1291,"title":{},"body":{"components/DataPage.html":{}}}],["250px",{"_index":1253,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["27",{"_index":2835,"title":{},"body":{"index.html":{}}}],["28",{"_index":2748,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":2244,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["2px",{"_index":843,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["2rem",{"_index":2157,"title":{},"body":{"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["3",{"_index":839,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["3/4",{"_index":2724,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2729,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2761,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":365,"title":{},"body":{"components/AccessPage.html":{},"components/RegisterFormComponent.html":{}}}],["300px",{"_index":1288,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["30px",{"_index":76,"title":{},"body":{"components/AboutPage.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["33",{"_index":2742,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":2332,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["36a2eb",{"_index":2187,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["4",{"_index":2513,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["4.4.3",{"_index":2802,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":2722,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2763,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":2744,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2156,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["40px",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["42",{"_index":2760,"title":{},"body":{"coverage.html":{}}}],["42a5f5",{"_index":2608,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["49",{"_index":2154,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["495057",{"_index":2195,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["4px",{"_index":1280,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["5",{"_index":391,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["5.0.7",{"_index":2784,"title":{},"body":{"dependencies.html":{}}}],["5.0.8",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["5.12.2",{"_index":2805,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":2808,"title":{},"body":{"dependencies.html":{}}}],["5.7.4",{"_index":2782,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":2725,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2727,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2752,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1290,"title":{},"body":{"components/DataPage.html":{},"coverage.html":{}}}],["50px",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/SettingsPage.html":{}}}],["55",{"_index":2751,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":2762,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":2730,"title":{},"body":{"coverage.html":{}}}],["59",{"_index":2734,"title":{},"body":{"coverage.html":{}}}],["5rem",{"_index":93,"title":{},"body":{"components/AboutPage.html":{}}}],["6",{"_index":2567,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["6.5.2",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":2733,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":2746,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2728,"title":{},"body":{"coverage.html":{}}}],["6000",{"_index":361,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["600px",{"_index":92,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["60px",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["61",{"_index":2765,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":2709,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":2767,"title":{},"body":{"coverage.html":{}}}],["64b5f6",{"_index":2610,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["66",{"_index":2711,"title":{},"body":{"coverage.html":{}}}],["66bb6a",{"_index":2609,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["7.0.0",{"_index":2795,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2811,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":2710,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":2731,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2740,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2759,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":375,"title":{},"body":{"components/AccessPage.html":{},"components/SettingsPage.html":{}}}],["700px",{"_index":390,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/UsersInfoComponent.html":{}}}],["71",{"_index":1418,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["72",{"_index":2755,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2723,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2758,"title":{},"body":{"coverage.html":{}}}],["770666336001",{"_index":2867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["777777",{"_index":1284,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["8",{"_index":1241,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["8.0.0",{"_index":2800,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":2757,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":2756,"title":{},"body":{"coverage.html":{}}}],["8/13",{"_index":2766,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":838,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["80px",{"_index":1296,"title":{},"body":{"components/DataPage.html":{}}}],["80vh",{"_index":2459,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["81c784",{"_index":2611,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["82",{"_index":2753,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2726,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2732,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":1426,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["86.3vh",{"_index":56,"title":{},"body":{"components/AboutPage.html":{}}}],["87",{"_index":2739,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":1278,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["9",{"_index":1359,"title":{},"body":{"classes/EmailValidation.html":{}}}],["9._",{"_index":1358,"title":{},"body":{"classes/EmailValidation.html":{}}}],["9/12",{"_index":2764,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2737,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":74,"title":{},"body":{"components/AboutPage.html":{}}}],["900px",{"_index":845,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentDataPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["90px",{"_index":70,"title":{},"body":{"components/AboutPage.html":{}}}],["95",{"_index":1427,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{}}}],["_",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["__forms",{"_index":367,"title":{},"body":{"components/AccessPage.html":{}}}],["__image",{"_index":376,"title":{},"body":{"components/AccessPage.html":{}}}],["__status",{"_index":2243,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["__title",{"_index":2242,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["_app",{"_index":1683,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_auth",{"_index":1685,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{}}}],["_categories",{"_index":1693,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_category",{"_index":1031,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["_categoryservice",{"_index":1159,"title":{},"body":{"components/DataPage.html":{}}}],["_data",{"_index":324,"title":{},"body":{"components/AccessPage.html":{}}}],["_data.role",{"_index":325,"title":{},"body":{"components/AccessPage.html":{}}}],["_db",{"_index":1684,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_firebaseservice",{"_index":1164,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["_firebasesvc",{"_index":2615,"title":{},"body":{"components/UserDataPage.html":{}}}],["_headers",{"_index":2115,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["_headers.set('accept",{"_index":2117,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["_incidents",{"_index":1691,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_info",{"_index":1559,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["_info.uuid",{"_index":1560,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["_islogged",{"_index":1687,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_item",{"_index":2273,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["_language",{"_index":1117,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["_logged",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["_picture",{"_index":2390,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["_router",{"_index":2488,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["_user",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["_users",{"_index":1689,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_webstorage",{"_index":1686,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["a4ef9",{"_index":2865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a4ef9.appspot.com",{"_index":2866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a4ef9.firebaseapp.com",{"_index":2864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["about'},{'name",{"_index":102,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["about.page",{"_index":188,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{}}}],["about.page.html",{"_index":19,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":164,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["aboutpageroutingmodule",{"_index":174,"title":{"modules/AboutPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["absolute",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["abstract",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/MediaService.html":{}}}],["abstractcontrol",{"_index":1349,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["acc",{"_index":2180,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["acc[categoryname",{"_index":2179,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["acc[user.role",{"_index":2601,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["access",{"_index":199,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["access'},{'name",{"_index":104,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["access.page",{"_index":400,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{}}}],["access.page.html",{"_index":201,"title":{},"body":{"components/AccessPage.html":{}}}],["access.page.scss",{"_index":200,"title":{},"body":{"components/AccessPage.html":{}}}],["access.tologin",{"_index":363,"title":{},"body":{"components/AccessPage.html":{}}}],["access.toregister",{"_index":362,"title":{},"body":{"components/AccessPage.html":{}}}],["access.webp",{"_index":383,"title":{},"body":{"components/AccessPage.html":{}}}],["access__forms",{"_index":371,"title":{},"body":{"components/AccessPage.html":{}}}],["access__image",{"_index":2482,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["accessors",{"_index":957,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["accesspage",{"_index":103,"title":{"components/AccessPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["accesspagemodule",{"_index":392,"title":{"modules/AccessPageModule.html":{}},"body":{"modules/AccessPageModule.html":{},"index.html":{},"modules.html":{}}}],["accesspageroutingmodule",{"_index":396,"title":{"modules/AccessPageRoutingModule.html":{}},"body":{"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["according",{"_index":2374,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["accordingly",{"_index":704,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["accordionmodule",{"_index":1308,"title":{},"body":{"modules/DataPageModule.html":{},"modules/SettingsPageModule.html":{}}}],["account",{"_index":1914,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["action",{"_index":1441,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["actions",{"_index":844,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["activated",{"_index":451,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":213,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["activatedroutesnapshot",{"_index":443,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["actual_component",{"_index":160,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["actualizada",{"_index":900,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["actualizar",{"_index":926,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["add",{"_index":1801,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adddoc",{"_index":1655,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adddoc(collectionref",{"_index":1808,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adding",{"_index":1131,"title":{},"body":{"injectables/CustomTranslateService.html":{},"pipes/ShortenTextPipe.html":{}}}],["additional",{"_index":1515,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["address",{"_index":1913,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adds",{"_index":755,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["admin",{"_index":448,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/CategoryInfo.html":{}}}],["adminguard",{"_index":433,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminid",{"_index":934,"title":{},"body":{"interfaces/CategoryInfo.html":{}}}],["against",{"_index":1858,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["age",{"_index":1947,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["aizasydongue6cpcz6vkkf",{"_index":2862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":904,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["align",{"_index":63,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["alldata",{"_index":1735,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldata[collectionname",{"_index":1739,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldocs",{"_index":1835,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldocs.docs.filter((doc",{"_index":1838,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["allowed",{"_index":1285,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["allowing",{"_index":1802,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["allows",{"_index":249,"title":{},"body":{"components/AccessPage.html":{},"injectables/IncidentsService.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["already",{"_index":341,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["androidscheme",{"_index":2859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":243,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["angular's",{"_index":2253,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["angular/animations",{"_index":2774,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2776,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":405,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/compiler",{"_index":2778,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":184,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"modules/DataPageModule.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"modules/SettingsPageModule.html":{},"components/UpdateUserComponent.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2779,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":418,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/checkbox",{"_index":2047,"title":{},"body":{"modules/HomePageModule.html":{}}}],["angular/material/dialog",{"_index":632,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":413,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/icon",{"_index":420,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/input",{"_index":416,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/select",{"_index":1307,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/tabs",{"_index":1305,"title":{},"body":{"modules/DataPageModule.html":{}}}],["angular/platform",{"_index":591,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":193,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UsersInfoComponent.html":{},"dependencies.html":{}}}],["anonymously",{"_index":1890,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["api",{"_index":1029,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["apikey",{"_index":1703,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["app.component",{"_index":598,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":105,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["append",{"_index":2565,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["appends",{"_index":762,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["appid",{"_index":1708,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":239,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["application/pdf",{"_index":1758,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["application/x",{"_index":2118,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["applies",{"_index":1383,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{}}}],["apply",{"_index":1425,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{}}}],["applying",{"_index":2004,"title":{},"body":{"components/HomePage.html":{}}}],["appmodule",{"_index":582,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appname",{"_index":2856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":588,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["argument",{"_index":2831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arguments",{"_index":800,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["around",{"_index":2526,"title":{},"body":{"components/SettingsPage.html":{}}}],["array",{"_index":1825,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["arrays",{"_index":1734,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["asociadas",{"_index":919,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["assigns",{"_index":2677,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["associated",{"_index":246,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["assumes",{"_index":1614,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["async",{"_index":328,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["async)?.name",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["async)?.surname",{"_index":549,"title":{},"body":{"components/AppComponent.html":{}}}],["asynchronous",{"_index":1528,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["asynchronously",{"_index":1964,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["attempts",{"_index":1472,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth",{"_index":257,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["auth.service",{"_index":604,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["auth.service.ts",{"_index":1465,"title":{},"body":{"classes/FirebaseAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:10",{"_index":1469,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["auth.service.ts:124",{"_index":1506,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["auth.user",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["auth.user$|async)?.name",{"_index":2521,"title":{},"body":{"components/SettingsPage.html":{}}}],["auth.user$|async)?.surname",{"_index":2522,"title":{},"body":{"components/SettingsPage.html":{}}}],["auth.user$|async)?.username",{"_index":2523,"title":{},"body":{"components/SettingsPage.html":{}}}],["auth/email",{"_index":340,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/invalid",{"_index":351,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/operation",{"_index":1929,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/weak",{"_index":1931,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["authdomain",{"_index":1704,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":1917,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["authenticated",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":258,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["authguard",{"_index":661,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":2846,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":259,"title":{},"body":{"components/AccessPage.html":{},"components/HomePage.html":{}}}],["authservice",{"_index":209,"title":{"injectables/AuthService.html":{}},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["authservice:10",{"_index":1478,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:11",{"_index":1477,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:12",{"_index":1479,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:153",{"_index":1497,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:178",{"_index":1491,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:189",{"_index":1523,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:44",{"_index":1480,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:83",{"_index":1513,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:9",{"_index":1476,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservicefactory",{"_index":648,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authservicefactory(backend",{"_index":2821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auto",{"_index":66,"title":{},"body":{"components/AboutPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["automatically",{"_index":1470,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["available",{"_index":1237,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules.html":{}}}],["avatar",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["await",{"_index":332,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["back",{"_index":2153,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["backend",{"_index":655,"title":{},"body":{"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/functions.html":{}}}],["backend:string",{"_index":636,"title":{},"body":{"modules/AppModule.html":{}}}],["background",{"_index":378,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["backgroundcolor",{"_index":2185,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["bar",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["base64",{"_index":2827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":253,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/LocalService.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["bbbbbb",{"_index":2246,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["bd1e1e",{"_index":1424,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["before",{"_index":763,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["behaviorsubject",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["behaviorsubject(false",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["behaviorsubject(null",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{}}}],["being",{"_index":292,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/PictureSelectableComponent.html":{},"injectables/UsersService.html":{}}}],["between",{"_index":52,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["binary",{"_index":1752,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["blob",{"_index":1238,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["blob([csvcontent",{"_index":1239,"title":{},"body":{"components/DataPage.html":{}}}],["blobs",{"_index":1748,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["block",{"_index":82,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/DataPage.html":{},"components/PictureSelectableComponent.html":{}}}],["body",{"_index":2068,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["bold",{"_index":574,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["boolean",{"_index":459,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["bootstrap",{"_index":168,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["border",{"_index":387,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["borrada",{"_index":923,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["borrar",{"_index":915,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["both",{"_index":1532,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["bottom",{"_index":77,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["box",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["boxes",{"_index":1165,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["break",{"_index":345,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["browse",{"_index":2839,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":592,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":440,"title":{},"body":{"guards/AdminGuard.html":{}}}],["browser/animations",{"_index":595,"title":{},"body":{"modules/AppModule.html":{}}}],["browser/animations/async",{"_index":601,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":594,"title":{},"body":{"modules/AppModule.html":{}}}],["browserlanguage",{"_index":2304,"title":{},"body":{"injectables/LocalService.html":{}}}],["browsermodule",{"_index":590,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":1765,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["building",{"_index":1434,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["button",{"_index":384,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["button.picture",{"_index":2455,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["búsqueda",{"_index":1847,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["c.name",{"_index":879,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["calc((100vw",{"_index":2240,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["calc(33.333",{"_index":2036,"title":{},"body":{"components/HomePage.html":{}}}],["callback",{"_index":1001,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":1897,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["calling",{"_index":1492,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["calls",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{}}}],["campo",{"_index":1953,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["canactivate",{"_index":436,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":442,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["cancel",{"_index":1097,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["capacitor.config.ts",{"_index":2706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":2781,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":2783,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":2785,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":317,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"dependencies.html":{}}}],["capacitor/keyboard",{"_index":2786,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":2788,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":2854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalized",{"_index":765,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["capitalizeinitial",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{}}}],["capitalizeinitialpipe",{"_index":587,"title":{"pipes/CapitalizeInitialPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{},"index.html":{}}}],["capitalizes",{"_index":753,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["capitalizing",{"_index":1511,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["card",{"_index":2239,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["case",{"_index":339,"title":{},"body":{"components/AccessPage.html":{},"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["cases",{"_index":287,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch",{"_index":1044,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["catch((err",{"_index":1146,"title":{},"body":{"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch((error",{"_index":1222,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["catch(async",{"_index":1796,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catcherror",{"_index":870,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["catcherror((err",{"_index":902,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["categories",{"_index":108,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["categoriesinfocomponent",{"_index":107,"title":{"components/CategoriesInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["categoriesselectorcomponent",{"_index":960,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoriesservice",{"_index":847,"title":{"injectables/CategoriesService.html":{}},"body":{"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"coverage.html":{}}}],["category",{"_index":111,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["category'},{'name",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["category(_category",{"_index":1040,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["category.admin",{"_index":890,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.adminid",{"_index":888,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.component",{"_index":1211,"title":{},"body":{"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["category.component.html",{"_index":2272,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["category.component.scss",{"_index":2271,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["category.component.ts",{"_index":2270,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:12",{"_index":2344,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:13",{"_index":2345,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:16",{"_index":2276,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:20",{"_index":2337,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:23",{"_index":2277,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:30",{"_index":2283,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:32",{"_index":2275,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:33",{"_index":2338,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:36",{"_index":2278,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:37",{"_index":2336,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:42",{"_index":2279,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:56",{"_index":2339,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:62",{"_index":2342,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:70",{"_index":2340,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:9",{"_index":2281,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.description",{"_index":836,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["category.name",{"_index":835,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{}}}],["category.uuid",{"_index":922,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category/item",{"_index":2049,"title":{},"body":{"modules/HomePageModule.html":{},"components/ItemCategoryComponent.html":{},"coverage.html":{}}}],["category/modal",{"_index":1210,"title":{},"body":{"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["category_selectable_mobile_value_accessor",{"_index":1065,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category_selectable_value_accessor",{"_index":938,"title":{},"body":{"components/CategorySelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorycounts",{"_index":2177,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["categoryid",{"_index":863,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryinfo",{"_index":789,"title":{"interfaces/CategoryInfo.html":{}},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["categoryinfo(category",{"_index":2348,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["categoryname",{"_index":1390,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"interfaces/incidentInfo.html":{}}}],["categorynamevalue",{"_index":2024,"title":{},"body":{"components/HomePage.html":{}}}],["categoryselectablecomponent",{"_index":110,"title":{"components/CategorySelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categoryselectablemobilecomponent",{"_index":113,"title":{"components/CategorySelectableMobileComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categoryselected",{"_index":941,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoryselected.data.name",{"_index":1062,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoryservice",{"_index":942,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoría",{"_index":881,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["cccccc",{"_index":1283,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["center",{"_index":64,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["certain",{"_index":1920,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["chain",{"_index":1527,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["change",{"_index":1013,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["changeform",{"_index":203,"title":{},"body":{"components/AccessPage.html":{}}}],["changepicture",{"_index":2392,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture",{"_index":2400,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changes",{"_index":1002,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["changing",{"_index":2418,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["character",{"_index":761,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["characters",{"_index":1935,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["chart",{"_index":2173,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["chart.js",{"_index":2801,"title":{},"body":{"dependencies.html":{}}}],["chartdata",{"_index":2192,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["chartmodule",{"_index":2551,"title":{},"body":{"modules/SharedModule.html":{}}}],["chato",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["checkbox",{"_index":1422,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["checked",{"_index":1392,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/incidentInfo.html":{}}}],["checkedvalue",{"_index":2026,"title":{},"body":{"components/HomePage.html":{}}}],["checking",{"_index":700,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["checks",{"_index":447,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{}}}],["checkscreensize",{"_index":775,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["checkscreensize(width",{"_index":807,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["children",{"_index":668,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["circle",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["class",{"_index":33,"title":{"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"classes/PasswordValidation.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":1337,"title":{},"body":{"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"classes/PasswordValidation.html":{},"index.html":{}}}],["clears",{"_index":974,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["clearsearch",{"_index":945,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["clearsearch(input",{"_index":971,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["clearselection",{"_index":946,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["click",{"_index":2211,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["clicked",{"_index":797,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["clicks",{"_index":2280,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["client",{"_index":612,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["client.provider",{"_index":621,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{}}}],["client.provider.ts",{"_index":2055,"title":{},"body":{"injectables/HttpClientProvider.html":{},"coverage.html":{}}}],["client.provider.ts:16",{"_index":2066,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:26",{"_index":2064,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:37",{"_index":2074,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:53",{"_index":2076,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:69",{"_index":2070,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:84",{"_index":2060,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:94",{"_index":2081,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["close",{"_index":519,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["closes",{"_index":1103,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":171,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":172,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_imports",{"_index":173,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule",{"_index":393,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule_declarations",{"_index":395,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule_imports",{"_index":394,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":586,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":584,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":585,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_datapagemodule",{"_index":1298,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_datapagemodule_declarations",{"_index":1299,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_datapagemodule_imports",{"_index":1300,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":2039,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":2041,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_imports",{"_index":2040,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule",{"_index":2160,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule_declarations",{"_index":2161,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule_imports",{"_index":2162,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule",{"_index":2529,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule_declarations",{"_index":2531,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule_imports",{"_index":2530,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_sharedmodule",{"_index":2536,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2539,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_exports",{"_index":2537,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_imports",{"_index":2538,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule",{"_index":2629,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule_declarations",{"_index":2631,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule_imports",{"_index":2630,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["code",{"_index":1925,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["coincidan",{"_index":1845,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection",{"_index":1503,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection's",{"_index":1831,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection(this._db",{"_index":1738,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionname",{"_index":1736,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionname/documentid",{"_index":1606,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["collectionref",{"_index":1807,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionreference",{"_index":1666,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collections",{"_index":1698,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["color",{"_index":71,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["column",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["combinelatest",{"_index":2684,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["commonmodule",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["complete",{"_index":1495,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["completed",{"_index":2830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["completes",{"_index":1519,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["completing",{"_index":2408,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["completion",{"_index":1496,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["component_template",{"_index":100,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["componentprops",{"_index":1259,"title":{},"body":{"components/DataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["components/categories",{"_index":2549,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/confirm",{"_index":2550,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/incidents",{"_index":2548,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/picture",{"_index":2547,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/user",{"_index":2553,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/users",{"_index":2542,"title":{},"body":{"modules/SharedModule.html":{}}}],["con",{"_index":882,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["concatenated",{"_index":1768,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["condition",{"_index":1861,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["config",{"_index":652,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":1700,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["confirm",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["confirmation",{"_index":1200,"title":{},"body":{"components/DataPage.html":{}}}],["confirmcontrolname",{"_index":2369,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["confirmdialogcomponent",{"_index":116,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["confirmed",{"_index":2623,"title":{},"body":{"components/UserDataPage.html":{}}}],["confirmpassword",{"_index":2381,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["connect",{"_index":1481,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["connectanonymously",{"_index":1896,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connected",{"_index":1499,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connects",{"_index":1908,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connectuserwithemailandpassword",{"_index":1545,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.error('error",{"_index":1045,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["console.error('failed",{"_index":1223,"title":{},"body":{"components/DataPage.html":{}}}],["console.error('no",{"_index":1236,"title":{},"body":{"components/DataPage.html":{}}}],["console.error(err",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{}}}],["console.log",{"_index":1932,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log('all",{"_index":329,"title":{},"body":{"components/AccessPage.html":{}}}],["console.log('bad",{"_index":350,"title":{},"body":{"components/AccessPage.html":{}}}],["console.log('filtervalues",{"_index":2018,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('object",{"_index":892,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["console.log('user",{"_index":2507,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["console.log(`email",{"_index":1928,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(`error",{"_index":1930,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(err",{"_index":1540,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["console.log(error",{"_index":2448,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["console.log(error.message",{"_index":1938,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(id",{"_index":2011,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(results.data",{"_index":2510,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["console.log(this.form.value",{"_index":1407,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["console.log(this.message.message",{"_index":1110,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["const",{"_index":194,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["construct",{"_index":1777,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject('firebase",{"_index":1695,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["constructor(_auth",{"_index":1991,"title":{},"body":{"components/HomePage.html":{}}}],["constructor(_firebaseservice",{"_index":1158,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["constructor(auth",{"_index":208,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["constructor(categoryservice",{"_index":958,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["constructor(dialogref",{"_index":1098,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["constructor(filterservice",{"_index":1370,"title":{},"body":{"components/FilterComponent.html":{}}}],["constructor(firebase",{"_index":1597,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{}}}],["constructor(firebaseservice",{"_index":852,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["constructor(firebasesvc",{"_index":1468,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["constructor(formbuilder",{"_index":1431,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["constructor(httpclient",{"_index":2088,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["constructor(lang",{"_index":2305,"title":{},"body":{"injectables/LocalService.html":{}}}],["constructor(picturemodal",{"_index":2396,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["constructor(private",{"_index":474,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{}}}],["constructor(protected",{"_index":1623,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["constructor(route",{"_index":2125,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["constructor(router",{"_index":2676,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["constructor(translate",{"_index":1120,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["constructor(userservice",{"_index":2201,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["constructs",{"_index":786,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["contain",{"_index":1823,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["container",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["containing",{"_index":278,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["contains",{"_index":291,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/UsersService.html":{}}}],["content",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["contenttype",{"_index":1790,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["contrast",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":1343,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"components/UserDataPage.html":{}}}],["control.errors",{"_index":2386,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(confirmcontrolname)?.value",{"_index":2382,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(controlname)?.value",{"_index":1354,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["control.get(passwordcontrolname)?.value",{"_index":2380,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control?.errors",{"_index":2383,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control?.value",{"_index":1353,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["controller",{"_index":2617,"title":{},"body":{"components/UserDataPage.html":{}}}],["controlname",{"_index":1344,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["controls",{"_index":1420,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/RegisterFormComponent.html":{}}}],["controlvalueaccessor",{"_index":2432,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["converted",{"_index":1196,"title":{},"body":{"components/DataPage.html":{}}}],["converts",{"_index":1186,"title":{},"body":{"components/DataPage.html":{},"miscellaneous/functions.html":{}}}],["core",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}],["core/guards/admin.guard",{"_index":663,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/auth.guard",{"_index":662,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/pipes/capitalize",{"_index":627,"title":{},"body":{"modules/AppModule.html":{}}}],["core/pipes/shorten",{"_index":2545,"title":{},"body":{"modules/SharedModule.html":{}}}],["core/services/auth.service",{"_index":531,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["core/services/data.service",{"_index":619,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/firebase/api/firebase",{"_index":603,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/firebase/firebase.service",{"_index":606,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/http/http",{"_index":611,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/media.service",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/translate/local.service",{"_index":529,"title":{},"body":{"components/AppComponent.html":{}}}],["core/translate/translate",{"_index":599,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["corresponding",{"_index":2620,"title":{},"body":{"components/UserDataPage.html":{}}}],["cover",{"_index":380,"title":{},"body":{"components/AccessPage.html":{}}}],["coverage",{"_index":2703,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creada",{"_index":898,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["crear",{"_index":905,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["create",{"_index":1271,"title":{},"body":{"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["createbody",{"_index":2086,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createbody(body",{"_index":2091,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createcategory",{"_index":849,"title":{},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{}}}],["createcategory(category",{"_index":855,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["created",{"_index":857,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["createdocument",{"_index":1800,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdocument(collectionname",{"_index":1805,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdocumentwithid",{"_index":1812,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createheaders",{"_index":2087,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createheaders(headers",{"_index":2094,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["creates",{"_index":699,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["createtranslateloader",{"_index":410,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":2824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createuserwithemailandpassword",{"_index":1674,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createuserwithemailandpassword(info.email",{"_index":1557,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["creating",{"_index":1169,"title":{},"body":{"components/DataPage.html":{},"injectables/DataService.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["credentials",{"_index":270,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{}}}],["credentials.email",{"_index":1546,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.password",{"_index":1547,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user",{"_index":1549,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user.user",{"_index":1550,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user.user.uid",{"_index":1551,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["criteria",{"_index":1834,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["criterio",{"_index":1846,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["cssclass",{"_index":2508,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["csv",{"_index":1177,"title":{},"body":{"components/DataPage.html":{}}}],["csvcontent",{"_index":1178,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles",{"_index":1216,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles.hasownproperty(key",{"_index":1218,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles[key",{"_index":1219,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows",{"_index":1229,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows.join('\\r\\n",{"_index":1235,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows.unshift(headers.join",{"_index":1234,"title":{},"body":{"components/DataPage.html":{}}}],["current",{"_index":251,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["currentlang",{"_index":2486,"title":{},"body":{"components/SettingsPage.html":{}}}],["currently",{"_index":981,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["currentuser",{"_index":2688,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["currentuser?.uuid",{"_index":2589,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["cursor",{"_index":388,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["customtranslateservice",{"_index":211,"title":{"injectables/CustomTranslateService.html":{}},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["data",{"_index":276,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"injectables/DataService.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{}}}],["data'},{'name",{"_index":120,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["data)).pipe",{"_index":1637,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.categories",{"_index":831,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["data.create",{"_index":1276,"title":{},"body":{"components/DataPage.html":{},"components/ModalCategoryComponent.html":{}}}],["data.data",{"_index":1274,"title":{},"body":{"components/DataPage.html":{}}}],["data.data['email",{"_index":1584,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['name",{"_index":1581,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['picture",{"_index":1583,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['role",{"_index":1585,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['surname",{"_index":1582,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['username",{"_index":1586,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.download",{"_index":1275,"title":{},"body":{"components/DataPage.html":{}}}],["data.file",{"_index":1979,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["data.graphic",{"_index":1277,"title":{},"body":{"components/DataPage.html":{}}}],["data.id",{"_index":1587,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.length",{"_index":1630,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.map((doc",{"_index":1625,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.module",{"_index":667,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module').then",{"_index":676,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module').then(m",{"_index":689,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module.ts",{"_index":2164,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["data.page",{"_index":1303,"title":{},"body":{"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["data.page.html",{"_index":1153,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.scss",{"_index":1152,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts",{"_index":2121,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["data.page.ts:102",{"_index":2618,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.page.ts:119",{"_index":2133,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:136",{"_index":2128,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:18",{"_index":2136,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts:19",{"_index":2127,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts:37",{"_index":2135,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:38",{"_index":2137,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:44",{"_index":2129,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts:65",{"_index":2621,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.page.ts:68",{"_index":2131,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:99",{"_index":2134,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.service",{"_index":1622,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.service.ts",{"_index":1596,"title":{},"body":{"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["data.service.ts:6",{"_index":1598,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.update",{"_index":2525,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["data.users",{"_index":2660,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["data/:id",{"_index":673,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data/incident",{"_index":675,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"coverage.html":{}}}],["data/modal",{"_index":2008,"title":{},"body":{"components/HomePage.html":{}}}],["data/update",{"_index":2498,"title":{},"body":{"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"coverage.html":{}}}],["data/user",{"_index":666,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"coverage.html":{}}}],["data:t",{"_index":2361,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["database",{"_index":1516,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dataobject",{"_index":1195,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject.hasownproperty(key",{"_index":1225,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject[key].length",{"_index":1226,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject[key].map((row",{"_index":1230,"title":{},"body":{"components/DataPage.html":{}}}],["datapage",{"_index":119,"title":{"components/DataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["datapagemodule",{"_index":1297,"title":{"modules/DataPageModule.html":{}},"body":{"modules/DataPageModule.html":{},"index.html":{},"modules.html":{}}}],["datapageroutingmodule",{"_index":1301,"title":{"modules/DataPageRoutingModule.html":{}},"body":{"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["dataservice",{"_index":618,"title":{"injectables/DataService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["dataservice:101",{"_index":1603,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:24",{"_index":1616,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:52",{"_index":1607,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:72",{"_index":1611,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:85",{"_index":1613,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataset",{"_index":1190,"title":{},"body":{"components/DataPage.html":{}}}],["datasets",{"_index":2183,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["dataurl",{"_index":2826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob",{"_index":2496,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":2825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob(results.data.picture",{"_index":2514,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["datauser",{"_index":2675,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["datauser(userid",{"_index":2680,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["date",{"_index":2223,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["date(this.incident.date",{"_index":2218,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["date.now",{"_index":1787,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["date.tolocaledatestring",{"_index":2225,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["date.tolocaletimestring",{"_index":2226,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["de",{"_index":41,"title":{},"body":{"components/AboutPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["declarations",{"_index":167,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["decorators",{"_index":821,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["default",{"_index":309,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":814,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{}}}],["delete(resource",{"_index":1314,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["delete(url",{"_index":2059,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["deletecategory",{"_index":776,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{}}}],["deletecategory(category",{"_index":812,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{}}}],["deletecategory(info",{"_index":1170,"title":{},"body":{"components/DataPage.html":{}}}],["deleted",{"_index":815,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedoc",{"_index":1662,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedoc(docref",{"_index":1871,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedocument",{"_index":1866,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedocument('categoryinfo",{"_index":921,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["deletes",{"_index":860,"title":{},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deleteuser",{"_index":1675,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deleting",{"_index":1201,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["deletion",{"_index":2422,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["dependencies",{"_index":166,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":2251,"title":{},"body":{"injectables/IncidentsService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["depending",{"_index":1776,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deps",{"_index":428,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["description",{"_index":256,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"properties.html":{}}}],["deselect",{"_index":947,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["deselect(popover",{"_index":977,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["deselects",{"_index":980,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["designed",{"_index":1963,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["desired",{"_index":1876,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["desktop",{"_index":2037,"title":{},"body":{"components/HomePage.html":{}}}],["destroyed",{"_index":2404,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["detail",{"_index":359,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["detailed",{"_index":1501,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["details",{"_index":295,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["dialog",{"_index":1093,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["dialog'},{'name",{"_index":118,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["dialog.${this.message.message",{"_index":1111,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component",{"_index":1209,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"modules/SharedModule.html":{}}}],["dialog.component.html",{"_index":1095,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1094,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1092,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":1100,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1105,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1107,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":1104,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":1102,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.no",{"_index":1114,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.yes",{"_index":1115,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog/confirm",{"_index":1091,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":1096,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":1254,"title":{},"body":{"components/DataPage.html":{}}}],["dialogref.afterclosed().subscribe(async",{"_index":2145,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["dialogs",{"_index":1166,"title":{},"body":{"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{}}}],["different",{"_index":235,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["direction",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["directive",{"_index":98,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["directives",{"_index":159,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["directly",{"_index":2829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["directory",{"_index":1764,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["disabled",{"_index":943,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["dismisses",{"_index":1443,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["display",{"_index":45,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["display:flex",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["displayed",{"_index":301,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["displaying",{"_index":240,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["displays",{"_index":220,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["div",{"_index":2331,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["div.user",{"_index":2453,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["dividermodule",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":1640,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc(this._db",{"_index":1819,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.data",{"_index":1627,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.id",{"_index":1626,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.id.includes(substring",{"_index":1839,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docid",{"_index":1815,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docref",{"_index":896,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap",{"_index":1851,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.data",{"_index":1855,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.exists",{"_index":1853,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.id",{"_index":1854,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["document",{"_index":1508,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["document.body.appendchild(link",{"_index":1248,"title":{},"body":{"components/DataPage.html":{}}}],["document.body.removechild(link",{"_index":1250,"title":{},"body":{"components/DataPage.html":{}}}],["document.createelement('a",{"_index":1244,"title":{},"body":{"components/DataPage.html":{}}}],["documentation",{"_index":2704,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":1649,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentos",{"_index":1843,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentpath",{"_index":1880,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentref",{"_index":1885,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentreference",{"_index":1663,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documents",{"_index":1601,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentsnapshot",{"_index":1664,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["download",{"_index":1176,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["downloadcsv",{"_index":1154,"title":{},"body":{"components/DataPage.html":{}}}],["downloadcsv(csvcontent",{"_index":1172,"title":{},"body":{"components/DataPage.html":{}}}],["downloaded",{"_index":1179,"title":{},"body":{"components/DataPage.html":{}}}],["downloads",{"_index":1187,"title":{},"body":{"components/DataPage.html":{}}}],["downloadurl",{"_index":1794,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dropdownmodule",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["during",{"_index":288,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["dynamic",{"_index":2780,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":1915,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["each",{"_index":1189,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["edit",{"_index":796,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["editcategory",{"_index":777,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{}}}],["editcategory(category",{"_index":816,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["editcategory(info",{"_index":1180,"title":{},"body":{"components/DataPage.html":{}}}],["edited",{"_index":818,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/UpdateUserComponent.html":{}}}],["editing",{"_index":1182,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{}}}],["efficiently",{"_index":1530,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["el",{"_index":1728,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["element",{"_index":97,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["ellipsis",{"_index":2562,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["email",{"_index":275,"title":{},"body":{"components/AccessPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UsersService.html":{}}}],["email(controlname",{"_index":1340,"title":{},"body":{"classes/EmailValidation.html":{}}}],["email.match(/^[a",{"_index":1355,"title":{},"body":{"classes/EmailValidation.html":{}}}],["email:string",{"_index":2613,"title":{},"body":{"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["emailvalidation",{"_index":1336,"title":{"classes/EmailValidation.html":{}},"body":{"classes/EmailValidation.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["emailvalidation.email",{"_index":2470,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["emit",{"_index":967,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["emitevent",{"_index":1406,"title":{},"body":{"components/FilterComponent.html":{}}}],["emits",{"_index":466,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["emitted",{"_index":1882,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["emitter",{"_index":1374,"title":{},"body":{"components/FilterComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["emitting",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"injectables/MediaService.html":{},"components/UsersInfoComponent.html":{}}}],["empleados",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["empty",{"_index":759,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["en",{"_index":1141,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["encapsulation",{"_index":1150,"title":{},"body":{"components/DataPage.html":{}}}],["encoded",{"_index":2072,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["encontraron",{"_index":1842,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["end",{"_index":757,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"components/FilterComponent.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{}}}],["enough",{"_index":1934,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ensures",{"_index":2405,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["environment",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebaseconfig",{"_index":654,"title":{},"body":{"modules/AppModule.html":{}}}],["equality",{"_index":1860,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["err",{"_index":336,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{}}}],["err.code",{"_index":337,"title":{},"body":{"components/AccessPage.html":{}}}],["err.message",{"_index":907,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["error",{"_index":221,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["error(\"not",{"_index":643,"title":{},"body":{"modules/AppModule.html":{}}}],["error('database",{"_index":1870,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error('error",{"_index":903,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{}}}],["error('una",{"_index":880,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["error('user",{"_index":1588,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["error(`error",{"_index":924,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["error(`failed",{"_index":1741,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error.code",{"_index":1927,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error.message",{"_index":1742,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["errors",{"_index":272,"title":{},"body":{"components/AccessPage.html":{},"classes/PasswordValidation.html":{}}}],["errors.emailerror",{"_index":2475,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["errors.repeaterror",{"_index":2480,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["errors.valid",{"_index":2328,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["errors['passwordmatch",{"_index":2385,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["es",{"_index":1135,"title":{},"body":{"injectables/CustomTranslateService.html":{},"injectables/LocalService.html":{}}}],["este",{"_index":883,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["etc",{"_index":1775,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["event",{"_index":801,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["event.stoppropagation",{"_index":2231,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["eventemitter",{"_index":793,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["events",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["evt",{"_index":996,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["example",{"_index":1766,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["example@example.com",{"_index":1916,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["executed",{"_index":987,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["executes",{"_index":1331,"title":{},"body":{"injectables/DataService.html":{}}}],["exist",{"_index":1850,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["existe",{"_index":886,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["existing",{"_index":1326,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["existingcategories.some((c",{"_index":878,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["exists",{"_index":1500,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["exitosamente",{"_index":901,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["exportdata",{"_index":1155,"title":{},"body":{"components/DataPage.html":{}}}],["exports",{"_index":170,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{}}}],["extends",{"_index":1466,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{}}}],["extension",{"_index":1770,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["factories",{"_index":658,"title":{},"body":{"modules/AppModule.html":{}}}],["failed",{"_index":1490,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fails",{"_index":1483,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["false",{"_index":482,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["falsy",{"_index":758,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["fetch",{"_index":1224,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fetches",{"_index":1185,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["fetching",{"_index":961,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["ff6384",{"_index":2186,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["ffce56",{"_index":2188,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["fff",{"_index":840,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/UsersInfoComponent.html":{}}}],["ffffff",{"_index":2245,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["field",{"_index":414,"title":{},"body":{"modules/AccessPageModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"modules/DataPageModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["fieldname",{"_index":1945,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldpath",{"_index":1665,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fields",{"_index":1946,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{}}}],["fieldupdate",{"_index":1950,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldvalue",{"_index":1948,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["fileloader",{"_index":2415,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.click",{"_index":2450,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files",{"_index":2440,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files?.length",{"_index":2441,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files[0",{"_index":2442,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.onchange",{"_index":2439,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["filename",{"_index":1173,"title":{},"body":{"components/DataPage.html":{}}}],["filereader",{"_index":2444,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["files",{"_index":1188,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["fileupload",{"_index":1744,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filter",{"_index":124,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["filter'},{'name",{"_index":122,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["filter(value",{"_index":983,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["filter.apply",{"_index":1414,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["filter.component.html",{"_index":1363,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.scss",{"_index":1362,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.filter",{"_index":2033,"title":{},"body":{"components/HomePage.html":{}}}],["filter.reset",{"_index":1413,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["filter/filter.component",{"_index":2009,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["filterchanged",{"_index":1368,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["filtercomponent",{"_index":121,"title":{"components/FilterComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["filtereddocs",{"_index":1837,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtereddocs.length",{"_index":1840,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtereddocs.map((doc",{"_index":1841,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filteredincidents",{"_index":1986,"title":{},"body":{"components/HomePage.html":{}}}],["filtering",{"_index":995,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["filtering/sorting",{"_index":1620,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["filtermobilecomponent",{"_index":123,"title":{"components/FilterMobileComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["filters",{"_index":985,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["filterscomponent",{"_index":1433,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["filterservice",{"_index":1371,"title":{"injectables/FilterService.html":{}},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/HomePage.html":{},"coverage.html":{}}}],["filterstate",{"_index":1451,"title":{},"body":{"injectables/FilterService.html":{}}}],["filtervalues",{"_index":2000,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls",{"_index":2019,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.categoryname.value",{"_index":2025,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.checked.value",{"_index":2027,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.resolved.value",{"_index":2029,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.userid.value",{"_index":2023,"title":{},"body":{"components/HomePage.html":{}}}],["final",{"_index":1771,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["finally",{"_index":1512,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebase",{"_index":639,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["firebase's",{"_index":1958,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["firebase.service",{"_index":1534,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebase/app",{"_index":1653,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase/auth",{"_index":1681,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserDataPage.html":{}}}],["firebase/firebase.service",{"_index":868,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/UsersService.html":{}}}],["firebase/firestore",{"_index":1667,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/incidentInfo.html":{}}}],["firebase/storage",{"_index":1673,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase:firebaseservice",{"_index":637,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseapp",{"_index":1652,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebaseauthservice",{"_index":602,"title":{"classes/FirebaseAuthService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"coverage.html":{}}}],["firebaseauthservice(firebase",{"_index":649,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseconfig",{"_index":1699,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["firebasedataservice",{"_index":1595,"title":{"classes/FirebaseDataService.html":{}},"body":{"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["firebasedocument",{"_index":1647,"title":{"interfaces/FirebaseDocument.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebasemediaservice",{"_index":608,"title":{"classes/FirebaseMediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["firebasemediaservice(firebase",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseservice",{"_index":605,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["firebasestorage",{"_index":1672,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebasestoragefile",{"_index":1682,"title":{"interfaces/FirebaseStorageFile.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebasesvc",{"_index":1474,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebaseusercredential",{"_index":1533,"title":{"interfaces/FirebaseUserCredential.html":{}},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firestorage",{"_index":1782,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firestore",{"_index":1498,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["first",{"_index":462,"title":{},"body":{"guards/AdminGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["fixed",{"_index":1289,"title":{},"body":{"components/DataPage.html":{}}}],["fixedname",{"_index":1565,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname.charat(0).touppercase",{"_index":1568,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname.slice(1",{"_index":1569,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname[0",{"_index":1566,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname[0].touppercase",{"_index":1567,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["flag",{"_index":811,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["flex",{"_index":46,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["fn",{"_index":1003,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["followed",{"_index":766,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["following",{"_index":1509,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["font",{"_index":68,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["footer",{"_index":86,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["forkjoin",{"_index":2175,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["form",{"_index":374,"title":{},"body":{"components/AccessPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"modules/UserDataPageModule.html":{}}}],["form'},{'name",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["form.component",{"_index":402,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["form.component.html",{"_index":2317,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.scss",{"_index":2316,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts",{"_index":2315,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:17",{"_index":2324,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:18",{"_index":2320,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:19",{"_index":2465,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:25",{"_index":2462,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:31",{"_index":2321,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:38",{"_index":2322,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:56",{"_index":2463,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:63",{"_index":2464,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form/login",{"_index":401,"title":{},"body":{"modules/AccessPageModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form/register",{"_index":403,"title":{},"body":{"modules/AccessPageModule.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["format",{"_index":1184,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["formatted",{"_index":1605,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["formattedday",{"_index":2197,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["formattedtime",{"_index":2198,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["formbuilder",{"_index":1386,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["formcontrol",{"_index":1350,"title":{},"body":{"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{}}}],["formcontrol(false",{"_index":1393,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{}}}],["formcontrol(initialformstate.get('checked')?.value",{"_index":1401,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(initialformstate.get('resolved')?.value",{"_index":1402,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(initialformstate.get('userid')?.value",{"_index":1400,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(initialformstate?.get('categoryname')?.value",{"_index":1399,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(undefined",{"_index":1391,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{}}}],["formdata",{"_index":2112,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["formgroup",{"_index":1385,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["forms",{"_index":1028,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["forms.actions",{"_index":834,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["forms.admin",{"_index":2524,"title":{},"body":{"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["forms.description",{"_index":833,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["forms.email",{"_index":2327,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["forms.login",{"_index":2330,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["forms.name",{"_index":832,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.password",{"_index":2329,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["forms.register",{"_index":2481,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["forms.reppassword",{"_index":2477,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["forms.role",{"_index":2592,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.surname",{"_index":2474,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.update",{"_index":2355,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["forms.user",{"_index":2593,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["forms.username",{"_index":2476,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["formsmodule",{"_index":183,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["formstate",{"_index":1404,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["fortawesome/fontawesome",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":2794,"title":{},"body":{"dependencies.html":{}}}],["forwardref",{"_index":1033,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":2258,"title":{},"body":{"injectables/IncidentsService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["framework",{"_index":2847,"title":{},"body":{"properties.html":{}}}],["freeconnection",{"_index":1783,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["from(this.firebase.createdocument(resource",{"_index":1636,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["from(this.firebase.getdocuments(resource)).pipe",{"_index":1624,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["from(this.firebaseservice.updatedocument('incidentsinfo",{"_index":2266,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["from(this.firebasesvc.signout(false",{"_index":1589,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fromobject",{"_index":2107,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["full",{"_index":680,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":216,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionalities",{"_index":438,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["functionality",{"_index":2255,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["functions",{"_index":2817,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":370,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["generate",{"_index":2172,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["generic",{"_index":1609,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["get(key",{"_index":1124,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["get(resource",{"_index":1318,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["get(url",{"_index":2063,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getalldata",{"_index":1214,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getapp",{"_index":1651,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getcategory",{"_index":850,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategory(categoryid",{"_index":861,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcurrentlang",{"_index":1118,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["getdoc",{"_index":1658,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdoc(docref",{"_index":1852,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs",{"_index":1660,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(collection(this._db",{"_index":1836,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(q",{"_index":1865,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocument",{"_index":1848,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocuments(collectionname",{"_index":1827,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsby",{"_index":1857,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsbysubstring",{"_index":1832,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl",{"_index":1670,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl(storageref",{"_index":1793,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfilter",{"_index":1452,"title":{},"body":{"injectables/FilterService.html":{}}}],["getfirestore",{"_index":1654,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfirestore(this._app",{"_index":1715,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getimage",{"_index":2056,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getimage(url",{"_index":2065,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getincidentbyid",{"_index":2248,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["getincidentbyid(incidentid",{"_index":2256,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["getitem",{"_index":2282,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["getstorage",{"_index":1668,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getstorage(this._app",{"_index":1717,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getter",{"_index":2284,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["getuser",{"_index":1743,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getuserbyid",{"_index":2692,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid(this._firebaseservice.user!.uid",{"_index":2504,"title":{},"body":{"components/SettingsPage.html":{}}}],["getuserbyid(userid",{"_index":2694,"title":{},"body":{"injectables/UsersService.html":{}}}],["given",{"_index":1127,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["gives",{"_index":244,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["goback",{"_index":2123,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["good",{"_index":330,"title":{},"body":{"components/AccessPage.html":{}}}],["graph",{"_index":2840,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":1287,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic'},{'name",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["graphic.component",{"_index":2555,"title":{},"body":{"modules/SharedModule.html":{}}}],["graphic.component.html",{"_index":2169,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.scss",{"_index":2168,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts",{"_index":2167,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["graphic.component.ts:12",{"_index":2174,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["graphic.component.ts:13",{"_index":2170,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts:14",{"_index":2595,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts:29",{"_index":2171,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["graphic.component.ts:30",{"_index":2596,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["graphic/incidents",{"_index":2166,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["graphic/user",{"_index":2554,"title":{},"body":{"modules/SharedModule.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["graphics",{"_index":1286,"title":{},"body":{"components/DataPage.html":{}}}],["gray",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["greater",{"_index":2563,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["guard",{"_index":432,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":434,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"index.html":{}}}],["h1",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["handle",{"_index":1471,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["handler",{"_index":991,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["handles",{"_index":271,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsInfoComponent.html":{}}}],["handling",{"_index":226,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["haptics",{"_index":315,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["haptics.impact",{"_index":333,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["hasincident",{"_index":910,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["hasincidentwithoriginalname",{"_index":925,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["hasvalue",{"_index":2391,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["having",{"_index":1922,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["header",{"_index":61,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["header__toolbar",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["headers",{"_index":1227,"title":{},"body":{"components/DataPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["height",{"_index":55,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["hidden",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["hide",{"_index":2461,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["home",{"_index":525,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{}}}],["home'},{'name",{"_index":126,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["home.page",{"_index":2044,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":1985,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1984,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":125,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["homepagemodule",{"_index":2038,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["homepageroutingmodule",{"_index":2042,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["homeurl",{"_index":696,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hostlistener",{"_index":824,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hostlistener('window:resize",{"_index":822,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hostlisteners",{"_index":783,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hover",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["hoverbackgroundcolor",{"_index":2189,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["html",{"_index":96,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["htmlinputelement",{"_index":2416,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["http",{"_index":2061,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["http:httpclient",{"_index":646,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":404,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientprovider",{"_index":620,"title":{"injectables/HttpClientProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientprovider:103",{"_index":2100,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:126",{"_index":2097,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:142",{"_index":2103,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:29",{"_index":2099,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:43",{"_index":2098,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:63",{"_index":2101,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:83",{"_index":2102,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientwebprovider",{"_index":610,"title":{"injectables/HttpClientWebProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientwebprovider(http",{"_index":647,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":2096,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpheaders(headers",{"_index":2116,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpparams",{"_index":2093,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpproviderfactory",{"_index":645,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httpproviderfactory(http",{"_index":2822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https",{"_index":2860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://ionicframework.com",{"_index":2845,"title":{},"body":{"properties.html":{}}}],["icon",{"_index":85,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["icons",{"_index":80,"title":{},"body":{"components/AboutPage.html":{},"dependencies.html":{}}}],["id",{"_index":1011,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["identified",{"_index":1822,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["identifier",{"_index":1816,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["identifies",{"_index":1943,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["identify",{"_index":1818,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ids",{"_index":1830,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["image",{"_index":381,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"interfaces/incidentInfo.html":{}}}],["image/jpeg",{"_index":1756,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["images",{"_index":1751,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["imageupload",{"_index":1797,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["imageupload(blob",{"_index":1798,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["img",{"_index":579,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["imgs",{"_index":1978,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["imgs.push(media",{"_index":1980,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["immediately",{"_index":1884,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["impactstyle",{"_index":316,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["impactstyle.heavy",{"_index":344,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["impactstyle.medium",{"_index":335,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["implementation",{"_index":1618,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["implemented",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["import('./pages/about/about.module').then",{"_index":691,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/access/access.module').then",{"_index":681,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/data/data.module').then(m",{"_index":685,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then",{"_index":670,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/incident",{"_index":674,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/settings/settings.module').then",{"_index":683,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/user",{"_index":688,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1760,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["imports",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["incidencias",{"_index":918,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["incident",{"_index":128,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["incident)).pipe",{"_index":2267,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident.categoryname",{"_index":912,"title":{},"body":{"injectables/CategoriesService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{}}}],["incident.checked",{"_index":2030,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{}}}],["incident.description",{"_index":2151,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.find((incident",{"_index":2264,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident.resolved",{"_index":2031,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{}}}],["incident.title",{"_index":2149,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.userid",{"_index":2032,"title":{},"body":{"components/HomePage.html":{}}}],["incident.username",{"_index":2150,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.uuid",{"_index":2265,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident?.title",{"_index":2232,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidentdatapage",{"_index":127,"title":{"components/IncidentDataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentdatapagemodule",{"_index":2159,"title":{"modules/IncidentDataPageModule.html":{}},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["incidentdatapageroutingmodule",{"_index":2163,"title":{"modules/IncidentDataPageRoutingModule.html":{}},"body":{"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["incidentid",{"_index":2122,"title":{},"body":{"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["incidentinfo",{"_index":1987,"title":{"interfaces/incidentInfo.html":{}},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["incidentinfo(id",{"_index":1993,"title":{},"body":{"components/HomePage.html":{}}}],["incidents",{"_index":130,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["incidents.anonymous",{"_index":2238,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.day",{"_index":2235,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.filter((incident",{"_index":2021,"title":{},"body":{"components/HomePage.html":{}}}],["incidents.hour",{"_index":2236,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.reduce((acc",{"_index":2178,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["incidents.resolved",{"_index":2152,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incidents.some",{"_index":911,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["incidents.unresolved",{"_index":2234,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.user",{"_index":2237,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidentscirclegraphiccomponent",{"_index":129,"title":{"components/IncidentsCircleGraphicComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentsinfo",{"_index":1731,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["incidentsinfocomponent",{"_index":133,"title":{"components/IncidentsInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentsservice",{"_index":2126,"title":{"injectables/IncidentsService.html":{}},"body":{"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"coverage.html":{}}}],["includes",{"_index":455,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["including",{"_index":1489,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"miscellaneous/variables.html":{}}}],["indexeddblocalpersistence",{"_index":1679,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["indicates",{"_index":1893,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["indicating",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["inesperado",{"_index":1577,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["info'},{'name",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component",{"_index":2544,"title":{},"body":{"modules/SharedModule.html":{}}}],["info.component.html",{"_index":773,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.scss",{"_index":772,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts",{"_index":771,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:17",{"_index":823,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:18",{"_index":2214,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:21",{"_index":2683,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:22",{"_index":791,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:23",{"_index":2204,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:27",{"_index":798,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:28",{"_index":2205,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:31",{"_index":2213,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:32",{"_index":2212,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:33",{"_index":794,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:34",{"_index":785,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:44",{"_index":819,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:50",{"_index":2208,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:51",{"_index":813,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:59",{"_index":2682,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:60",{"_index":817,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:70",{"_index":803,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:73",{"_index":2210,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:75",{"_index":2681,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:79",{"_index":809,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:84",{"_index":2206,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:85",{"_index":2678,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:93",{"_index":2207,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:94",{"_index":2679,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.email",{"_index":1576,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.name",{"_index":1267,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{}}}],["info.password",{"_index":1558,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.role",{"_index":1573,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.surname",{"_index":1572,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.ts",{"_index":933,"title":{},"body":{"interfaces/CategoryInfo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["info.username",{"_index":1575,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.uuid",{"_index":1564,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info/categories",{"_index":770,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/incidents",{"_index":2196,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/users",{"_index":2543,"title":{},"body":{"modules/SharedModule.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["information",{"_index":245,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":1475,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{}}}],["init",{"_index":1119,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["init(firebaseconfig",{"_index":1711,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initform",{"_index":1364,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["initial",{"_index":787,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["initial.pipe",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["initial.pipe.ts",{"_index":748,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{}}}],["initial.pipe.ts:17",{"_index":752,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["initialauthresolved",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["initialform",{"_index":1462,"title":{},"body":{"injectables/FilterService.html":{}}}],["initialformstate",{"_index":1397,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["initialize",{"_index":1701,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeapp",{"_index":1650,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeapp(firebaseconfig",{"_index":1713,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth",{"_index":1678,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth(getapp",{"_index":1719,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initialized",{"_index":988,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["initializes",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/RegisterFormComponent.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["initializestate",{"_index":1453,"title":{},"body":{"injectables/FilterService.html":{}}}],["initiates",{"_index":1175,"title":{},"body":{"components/DataPage.html":{}}}],["inject",{"_index":1108,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["inject(mat_dialog_data",{"_index":1106,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["injectable",{"_index":467,"title":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["injected",{"_index":231,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["injection",{"_index":2252,"title":{},"body":{"injectables/IncidentsService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["inline",{"_index":81,"title":{},"body":{"components/AboutPage.html":{}}}],["inner",{"_index":2458,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["input",{"_index":306,"title":{},"body":{"components/AccessPage.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["input('item",{"_index":2287,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["input.value",{"_index":1059,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["inputs",{"_index":779,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["instance",{"_index":260,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":1352,"title":{},"body":{"classes/EmailValidation.html":{},"injectables/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{}}}],["instances",{"_index":1435,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/UpdateUserComponent.html":{}}}],["intentar",{"_index":930,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["interact",{"_index":1957,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["interacting",{"_index":1602,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["interactions",{"_index":1599,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["interface",{"_index":931,"title":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{}},"body":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["interfaces",{"_index":932,"title":{},"body":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{},"index.html":{}}}],["interfaces/category",{"_index":874,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["interfaces/data",{"_index":1335,"title":{},"body":{"injectables/DataService.html":{}}}],["interfaces/incidents",{"_index":2261,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["interfaces/user",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["invalid",{"_index":274,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["io.ionic.starter",{"_index":2855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":84,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["ionic",{"_index":2843,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["ionicmodule.forroot",{"_index":650,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["ionicons",{"_index":2804,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":596,"title":{},"body":{"modules/AppModule.html":{}}}],["ioninput",{"_index":972,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["ionmenu",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["ionpopover",{"_index":978,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["isactive",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["isactive(url",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["isdisabled",{"_index":1016,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["islogged",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["isscreensmall",{"_index":774,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["issplash",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["issue",{"_index":1949,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserconnected",{"_index":1901,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserconnectedanonymously",{"_index":1905,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["item",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["item(_item",{"_index":2288,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["item.active",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["item?.name",{"_index":2292,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["itemcategorycomponent",{"_index":134,"title":{"components/ItemCategoryComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["items",{"_index":368,"title":{},"body":{"components/AccessPage.html":{},"components/FilterComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["items:center",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["itemusercomponent",{"_index":137,"title":{"components/ItemUserComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["itself",{"_index":456,"title":{},"body":{"guards/AdminGuard.html":{}}}],["join",{"_index":1233,"title":{},"body":{"components/DataPage.html":{}}}],["jpeg",{"_index":1757,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["jpg",{"_index":1773,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["json",{"_index":1194,"title":{},"body":{"components/DataPage.html":{}}}],["json.stringify(row[fieldname",{"_index":1232,"title":{},"body":{"components/DataPage.html":{}}}],["jsontocsv",{"_index":1156,"title":{},"body":{"components/DataPage.html":{}}}],["jsontocsv(dataobject",{"_index":1191,"title":{},"body":{"components/DataPage.html":{}}}],["justify",{"_index":49,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["key",{"_index":356,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{}}}],["key}.csv",{"_index":1221,"title":{},"body":{"components/DataPage.html":{}}}],["kinds",{"_index":1804,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["la",{"_index":906,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["label",{"_index":842,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["labels",{"_index":2181,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["lang",{"_index":2308,"title":{},"body":{"injectables/LocalService.html":{},"components/SettingsPage.html":{}}}],["language",{"_index":507,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{}}}],["languages",{"_index":236,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/SettingsPage.html":{}}}],["lastvaluefrom",{"_index":1138,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["lastvaluefrom(this.translate.use(language",{"_index":1143,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["leaks",{"_index":2412,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["left",{"_index":558,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["legacy",{"_index":2080,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["legend",{"_index":95,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["length",{"_index":1924,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["letter",{"_index":754,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["life",{"_index":360,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["lightgray",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["limit",{"_index":2559,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["limits",{"_index":2561,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["line",{"_index":1292,"title":{},"body":{"components/DataPage.html":{},"components/RegisterFormComponent.html":{}}}],["link",{"_index":1243,"title":{},"body":{"components/DataPage.html":{}}}],["link.click",{"_index":1249,"title":{},"body":{"components/DataPage.html":{}}}],["link.download",{"_index":1246,"title":{},"body":{"components/DataPage.html":{}}}],["link.href",{"_index":1245,"title":{},"body":{"components/DataPage.html":{}}}],["link.style.display",{"_index":1247,"title":{},"body":{"components/DataPage.html":{}}}],["list",{"_index":837,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["listens",{"_index":804,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["literal",{"_index":1192,"title":{},"body":{"components/DataPage.html":{}}}],["load",{"_index":2619,"title":{},"body":{"components/UserDataPage.html":{}}}],["loadchildren",{"_index":669,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":247,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["loader",{"_index":425,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["loading",{"_index":1046,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/functions.html":{}}}],["loads",{"_index":998,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["local",{"_index":1525,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["localization",{"_index":238,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/SettingsPage.html":{}}}],["locallang",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["localservice",{"_index":495,"title":{"injectables/LocalService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LocalService.html":{},"coverage.html":{}}}],["locate",{"_index":1867,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["located",{"_index":1942,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["location",{"_index":1761,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["logged",{"_index":463,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["login",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["login(credentials",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["loginformcomponent",{"_index":139,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginurl",{"_index":697,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loginuser",{"_index":204,"title":{},"body":{"components/AccessPage.html":{}}}],["loginuser(data",{"_index":265,"title":{},"body":{"components/AccessPage.html":{}}}],["logo",{"_index":372,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{}}}],["logout",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["logs",{"_index":269,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["los",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["lottie",{"_index":624,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lottiefiles/lottie",{"_index":2796,"title":{},"body":{"dependencies.html":{}}}],["m",{"_index":671,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ModalCategoryComponent.html":{}}}],["m.aboutpagemodule",{"_index":692,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.accesspagemodule",{"_index":682,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.datapagemodule",{"_index":686,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":672,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.incidentdatapagemodule",{"_index":677,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.settingspagemodule",{"_index":684,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.userdatapagemodule",{"_index":690,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["manage",{"_index":2616,"title":{},"body":{"components/UserDataPage.html":{}}}],["managing",{"_index":237,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{}}}],["manipulating",{"_index":439,"title":{},"body":{"guards/AdminGuard.html":{}}}],["map",{"_index":469,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["map(([users",{"_index":2687,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["map((data",{"_index":1580,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["map((doc",{"_index":1635,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["map((fieldname",{"_index":1231,"title":{},"body":{"components/DataPage.html":{}}}],["map((incident",{"_index":2263,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["map((incidents",{"_index":2020,"title":{},"body":{"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{}}}],["map((user",{"_index":477,"title":{},"body":{"guards/AdminGuard.html":{}}}],["map((users",{"_index":2700,"title":{},"body":{"injectables/UsersService.html":{}}}],["map(response",{"_index":2268,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["map(translations",{"_index":2606,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["map(users",{"_index":2598,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["mapfunction",{"_index":1875,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapfunction(doc.data",{"_index":1878,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapped",{"_index":1873,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["maps",{"_index":1608,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["margin",{"_index":57,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["marked",{"_index":2132,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["mat",{"_index":1421,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{}}}],["mat_dialog_data",{"_index":1109,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["matbuttonmodule",{"_index":417,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["match",{"_index":1829,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/PasswordValidation.html":{}}}],["matcheckboxmodule",{"_index":2046,"title":{},"body":{"modules/HomePageModule.html":{}}}],["matches",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":162,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1160,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["matdialogmodule",{"_index":631,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["matdialogref",{"_index":1099,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["material",{"_index":429,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matformfieldmodule",{"_index":412,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["maticonmodule",{"_index":419,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matinputmodule",{"_index":415,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matselectmodule",{"_index":1306,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["mattabsmodule",{"_index":1304,"title":{},"body":{"modules/DataPageModule.html":{}}}],["max",{"_index":91,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["maximum",{"_index":2568,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["measurementid",{"_index":1709,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["mechanism",{"_index":2254,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["media",{"_index":90,"title":{"interfaces/Media.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["media.service",{"_index":609,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["media.service.ts",{"_index":1955,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["media.service.ts:13",{"_index":1956,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["media[0",{"_index":2517,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["mediaservice",{"_index":614,"title":{"injectables/MediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["mediaservice:32",{"_index":1962,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["mediaservicefactory",{"_index":635,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mediaservicefactory(backend",{"_index":2823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["meet",{"_index":1919,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["memory",{"_index":2411,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["menu",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.about",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.close",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.graphics",{"_index":553,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.home",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.logout",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.settings",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["menucontroller",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":222,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["messages",{"_index":234,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["messageservice",{"_index":198,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["messagingsenderid",{"_index":1707,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["method",{"_index":461,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["mimetype",{"_index":1753,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["min",{"_index":2155,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["minimum",{"_index":1923,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["miscellaneous",{"_index":2816,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1518,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["mobile",{"_index":1066,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile'},{'name",{"_index":115,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["mobile.component",{"_index":2010,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["mobile.component.html",{"_index":1068,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.scss",{"_index":1067,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts",{"_index":1064,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mobile.component.ts:102",{"_index":2670,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:103",{"_index":1080,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:111",{"_index":2671,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:112",{"_index":1081,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:118",{"_index":2672,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:119",{"_index":1083,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:125",{"_index":2667,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:126",{"_index":1076,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:134",{"_index":2664,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:135",{"_index":1073,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:143",{"_index":2666,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:144",{"_index":1075,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:15",{"_index":1437,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:150",{"_index":2668,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:151",{"_index":1078,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:160",{"_index":2669,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:161",{"_index":1077,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:17",{"_index":1436,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:170",{"_index":2663,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:171",{"_index":1072,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:180",{"_index":2665,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:181",{"_index":1074,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:19",{"_index":1432,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:23",{"_index":1071,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:25",{"_index":1086,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:26",{"_index":1088,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:27",{"_index":1085,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:34",{"_index":1070,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:39",{"_index":1069,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:45",{"_index":1440,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:48",{"_index":1087,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:49",{"_index":1089,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:53",{"_index":1439,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:55",{"_index":1079,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:61",{"_index":1438,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:73",{"_index":1082,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:83",{"_index":1446,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:91",{"_index":2673,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:92",{"_index":1084,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:94",{"_index":1445,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile/category",{"_index":1063,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mobile/filter",{"_index":1429,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["mobile/user",{"_index":2052,"title":{},"body":{"modules/HomePageModule.html":{},"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mod",{"_index":1257,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["mod.ondiddismiss",{"_index":1262,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["mod.present",{"_index":1261,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["modal",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["modal.auto",{"_index":2457,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["modalcategorycomponent",{"_index":142,"title":{"components/ModalCategoryComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["modalcontroller",{"_index":1162,"title":{},"body":{"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["modaldesign",{"_index":2509,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["modals",{"_index":2490,"title":{},"body":{"components/SettingsPage.html":{}}}],["mode",{"_index":1260,"title":{},"body":{"components/DataPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/ModalCategoryComponent.html":{}}}],["mode(m",{"_index":2352,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["modifies",{"_index":1510,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["modify",{"_index":1944,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["module",{"_index":163,"title":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["modules",{"_index":165,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["msg",{"_index":1781,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["multi",{"_index":1038,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["mymodal",{"_index":1161,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["name",{"_index":101,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":2469,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["native",{"_index":2456,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["navigate",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"components/UsersInfoComponent.html":{}}}],["navigates",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["navigating",{"_index":252,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["navigation",{"_index":454,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/UserDataPage.html":{}}}],["navigationend",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":1517,"title":{},"body":{"classes/FirebaseAuthService.html":{},"pipes/ShortenTextPipe.html":{}}}],["need",{"_index":2310,"title":{},"body":{"injectables/LocalService.html":{}}}],["needed",{"_index":1507,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["needs",{"_index":1868,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["new",{"_index":640,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["newly",{"_index":1522,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["next",{"_index":327,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/IncidentDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["ng_value_accessor",{"_index":1034,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["ngondestroy",{"_index":2393,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["ngx",{"_index":408,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["nocheck",{"_index":2078,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{}}}],["nombre",{"_index":884,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["none",{"_index":373,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["notadmin",{"_index":224,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{}}}],["notification",{"_index":308,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["notifications",{"_index":241,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["null",{"_index":790,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"classes/PasswordValidation.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["number",{"_index":808,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["numbers",{"_index":1937,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["obj",{"_index":1020,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["object",{"_index":277,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"classes/PasswordValidation.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign(errors",{"_index":2384,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["object.keys(categorycounts",{"_index":2182,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["object.keys(dataobject[key][0",{"_index":1228,"title":{},"body":{"components/DataPage.html":{}}}],["object.keys(rolescount",{"_index":2603,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["object.values(categorycounts",{"_index":2184,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["objects",{"_index":1826,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["objeto",{"_index":1952,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["obs.error(error",{"_index":1982,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["obs.next(imgs",{"_index":1981,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["observable",{"_index":464,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["observable((obs",{"_index":1975,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["observable((subscr",{"_index":1543,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["observables",{"_index":1488,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["occurs",{"_index":1970,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["oncancel",{"_index":1430,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["oncategoryclicked",{"_index":948,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["oncategoryclicked(popover",{"_index":989,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["once",{"_index":2622,"title":{},"body":{"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["onchangepicture",{"_index":2394,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event",{"_index":2414,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture",{"_index":2395,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event",{"_index":2420,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["oneditclicked",{"_index":781,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["onfilter",{"_index":949,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["onfilter(evt",{"_index":993,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["onfilterchange",{"_index":1988,"title":{},"body":{"components/HomePage.html":{}}}],["onfilterchange(filtervalues",{"_index":1998,"title":{},"body":{"components/HomePage.html":{}}}],["onincidentclick",{"_index":2199,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["onincidentclick(event",{"_index":2209,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["onincidentclicked",{"_index":2200,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onloadcategories",{"_index":950,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["onresize",{"_index":778,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onresize(event",{"_index":820,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onsnapshot",{"_index":1657,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsub",{"_index":2318,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["onsubmit",{"_index":2319,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["ontrashclicked",{"_index":782,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["onuserclicked",{"_index":2274,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onuserclicked(popover",{"_index":2643,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["opendialog",{"_index":1157,"title":{},"body":{"components/DataPage.html":{}}}],["opendialog(category",{"_index":1198,"title":{},"body":{"components/DataPage.html":{}}}],["openfiltermodal",{"_index":1989,"title":{},"body":{"components/HomePage.html":{}}}],["opens",{"_index":1168,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/UserDataPage.html":{}}}],["operation",{"_index":707,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["operations",{"_index":854,"title":{},"body":{"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["operators",{"_index":1526,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["optional",{"_index":255,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":1889,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["options",{"_index":2084,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["original",{"_index":867,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseDataService.html":{}}}],["originalname",{"_index":865,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["otherwise",{"_index":760,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"injectables/IncidentsService.html":{}}}],["out",{"_index":177,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DataPageModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["outlet",{"_index":248,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["outline",{"_index":2527,"title":{},"body":{"components/SettingsPage.html":{}}}],["output",{"_index":795,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["output('clicked",{"_index":2290,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["outputs",{"_index":780,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["overflow",{"_index":59,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{}}}],["overview",{"_index":2833,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":572,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["package",{"_index":2773,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":369,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["page",{"_index":450,"title":{},"body":{"guards/AdminGuard.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"components/HomePage.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["page:number",{"_index":2357,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["pagecount",{"_index":1631,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["pagecount:number",{"_index":2359,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["pages/user",{"_index":665,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pagesize",{"_index":1629,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["pagesize:number",{"_index":2358,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["paginated",{"_index":1332,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["paginateddata",{"_index":1334,"title":{"interfaces/PaginatedData.html":{}},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["pagination",{"_index":1628,"title":{"interfaces/Pagination.html":{}},"body":{"classes/FirebaseDataService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["pagination:pagination",{"_index":2362,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["papaparse",{"_index":2807,"title":{},"body":{"dependencies.html":{}}}],["para",{"_index":37,"title":{},"body":{"components/AboutPage.html":{}}}],["param",{"_index":318,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["parameter",{"_index":223,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":219,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1329,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["params.get('id",{"_index":2141,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["params['error",{"_index":321,"title":{},"body":{"components/AccessPage.html":{}}}],["parent",{"_index":2341,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["particularly",{"_index":1959,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["pass",{"_index":1803,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["passes",{"_index":2343,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["passing",{"_index":792,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["password",{"_index":280,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{}}}],["password.match(/^(?=.*[a",{"_index":2376,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["password:string",{"_index":2614,"title":{},"body":{"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["passwordcontrolname",{"_index":2371,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch",{"_index":2366,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch(passwordcontrolname",{"_index":2368,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto",{"_index":2367,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto(controlname",{"_index":2372,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation",{"_index":2364,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["passwordvalidation.passwordmatch('password",{"_index":2473,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["passwordvalidation.passwordproto",{"_index":2471,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["patch",{"_index":2057,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["patch(url",{"_index":2067,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["path",{"_index":195,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["pathmatch",{"_index":679,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":2375,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["pdf",{"_index":1759,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["performs",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["period",{"_index":756,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["persistence",{"_index":1720,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["photo",{"_index":2363,"title":{"interfaces/Photo.html":{}},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["picture",{"_index":145,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["picture_selectable_value_accessor",{"_index":2389,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picturemodal",{"_index":2398,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["pictureselectablecomponent",{"_index":144,"title":{"components/PictureSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pinned",{"_index":2079,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["pipe",{"_index":745,"title":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}},"body":{"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["pipe(map",{"_index":929,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["pipe(map((_",{"_index":1646,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["pipe(switchmap((doc",{"_index":1643,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["pipes",{"_index":746,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{},"index.html":{}}}],["pipetransform",{"_index":767,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["platform",{"_index":597,"title":{},"body":{"modules/AppModule.html":{}}}],["player",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["plugins",{"_index":2194,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["png",{"_index":1774,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["pointer",{"_index":389,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["pointing",{"_index":1966,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["popover",{"_index":982,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["popover.dismiss",{"_index":1058,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["populates",{"_index":2574,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["porque",{"_index":916,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["position",{"_index":53,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["post",{"_index":346,"title":{},"body":{"components/AccessPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["post(resource",{"_index":1322,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["post(url",{"_index":2073,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["postregister",{"_index":1467,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["postregister(info",{"_index":1505,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["potential",{"_index":2410,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["prefix",{"_index":1767,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["preloadallmodules",{"_index":660,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":694,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preventing",{"_index":2409,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["primary",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng",{"_index":2809,"title":{},"body":{"dependencies.html":{}}}],["primeng/accordion",{"_index":1309,"title":{},"body":{"modules/DataPageModule.html":{},"modules/SettingsPageModule.html":{}}}],["primeng/api",{"_index":311,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["primeng/chart",{"_index":2552,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/divider",{"_index":630,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dropdown",{"_index":634,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/toast",{"_index":423,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{}}}],["private",{"_index":319,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["problemas",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["process",{"_index":290,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["production",{"_index":2861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1502,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"injectables/UsersService.html":{}}}],["project",{"_index":2844,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":1705,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":457,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise((resolve",{"_index":1806,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise(async",{"_index":1778,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["propagate",{"_index":1008,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["propagatechange",{"_index":944,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["propagating",{"_index":1027,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["properly",{"_index":2406,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["properties",{"_index":202,"title":{"properties.html":{}},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"interfaces/incidentInfo.html":{},"properties.html":{}}}],["property",{"_index":264,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["protected",{"_index":533,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["provide",{"_index":426,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":600,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":242,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"components/UpdateUserComponent.html":{},"injectables/UsersService.html":{}}}],["providedin",{"_index":472,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}}}],["providelottieoptions",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":2090,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["providers",{"_index":169,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"index.html":{}}}],["provides",{"_index":232,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"miscellaneous/functions.html":{}}}],["providing",{"_index":1600,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["public",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["puede",{"_index":914,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["put",{"_index":1313,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["put(resource",{"_index":1324,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["put(url",{"_index":2075,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["q",{"_index":1863,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["que",{"_index":1844,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query",{"_index":218,"title":{},"body":{"components/AccessPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query(resource",{"_index":1328,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["queryparams",{"_index":481,"title":{},"body":{"guards/AdminGuard.html":{}}}],["querysnapshot",{"_index":1737,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["querysnapshot.docs.map((doc",{"_index":1740,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["radius",{"_index":1279,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["raw",{"_index":1750,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reactive",{"_index":1310,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["reactiveformsmodule",{"_index":399,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/UserDataPageModule.html":{}}}],["reader",{"_index":2443,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onerror",{"_index":2447,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onload",{"_index":2445,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.readasdataurl(file",{"_index":2449,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["readonly",{"_index":2104,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["real",{"_index":1874,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["received",{"_index":1486,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["recent",{"_index":1881,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["redirects",{"_index":449,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["redirectto",{"_index":678,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":1669,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ref(this._webstorage",{"_index":1789,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reference",{"_index":1101,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["refers",{"_index":1754,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reflect",{"_index":1520,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["refreshed",{"_index":1531,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["refreshes",{"_index":1524,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["register",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["register(info",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["registered",{"_index":293,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{}}}],["registerformcomponent",{"_index":146,"title":{"components/RegisterFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["registeronchange",{"_index":951,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registeronchange(fn",{"_index":999,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registerontouched",{"_index":952,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registerontouched(fn",{"_index":1004,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registers",{"_index":285,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registeruser",{"_index":205,"title":{},"body":{"components/AccessPage.html":{}}}],["registeruser(data",{"_index":282,"title":{},"body":{"components/AccessPage.html":{}}}],["registration",{"_index":289,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{}}}],["reject",{"_index":1780,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject('document",{"_index":1856,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(err",{"_index":1811,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(error",{"_index":1786,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["rejected",{"_index":1939,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["rejects",{"_index":1849,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["related",{"_index":250,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{}}}],["relative",{"_index":54,"title":{},"body":{"components/AboutPage.html":{},"components/CategoriesInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["relevant",{"_index":294,"title":{},"body":{"components/AccessPage.html":{}}}],["remarks",{"_index":1212,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["removed",{"_index":1869,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["repeat",{"_index":379,"title":{},"body":{"components/AccessPage.html":{}}}],["reppassword",{"_index":2472,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["represent",{"_index":1749,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["representing",{"_index":705,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["represents",{"_index":302,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["request",{"_index":2062,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["requested",{"_index":1610,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["required",{"_index":1918,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reset",{"_index":176,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["resetfilters",{"_index":1365,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["resetrequested",{"_index":1369,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["resets",{"_index":1380,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["resetsignal",{"_index":956,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["resetting",{"_index":969,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["resize",{"_index":806,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["resolutions",{"_index":1968,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["resolve",{"_index":1779,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(deleteuser(this._user",{"_index":1940,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(docref.id",{"_index":1810,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(false",{"_index":1903,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(null",{"_index":1926,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(this._auth!.currentuser",{"_index":1904,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolved",{"_index":1394,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/IncidentDataPage.html":{},"interfaces/incidentInfo.html":{}}}],["resolvedvalue",{"_index":2028,"title":{},"body":{"components/HomePage.html":{}}}],["resolves",{"_index":458,"title":{},"body":{"guards/AdminGuard.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resource",{"_index":1317,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["resource.split('/')[0",{"_index":1642,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["resource.split('/')[1",{"_index":1634,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["resources",{"_index":2828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["respectively",{"_index":1473,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["response",{"_index":1902,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{}}}],["responsetype",{"_index":2106,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["resueltos",{"_index":1412,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["result",{"_index":706,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["resulting",{"_index":1333,"title":{},"body":{"injectables/DataService.html":{}}}],["results",{"_index":161,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.data",{"_index":1263,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["results.data.picture",{"_index":2516,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["results?.data",{"_index":1264,"title":{},"body":{"components/DataPage.html":{}}}],["results?.data?.picture",{"_index":2511,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["results?.data?.picture?.substring(0",{"_index":2512,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["retrieve",{"_index":1128,"title":{},"body":{"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ItemUserComponent.html":{}}}],["retrieved",{"_index":1321,"title":{},"body":{"injectables/DataService.html":{}}}],["retrieves",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["retrieving",{"_index":2285,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["return",{"_index":475,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"classes/PasswordValidation.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LocalService.html":{},"pipes/ShortenTextPipe.html":{},"injectables/UsersService.html":{}}}],["returning",{"_index":465,"title":{},"body":{"guards/AdminGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["rgba(0",{"_index":1294,"title":{},"body":{"components/DataPage.html":{}}}],["rgba(71",{"_index":1417,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["right",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{}}}],["rni3rcpqs7xmtbh4",{"_index":2863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":286,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["roles",{"_index":2602,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["roles.map(role",{"_index":2604,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["rolescount",{"_index":2599,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["rolescount[role",{"_index":2607,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["root",{"_index":473,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":106,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["route",{"_index":212,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["router",{"_index":214,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["routereusestrategy",{"_index":593,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":192,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":196,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":693,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":445,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":191,"title":{"routes.html":{}},"body":{"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["routing.module.ts",{"_index":190,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["row",{"_index":366,"title":{},"body":{"components/AccessPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{}}}],["rxjs",{"_index":468,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/PictureSelectableComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":869,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["rxjs/operators",{"_index":470,"title":{},"body":{"guards/AdminGuard.html":{}}}],["same",{"_index":1967,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["save",{"_index":1814,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["screen",{"_index":788,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["se",{"_index":913,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["search",{"_index":975,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["searching",{"_index":1862,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["security",{"_index":1921,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["seems",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["select",{"_index":1012,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selectable",{"_index":114,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable'},{'name",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["selectable.component",{"_index":2045,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SharedModule.html":{}}}],["selectable.component.html",{"_index":940,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.scss",{"_index":939,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts",{"_index":937,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable.component.ts:109",{"_index":2645,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:110",{"_index":1000,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:116",{"_index":2421,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:118",{"_index":2646,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:119",{"_index":1005,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:124",{"_index":2402,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:125",{"_index":2648,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:126",{"_index":1015,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:132",{"_index":2641,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:133",{"_index":986,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:141",{"_index":2638,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:142",{"_index":976,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:150",{"_index":2640,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:151",{"_index":984,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:157",{"_index":2642,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:158",{"_index":994,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:167",{"_index":2644,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:168",{"_index":990,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:177",{"_index":2637,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:178",{"_index":973,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:187",{"_index":2639,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:188",{"_index":979,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:19",{"_index":2427,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:20",{"_index":2430,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:21",{"_index":2428,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:22",{"_index":2397,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:30",{"_index":966,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:32",{"_index":1023,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:33",{"_index":1025,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:34",{"_index":1022,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:35",{"_index":2403,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:39",{"_index":2413,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:41",{"_index":962,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:44",{"_index":2431,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:46",{"_index":959,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:50",{"_index":2426,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:55",{"_index":1024,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:56",{"_index":1026,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:61",{"_index":2423,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:62",{"_index":997,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:69",{"_index":2424,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:75",{"_index":2425,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:80",{"_index":1009,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:83",{"_index":2401,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:94",{"_index":2417,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:98",{"_index":2649,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:99",{"_index":1018,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable/category",{"_index":936,"title":{},"body":{"components/CategorySelectableComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable/picture",{"_index":2388,"title":{},"body":{"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable/user",{"_index":2048,"title":{},"body":{"modules/HomePageModule.html":{},"components/UserSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcategory",{"_index":953,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["selectcategory(id",{"_index":1007,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["selected",{"_index":965,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selecting",{"_index":992,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selection",{"_index":970,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["selects",{"_index":1010,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selectuser",{"_index":2636,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selectuser(id",{"_index":2647,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["server",{"_index":2083,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/UserDataPage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":230,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["services",{"_index":228,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["services/auth.service",{"_index":471,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["set",{"_index":1039,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setcategory(_category",{"_index":1030,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["setcategoryinfo(category",{"_index":2346,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["setdisabledstate",{"_index":954,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1014,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":1052,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setdoc",{"_index":1659,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setdoc(docref",{"_index":1820,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setfilters",{"_index":1366,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["setitem(_item",{"_index":2286,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["setlanguage",{"_index":2487,"title":{},"body":{"components/SettingsPage.html":{}}}],["setlanguage(lang",{"_index":2492,"title":{},"body":{"components/SettingsPage.html":{}}}],["setmode(m",{"_index":2347,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["setresolvedincident",{"_index":2124,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["setresolvedincident(incident",{"_index":2130,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["sets",{"_index":810,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["setservertrustmode",{"_index":2058,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["setservertrustmode(mode",{"_index":2077,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["setter",{"_index":963,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ItemCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setting",{"_index":964,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ItemCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["settings",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{}}}],["settings'},{'name",{"_index":149,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["settings.page",{"_index":2534,"title":{},"body":{"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{}}}],["settings.page.html",{"_index":2485,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page.scss",{"_index":2484,"title":{},"body":{"components/SettingsPage.html":{}}}],["settingspage",{"_index":148,"title":{"components/SettingsPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["settingspagemodule",{"_index":2528,"title":{"modules/SettingsPageModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"index.html":{},"modules.html":{}}}],["settingspageroutingmodule",{"_index":2532,"title":{"modules/SettingsPageRoutingModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["setuser(_user",{"_index":2650,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setuserinfo(user",{"_index":2580,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["severity",{"_index":358,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["shadow",{"_index":565,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["shared",{"_index":430,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["shared/shared.module",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":397,"title":{"modules/SharedModule.html":{}},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["shortentext",{"_index":2233,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{}}}],["shortentextpipe",{"_index":2540,"title":{"pipes/ShortenTextPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"coverage.html":{},"index.html":{}}}],["showall",{"_index":1990,"title":{},"body":{"components/HomePage.html":{}}}],["showerror",{"_index":206,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["showerror(text",{"_index":297,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["showing",{"_index":1996,"title":{},"body":{"components/HomePage.html":{}}}],["showrolefield",{"_index":2572,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["shows",{"_index":2003,"title":{},"body":{"components/HomePage.html":{}}}],["showsuccess",{"_index":207,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["showsuccess(text",{"_index":303,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["sign",{"_index":1494,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signal",{"_index":968,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["signaling",{"_index":1375,"title":{},"body":{"components/FilterComponent.html":{}}}],["signed",{"_index":1894,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanon",{"_index":1892,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanon=false",{"_index":1891,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously",{"_index":1676,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth",{"_index":1785,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth!).catch((error",{"_index":1911,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signing",{"_index":1895,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinwithemailandpassword",{"_index":1677,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout",{"_index":1493,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(signinanon",{"_index":1898,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(this._auth",{"_index":1795,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signs",{"_index":1888,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["simplechanges",{"_index":1032,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["single",{"_index":1320,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["size",{"_index":69,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["slogan",{"_index":75,"title":{},"body":{"components/AboutPage.html":{}}}],["snapshot",{"_index":452,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["snapshot.data",{"_index":1886,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["snippet",{"_index":2468,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["social",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["solid",{"_index":570,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{},"dependencies.html":{}}}],["solucionar",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["solución",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["something",{"_index":1772,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["space",{"_index":51,"title":{},"body":{"components/AboutPage.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{}}}],["span",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["special",{"_index":1936,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["specific",{"_index":273,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["specified",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"classes/PasswordValidation.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{}}}],["specifies",{"_index":1755,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["specify",{"_index":1859,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["split",{"_index":1615,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["src/.../app.module.ts",{"_index":2818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../blob.ts",{"_index":2820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../category",{"_index":2849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../picture",{"_index":2852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../translate.ts",{"_index":2819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user",{"_index":2853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":659,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:102",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":515,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:62",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:69",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:76",{"_index":526,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:90",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":589,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":435,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:16",{"_index":437,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:42",{"_index":446,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":695,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:17",{"_index":698,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:37",{"_index":703,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/helpers/blob",{"_index":2497,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["src/app/core/helpers/blob.ts",{"_index":2714,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/interfaces/category",{"_index":825,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/CategoryInfo.html":{},"components/DataPage.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["src/app/core/interfaces/data",{"_index":1621,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["src/app/core/interfaces/data.ts",{"_index":2356,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["src/app/core/interfaces/incidents",{"_index":2007,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["src/app/core/interfaces/user",{"_index":312,"title":{},"body":{"components/AccessPage.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["src/app/core/pipes/capitalize",{"_index":747,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/shorten",{"_index":2556,"title":{},"body":{"pipes/ShortenTextPipe.html":{},"coverage.html":{}}}],["src/app/core/services/api/categories.service",{"_index":1035,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{}}}],["src/app/core/services/api/categories.service.ts",{"_index":848,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/app/core/services/api/categories.service.ts:116",{"_index":866,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:19",{"_index":853,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:27",{"_index":862,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:37",{"_index":856,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:80",{"_index":859,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/incidents.service",{"_index":2138,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["src/app/core/services/api/incidents.service.ts",{"_index":2247,"title":{},"body":{"injectables/IncidentsService.html":{},"coverage.html":{}}}],["src/app/core/services/api/incidents.service.ts:27",{"_index":2257,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/incidents.service.ts:42",{"_index":2260,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/incidents.service.ts:9",{"_index":2250,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/users.service",{"_index":2215,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["src/app/core/services/api/users.service.ts",{"_index":2691,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/core/services/api/users.service.ts:10",{"_index":2693,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:32",{"_index":2695,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:46",{"_index":2698,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/auth.service",{"_index":313,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:10",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:11",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:12",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:19",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:26",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:31",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:44",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:9",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/data.service.ts",{"_index":1312,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/core/services/data.service.ts:15",{"_index":1330,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:25",{"_index":1319,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:33",{"_index":1323,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:41",{"_index":1325,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:48",{"_index":1315,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/filter/filter.service",{"_index":1388,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{}}}],["src/app/core/services/filter/filter.service.ts",{"_index":1450,"title":{},"body":{"injectables/FilterService.html":{},"coverage.html":{}}}],["src/app/core/services/filter/filter.service.ts:16",{"_index":1458,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter/filter.service.ts:25",{"_index":1455,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter/filter.service.ts:32",{"_index":1456,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter/filter.service.ts:9",{"_index":1459,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/firebase/api/firebase",{"_index":1464,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["src/app/core/services/firebase/firebase.service",{"_index":1036,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["src/app/core/services/firebase/firebase.service.ts",{"_index":1648,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["src/app/core/services/http/http",{"_index":2054,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["src/app/core/services/media.service",{"_index":2500,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["src/app/core/services/media.service.ts",{"_index":2333,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["src/app/core/services/media.service.ts:13",{"_index":2334,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/core/services/translate/local.service.ts",{"_index":2303,"title":{},"body":{"injectables/LocalService.html":{},"coverage.html":{}}}],["src/app/core/services/translate/local.service.ts:8",{"_index":2306,"title":{},"body":{"injectables/LocalService.html":{}}}],["src/app/core/services/translate/translate.service",{"_index":314,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["src/app/core/services/translate/translate.service.ts",{"_index":1116,"title":{},"body":{"injectables/CustomTranslateService.html":{},"coverage.html":{}}}],["src/app/core/services/translate/translate.service.ts:11",{"_index":1122,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:26",{"_index":1130,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:37",{"_index":1133,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:47",{"_index":1129,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:57",{"_index":1125,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:8",{"_index":1136,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/translate/translate",{"_index":411,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["src/app/core/translate/translate.ts",{"_index":2745,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/validators/email",{"_index":2466,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["src/app/core/validators/email.ts",{"_index":1338,"title":{},"body":{"classes/EmailValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/email.ts:14",{"_index":1341,"title":{},"body":{"classes/EmailValidation.html":{}}}],["src/app/core/validators/password",{"_index":2467,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["src/app/core/validators/password.ts",{"_index":2365,"title":{},"body":{"classes/PasswordValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/password.ts:13",{"_index":2373,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/core/validators/password.ts:35",{"_index":2370,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/pages/about/about",{"_index":189,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/about/about.page.ts:12",{"_index":26,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:8",{"_index":25,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/access/access",{"_index":431,"title":{},"body":{"modules/AccessPageRoutingModule.html":{}}}],["src/app/pages/access/access.module.ts",{"_index":398,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["src/app/pages/access/access.page.ts",{"_index":197,"title":{},"body":{"components/AccessPage.html":{},"coverage.html":{}}}],["src/app/pages/access/access.page.ts:106",{"_index":267,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:129",{"_index":304,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:146",{"_index":299,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:19",{"_index":215,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:55",{"_index":281,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:60",{"_index":261,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:72",{"_index":284,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/login",{"_index":2314,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/pages/access/register",{"_index":2460,"title":{},"body":{"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["src/app/pages/data/data",{"_index":1311,"title":{},"body":{"modules/DataPageRoutingModule.html":{}}}],["src/app/pages/data/data.module.ts",{"_index":1302,"title":{},"body":{"modules/DataPageModule.html":{}}}],["src/app/pages/data/data.page.ts",{"_index":1149,"title":{},"body":{"components/DataPage.html":{},"coverage.html":{}}}],["src/app/pages/data/data.page.ts:105",{"_index":1174,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:127",{"_index":1199,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:145",{"_index":1205,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:154",{"_index":1181,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:179",{"_index":1167,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:210",{"_index":1171,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:22",{"_index":1163,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:229",{"_index":1203,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:249",{"_index":1202,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:40",{"_index":1207,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:44",{"_index":1197,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:54",{"_index":1183,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:75",{"_index":1193,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/modal",{"_index":2335,"title":{},"body":{"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/category",{"_index":935,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/home/filter",{"_index":1428,"title":{},"body":{"components/FilterMobileComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/filter/filter.component.ts",{"_index":1361,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/filter/filter.component.ts:19",{"_index":1376,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:24",{"_index":1373,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:26",{"_index":1372,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:47",{"_index":1378,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:55",{"_index":1377,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:77",{"_index":1384,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:88",{"_index":1382,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:96",{"_index":1379,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/home",{"_index":2053,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":2043,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1983,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:19",{"_index":1992,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:33",{"_index":2006,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:43",{"_index":1994,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:53",{"_index":2001,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:72",{"_index":1995,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:86",{"_index":2002,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:95",{"_index":1999,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/item",{"_index":2269,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/user",{"_index":2633,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/incident",{"_index":2120,"title":{},"body":{"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings",{"_index":2535,"title":{},"body":{"modules/SettingsPageRoutingModule.html":{}}}],["src/app/pages/settings/settings.module.ts",{"_index":2533,"title":{},"body":{"modules/SettingsPageModule.html":{}}}],["src/app/pages/settings/settings.page.ts",{"_index":2483,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings.page.ts:108",{"_index":2493,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:19",{"_index":2495,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:20",{"_index":2489,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:52",{"_index":2491,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:69",{"_index":2494,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/user",{"_index":2571,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/shared/components/categories",{"_index":769,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/confirm",{"_index":1090,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"coverage.html":{}}}],["src/app/shared/components/incidents",{"_index":2165,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/picture",{"_index":2387,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/user",{"_index":2594,"title":{},"body":{"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/users",{"_index":2674,"title":{},"body":{"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module",{"_index":421,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/UserDataPageModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2541,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":617,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":2769,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2770,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":2558,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["start",{"_index":2035,"title":{},"body":{"components/HomePage.html":{},"components/PictureSelectableComponent.html":{}}}],["state",{"_index":444,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["statements",{"_index":2705,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1339,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["status",{"_index":702,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["storage",{"_index":1746,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["storagebucket",{"_index":1706,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["storageref",{"_index":1788,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["store",{"_index":1813,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stored",{"_index":1612,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stores",{"_index":1514,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stream",{"_index":2696,"title":{},"body":{"injectables/UsersService.html":{}}}],["string",{"_index":298,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{}}}],["strong",{"_index":1933,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["structure",{"_index":1617,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["style",{"_index":334,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["su",{"_index":927,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["subheader",{"_index":841,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["subject",{"_index":1134,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(mapfunction(data",{"_index":1887,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(snapshot.docs.map((doc",{"_index":1877,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["submission",{"_index":2323,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["subscr.complete",{"_index":1555,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.error('cannot",{"_index":1552,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.error(err",{"_index":1556,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.next(_info",{"_index":1563,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.next(data",{"_index":1554,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscribe",{"_index":1268,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribe((chartdata",{"_index":2190,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["subscribe((user",{"_index":2505,"title":{},"body":{"components/SettingsPage.html":{}}}],["subscribe(chartdata",{"_index":2612,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["subscribers",{"_index":1883,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribes",{"_index":217,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["subscribetocollection",{"_index":1872,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetodocument",{"_index":1879,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetofilterstate",{"_index":1367,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["subscribing",{"_index":1997,"title":{},"body":{"components/HomePage.html":{}}}],["subscriptions",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["substring",{"_index":1828,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["success",{"_index":305,"title":{},"body":{"components/AccessPage.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["successful",{"_index":1487,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["successfully",{"_index":858,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{}}}],["such",{"_index":279,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["super",{"_index":1535,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{}}}],["support",{"_index":2838,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":1571,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["svg",{"_index":2791,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["switch",{"_index":338,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{}}}],["switch(backend",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["switchmap",{"_index":871,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["switchmap((doc",{"_index":1638,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["switchmap((docref",{"_index":894,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["switchmap((existingcategories",{"_index":877,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["switchmap((incidents",{"_index":909,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["t",{"_index":1316,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/PaginatedData.html":{}}}],["table",{"_index":2772,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2771,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":873,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["take(1",{"_index":2262,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["takes",{"_index":296,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["tap",{"_index":708,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{}}}],["tap(logged",{"_index":710,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tasks",{"_index":1529,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["terminated",{"_index":2407,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["text",{"_index":62,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["text.pipe",{"_index":2546,"title":{},"body":{"modules/SharedModule.html":{}}}],["text.pipe.ts",{"_index":2557,"title":{},"body":{"pipes/ShortenTextPipe.html":{},"coverage.html":{}}}],["text.pipe.ts:23",{"_index":2560,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["text/csv;charset=utf",{"_index":1240,"title":{},"body":{"components/DataPage.html":{}}}],["tfcchato",{"_index":2857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["then((_",{"_index":1144,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["then((credentials",{"_index":1548,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["then((data",{"_index":1977,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["then((dataobject",{"_index":1215,"title":{},"body":{"components/DataPage.html":{}}}],["then((docref",{"_index":1809,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["then(async",{"_index":1792,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._app",{"_index":1712,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth",{"_index":1718,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth!.currentuser",{"_index":1906,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth!.currentuser.isanonymous",{"_index":1907,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.currentuser",{"_index":1784,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.onauthstatechanged(async",{"_index":1721,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.signout",{"_index":1899,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categories",{"_index":1730,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categories.asobservable",{"_index":1694,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categoryservice",{"_index":1265,"title":{},"body":{"components/DataPage.html":{}}}],["this._categoryservice.createcategory(results?.data).subscribe",{"_index":1272,"title":{},"body":{"components/DataPage.html":{}}}],["this._categoryservice.deletecategory(info).subscribe",{"_index":1273,"title":{},"body":{"components/DataPage.html":{}}}],["this._db",{"_index":1714,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._firebaseservice",{"_index":1213,"title":{},"body":{"components/DataPage.html":{}}}],["this._firebaseservice.incidents",{"_index":2176,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["this._firebaseservice.users$.pipe",{"_index":2597,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["this._incidents",{"_index":1732,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._incidents.asobservable",{"_index":1692,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.asobservable",{"_index":1688,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(false",{"_index":1733,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(true",{"_index":1725,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._item",{"_index":2289,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["this._language.asobservable",{"_index":1137,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._language.getvalue",{"_index":1147,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._language.next(language",{"_index":1145,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._logged.asobservable",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["this._logged.next(false",{"_index":1541,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._logged.next(true",{"_index":1539,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._picture.asobservable",{"_index":2429,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.complete",{"_index":2433,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(obj",{"_index":2435,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(picture",{"_index":2437,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._router.navigate(['/data",{"_index":2626,"title":{},"body":{"components/UserDataPage.html":{}}}],["this._user",{"_index":1722,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._user.asobservable",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["this._user.next(data",{"_index":1538,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.next(null",{"_index":1542,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.next(user",{"_index":1594,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.value?.uuid",{"_index":1593,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._users",{"_index":1727,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._users.asobservable",{"_index":1690,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._webstorage",{"_index":1716,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.auth.islogged$.pipe",{"_index":709,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.islogged$.subscribe((logged",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.login(_data).subscribe",{"_index":349,"title":{},"body":{"components/AccessPage.html":{}}}],["this.auth.logout",{"_index":479,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.auth.logout().subscribe(async",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.register(_data).subscribe",{"_index":326,"title":{},"body":{"components/AccessPage.html":{}}}],["this.auth.updateuser(data).subscribe",{"_index":2702,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.auth.user",{"_index":2686,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.auth.user$.pipe",{"_index":476,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.auth.user$.subscribe(currentuser",{"_index":2588,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.browserlanguage",{"_index":2311,"title":{},"body":{"injectables/LocalService.html":{}}}],["this.categories",{"_index":1043,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.categoryselected",{"_index":1048,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.categoryservice.getcategory(id).then((category",{"_index":1047,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.changepicture",{"_index":2451,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.changepicture(reader.result",{"_index":2446,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.checkscreensize(event.target.innerwidth",{"_index":829,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.checkscreensize(window.innerwidth",{"_index":826,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.clearselection",{"_index":1055,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.clicked.emit(this._item",{"_index":2291,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["this.connectanonymously",{"_index":1900,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.createbody(body",{"_index":2110,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.createheaders(headers",{"_index":2108,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.currentlang",{"_index":2501,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.data",{"_index":2191,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["this.deletecategory(category",{"_index":1255,"title":{},"body":{"components/DataPage.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1252,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.dialogref.close",{"_index":1113,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.disabled",{"_index":1053,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.downloadcsv(csvcontent",{"_index":1220,"title":{},"body":{"components/DataPage.html":{}}}],["this.fileupload(blob",{"_index":1799,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.filter",{"_index":1060,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.filter(evt.detail.value",{"_index":1056,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.filteredincidents",{"_index":2017,"title":{},"body":{"components/HomePage.html":{}}}],["this.filterservice.getfilter().subscribe((filtervalues",{"_index":2015,"title":{},"body":{"components/HomePage.html":{}}}],["this.filterservice.getfilter().subscribe((formstate",{"_index":1403,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.filterservice.getfilter().value",{"_index":1398,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.filterservice.updatefilterstate(this.form",{"_index":1408,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.filterstate",{"_index":1461,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.filterstate.next(form",{"_index":1460,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.filterstate.next(initialform",{"_index":1463,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.firebase",{"_index":1976,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["this.firebase.categories$.subscribe",{"_index":1042,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.firebase.deletedocument",{"_index":1645,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.getdocument(resource.split('/')[0",{"_index":1633,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.updatedocument",{"_index":1641,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.users$.subscribe",{"_index":2652,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.firebaseservice",{"_index":920,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.categories$.pipe",{"_index":876,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.createdocument('categoryinfo",{"_index":893,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.getdocument('categoryinfo",{"_index":875,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.incidents",{"_index":2005,"title":{},"body":{"components/HomePage.html":{}}}],["this.firebaseservice.incidents$.pipe",{"_index":908,"title":{},"body":{"injectables/CategoriesService.html":{},"components/HomePage.html":{},"injectables/IncidentsService.html":{}}}],["this.firebaseservice.updatedocument",{"_index":928,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.updatedocument('categoryinfo",{"_index":897,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user",{"_index":887,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user.email",{"_index":891,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user.uid",{"_index":889,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.users",{"_index":2685,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.firebaseservice.users$.pipe",{"_index":2699,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.firebasesvc",{"_index":1544,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.createdocumentwithid",{"_index":1570,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.getdocument('userinfo",{"_index":1578,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.islogged$.subscribe((logged",{"_index":1536,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.updatedocument('userinfo",{"_index":1590,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.user.uid",{"_index":1579,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.user?.uid",{"_index":1561,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.form",{"_index":1389,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.form.controls['description'].setvalue(category.description",{"_index":2350,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['name'].setvalue(category.name",{"_index":2349,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['name'].setvalue(user.name",{"_index":2583,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['picture'].setvalue(user.picture",{"_index":2582,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['role'].setvalue(user.role",{"_index":2587,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['surname'].setvalue(user.surname",{"_index":2584,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['username'].setvalue(user.username",{"_index":2585,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['uuid'].setvalue(category.uuid",{"_index":2351,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['uuid'].setvalue(user.uuid",{"_index":2586,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.reset",{"_index":1409,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.form.setvalue(formstate.value",{"_index":1405,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.formattedday",{"_index":2219,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.formattedtime",{"_index":2221,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.formbuilder.group",{"_index":1447,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.get(resource",{"_index":1639,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.get(resource).pipe",{"_index":1644,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.hasvalue",{"_index":2434,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.httpclient.delete(url",{"_index":2114,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.get(url",{"_index":2105,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.patch(url",{"_index":2113,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.post(url",{"_index":2109,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.put(url",{"_index":2111,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.incident",{"_index":2143,"title":{},"body":{"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{}}}],["this.incident.date",{"_index":2217,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.incident.resolved",{"_index":2147,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentid",{"_index":2140,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.getincidentbyid(this.incidentid).subscribe",{"_index":2142,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.updateincident(incident",{"_index":2144,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.updateincident(incident).subscribe",{"_index":2146,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.init",{"_index":1139,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.init(config",{"_index":1696,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.initform",{"_index":1396,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.initialauthresolved",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdisabled",{"_index":2436,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.isscreensmall",{"_index":830,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.isuserconnected",{"_index":1909,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.isuserconnectedanonymously",{"_index":1910,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.jsontocsv(dataobject",{"_index":1217,"title":{},"body":{"components/DataPage.html":{}}}],["this.lang.use(this.browserlanguage",{"_index":2313,"title":{},"body":{"injectables/LocalService.html":{}}}],["this.login",{"_index":323,"title":{},"body":{"components/AccessPage.html":{}}}],["this.me().subscribe",{"_index":1537,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.me().subscribe((data",{"_index":1553,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.media.upload(blob).subscribe((media",{"_index":2515,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this.message",{"_index":1112,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.messageservice.add",{"_index":355,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.mod",{"_index":2353,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.modal.dismiss('reset",{"_index":1449,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["this.modal.dismiss(null",{"_index":1448,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.modal.dismiss(this.form.value",{"_index":2354,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.mymodal.create",{"_index":1258,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this.oneditclicked.emit(category",{"_index":828,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["this.onfilterchange(filtervalues",{"_index":2016,"title":{},"body":{"components/HomePage.html":{}}}],["this.onfilterchange(results.data",{"_index":2014,"title":{},"body":{"components/HomePage.html":{}}}],["this.onincidentclicked.emit(this.incident?.uuid",{"_index":2230,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.onsubmit.emit(this.form?.value",{"_index":2326,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.ontrashclicked.emit(category",{"_index":827,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["this.onuserclicked.emit(userid",{"_index":2690,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.options",{"_index":2193,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["this.picturemodal?.dismiss",{"_index":2452,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.postregister(_info).subscribe((data",{"_index":1562,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.propagatechange",{"_index":1051,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.propagatechange(picture",{"_index":2438,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.propagatechange(this.categoryselected.data.name",{"_index":1049,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.propagatechange(this.userselected.uuid",{"_index":2656,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.resetrequested.emit",{"_index":1410,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.resetsignal.subscribe",{"_index":1054,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.route.parammap.subscribe((params",{"_index":2139,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":320,"title":{},"body":{"components/AccessPage.html":{}}}],["this.router.createurltree([this.homeurl",{"_index":711,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.createurltree([this.loginurl",{"_index":712,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/about",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/access",{"_index":480,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{}}}],["this.router.navigate(['/access']).catch(err",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/data",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentDataPage.html":{}}}],["this.router.navigate(['/home']).catch(err",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home/incident",{"_index":2012,"title":{},"body":{"components/HomePage.html":{}}}],["this.router.navigate(['/settings",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate([`/data/user/${userid",{"_index":1256,"title":{},"body":{"components/DataPage.html":{}}}],["this.router.url.includes(url",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["this.selectcategory(category.uuid",{"_index":1057,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.selectcategory(obj.name",{"_index":1050,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.selectcategory(undefined",{"_index":1061,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.selectuser(obj.name",{"_index":2657,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.selectuser(undefined",{"_index":2659,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.selectuser(user.uuid",{"_index":2658,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.showall",{"_index":2013,"title":{},"body":{"components/HomePage.html":{}}}],["this.showerror('cant",{"_index":1270,"title":{},"body":{"components/DataPage.html":{}}}],["this.showerror('emailuser",{"_index":343,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('error",{"_index":2148,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.showerror('failregister",{"_index":347,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('loginerror",{"_index":352,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('unknown",{"_index":348,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('waitadmin",{"_index":322,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showrolefield",{"_index":2590,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.showsuccess('good",{"_index":1269,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.showsuccess('waitadmin",{"_index":331,"title":{},"body":{"components/AccessPage.html":{}}}],["this.subscribetocollection",{"_index":1729,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetocollection('userinfo",{"_index":1726,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetofilterstate",{"_index":1395,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.translate.addlangs(['es",{"_index":1140,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.get(`forms.${role",{"_index":2605,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["this.translate.get(key",{"_index":1148,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.get(message).subscribe",{"_index":354,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.translate.getcurrentlang",{"_index":2502,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.translate.setdefaultlang(this._language.value",{"_index":1142,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.use(lang",{"_index":2520,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.user",{"_index":2506,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this.userid",{"_index":2624,"title":{},"body":{"components/UserDataPage.html":{}}}],["this.username",{"_index":2228,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.users",{"_index":2653,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.userselected",{"_index":2655,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.userservice",{"_index":2503,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.userservice.getuserbyid(id).subscribe",{"_index":2654,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.userservice.getuserbyid(this.incident.userid).subscribe((user",{"_index":2227,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.userservice.getuserbyid(this.userid).subscribe((user",{"_index":2625,"title":{},"body":{"components/UserDataPage.html":{}}}],["this.userservice.updateuser(results.data",{"_index":2518,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this?.form?.get('role')?.setvalue('admin",{"_index":2591,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["through",{"_index":1482,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"miscellaneous/functions.html":{}}}],["throw",{"_index":642,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["throwerror",{"_index":872,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["throws",{"_index":1504,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["thumbnails",{"_index":1969,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["tiene",{"_index":917,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["time",{"_index":453,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["timestamp",{"_index":1769,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["timestamp.todate",{"_index":2224,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["timestamp.tolocaledatestring",{"_index":2220,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["timestamp.tolocaletimestring",{"_index":2222,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["title",{"_index":2832,"title":{},"body":{"interfaces/incidentInfo.html":{}}}],["tl",{"_index":357,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["toabout",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["toabout(menu",{"_index":516,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":307,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["toast.${text",{"_index":353,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["toastmodule",{"_index":422,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{}}}],["todata",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["toggles",{"_index":262,"title":{},"body":{"components/AccessPage.html":{}}}],["tohome",{"_index":492,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbar",{"_index":563,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":364,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["tosettings",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["total",{"_index":1632,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["total:number",{"_index":2360,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["touched",{"_index":1006,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["transform",{"_index":749,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["transform(value",{"_index":750,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["transformed",{"_index":764,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["translate",{"_index":210,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["translate.service",{"_index":2309,"title":{},"body":{"injectables/LocalService.html":{}}}],["translate/core",{"_index":409,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2799,"title":{},"body":{"dependencies.html":{}}}],["translated",{"_index":1126,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translateloader",{"_index":407,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule",{"_index":406,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule.forchild",{"_index":424,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule.forroot",{"_index":651,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":1121,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translating",{"_index":233,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["translation",{"_index":227,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"miscellaneous/functions.html":{}}}],["translations",{"_index":1123,"title":{},"body":{"injectables/CustomTranslateService.html":{},"components/UserCircleGraphicComponent.html":{}}}],["transparent",{"_index":385,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["trash",{"_index":799,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["triggered",{"_index":1442,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["triggering",{"_index":2419,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["true",{"_index":310,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/EmailValidation.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["truncate",{"_index":2564,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["trust",{"_index":2082,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["try",{"_index":1041,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["tslib",{"_index":2812,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["tus",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["type",{"_index":254,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":2216,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"classes/PasswordValidation.html":{}}}],["typescript",{"_index":268,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["typically",{"_index":1702,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["uid",{"_index":1485,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["un",{"_index":1951,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unauthenticated",{"_index":1521,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["undefined",{"_index":751,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["unique",{"_index":1710,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["uniquely",{"_index":1817,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unsubscribe",{"_index":1661,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["up",{"_index":1697,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["update",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["updatecategory",{"_index":851,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategory(category",{"_index":864,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategory(results?.data",{"_index":1266,"title":{},"body":{"components/DataPage.html":{}}}],["updated",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["updatedoc",{"_index":1656,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(doc(collectionref",{"_index":1824,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(documentref",{"_index":1954,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocument",{"_index":1821,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocumentfield",{"_index":1941,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatefilterstate",{"_index":1454,"title":{},"body":{"injectables/FilterService.html":{}}}],["updatefilterstate(form",{"_index":1457,"title":{},"body":{"injectables/FilterService.html":{}}}],["updateincident",{"_index":2249,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["updateincident(incident",{"_index":2259,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["updates",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["updateuser",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["updateuser(data",{"_index":2697,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(user",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["updateusercomponent",{"_index":150,"title":{"components/UpdateUserComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["updating",{"_index":1327,"title":{},"body":{"injectables/DataService.html":{},"components/SettingsPage.html":{}}}],["upload",{"_index":1763,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["upload(blob",{"_index":1961,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["uploadbytes",{"_index":1671,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploadbytes(storageref",{"_index":1791,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploaded",{"_index":1747,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["uploading",{"_index":1960,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{}}}],["uploads",{"_index":1745,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["upon",{"_index":1604,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["url",{"_index":441,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["url('../../../assets/images/vectorial",{"_index":382,"title":{},"body":{"components/AccessPage.html":{}}}],["url.createobjecturl(blob",{"_index":1242,"title":{},"body":{"components/DataPage.html":{}}}],["url.revokeobjecturl(url",{"_index":1251,"title":{},"body":{"components/DataPage.html":{}}}],["url_large",{"_index":1973,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_medium",{"_index":1972,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_small",{"_index":1971,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_thumbnail",{"_index":1974,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["urlencoded",{"_index":2069,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["urls",{"_index":1965,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["urltree",{"_index":460,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["use",{"_index":342,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["use(language",{"_index":1132,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["useclass",{"_index":657,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":225,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":1037,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":427,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["user",{"_index":153,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["user!.uuid",{"_index":1591,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["user's",{"_index":701,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user'},{'name",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["user(_user",{"_index":2651,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["user.component",{"_index":2051,"title":{},"body":{"modules/HomePageModule.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{}}}],["user.component.html",{"_index":2295,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{}}}],["user.component.scss",{"_index":2294,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{}}}],["user.component.ts",{"_index":2293,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:13",{"_index":2578,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:14",{"_index":2579,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:16",{"_index":2297,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:21",{"_index":2573,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:23",{"_index":2298,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:30",{"_index":2302,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:32",{"_index":2296,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:36",{"_index":2299,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{}}}],["user.component.ts:42",{"_index":2300,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:62",{"_index":2575,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:68",{"_index":2577,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:79",{"_index":2576,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:9",{"_index":2301,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.email",{"_index":1724,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.name",{"_index":2229,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.picture",{"_index":2519,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["user.role",{"_index":478,"title":{},"body":{"guards/AdminGuard.html":{}}}],["user.surname",{"_index":2627,"title":{},"body":{"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.uid",{"_index":1723,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.username",{"_index":2628,"title":{},"body":{"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.uuid",{"_index":1592,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["user/:id",{"_index":687,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user/item",{"_index":2050,"title":{},"body":{"modules/HomePageModule.html":{},"components/ItemUserComponent.html":{},"coverage.html":{}}}],["user/update",{"_index":2499,"title":{},"body":{"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"coverage.html":{}}}],["user_selectable_mobile_value_accessor",{"_index":2662,"title":{},"body":{"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_selectable_value_accessor",{"_index":2634,"title":{},"body":{"components/UserSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercirclegraphiccomponent",{"_index":152,"title":{"components/UserCircleGraphicComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["usercredential",{"_index":1680,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["usercredentials",{"_index":266,"title":{"interfaces/UserCredentials.html":{}},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["userdatapage",{"_index":154,"title":{"components/UserDataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["userdatapagemodule",{"_index":664,"title":{"modules/UserDataPageModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["userdatapageroutingmodule",{"_index":2632,"title":{"modules/UserDataPageRoutingModule.html":{}},"body":{"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["userid",{"_index":1206,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["useridvalue",{"_index":2022,"title":{},"body":{"components/HomePage.html":{}}}],["userinfo",{"_index":731,"title":{"interfaces/UserInfo.html":{}},"body":{"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userinfo(user",{"_index":2581,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["userinfo(userid",{"_index":1204,"title":{},"body":{"components/DataPage.html":{}}}],["username",{"_index":1574,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["userregisterinfo",{"_index":283,"title":{"interfaces/UserRegisterInfo.html":{}},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["users",{"_index":158,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["users.filter((user",{"_index":2689,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["users.find((user",{"_index":2701,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.reduce((acc",{"_index":2600,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["userselectablecomponent",{"_index":155,"title":{"components/UserSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userselectablemobilecomponent",{"_index":156,"title":{"components/UserSelectableMobileComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userselected",{"_index":2635,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["userselected.name",{"_index":2661,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["userservice",{"_index":2203,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["usersinfocomponent",{"_index":157,"title":{"components/UsersInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["usersservice",{"_index":2202,"title":{"injectables/UsersService.html":{}},"body":{"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uses",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{}}}],["usevalue",{"_index":653,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue:'firebase",{"_index":656,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":300,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["utilized",{"_index":1619,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["uuid",{"_index":895,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{}}}],["valid",{"_index":1484,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["validate",{"_index":1345,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validates",{"_index":1342,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validation",{"_index":1348,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validationerrors",{"_index":1351,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validator",{"_index":1347,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validatorfn",{"_index":1346,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validators",{"_index":1387,"title":{},"body":{"components/FilterComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["validators.required",{"_index":2325,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["value",{"_index":263,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["value!.length",{"_index":2569,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["value!.substring(0",{"_index":2570,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["value.charat(0).touppercase",{"_index":768,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["values",{"_index":1381,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["var",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["variable",{"_index":2707,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2848,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1912,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["version",{"_index":2841,"title":{},"body":{"properties.html":{}}}],["viewencapsulation",{"_index":1208,"title":{},"body":{"components/DataPage.html":{}}}],["viewencapsulation.none",{"_index":1151,"title":{},"body":{"components/DataPage.html":{}}}],["views",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentDataPage.html":{}}}],["visibility",{"_index":2479,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["visibility_off",{"_index":2478,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["vistos",{"_index":1411,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["want",{"_index":1762,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["web",{"_index":626,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["web.provider",{"_index":613,"title":{},"body":{"modules/AppModule.html":{}}}],["web.provider.ts",{"_index":2085,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["web.provider.ts:12",{"_index":2089,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["web.provider.ts:153",{"_index":2095,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["web.provider.ts:170",{"_index":2092,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["webdir",{"_index":2858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":73,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["where(field",{"_index":1864,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["whether",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["white",{"_index":1281,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["whose",{"_index":1833,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["width",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["width:99",{"_index":377,"title":{},"body":{"components/AccessPage.html":{}}}],["window",{"_index":805,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["window.navigator.language",{"_index":2307,"title":{},"body":{"injectables/LocalService.html":{}}}],["window.navigator.language.split",{"_index":2312,"title":{},"body":{"injectables/LocalService.html":{}}}],["window:resize",{"_index":784,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["window:resize(event",{"_index":802,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["windows",{"_index":2399,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["within",{"_index":229,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"miscellaneous/functions.html":{}}}],["without",{"_index":1444,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["wrap",{"_index":2034,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["writes",{"_index":1019,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["writevalue",{"_index":955,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["writevalue(obj",{"_index":1017,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["written",{"_index":1021,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["www",{"_index":2119,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":899,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["ya",{"_index":885,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["yes",{"_index":2071,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["z0",{"_index":1357,"title":{},"body":{"classes/EmailValidation.html":{}}}],["z70ncw6nln",{"_index":2870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z\\d]{8",{"_index":2379,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z])(?=.*[a",{"_index":2377,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z])(?=.*\\d)[a",{"_index":2378,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z]{2",{"_index":1360,"title":{},"body":{"classes/EmailValidation.html":{}}}],["za",{"_index":1356,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["zone.js",{"_index":2814,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":175,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/about/about.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      CHATO\n      \n        Tu solución para solucionar los problemas de tus empleados\n      \n      \n        \n        \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                .container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: relative;\n    height: 86.3vh;\n    margin: 0;\n    overflow: hidden;\n}\n\n.header {\n    text-align: center;\n    flex: 1;\n    overflow: auto;\n}\n\nh1 {\n    font-size: 90px;\n    color: #0f212d;\n    font-weight: 900;\n}\n\n.slogan {\n    font-size: 30px;\n    color: #0f212d;\n    margin-bottom: 20px;\n}\n\n.social-icons a {\n    display: inline-block;\n    margin: 0 10px;\n\n    ion-icon {\n        color: #0f212d;\n    }\n}\n\n.footer {\n    width: 100%;\n    position: absolute;\n    bottom: 0;\n}\n\n\n@media (max-width: 600px) {\n    .container {\n        height: 100%;\n        .header {\n            h1 {\n                font-size: 5rem;\n            }\n            \n            .slogan {\n                font-size: 1rem;\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            CHATO              Tu solución para solucionar los problemas de tus empleados                                                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AboutPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPageRoutingModule } from './about-routing.module';\n\nimport { AboutPage } from './about.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AboutPageRoutingModule\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccessPage.html":{"url":"components/AccessPage.html","title":"component - AccessPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/access.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-access\n            \n\n\n\n            \n                styleUrls\n                ./access.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./access.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeForm\n                            \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, translate: CustomTranslateService, messageService: MessageService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/access.page.ts:19\n                            \n                        \n\n                \n                    \n                            The constructor function subscribes to query parameters and displays an error message if the\n'error' parameter is 'notAdmin'.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\nMessageService. It is likely used for displaying messages or notifications to the user within\nthe application.\nservice provided by Angular that gives access to information about a route associated with a\ncomponent loaded in an outlet. It allows you to access route parameters, query parameters, and\nother information related to the current route.\nservice. It is used for navigating between different components in your Angular application based\non the defined routes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService - a service for handling authentication and user authorization.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The translate parameter in the constructor is of type CustomTranslateService.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The messageService parameter in the constructor is of type\nMessageService. It is likely used for displaying messages or notifications to the user within\nthe application.\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The route parameter in the constructor is of type ActivatedRoute, which is a\nservice provided by Angular that gives access to information about a route associated with a\ncomponent loaded in an outlet. It allows you to access route parameters, query parameters, and\nother information related to the current route.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different components in your Angular application based\non the defined routes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeForm\n                        \n                    \n                \n            \n            \n                \nchangeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:60\n                        \n                    \n\n\n            \n                \n                        The function toggles the value of the login property.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(data: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:106\n                        \n                    \n\n\n            \n                \n                        The loginUser function in TypeScript logs in a user with provided credentials and handles\nerrors, displaying a specific error message for invalid email.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    UserCredentials object containing user login information, such as email and password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(data: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:72\n                        \n                    \n\n\n            \n                \n                        The function registerUser registers a user with the role 'user' and handles different error\ncases during the registration process.\nThis parameter likely contains information about a user that is being registered, such as their\nemail, password, and any other relevant details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The registerUser function takes in a parameter data of type UserRegisterInfo.\nThis parameter likely contains information about a user that is being registered, such as their\nemail, password, and any other relevant details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:146\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:129\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/access.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport {\n  UserCredentials,\n  UserRegisterInfo,\n} from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\n\n@Component({\n  selector: 'app-access',\n  templateUrl: './access.page.html',\n  styleUrls: ['./access.page.scss'],\n  providers: [MessageService],\n})\nexport class AccessPage implements OnInit {\n  login = true;\n\n  /**\n   * The constructor function subscribes to query parameters and displays an error message if the\n   * 'error' parameter is 'notAdmin'.\n   *\n   * @param auth AuthService - a service for handling authentication and user authorization.\n   * @param translate The `translate` parameter in the constructor is of type `CustomTranslateService`.\n   * It is used for handling translation services within the component or service where it is injected.\n   * This service likely provides methods for translating text or messages into different languages or\n   * for managing localization in the application.\n   * @param messageService The `messageService` parameter in the constructor is of type\n   * `MessageService`. It is likely used for displaying messages or notifications to the user within\n   * the application.\n   * @param route The `route` parameter in the constructor is of type `ActivatedRoute`, which is a\n   * service provided by Angular that gives access to information about a route associated with a\n   * component loaded in an outlet. It allows you to access route parameters, query parameters, and\n   * other information related to the current route.\n   * @param router The `router` parameter in the constructor is an instance of the Angular Router\n   * service. It is used for navigating between different components in your Angular application based\n   * on the defined routes.\n   */\n  constructor(\n    private auth: AuthService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.route.queryParams.subscribe((params) => {\n      if (params['error'] === 'notAdmin') {\n        this.showError('waitAdmin');\n      }\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * The function toggles the value of the `login` property.\n   */\n  changeForm() {\n    this.login = !this.login;\n  }\n\n  /**\n   * The function `registerUser` registers a user with the role 'user' and handles different error\n   * cases during the registration process.\n   *\n   * @param data The `registerUser` function takes in a parameter `data` of type `UserRegisterInfo`.\n   * This parameter likely contains information about a user that is being registered, such as their\n   * email, password, and any other relevant details.\n   */\n  registerUser(data: UserRegisterInfo) {\n    let _data: UserRegisterInfo = { ...data };\n    _data.role = 'user';\n    this.auth.register(_data).subscribe({\n      next: async (data) => {\n        console.log('ALL WAS GOOD');\n        this.showSuccess('waitAdmin');\n        await Haptics.impact({ style: ImpactStyle.Medium });\n      },\n      error: async (err) => {\n        if (err.code) {\n          switch (err.code) {\n            case 'auth/email-already-in-use':\n              this.showError('emailUser');\n              await Haptics.impact({ style: ImpactStyle.Heavy });\n              break;\n            case 'post-registration-error':\n              this.showError('failRegister');\n              await Haptics.impact({ style: ImpactStyle.Heavy });\n              break;\n          }\n        } else {\n          this.showError('Unknown registration error');\n        }\n      },\n    });\n  }\n\n  /**\n   * The `loginUser` function in TypeScript logs in a user with provided credentials and handles\n   * errors, displaying a specific error message for invalid email.\n   *\n   * @param data UserCredentials object containing user login information, such as email and password\n   */\n  loginUser(data: UserCredentials) {\n    let _data: UserCredentials = { ...data };\n    this.auth.login(_data).subscribe({\n      next: async (data) => {\n        console.log('ALL WAS GOOD');\n        await Haptics.impact({ style: ImpactStyle.Medium });\n      },\n      error: async (err) => {\n        console.log('BAD', err);\n        if (err.code === 'auth/invalid-email') {\n          this.showError('loginError');\n          await Haptics.impact({ style: ImpactStyle.Heavy });\n        }\n      },\n    });\n  }\n\n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({ key: 'tl', severity: 'info', detail: text });\n        this.login = true;\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n        this.login = true;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n\n      \n      \n      {{'access.toRegister' | translate}}\n    \n      {{'access.toLogin' | translate}}\n    \n\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./access.page.scss\n                \n                ion-content {\n    margin-top: 30%;\n}\n\n.access {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n\n    &__forms {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        padding: 20px;\n        gap: 20px;\n\n        .access__forms--logo {\n            display: none;\n            width: 30%;\n        }\n\n        app-login-form,\n        app-register-form {\n            width: 70%;\n        }\n    }\n\n    &__image {\n        flex: 1;\n        width:99%;\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: cover;\n        background-image: url('../../../assets/images/vectorial-access.webp');\n    }\n\n    button {\n        background-color: transparent;\n        padding: 0.5rem;\n        border: none;\n        cursor: pointer;\n    }\n}\n\n@media (max-width: 700px) {\n    .access {\n        flex-direction: column;\n    \n        &__forms {  \n            .access__forms--logo {\n                display: block;\n                width: 30%;\n            }\n    \n            app-login-form {\n                width: 100%;\n            }\n\n            app-register-form {\n                margin-top: -5%;\n                width: 100%;\n            }\n        }\n    \n        &__image {\n            display: none;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{\\'access.toRegister\\' | translate}}          {{\\'access.toLogin\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccessPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccessPageModule.html":{"url":"modules/AccessPageModule.html","title":"module - AccessPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AccessPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccessPageModule\n\n\n\ncluster_AccessPageModule_imports\n\n\n\ncluster_AccessPageModule_declarations\n\n\n\n\nAccessPage\n\nAccessPage\n\n\n\nAccessPageModule\n\nAccessPageModule\n\nAccessPageModule -->\n\nAccessPage->AccessPageModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAccessPageModule -->\n\nLoginFormComponent->AccessPageModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAccessPageModule -->\n\nRegisterFormComponent->AccessPageModule\n\n\n\n\n\nAccessPageRoutingModule\n\nAccessPageRoutingModule\n\nAccessPageModule -->\n\nAccessPageRoutingModule->AccessPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAccessPageModule -->\n\nSharedModule->AccessPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/access/access.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccessPage\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            RegisterFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccessPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AccessPageRoutingModule } from './access-routing.module';\n\nimport { AccessPage } from './access.page';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccessPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n     // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    // Shared\n    SharedModule,\n    ToastModule\n  ],\n  declarations: [\n    AccessPage,\n    LoginFormComponent,\n    RegisterFormComponent\n  ]\n})\nexport class AccessPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccessPageRoutingModule.html":{"url":"modules/AccessPageRoutingModule.html","title":"module - AccessPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccessPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/access/access-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccessPage } from './access.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccessPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccessPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:16\n                            \n                        \n\n                \n                    \n                            The constructor function takes AuthService and Router as parameters.\nhandling authentication-related functionalities in the application.\nnavigating between different components in an Angular application by manipulating the browser's\nURL.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is an instance of the AuthService class, which is used for\nhandling authentication-related functionalities in the application.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter is an instance of the Angular Router service. It is used for\nnavigating between different components in an Angular application by manipulating the browser's\nURL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/admin.guard.ts:42\n                        \n                    \n\n\n            \n                \n                        The function canActivate checks if the user is an admin and returns true, logs out the user and\nredirects to an access page with an error message if not.\nrepresents the activated route snapshot at the time of navigation. It contains information about\nthe route, its parameters, and related data.\nthe current router state snapshot, which includes information about the current activated route,\nthe URL, and the router state itself. It is of type RouterStateSnapshot.\nPromise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\nchecks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\nIf the user is logged in but not an admin, it logs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe route parameter in the canActivate method\nrepresents the activated route snapshot at the time of navigation. It contains information about\nthe route, its parameters, and related data.\n\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe state parameter in the canActivate method represents\nthe current router state snapshot, which includes information about the current activated route,\nthe URL, and the router state itself. It is of type RouterStateSnapshot.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                The canActivate method is returning an Observable that emits a boolean or UrlTree, a\nPromise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\nchecks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\nIf the user is logged in but not an admin, it logs\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  /**\n   * The constructor function takes AuthService and Router as parameters.\n   *\n   * @param auth The `auth` parameter is an instance of the `AuthService` class, which is used for\n   * handling authentication-related functionalities in the application.\n   * @param router The `router` parameter is an instance of the Angular Router service. It is used for\n   * navigating between different components in an Angular application by manipulating the browser's\n   * URL.\n   */\n  constructor(private auth: AuthService, private router: Router) {}\n\n  /**\n   * The function `canActivate` checks if the user is an admin and returns true, logs out the user and\n   * redirects to an access page with an error message if not.\n   * @param {ActivatedRouteSnapshot} route - The `route` parameter in the `canActivate` method\n   * represents the activated route snapshot at the time of navigation. It contains information about\n   * the route, its parameters, and related data.\n   * @param {RouterStateSnapshot} state - The `state` parameter in the `canActivate` method represents\n   * the current router state snapshot, which includes information about the current activated route,\n   * the URL, and the router state itself. It is of type `RouterStateSnapshot`.\n   * @returns The `canActivate` method is returning an Observable that emits a boolean or UrlTree, a\n   * Promise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\n   * checks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\n   * If the user is logged in but not an admin, it logs\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.auth.user$.pipe(\n      map((user) => {\n        if (user && user.role === 'admin') {\n          return true;\n        }\n        if (user) this.auth.logout();\n        this.router.navigate(['/access'], {\n          queryParams: { error: 'notAdmin' },\n        });\n        return false;\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialAuthResolved\n                            \n                            \n                                isSplash\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toAbout\n                            \n                            \n                                toData\n                            \n                            \n                                toHome\n                            \n                            \n                                toSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router, localLang: LocalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            The constructor initializes subscriptions to authentication and router events in a TypeScript\nclass.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\nprivate property that is used to access the LocalService service within the class. This service\nis likely used for handling localization or language-related functionalities in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\n\n                                                        \n                                                \n                                                \n                                                        localLang\n                                                  \n                                                        \n                                                                        LocalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The localLang parameter in the constructor is of type LocalService. It is a\nprivate property that is used to access the LocalService service within the class. This service\nis likely used for handling localization or language-related functionalities in the application.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:62\n                        \n                    \n\n\n            \n                \n                        The function isActive checks if the current URL includes a specified URL string and returns a\nboolean value.\nused to check if the current URL matches the provided url parameter.\nspecified URL string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The isActive function takes a url parameter of type string. This function is likely\nused to check if the current URL matches the provided url parameter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                A boolean value is being returned, indicating whether the current URL contains the\nspecified URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:90\n                        \n                    \n\n\n            \n                \n                        The logOut function calls the logout method of the auth object.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAbout\n                        \n                    \n                \n            \n            \n                \ntoAbout(menu: IonMenu)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:102\n                        \n                    \n\n\n            \n                \n                        The toAbout function navigates to the '/about' route using the Angular router and close the menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                        IonMenu\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The menu\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toData\n                        \n                    \n                \n            \n            \n                \ntoData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:83\n                        \n                    \n\n\n            \n                \n                        The toData function navigates to the '/data' route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toHome\n                        \n                    \n                \n            \n            \n                \ntoHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:69\n                        \n                    \n\n\n            \n                \n                        The toHome function uses the Angular router to navigate to the '/home' route.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSettings\n                        \n                    \n                \n            \n            \n                \ntoSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:76\n                        \n                    \n\n\n            \n                \n                        The toSettings function navigates to the settings route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialAuthResolved\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSplash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LocalService } from './core/services/translate/local.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AuthService } from './core/services/auth.service';\nimport { filter } from 'rxjs';\nimport { IonMenu, MenuController } from '@ionic/angular';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent implements OnInit{\n  isSplash: boolean = false;\n  initialAuthResolved = false;\n\n  /**\n   * The constructor initializes subscriptions to authentication and router events in a TypeScript\n   * class.\n   *\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   * @param router The `router` parameter in the constructor is an instance of the Angular Router\n   * service. It is used for navigating between different views in the Angular application based on the\n   * specified routes.\n   * @param localLang The `localLang` parameter in the constructor is of type `LocalService`. It is a\n   * private property that is used to access the `LocalService` service within the class. This service\n   * is likely used for handling localization or language-related functionalities in the application.\n   */\n  constructor(\n    protected auth: AuthService,\n    private router: Router,\n    private localLang: LocalService\n  ) {\n    this.auth.isLogged$.subscribe((logged) => {\n      if (this.initialAuthResolved) {\n        if (logged) {\n          this.router.navigate(['/home']).catch(err => console.error(err));\n        } else {\n          this.router.navigate(['/access']).catch(err => console.error(err));\n        }\n      } else {\n        this.initialAuthResolved = true;\n      }\n    });\n  }\n  ngOnInit(): void {\n  }\n\n  /**\n   * The function `isActive` checks if the current URL includes a specified URL string and returns a\n   * boolean value.\n   *\n   * @param url The `isActive` function takes a `url` parameter of type string. This function is likely\n   * used to check if the current URL matches the provided `url` parameter.\n   * @return A boolean value is being returned, indicating whether the current URL contains the\n   * specified URL string.\n   */\n  isActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  /**\n   * The `toHome` function uses the Angular router to navigate to the '/home' route.\n   */\n  toHome() {\n    this.router.navigate(['/home']);\n  }\n\n  /**\n   * The `toSettings` function navigates to the settings route using the Angular router.\n   */\n  toSettings() {\n    this.router.navigate(['/settings']);\n  }\n\n  /**\n   * The `toData` function navigates to the '/data' route using the Angular router.\n   */\n  toData() {\n    this.router.navigate(['/data']);\n  }\n\n  /**\n   * The `logOut` function calls the `logout` method of the `auth` object.\n   */\n  logOut() {\n    this.auth.logout().subscribe(async (_) => {\n      await this.router.navigate(['/access']);\n      await Haptics.impact({ style: ImpactStyle.Heavy });\n    });\n  }\n\n  /**\n   * The `toAbout` function navigates to the '/about' route using the Angular router and close the menu.\n   *\n   * @param menu The menu\n   */\n  toAbout(menu: IonMenu) {\n    this.router.navigate(['/about']);\n    menu.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n    \n  \n  \n  \n    \n    \n      \n        \n          \n        \n        \n          {{(auth.user$ | async)?.name }} {{ (auth.user$ | async)?.surname | capitalizeInitial}}\n        \n      \n    \n  \n    \n\n    \n      \n        \n\n          \n            \n            {{'menu.home' | translate}}\n          \n\n          \n            \n            {{'menu.settings' | translate}}\n          \n          \n          \n            \n            {{'menu.graphics' | translate}}\n          \n\n          \n            \n            {{'menu.logOut' | translate}}\n          \n          \n        \n\n      \n      \n        {{'menu.about' | translate}}\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                ion-item {\n    cursor: pointer;\n}\n\nion-icon {\n    margin-right: 20px;\n}\n\nion-menu-button {\n    --color: #0F212D;\n    font-size: 50px;\n    margin-left: 100px;\n}\n\nion-item.active {\n    --background: #0F212D;\n    --color: var(--ion-color-primary-contrast);\n    \n    ion-icon {\n      color: var(--ion-color-primary-contrast);\n    }\n}\n\nion-header {\n    --background: transparent;\n    ion-toolbar {\n        --background: transparent;\n        border: none;\n        box-shadow: none;\n        \n        .app-logo {\n          height: 100px;\n          margin-right: 40px;\n        }\n    }\n\n}\n\n.menu-footer {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    text-align: center;\n    padding: 10px;\n    font-size: 0.8em;\n    color: gray;\n    border-top: 1px solid lightgray;\n  \n    p {\n      margin: 0;\n    }\n\n    &:hover {\n        cursor: pointer;\n        p {\n            font-weight: bold;\n        }\n    }\n}\n\n\n.menu--header__toolbar {\n    margin-top: 5%;\n    display:flex;\n    align-items:center;\n    justify-content: center;\n    gap: 20px;\n\n    ion-avatar {\n        img {\n            width: 60px;\n        }\n    }\n\n    span {\n        font-weight: bold;\n    }\n}\n    \n\n@media (max-width: 700px) {\n    ion-menu-button{\n        font-size: 40px;\n        margin-left: 10px;\n    }\n\n    ion-header {\n        ion-toolbar {\n            .app-logo {\n              margin-right: 10px;\n            }\n        }\n    }\n    \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    {{(auth.user$ | async)?.name }} {{ (auth.user$ | async)?.surname | capitalizeInitial}}                                                                            {{\\'menu.home\\' | translate}}                                            {{\\'menu.settings\\' | translate}}                                                      {{\\'menu.graphics\\' | translate}}                                            {{\\'menu.logOut\\' | translate}}                                                {{\\'menu.about\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCapitalizeInitialPipe\n\nCapitalizeInitialPipe\n\nAppModule -->\n\nCapitalizeInitialPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CapitalizeInitialPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { IonicModule, IonicRouteStrategy, Platform } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { createTranslateLoader } from './core/translate/translate';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\nimport { FirebaseAuthService } from './core/services/firebase/api/firebase-auth.service';\nimport { FirebaseService } from './core/services/firebase/firebase.service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FirebaseMediaService } from './core/services/firebase/api/firebase-media.service';\nimport { HttpClientWebProvider } from './core/services/http/http-client-web.provider';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { MediaService } from './core/services/media.service';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './core/services/auth.service';\nimport { DataService } from './core/services/data.service';\nimport { HttpClientProvider } from './core/services/http/http-client.provider';\nimport { ToastModule } from 'primeng/toast';\nimport { SharedModule } from './shared/shared.module';\n\nimport { provideLottieOptions } from 'ngx-lottie';\nimport player from 'lottie-web';\nimport { CapitalizeInitialPipe } from './core/pipes/capitalize-initial.pipe';\nimport { DividerModule } from 'primeng/divider';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport { DropdownModule } from 'primeng/dropdown';\n\nexport function MediaServiceFactory(\n  backend:string,\n  firebase:FirebaseService){\n  switch(backend){\n    case 'Firebase':\n      return new FirebaseMediaService(firebase);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\nexport function httpProviderFactory(\n  http:HttpClient) {\n  return new HttpClientWebProvider(http);\n}\n\nexport function AuthServiceFactory(\n  backend:string,\n  firebase:FirebaseService\n) {\n  switch(backend){\n    case 'Firebase':\n      return new FirebaseAuthService(firebase);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CapitalizeInitialPipe,\n  ],\n  imports: [\n    DropdownModule,\n    BrowserAnimationsModule,\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n    SharedModule,\n    DividerModule,\n  ],\n  providers: [\n    provideLottieOptions({\n      player: () => player,\n    }),\n    {\n      provide: 'firebase-config',\n      useValue: environment.firebaseConfig\n    },\n    {\n      provide: 'backend',\n      useValue:'Firebase'\n    },\n    { \n      provide: RouteReuseStrategy, \n      useClass: IonicRouteStrategy \n    },\n    // Factories\n    {\n      provide: HttpClientProvider,\n      deps: [HttpClient, Platform],\n      useFactory: httpProviderFactory,  \n    },\n    {\n      provide: AuthService,\n      deps: ['backend', FirebaseService],\n      useFactory: AuthServiceFactory,  \n    },\n    {\n      provide: MediaService,\n      deps: ['backend', FirebaseService],\n      useFactory: MediaServiceFactory,  \n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { AdminGuard } from './core/guards/admin.guard';\nimport { UserDataPageModule } from './pages/user-data/user-data.module';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./pages/home/home.module').then( m => m.HomePageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n      {\n        path: 'incident-data/:id',\n        loadChildren: () => \"import('./pages/incident-data/incident-data.module').then( m => m.IncidentDataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: 'access',\n    pathMatch: 'full'\n  },\n  {\n    path: 'access',\n    loadChildren: () => \"import('./pages/access/access.module').then( m => m.AccessPageModule)\"\n  },\n  {\n    path: 'settings',\n    loadChildren: () => \"import('./pages/settings/settings.module').then( m => m.SettingsPageModule)\",\n    canActivate: [AuthGuard, AdminGuard]\n  },\n  {\n    path: 'data',\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./pages/data/data.module').then(m => m.DataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n      {\n        path: 'user/:id',\n        loadChildren: () => \"import('./pages/user-data/user-data.module').then(m => m.UserDataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n    ]\n  },\n  {\n    path: 'about',\n    loadChildren: () => \"import('./pages/about/about.module').then( m => m.AboutPageModule)\",\n    canActivate: [AuthGuard, AdminGuard],\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                homeUrl\n                            \n                            \n                                    Private\n                                loginUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthGuard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe AuthService for checking the user's authentication status.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Router for navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth.guard.ts:37\n                        \n                    \n\n\n            \n                \n                        Checks if the user is logged in and redirects accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe activated route snapshot.\n\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe router state snapshot.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                An observable, promise, boolean, or URL tree representing the result of the canActivate operation.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable, map, tap } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  private loginUrl: string = '/access';\n  private homeUrl: string = '/home';\n\n  /**\n   * Creates an instance of AuthGuard.\n   * \n   * @param auth - The AuthService for checking the user's authentication status.\n   * @param router - The Router for navigation.\n   */\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {}\n\n  /**\n   * Checks if the user is logged in and redirects accordingly.\n   * \n   * @param route - The activated route snapshot.\n   * @param state - The router state snapshot.\n   * @returns An observable, promise, boolean, or URL tree representing the result of the canActivate operation.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n    return this.auth.isLogged$.pipe(\n      tap(logged => {\n        if (logged) {\n          return this.router.createUrlTree([this.homeUrl]);\n        } else {\n          return this.router.createUrlTree([this.loginUrl]);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                login\n                            \n                            \n                                    Public\n                                    Abstract\n                                logout\n                            \n                            \n                                    Public\n                                    Abstract\n                                me\n                            \n                            \n                                    Public\n                                    Abstract\n                                register\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Performs user login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser credentials for login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable emitting the authenticated user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Logs out the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Retrieves information about the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting information about the current user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Registers a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser information for registration.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the registration process.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Updates the user's information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUpdated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the update process.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UserInfo, UserCredentials } from '../interfaces/user-info';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class AuthService {\n  protected _logged = new BehaviorSubject(false);\n  public isLogged$ = this._logged.asObservable();\n  protected _user = new BehaviorSubject(null);\n  public user$ = this._user.asObservable();\n\n  /**\n   * Performs user login.\n   * @param {Object} credentials - User credentials for login.\n   * @returns {Observable} Observable emitting the authenticated user.\n   */\n  public abstract login(credentials: Object): Observable;\n\n  /**\n   * Registers a new user.\n   * @param {Object} info - User information for registration.\n   * @returns {Observable} Observable emitting the result of the registration process.\n   */\n  public abstract register(info: Object): Observable;\n\n  /**\n   * Logs out the current user.\n   */\n  public abstract logout(): Observable;\n\n  /**\n   * Retrieves information about the current user.\n   * @returns {Observable} Observable emitting information about the current user.\n   */\n  public abstract me(): Observable;\n\n  /**\n   * Updates the user's information.\n   * @param {UserInfo} user - Updated user information.\n   * @returns {Observable} Observable emitting the result of the update process.\n   */\n  public abstract updateUser(user: UserInfo): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizeInitialPipe.html":{"url":"pipes/CapitalizeInitialPipe.html","title":"pipe - CapitalizeInitialPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizeInitialPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/capitalize-initial.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        capitalizeInitial\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/capitalize-initial.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        The function takes a string as input, capitalizes the first letter, and adds a period at the end.\nvalue is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\nfirst character of the string and appends a period at the end before returning the transformed\nstring.\nof the value is capitalized and followed by a period.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value parameter in the transform function is a string or undefined. If the\nvalue is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\nfirst character of the string and appends a period at the end before returning the transformed\nstring.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                An empty string is being returned if the value is falsy. Otherwise, the first character\nof the value is capitalized and followed by a period.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalizeInitial',\n})\nexport class CapitalizeInitialPipe implements PipeTransform {\n  /**\n   * The function takes a string as input, capitalizes the first letter, and adds a period at the end.\n   *\n   * @param value The `value` parameter in the `transform` function is a string or undefined. If the\n   * `value` is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\n   * first character of the string and appends a period at the end before returning the transformed\n   * string.\n   * @return An empty string is being returned if the `value` is falsy. Otherwise, the first character\n   * of the `value` is capitalized and followed by a period.\n   */\n  transform(value: string | undefined): string {\n    if (!value) {\n      return '';\n    }\n    return value.charAt(0).toUpperCase() + '.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesInfoComponent.html":{"url":"components/CategoriesInfoComponent.html","title":"component - CategoriesInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/categories-info/categories-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories-info\n            \n\n\n\n            \n                styleUrls\n                ./categories-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categories-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScreenSmall\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                editCategory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onEditClicked\n                            \n                            \n                                onTrashClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/categories-info/categories-info.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\nInitializes the component by checking the initial screen size.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categories\n                    \n                \n                \n                    \n                        Type :         CategoryInfo[] | null | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:22\n                            \n                        \n                \n                    \n                        Represents the input property for passing category information to the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onEditClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:33\n                            \n                        \n                \n                    \n                        Represents the output property for emitting events when the edit icon is clicked for a category.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onTrashClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:27\n                            \n                        \n                \n                    \n                        Represents the output property for emitting events when the trash icon is clicked for a category.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Emits an event when the delete icon for a category is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCategory\n                        \n                    \n                \n            \n            \n                \neditCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Emits an event when the edit icon for a category is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/categories-info/categories-info.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\n\n@Component({\n  selector: 'app-categories-info',\n  templateUrl: './categories-info.component.html',\n  styleUrls: ['./categories-info.component.scss'],\n})\nexport class CategoriesInfoComponent implements OnInit {\n  isScreenSmall: boolean = false;\n\n  /**\n   * Represents the input property for passing category information to the component.\n   **/\n  @Input() categories: CategoryInfo[] | null | undefined;\n\n  /**\n   * Represents the output property for emitting events when the trash icon is clicked for a category.\n   */\n  @Output() onTrashClicked: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * Represents the output property for emitting events when the edit icon is clicked for a category.\n   */\n  @Output() onEditClicked: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * Constructs a component constructor function.\n   * Initializes the component by checking the initial screen size.\n   */\n  constructor() {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Emits an event when the delete icon for a category is clicked.\n   *\n   * @param category CategoryInfo - the category to be deleted.\n   */\n  deleteCategory(category: CategoryInfo) {\n    this.onTrashClicked.emit(category);\n  }\n\n  /**\n   * Emits an event when the edit icon for a category is clicked.\n   *\n   * @param category CategoryInfo - the category to be edited.\n   */\n  editCategory(category: CategoryInfo) {\n    this.onEditClicked.emit(category);\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n  \n\n  \n    {{'forms.name' | translate }}\n    {{'forms.description' | translate }}\n     \n    {{'forms.actions' | translate }}\n  \n\n  \n    {{category.name}}\n    {{category.description}}\n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./categories-info.component.scss\n                \n                ion-list {\n    width: 80%;\n    margin: 3% auto;\n\n    ion-list-header {\n        --background: #0F212D;\n        --color: #fff;\n    }\n\n    .subheader {\n        ion-label {\n          font-weight: bold;\n        }\n    }\n\n    .data {\n        position: relative;\n        border-top: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n\n        &:hover {\n            border-color: #0F212D;\n        }\n\n        #actions {\n            display: flex;\n            gap: 20px;\n            cursor: pointer;\n\n        }\n    }\n}\n\n@media (max-width: 900px) {\n    .subheader {\n        ion-label {\n          margin-left: 0.2%;\n        }\n    }\n}\n\n@media (max-width: 700px) {\n    ion-list {\n        width: 100%;\n        margin-top: 5%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}        {{\\'forms.name\\' | translate }}    {{\\'forms.description\\' | translate }}         {{\\'forms.actions\\' | translate }}        {{category.name}}    {{category.description}}                                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                getCategory\n                            \n                            \n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/categories.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCategory\n                        \n                    \n                \n            \n            \n                \ncreateCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Creates a new category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is created successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Deletes a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is deleted successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory(categoryId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategory\n                        \n                    \n                \n            \n            \n                \nupdateCategory(category: CategoryInfo, originalName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Updates a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the updated category information.\n\n                                            \n                                        \n                                        \n                                                originalName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the original name of the category.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is updated successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {\n  catchError,\n  first,\n  map,\n  switchMap,\n  throwError,\n  of,\n  from,\n  take,\n} from 'rxjs';\nimport { CategoryInfo } from '../../interfaces/category-info';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoriesService {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param firebaseService FirebaseService - a service for handling Firebase-related operations.\n   */\n  constructor(private firebaseService: FirebaseService) {}\n\n  getCategory(categoryId: string) {\n    return this.firebaseService.getDocument('categoryInfo', categoryId)\n  }\n\n  /**\n   * Creates a new category.\n   *\n   * @param category CategoryInfo - the category information to be created.\n   * @returns An Observable that emits a success message if the category is created successfully, otherwise emits an error message.\n   */\n  createCategory(category: CategoryInfo): Observable {\n    return this.firebaseService.categories$.pipe(\n      first(),\n      switchMap((existingCategories) => {\n        if (existingCategories.some((c) => c.name === category.name)) {\n          return throwError(\n            () => new Error('Una categoría con este nombre ya existe.')\n          );\n        }\n        if (this.firebaseService.user) {\n          category.adminId = this.firebaseService.user.uid || '';\n          category.admin = this.firebaseService.user.email || '';\n        }\n        console.log('object');\n        return from(\n          this.firebaseService.createDocument('categoryInfo', category)\n        ).pipe(\n          switchMap((docRef) => {\n            const uuid = docRef;\n            return from(\n              this.firebaseService.updateDocument('categoryInfo', uuid, {\n                uuid,\n              })\n            ).pipe(\n              map(() => 'Categoría creada y actualizada exitosamente con UUID.')\n            );\n          })\n        );\n      }),\n      catchError((err) =>\n        throwError(\n          () => new Error('Error al crear la categoría: ' + err.message)\n        )\n      )\n    );\n  }\n\n  /**\n   * Deletes a category.\n   *\n   * @param category CategoryInfo - the category information to be deleted.\n   * @returns An Observable that emits a success message if the category is deleted successfully, otherwise emits an error message.\n   */\n  deleteCategory(category: CategoryInfo): Observable {\n    return this.firebaseService.incidents$.pipe(\n      first(),\n      switchMap((incidents) => {\n        const hasIncident = incidents.some(\n          (incident) => incident.categoryName === category.name\n        );\n        if (hasIncident) {\n          return throwError(\n            () =>\n              new Error(\n                'No se puede borrar la categoría porque tiene incidencias asociadas'\n              )\n          );\n        }\n        return this.firebaseService\n          .deleteDocument('categoryInfo', category.uuid)\n          .then(() => {\n            return 'Categoría borrada exitosamente.';\n          });\n      }),\n      catchError((err) => {\n        return throwError(\n          () => new Error(`Error al borrar la categoría: ${err.message}`)\n        );\n      })\n    );\n  }\n\n  /**\n   * Updates a category.\n   *\n   * @param category CategoryInfo - the updated category information.\n   * @param originalName string - the original name of the category.\n   * @returns An Observable that emits a success message if the category is updated successfully, otherwise emits an error message.\n   */\n  updateCategory(\n    category: CategoryInfo,\n    originalName: string\n  ): Observable {\n    return this.firebaseService.incidents$.pipe(\n      first(),\n      switchMap((incidents) => {\n        const hasIncidentWithOriginalName = incidents.some(\n          (incident) => incident.categoryName === originalName\n        );\n        if (hasIncidentWithOriginalName) {\n          return throwError(\n            () =>\n              new Error(\n                'No se puede actualizar la categoría porque tiene incidencias asociadas con su nombre original'\n              )\n          );\n        }\n        return from(\n          this.firebaseService.updateDocument(\n            'categoryInfo',\n            category.uuid,\n            category\n          )\n        ).pipe(map(() => 'Categoría actualizada exitosamente.'));\n      }),\n      catchError((err) =>\n        throwError(\n          () =>\n            new Error(\n              `Error al intentar actualizar la categoría: ${err.message}`\n            )\n        )\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryInfo.html":{"url":"interfaces/CategoryInfo.html","title":"interface - CategoryInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoryInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/category-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            adminId\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CategoryInfo {\n    name: string;\n    admin: string;\n    adminId: string;\n    description: string;\n    uuid: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategorySelectableComponent.html":{"url":"components/CategorySelectableComponent.html","title":"component - CategorySelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategorySelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/category-selectable/category-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                CATEGORY_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-category-selectable\n            \n\n\n\n            \n                styleUrls\n                ./category-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                categorySelected\n                            \n                            \n                                    Public\n                                categoryService\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategoryClicked\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectCategory\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                resetSignal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    category\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:46\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoriesSelectorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe CategoriesService for fetching category data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:41\n                            \n                        \n                \n                    \n                        Setter method for setting the selected category.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:30\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Clears the selected category.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Filters categories based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter categories.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategoryClicked\n                        \n                    \n                \n            \n            \n                \nonCategoryClicked(popover: IonPopover, category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a category from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected category.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering categories.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Loads categories from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectCategory(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Selects a category by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the category to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorySelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categoryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoriesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:55\n                        \n                    \n\n            \n                \n                    - The CategoriesService for fetching category data.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:56\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:46\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n\n                \n                    \n                        setcategory(_category: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:41\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected category.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _category\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected category.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  SimpleChanges,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const CATEGORY_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-category-selectable',\n  templateUrl: './category-selectable.component.html',\n  styleUrls: ['./category-selectable.component.scss'],\n  providers: [CATEGORY_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class CategorySelectableComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  categorySelected: any | undefined;\n  disabled: boolean = true;\n  categories: any[] = [];\n\n  /**\n   * Setter method for setting the selected category.\n   *\n   * @param _category - The selected category.\n   */\n  @Input() set category(_category: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of CategoriesSelectorComponent.\n   *\n   * @param categoryService - The CategoriesService for fetching category data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public categoryService: CategoriesService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads categories from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.categories$.subscribe({\n        next: (categories) => {\n          this.categories = categories;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a category by its ID.\n   *\n   * @param id - The ID of the category to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectCategory(\n    id: string | undefined,\n    propagate: boolean = false\n  ) {\n    if (id) {\n      await this.categoryService.getCategory(id).then((category) => {\n        this.categorySelected = category;\n      });\n    } else this.categorySelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.categorySelected.data.name);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectCategory(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected category.\n   */\n  clearSelection() {\n    this.categorySelected = undefined;\n  }\n\n  /**\n   * Filters categories based on a search value.\n   *\n   * @param value - The search value to filter categories.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering categories.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a category from the list.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   * @param category - The selected category.\n   */\n  onCategoryClicked(popover: IonPopover, category: any) {\n    this.selectCategory(category.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected category.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectCategory(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n    {{categorySelected.data.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./category-selectable.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}    {{categorySelected.data.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategorySelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategorySelectableMobileComponent.html":{"url":"components/CategorySelectableMobileComponent.html","title":"component - CategorySelectableMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategorySelectableMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-category-selectable-mobile\n            \n\n\n\n            \n                styleUrls\n                ./category-selectable-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-selectable-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                categorySelected\n                            \n                            \n                                    Public\n                                categoryService\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategoryClicked\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectCategory\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                resetSignal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    category\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoriesSelectorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe CategoriesService for fetching category data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:34\n                            \n                        \n                \n                    \n                        Setter method for setting the selected category.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:23\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:171\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:135\n                        \n                    \n\n\n            \n                \n                        Clears the selected category.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Filters categories based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter categories.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategoryClicked\n                        \n                    \n                \n            \n            \n                \nonCategoryClicked(popover: IonPopover, category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a category from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected category.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering categories.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Loads categories from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectCategory(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Selects a category by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the category to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorySelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categoryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoriesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:48\n                        \n                    \n\n            \n                \n                    - The CategoriesService for fetching category data.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:49\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:39\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n\n                \n                    \n                        setcategory(_category: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:34\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected category.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _category\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected category.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableMobileComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-category-selectable-mobile',\n  templateUrl: './category-selectable-mobile.component.html',\n  styleUrls: ['./category-selectable-mobile.component.scss'],\n  providers: [CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR]\n})\nexport class CategorySelectableMobileComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  categorySelected: any | undefined;\n  disabled: boolean = true;\n  categories: any[] = [];\n\n  /**\n   * Setter method for setting the selected category.\n   *\n   * @param _category - The selected category.\n   */\n  @Input() set category(_category: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of CategoriesSelectorComponent.\n   *\n   * @param categoryService - The CategoriesService for fetching category data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public categoryService: CategoriesService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads categories from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.categories$.subscribe({\n        next: (categories) => {\n          this.categories = categories;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a category by its ID.\n   *\n   * @param id - The ID of the category to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectCategory(\n    id: string | undefined,\n    propagate: boolean = false\n  ) {\n    if (id) {\n      await this.categoryService.getCategory(id).then((category) => {\n        this.categorySelected = category;\n      });\n    } else this.categorySelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.categorySelected.data.name);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectCategory(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected category.\n   */\n  clearSelection() {\n    this.categorySelected = undefined;\n  }\n\n  /**\n   * Filters categories based on a search value.\n   *\n   * @param value - The search value to filter categories.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering categories.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a category from the list.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   * @param category - The selected category.\n   */\n  onCategoryClicked(popover: IonPopover, category: any) {\n    this.selectCategory(category.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected category.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectCategory(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n    {{categorySelected.data.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./category-selectable-mobile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}    {{categorySelected.data.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategorySelectableMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n\n\n            \n                styleUrls\n                ./confirm-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, message: any, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialogRef - a reference to the dialog component.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                string - the message to be displayed in the dialog.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Closes the dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:18\n                        \n                    \n\n            \n                \n                    MatDialogRef - a reference to the dialog component.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:20\n                        \n                    \n\n            \n                \n                    string - the message to be displayed in the dialog.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param dialogRef MatDialogRef - a reference to the dialog component.\n   * @param message string - the message to be displayed in the dialog.\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA)\n    public message: any,\n    private translate: CustomTranslateService,\n  ) {}\n\n  ngOnInit() {\n    console.log(this.message.message);\n    let message = `dialog.${this.message.message}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.message = text\n      },\n    });\n  }\n\n  /**\n   * Closes the dialog.\n   */\n  cancel() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  {{message}}\n\n\n  {{'dialog.no' | translate}}\n  {{'dialog.yes' | translate}}\n\n\n    \n\n    \n                \n                    ./confirm-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{message}}  {{\\'dialog.no\\' | translate}}  {{\\'dialog.yes\\' | translate}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomTranslateService.html":{"url":"injectables/CustomTranslateService.html","title":"injectable - CustomTranslateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomTranslateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/translate/translate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _language\n                            \n                            \n                                    Public\n                                language$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getCurrentLang\n                            \n                            \n                                    Private\n                                    Async\n                                init\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/translate/translate.service.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor initializes the TranslateService and calls the init() method.\nTranslateService class, which is likely used for handling translations in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe translate parameter is an instance of the\nTranslateService class, which is likely used for handling translations in the application.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:57\n                        \n                    \n\n\n            \n                \n                        The function get returns an Observable that retrieves a translated string based on a given key.\ntranslation value from the translation service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key parameter is a string that represents the key used to retrieve a\ntranslation value from the translation service.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable of type string is being returned.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentLang\n                        \n                    \n                \n            \n            \n                \ngetCurrentLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:26\n                        \n                    \n\n\n            \n                \n                        The init function initializes language settings by adding languages and setting a default\nlanguage.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(language: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:37\n                        \n                    \n\n\n            \n                \n                        The function use in TypeScript sets the language for translation and updates the language\nsubject accordingly.\nrepresenting the language to be used for translation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe use function takes a language parameter, which is a string\nrepresenting the language to be used for translation.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _language\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    'es'\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/translate.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        language$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._language.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/translate.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, lastValueFrom, tap } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomTranslateService {\n  private _language: BehaviorSubject = new BehaviorSubject(\n    'es'\n  );\n  public language$ = this._language.asObservable();\n\n  /**\n   * The constructor initializes the TranslateService and calls the init() method.\n   * @param {TranslateService} translate - The `translate` parameter is an instance of the\n   * `TranslateService` class, which is likely used for handling translations in the application.\n   */\n  constructor(private translate: TranslateService) {\n    this.init();\n  }\n\n  /**\n   * The `init` function initializes language settings by adding languages and setting a default\n   * language.\n   */\n  private async init() {\n    this.translate.addLangs(['es', 'en']);\n    this.translate.setDefaultLang(this._language.value);\n  }\n\n  /**\n   * The function `use` in TypeScript sets the language for translation and updates the language\n   * subject accordingly.\n   * @param {string} language - The `use` function takes a `language` parameter, which is a string\n   * representing the language to be used for translation.\n   */\n  use(language: string) {\n    lastValueFrom(this.translate.use(language))\n      .then((_) => {\n        this._language.next(language);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  getCurrentLang(): string {\n    return this._language.getValue();\n  }\n\n  /**\n   * The function `get` returns an Observable that retrieves a translated string based on a given key.\n   * @param {string} key - The `key` parameter is a string that represents the key used to retrieve a\n   * translation value from the translation service.\n   * @returns An Observable of type string is being returned.\n   */\n  get(key: string): Observable {\n    return this.translate.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataPage.html":{"url":"components/DataPage.html","title":"component - DataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/data/data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-data\n            \n\n\n\n            \n                styleUrls\n                ./data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                    Public\n                                downloadCSV\n                            \n                            \n                                    Async\n                                editCategory\n                            \n                            \n                                exportData\n                            \n                            \n                                    Public\n                                jsonToCSV\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, router: Router, _categoryService: CategoriesService, translate: CustomTranslateService, messageService: MessageService, dialog: MatDialog, myModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/data/data.page.ts:22\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router - an instance of the Angular Router service used for navigating between different components.\n\n                                                        \n                                                \n                                                \n                                                        _categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CategoriesService - a service for managing categories.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MessageService - a service for displaying messages or notifications to the user within the application.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog - a service for displaying dialog boxes.\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ModalController - a service for managing modal dialogs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:179\n                        \n                    \n\n\n            \n                \n                        Opens a modal dialog for creating a new category.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(info: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:210\n                        \n                    \n\n\n            \n                \n                        Deletes a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        downloadCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadCSV(csvContent: string, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:105\n                        \n                    \n\n\n            \n                \n                        Initiates the download of a CSV file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                csvContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe CSV content to be downloaded.\n\n\n                                            \n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the CSV file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    editCategory(info: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:154\n                        \n                    \n\n\n            \n                \n                        Opens a modal dialog for editing a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportData\n                        \n                    \n                \n            \n            \n                \nexportData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:54\n                        \n                    \n\n\n            \n                \n                        Method to export data to CSV format.\nFetches data from Firebase, converts it to CSV format, and initiates CSV file downloads.\nThis method retrieves data from Firebase using the FirebaseService, converts it to CSV format,\nand initiates the download of CSV files for each dataset.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        jsonToCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    jsonToCSV(dataObject: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:75\n                        \n                    \n\n\n            \n                \n                        Converts JSON data to CSV format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataObject\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JSON data object to be converted to CSV.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                An object containing CSV content for each dataset.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:127\n                        \n                    \n\n\n            \n                \n                        Opens a confirmation dialog for deleting a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:249\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:229\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n            \n                \nuserInfo(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:145\n                        \n                    \n\n\n            \n                \n                        Navigates to the user information page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/data.page.ts:40\n                        \n                    \n\n            \n                \n                    MatDialog - a service for displaying dialog boxes.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\nimport { ModalController } from '@ionic/angular';\nimport { ModalCategoryComponent } from './modal-category/modal-category.component';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.page.html',\n  styleUrls: ['./data.page.scss'],\n  providers: [MessageService],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DataPage implements OnInit {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param router Router - an instance of the Angular Router service used for navigating between different components.\n   * @param _categoryService CategoriesService - a service for managing categories.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   * @param messageService MessageService - a service for displaying messages or notifications to the user within the application.\n   * @param dialog MatDialog - a service for displaying dialog boxes.\n   * @param myModal ModalController - a service for managing modal dialogs.\n   */\n  constructor(\n    protected _firebaseService: FirebaseService,\n    private router: Router,\n    private _categoryService: CategoriesService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    public dialog: MatDialog,\n    private myModal: ModalController\n  ) {}\n\n  ngOnInit() {}\n\n  /**\n   * Method to export data to CSV format.\n   * Fetches data from Firebase, converts it to CSV format, and initiates CSV file downloads.\n   *\n   * @remarks\n   * This method retrieves data from Firebase using the FirebaseService, converts it to CSV format,\n   * and initiates the download of CSV files for each dataset.\n   */\n  exportData(): void {\n    this._firebaseService\n      .getAllData()\n      .then((dataObject) => {\n        const csvFiles = this.jsonToCSV(dataObject);\n        for (const key in csvFiles) {\n          if (csvFiles.hasOwnProperty(key)) {\n            const csvContent = csvFiles[key];\n            this.downloadCSV(csvContent, `${key}.csv`);\n          }\n        }\n      })\n      .catch((error) => console.error('Failed to fetch data', error));\n  }\n\n  /**\n   * Converts JSON data to CSV format.\n   *\n   * @param dataObject - The JSON data object to be converted to CSV.\n   * @returns An object containing CSV content for each dataset.\n   */\n  public jsonToCSV(dataObject: { [key: string]: any[] }): {\n    [key: string]: string;\n  } {\n    const csvFiles: { [key: string]: string } = {};\n\n    for (const key in dataObject) {\n      if (dataObject.hasOwnProperty(key) && dataObject[key].length > 0) {\n        const headers = Object.keys(dataObject[key][0]);\n        const csvRows = dataObject[key].map((row) =>\n          headers\n            .map((fieldName) =>\n              JSON.stringify(row[fieldName], (key, value) =>\n                value == null ? '' : value\n              )\n            )\n            .join(',')\n        );\n        csvRows.unshift(headers.join(','));\n        csvFiles[key] = csvRows.join('\\r\\n');\n      }\n    }\n    return csvFiles;\n  }\n\n  /**\n   * Initiates the download of a CSV file.\n   *\n   * @param csvContent - The CSV content to be downloaded.\n   * @param filename - The name of the CSV file.\n   */\n  public downloadCSV(csvContent: string, filename: string): void {\n    if (!csvContent) {\n      console.error('No CSV content available for download.');\n      return;\n    }\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens a confirmation dialog for deleting a category.\n   *\n   * @param category CategoryInfo - the category information to be deleted.\n   */\n  openDialog(category: CategoryInfo): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      data: { message: 'delete' },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.deleteCategory(category);\n      }\n    });\n  }\n\n  /**\n   * Navigates to the user information page.\n   *\n   * @param userId string - the ID of the user.\n   */\n  userInfo(userId: string) {\n    this.router.navigate([`/data/user/${userId}`]);\n  }\n\n  /**\n   * Opens a modal dialog for editing a category.\n   *\n   * @param info CategoryInfo - the category information to be edited.\n   */\n  async editCategory(info: CategoryInfo) {\n    const mod = await this.myModal.create({\n      component: ModalCategoryComponent,\n      componentProps: {\n        categoryInfo: info,\n        mode: 'update',\n      },\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results?.data) {\n        this._categoryService\n          .updateCategory(results?.data, info.name)\n          .subscribe({\n            next: (_) => this.showSuccess('good'),\n            error: (_) => this.showError('cant'),\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens a modal dialog for creating a new category.\n   */\n  async createCategory() {\n    const mod = await this.myModal.create({\n      component: ModalCategoryComponent,\n      componentProps: {\n        categoryInfo: null,\n        mode: 'create',\n      },\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results?.data) {\n        this._categoryService.createCategory(results?.data).subscribe({\n          next: async (_) => {\n            this.showSuccess('good');\n            await Haptics.impact({ style: ImpactStyle.Medium });\n          },\n          error: async (_) => {\n            this.showError('cant');\n            await Haptics.impact({ style: ImpactStyle.Heavy });\n          },\n        });\n      }\n    }\n  }\n\n  /**\n   * Deletes a category.\n   *\n   * @param info CategoryInfo - the category to delete.\n   */\n  deleteCategory(info: CategoryInfo) {\n    this._categoryService.deleteCategory(info).subscribe({\n      next: async (_) => {\n        this.showSuccess('good');\n        await Haptics.impact({ style: ImpactStyle.Medium });\n      },\n      error: async (_) => {\n        this.showError('cant');\n        await Haptics.impact({ style: ImpactStyle.Heavy });\n      },\n    });\n  }\n\n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'success',\n          detail: text,\n        });\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        {{'data.data' | translate}}\n      \n\n      \n        {{ \"data.download\" | translate }}\n      \n\n      \n\n      \n        {{ \"data.create\" | translate }}\n      \n\n      \n\n      \n        +\n      \n    \n  \n    \n      \n      \n        \n        {{'data.graphic' | translate}}\n      \n\n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./data.page.scss\n                \n                ion-icon {\n    margin-right: 8px;\n}\n\n.category-mobile {\n    display: none;\n\n    button {\n        padding: 1rem;\n        border: none;\n        border-radius: 4px;\n        background-color: #0F212D;\n        color: white;\n        font-weight: bold;\n        cursor: pointer;\n\n        &:hover {\n            background-color: #1b3e56;\n        }\n\n        &:disabled {\n            background-color: #cccccc;\n            color: #777777;\n            cursor: not-allowed;\n        }\n    }\n}\n\n.graphics {\n    margin-top: 3%;\n}\n\napp-user-circle-graphic {\n    display: block;\n    max-width: 300px;\n    margin: 0 auto;\n    height: auto;\n}\n\napp-incidents-circle-graphic {\n    display: block;\n    max-width: 300px;\n    margin: 0 auto;\n    height: auto;\n}\n\n.category-button {\n    position: fixed;\n    bottom: 10px;\n    right: 20px;\n    width: 50px;\n    height: 50px;\n    padding: 0;\n    background-color: #0F212D;\n    color: white;\n    border-radius: 50%;\n    cursor: pointer;\n    font-size: 24px;\n    line-height: 50px;\n    text-align: center;\n\n    &:hover {\n        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);\n    }\n}\n\n.download-data {\n    margin-top: 30px;\n    display: flex;\n    justify-content: center;\n\n    button {\n        padding: 1rem;\n        border: none;\n        border-radius: 4px;\n        background-color: #0F212D;\n        color: white;\n        font-weight: bold;\n        cursor: pointer;\n\n        &:hover {\n            background-color: #1b3e56;\n        }\n\n        &:disabled {\n            background-color: #cccccc;\n            color: #777777;\n            cursor: not-allowed;\n        }\n    }\n}\n\n\n@media (max-width: 700px) {\n    .category-mobile {\n        margin-top: 80px;\n        margin-bottom: -10px;\n        display: flex;\n        justify-content: center;\n    }\n\n    .category-button {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{\\'data.data\\' | translate}}                    {{ \"data.download\" | translate }}                          {{ \"data.create\" | translate }}                          +                                            {{\\'data.graphic\\' | translate}}                                                                                                          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataPageModule.html":{"url":"modules/DataPageModule.html","title":"module - DataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    DataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataPageModule\n\n\n\ncluster_DataPageModule_declarations\n\n\n\ncluster_DataPageModule_imports\n\n\n\n\nDataPage\n\nDataPage\n\n\n\nDataPageModule\n\nDataPageModule\n\nDataPageModule -->\n\nDataPage->DataPageModule\n\n\n\n\n\nModalCategoryComponent\n\nModalCategoryComponent\n\nDataPageModule -->\n\nModalCategoryComponent->DataPageModule\n\n\n\n\n\nDataPageRoutingModule\n\nDataPageRoutingModule\n\nDataPageModule -->\n\nDataPageRoutingModule->DataPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DataPage\n                        \n                        \n                            ModalCategoryComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DataPageRoutingModule } from './data-routing.module';\n\nimport { DataPage } from './data.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { ToastModule } from 'primeng/toast';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ModalCategoryComponent } from './modal-category/modal-category.component';\nimport { AccordionModule } from 'primeng/accordion';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    // Reactive form\n    ReactiveFormsModule,\n    IonicModule,\n    DataPageRoutingModule,\n    SharedModule,\n    MatTabsModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n    // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    SharedModule,\n    AccordionModule\n  ],\n  declarations: [\n    DataPage,\n    ModalCategoryComponent\n  ]\n})\nexport class DataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataPageRoutingModule.html":{"url":"modules/DataPageRoutingModule.html","title":"module - DataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/data/data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DataPage } from './data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:48\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deletes an item from a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to delete the item from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the deleted item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a single item from a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to retrieve the item from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the retrieved item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Creates a new item on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to create the item on.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData for creating the item.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the created item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Updates an existing item on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to update the item on.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData for updating the item.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the updated item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:15\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Executes a query operation on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to query.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nParameters for the query.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Observable emitting the paginated data resulting from the query.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PaginatedData } from '../interfaces/data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class DataService {\n  /**\n   * Executes a query operation on a resource.\n   * @param {string} resource - The resource to query.\n   * @param {any} params - Parameters for the query.\n   * @returns {Observable>} Observable emitting the paginated data resulting from the query.\n   */\n  public abstract query(\n    resource: string,\n    params: any\n  ): Observable>;\n\n  /**\n   * Retrieves a single item from a resource.\n   * @param {string} resource - The resource to retrieve the item from.\n   * @returns {Observable} Observable emitting the retrieved item.\n   */\n  public abstract get(resource: string): Observable;\n\n  /**\n   * Creates a new item on a resource.\n   * @param {string} resource - The resource to create the item on.\n   * @param {any} data - Data for creating the item.\n   * @returns {Observable} Observable emitting the created item.\n   */\n  public abstract post(resource: string, data: any): Observable;\n\n  /**\n   * Updates an existing item on a resource.\n   * @param {string} resource - The resource to update the item on.\n   * @param {any} data - Data for updating the item.\n   * @returns {Observable} Observable emitting the updated item.\n   */\n  public abstract put(resource: string, data: any): Observable;\n\n  /**\n   * Deletes an item from a resource.\n   * @param {string} resource - The resource to delete the item from.\n   * @returns {Observable} Observable emitting the deleted item.\n   */\n  public abstract delete(resource: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailValidation.html":{"url":"classes/EmailValidation.html","title":"class - EmailValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/email.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        email\n                        \n                    \n                \n            \n            \n                \n                        \n                    email(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/email.ts:14\n                        \n                    \n\n\n            \n                \n                        Validates an email control.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe name of the control to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for email validation.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbstractControl,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\n\nexport class EmailValidation {\n  /**\n   * Validates an email control.\n   * @param {string} controlName - The name of the control to validate.\n   * @returns {ValidatorFn} Validator function for email validation.\n   */\n  public static email(controlName: string = ''): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      let email = '';\n      if (control instanceof FormControl) email = control?.value;\n      else email = control.get(controlName)?.value;\n      if (\n        email &&\n        !email.match(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)\n      ) {\n        return { email: true };\n      } else {\n        return null;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/filter/filter.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n\n\n            \n                styleUrls\n                ./filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetFilters\n                            \n                            \n                                setFilters\n                            \n                            \n                                subscribeToFilterState\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChanged\n                            \n                            \n                                resetRequested\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/filter/filter.component.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of FilterComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FilterService for managing filter state.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter/filter.component.ts:24\n                            \n                        \n                \n                    \n                        Event emitter for signaling filter changes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resetRequested\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter/filter.component.ts:19\n                            \n                        \n                \n                    \n                        EventEmitter for emitting a signal to reset filters.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Initializes the form with the initial filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nInitializes the form and subscribes to changes in filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFilters\n                        \n                    \n                \n            \n            \n                \nresetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Resets the filter settings to their default values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilters\n                        \n                    \n                \n            \n            \n                \nsetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Applies the current filter settings.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToFilterState\n                        \n                    \n                \n            \n            \n                \nsubscribeToFilterState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Subscribes to changes in the filter state and updates the form accordingly.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/filter/filter.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\nimport { FilterService } from 'src/app/core/services/filter/filter.service';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent implements OnInit {\n  /**\n   * EventEmitter for emitting a signal to reset filters.\n   */\n  @Output() resetRequested = new EventEmitter();\n\n  /**\n   * Event emitter for signaling filter changes.\n   */\n  @Output() filterChanged = new EventEmitter();\n\n  form: FormGroup;\n\n  /**\n   * Creates an instance of FilterComponent.\n   *\n   * @param filterService - The FilterService for managing filter state.\n   */\n  constructor(private filterService: FilterService) {\n    this.form = new FormGroup({\n      categoryName: new FormControl(undefined),\n      userId: new FormControl(undefined),\n      checked: new FormControl(false),\n      resolved: new FormControl(false),\n    });\n    this.subscribeToFilterState();\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Initializes the form and subscribes to changes in filter state.\n   */\n  ngOnInit() {\n    this.initForm();\n    this.subscribeToFilterState();\n  }\n\n  /**\n   * Initializes the form with the initial filter state.\n   */\n  initForm() {\n    const initialFormState = this.filterService.getFilter().value;\n    if (initialFormState) {\n      this.form = new FormGroup({\n        categoryName: new FormControl(initialFormState?.get('categoryName')?.value),\n        userId: new FormControl(initialFormState.get('userId')?.value),\n        checked: new FormControl(initialFormState.get('checked')?.value),\n        resolved: new FormControl(initialFormState.get('resolved')?.value),\n      });\n    } else {\n      this.form = new FormGroup({\n        categoryName: new FormControl(undefined),\n        userId: new FormControl(undefined),\n        checked: new FormControl(false),\n        resolved: new FormControl(false),\n      });\n    }\n  }\n\n  /**\n   * Subscribes to changes in the filter state and updates the form accordingly.\n   */\n  subscribeToFilterState() {\n    this.filterService.getFilter().subscribe((formState) => {\n      if (formState && this.form !== formState) {\n        this.form.setValue(formState.value, { emitEvent: false });\n      }\n    });\n  }\n\n  /**\n   * Applies the current filter settings.\n   */\n  setFilters() {\n    console.log(this.form.value);\n    this.filterService.updateFilterState(this.form);\n  }\n\n  /**\n   * Resets the filter settings to their default values.\n   */\n  resetFilters() {\n    this.form.reset({\n      categoryName: undefined,\n      userId: undefined,\n      checked: false,\n      resolved: false,\n    });\n    this.filterService.updateFilterState(this.form);\n    this.resetRequested.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n\n      Vistos\n      Resueltos\n    \n    \n      {{'filter.reset' | translate}}\n      {{'filter.apply' | translate}}\n    \n  \n\n    \n\n    \n                \n                    ./filter.component.scss\n                \n                .filter {\n    flex-direction: column;\n    align-items: center;\n    padding: 10px;\n    width: 80%;\n    border-radius: 0.5rem;\n    margin: 2% auto;\n    box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n\n    .form-controls {\n        display: flex;\n        justify-content: space-between;\n        width: 100%;\n        margin-bottom: 20px;\n        gap: 20px;\n\n        app-category-selectable,\n        app-user-selectable {\n            flex: 2;\n            max-width: 100%\n        }\n\n        mat-checkbox {\n            flex: 1;\n            max-width: 100%;\n        }\n    }\n\n\n\n    .form-actions {\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n        width: 100%;\n        gap: 20px;\n        padding: 10px 0;\n\n        button {\n            margin-left: 10px;\n            border-radius: 20px;\n            padding: 8px 60px;\n            font-size: 16px;\n        }\n\n        .reset--button {\n            background-color: #BD1E1E;\n            color: #fff;\n            font-weight: bold;\n\n            &:disabled {\n                background-color: #cccccc;\n                color: #777777;\n                cursor: not-allowed;\n            }\n        }\n\n        .apply--button {\n            background-color: #0F212D;\n            color: #fff;\n            font-weight: bold;\n        }\n    }\n\n    @media (max-width: 850px) {\n        width: 95%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Vistos      Resueltos              {{\\'filter.reset\\' | translate}}      {{\\'filter.apply\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterMobileComponent.html":{"url":"components/FilterMobileComponent.html","title":"component - FilterMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/filter-mobile/filter-mobile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-mobile\n            \n\n\n\n            \n                styleUrls\n                ./filter-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                resetFilters\n                            \n                            \n                                setFilters\n                            \n                            \n                                subscribeToFilterState\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChanged\n                            \n                            \n                                resetRequested\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController, filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of FiltersComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FormBuilder service for building form instances.\n\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController - a service for managing modal dialogs.\n\n\n                                                        \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service for managing filter service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resetRequested\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:15\n                            \n                        \n                \n                    \n                        EventEmitter for emitting a signal to reset filters.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Initializes the form with the initial filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nInitializes the form and subscribes to changes in the filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Method executed when the cancel action is triggered.\nDismisses the modal without passing any data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFilters\n                        \n                    \n                \n            \n            \n                \nresetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Resets the filter settings to their default values and dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilters\n                        \n                    \n                \n            \n            \n                \nsetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Applies the current filter settings and dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToFilterState\n                        \n                    \n                \n            \n            \n                \nsubscribeToFilterState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Subscribes to changes in the filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { FilterService } from 'src/app/core/services/filter/filter.service';\n\n@Component({\n  selector: 'app-filter-mobile',\n  templateUrl: './filter-mobile.component.html',\n  styleUrls: ['./filter-mobile.component.scss'],\n})\nexport class FilterMobileComponent implements OnInit {\n  /**\n   * EventEmitter for emitting a signal to reset filters.\n   */\n  @Output() resetRequested = new EventEmitter();\n\n  @Output() filterChanged = new EventEmitter();\n\n  form: FormGroup;\n\n  /**\n   * Creates an instance of FiltersComponent.\n   *\n   * @param formBuilder - The FormBuilder service for building form instances.\n   * @param modal - The ModalController - a service for managing modal dialogs.\n   * @param filterService - A service for managing filter service.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private filterService: FilterService\n  ) {\n    this.form = this.formBuilder.group({\n      categoryName: [undefined],\n      userId: [undefined],\n      checked: [false],\n      resolved: [false],\n    });\n  }\n\n  /**\n   * Method executed when the cancel action is triggered.\n   * Dismisses the modal without passing any data.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Initializes the form and subscribes to changes in the filter state.\n   */\n  ngOnInit() {\n    this.initForm();\n    this.subscribeToFilterState();\n  }\n\n  /**\n   * Initializes the form with the initial filter state.\n   */\n  initForm() {\n    const initialFormState = this.filterService.getFilter().value;\n    if (initialFormState) {\n      this.form = new FormGroup({\n        categoryName: new FormControl(initialFormState?.get('categoryName')?.value),\n        userId: new FormControl(initialFormState.get('userId')?.value),\n        checked: new FormControl(initialFormState.get('checked')?.value),\n        resolved: new FormControl(initialFormState.get('resolved')?.value),\n      });\n    } else {\n      this.form = new FormGroup({\n        categoryName: new FormControl(undefined),\n        userId: new FormControl(undefined),\n        checked: new FormControl(false),\n        resolved: new FormControl(false),\n      });\n    }\n  }\n\n  /**\n   * Subscribes to changes in the filter state.\n   */\n  subscribeToFilterState() {\n    this.filterService.getFilter().subscribe((formState) => {\n      if (formState && this.form !== formState) {\n        this.form.setValue(formState.value);\n      }\n    });\n  }\n\n  /**\n   * Applies the current filter settings and dismisses the modal.\n   */\n  setFilters() {\n    console.log(this.form.value);\n    this.modal.dismiss(null);\n    this.filterService.updateFilterState(this.form);\n  }\n\n  /**\n   * Resets the filter settings to their default values and dismisses the modal.\n   */\n  resetFilters() {\n    this.form.reset({\n      categoryName: undefined,\n      userId: undefined,\n      checked: false,\n      resolved: false,\n    });\n    this.modal.dismiss('reset');\n    this.filterService.updateFilterState(this.form);\n    this.resetRequested.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n  \n\n\n\n  \n    \n      \n        \n        \n\n        Vistos\n        Resueltos\n      \n      \n        {{'filter.reset' | translate}}\n        {{'filter.apply' | translate}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./filter-mobile.component.scss\n                \n                .filter {\n    display: flex;\n    flex-direction: column;\n    padding: 3%;\n\n    .form-controls {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        width: 100%;\n        margin-bottom: 20px;\n        gap: 20px;\n\n        mat-checkbox {\n            flex: 1;\n            max-width: 100%;\n        }\n    }\n\n\n\n    .form-actions {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        width: 100%;\n        gap: 20px;\n\n        button {\n            border-radius: 20px;\n            padding: 8px 60px;\n            font-size: 16px;\n        }\n\n        .reset--button {\n            background-color: #BD1E1E;\n            color: #fff;\n            font-weight: bold;\n\n            &:disabled {\n                background-color: #cccccc;\n                color: #777777;\n                cursor: not-allowed;\n            }\n        }\n\n        .apply--button {\n            background-color: #0F212D;\n            color: #fff;\n            font-weight: bold;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      Vistos        Resueltos                    {{\\'filter.reset\\' | translate}}        {{\\'filter.apply\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/filter/filter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFilter\n                            \n                            \n                                initializeState\n                            \n                            \n                                updateFilterState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFilter\n                        \n                    \n                \n            \n            \n                \ngetFilter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/filter/filter.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Retrieves the current filter state as a BehaviorSubject.\n\n\n                        \n                            Returns :     BehaviorSubject\n\n                        \n                            \n                                A BehaviorSubject containing the current filter state.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/filter/filter.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Initializes the filter state with default values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilterState\n                        \n                    \n                \n            \n            \n                \nupdateFilterState(form: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/filter/filter.service.ts:16\n                        \n                    \n\n\n            \n                \n                        Updates the filter state with the provided form.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form containing the updated filter settings.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filterState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/filter/filter.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilterService {\n  private filterState = new BehaviorSubject(null);\n\n  /**\n   * Updates the filter state with the provided form.\n   *\n   * @param form - The form containing the updated filter settings.\n   */\n  updateFilterState(form: FormGroup) {\n    this.filterState.next(form);\n  }\n\n  /**\n   * Retrieves the current filter state as a BehaviorSubject.\n   *\n   * @returns A BehaviorSubject containing the current filter state.\n   */\n  getFilter(): BehaviorSubject {\n    return this.filterState;\n  }\n\n  /**\n   * Initializes the filter state with default values.\n   */\n  initializeState() {\n    const initialForm = new FormGroup({\n      categoryName: new FormControl(undefined),\n      userId: new FormControl(undefined),\n      checked: new FormControl(false),\n      resolved: new FormControl(false),\n    });\n    this.filterState.next(initialForm);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseAuthService.html":{"url":"classes/FirebaseAuthService.html","title":"class - FirebaseAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                me\n                            \n                            \n                                    Private\n                                postRegister\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseSvc: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseAuthService class. It subscribes to the isLogged$ observable from the FirebaseService to\nautomatically handle changes in the authentication state. If the user is logged in, it attempts to fetch the user's data.\nIf not logged in, it sets _logged and _user to false and null, respectively.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:44\n\n                        \n                    \n\n\n            \n                \n                        Logs in a user using their credentials. Attempts to connect the user through Firebase using email and password.\nIf authentication fails or if a valid UID for the user is not received, it emits an error. If successful, it retrieves\nthe user information and updates the _user and _logged observables.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe credentials of the user, including email and password.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that may emit the logged-in user or an error in case of failed authentication.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:178\n\n                        \n                    \n\n\n            \n                \n                        Logs out the current user by calling the signOut method from FirebaseService. The method returns an Observable\nthat resolves when the sign-out process is complete.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable indicating the completion of the logout process.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:153\n\n                        \n                    \n\n\n            \n                \n                        Fetches the current user's information from Firestore based on their UID. If the user is connected (UID exists),\nretrieves their detailed profile from the 'userInfo' collection. Throws an error if no user is currently connected.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Returns an Observable that emits the user's detailed information or throws an error if the user is not connected.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    postRegister(info: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/firebase/api/firebase-auth.service.ts:124\n                        \n                    \n\n\n            \n                \n                        The function postRegister takes a User object, capitalizes the first letter of the name\nproperty if needed, and then creates a document in Firebase with the user information.\ncontains the following properties:\nparameter, checks if the uuid property exists in the info object, and then modifies the name\nproperty by capitalizing the first letter if it is not already capitalized. Finally, it creates a\ndocument in the 'userInfo' collection in Firebase with the provided user information and the\nspecified\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The info parameter in the postRegister function is an object of type UserInfo that\ncontains the following properties:\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable is being returned. The function postRegister takes a User object as a\nparameter, checks if the uuid property exists in the info object, and then modifies the name\nproperty by capitalizing the first letter if it is not already capitalized. Finally, it creates a\ndocument in the 'userInfo' collection in Firebase with the provided user information and the\nspecified\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:83\n\n                        \n                    \n\n\n            \n                \n                        Registers a new user using registration info. Creates a user in Firebase and, if successful, stores additional\nuser information in the database. If the registration fails to create a user or if necessary user details (like UID) are\nmissing, it emits an error. Otherwise, it completes the registration, updates user-related observables to reflect\nthe unauthenticated state, and emits the new user information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe registration info of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that may emit null or detailed information of the newly registered user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:189\n\n                        \n                    \n\n\n            \n                \n                        Updates the current user's information in Firestore and refreshes the local user data by fetching updated info after the update.\nUses RxJS operators to chain these asynchronous tasks efficiently.\nuser data is refreshed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new user data to be updated in Firestore.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that emits the updated user data after both the Firestore document is updated and the local\nuser data is refreshed.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, from, map, switchMap, tap } from 'rxjs';\nimport {\n  UserInfo,\n  UserCredentials,\n  UserRegisterInfo,\n} from '../../../interfaces/user-info';\nimport { FirebaseService, FirebaseUserCredential } from '../firebase.service';\nimport { AuthService } from '../../auth.service';\n\nexport class FirebaseAuthService extends AuthService {\n  /**\n   * Constructs the FirebaseAuthService class. It subscribes to the `isLogged$` observable from the FirebaseService to\n   * automatically handle changes in the authentication state. If the user is logged in, it attempts to fetch the user's data.\n   * If not logged in, it sets `_logged` and `_user` to `false` and `null`, respectively.\n   */\n  constructor(private firebaseSvc: FirebaseService) {\n    super();\n\n    this.firebaseSvc.isLogged$.subscribe((logged) => {\n      if (logged) {\n        this.me().subscribe({\n          next: (data) => {\n            this._user.next(data);\n            this._logged.next(true);\n          },\n          error: (err) => {\n            console.log(err);\n          },\n        });\n      } else {\n        this._logged.next(false);\n        this._user.next(null);\n      }\n    });\n  }\n\n  /**\n   * Logs in a user using their credentials. Attempts to connect the user through Firebase using email and password.\n   * If authentication fails or if a valid UID for the user is not received, it emits an error. If successful, it retrieves\n   * the user information and updates the `_user` and `_logged` observables.\n   * @param {UserCredentials} credentials - The credentials of the user, including email and password.\n   * @returns Returns an Observable that may emit the logged-in user or an error in case of failed authentication.\n   */\n  public login(credentials: UserCredentials): Observable {\n    return new Observable((subscr) => {\n      this.firebaseSvc\n        .connectUserWithEmailAndPassword(\n          credentials.email,\n          credentials.password\n        )\n        .then((credentials: FirebaseUserCredential | null) => {\n          if (\n            !credentials ||\n            !credentials.user ||\n            !credentials.user.user ||\n            !credentials.user.user.uid\n          ) {\n            subscr.error('Cannot login');\n          }\n          if (credentials) {\n            this.me().subscribe((data) => {\n              this._user.next(data);\n              this._logged.next(true);\n              subscr.next(data);\n              subscr.complete();\n            });\n          }\n        })\n        .catch((err) => {\n          subscr.error(err);\n        });\n    });\n  }\n\n  /**\n   * Registers a new user using registration info. Creates a user in Firebase and, if successful, stores additional\n   * user information in the database. If the registration fails to create a user or if necessary user details (like UID) are\n   * missing, it emits an error. Otherwise, it completes the registration, updates user-related observables to reflect\n   * the unauthenticated state, and emits the new user information.\n   * @param {UserRegisterInfo} info - The registration info of the user.\n   * @returns Returns an Observable that may emit null or detailed information of the newly registered user.\n   */\n  public register(info: UserRegisterInfo): Observable {\n    return new Observable((subscr) => {\n      this.firebaseSvc\n        .createUserWithEmailAndPassword(info.email, info.password)\n        .then((credentials: FirebaseUserCredential | null) => {\n          if (\n            !credentials ||\n            !credentials.user ||\n            !credentials.user.user ||\n            !credentials.user.user.uid\n          )\n            subscr.error('Cannot register');\n          if (credentials) {\n            var _info: UserInfo = { ...info };\n            _info.uuid = this.firebaseSvc.user?.uid;\n            this.postRegister(_info).subscribe((data) => {\n              this._user.next(null);\n              this._logged.next(false);\n              subscr.next(_info);\n              subscr.complete();\n            });\n          }\n        })\n        .catch((err) => {\n          subscr.error(err);\n        });\n    });\n  }\n\n  /**\n   * The function `postRegister` takes a `User` object, capitalizes the first letter of the `name`\n   * property if needed, and then creates a document in Firebase with the user information.\n   *\n   * @param info The `info` parameter in the `postRegister` function is an object of type `UserInfo` that\n   * contains the following properties:\n   * @return An Observable is being returned. The function `postRegister` takes a `User` object as a\n   * parameter, checks if the `uuid` property exists in the `info` object, and then modifies the `name`\n   * property by capitalizing the first letter if it is not already capitalized. Finally, it creates a\n   * document in the 'userInfo' collection in Firebase with the provided user information and the\n   * specified\n   */\n  private postRegister(info: UserInfo): Observable {\n    if (info.uuid) {\n      let fixedName = info.name;\n      if (fixedName[0] !== fixedName[0].toUpperCase()) {\n        fixedName = fixedName.charAt(0).toUpperCase() + fixedName.slice(1);\n      }\n      return from(\n        this.firebaseSvc.createDocumentWithId(\n          'userInfo',\n          {\n            name: fixedName,\n            surname: info.surname,\n            role: info.role,\n            username: info.username,\n            email: info.email,\n            uuid: info.uuid,\n          },\n          info.uuid\n        )\n      );\n    }\n    throw new Error('Error inesperado');\n  }\n\n  /**\n   * Fetches the current user's information from Firestore based on their UID. If the user is connected (UID exists),\n   * retrieves their detailed profile from the 'userInfo' collection. Throws an error if no user is currently connected.\n   * @returns Returns an Observable that emits the user's detailed information or throws an error if the user is not connected.\n   */\n  public me(): Observable {\n    if (this.firebaseSvc.user?.uid)\n      return from(\n        this.firebaseSvc.getDocument('userInfo', this.firebaseSvc.user.uid)\n      ).pipe(\n        map((data) => {\n          return {\n            name: data.data['name'],\n            surname: data.data['surname'],\n            picture: data.data['picture'] ?? '',\n            email: data.data['email'],\n            role: data.data['role'],\n            username: data.data['username'],\n            uuid: data.id,\n          };\n        })\n      );\n    else throw new Error('User is not connected');\n  }\n\n  /**\n   * Logs out the current user by calling the `signOut` method from FirebaseService. The method returns an Observable\n   * that resolves when the sign-out process is complete.\n   * @returns Returns an Observable indicating the completion of the logout process.\n   */\n  public logout(): Observable {\n    return from(this.firebaseSvc.signOut(false));\n  }\n\n  /**\n   * Updates the current user's information in Firestore and refreshes the local user data by fetching updated info after the update.\n   * Uses RxJS operators to chain these asynchronous tasks efficiently.\n   * @param {UserInfo} user - The new user data to be updated in Firestore.\n   * @returns Returns an Observable that emits the updated user data after both the Firestore document is updated and the local\n   * user data is refreshed.\n   */\n  public updateUser(user: UserInfo): Observable {\n    return from(\n      this.firebaseSvc.updateDocument('userInfo', user!.uuid!, user)\n    ).pipe(\n      tap(() => {\n        if (user.uuid === this._user.value?.uuid) {\n          this._user.next(user);\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseDataService.html":{"url":"classes/FirebaseDataService.html","title":"class - FirebaseDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            DataService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-data.service.ts:6\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseDataService with a reference to FirebaseService.\nThis service handles all interactions with Firebase, providing methods to get, create, update,\nand delete documents in a Firestore database.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides methods for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:101\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deletes a document from Firebase and returns the document that was deleted.\nRetrieves the document first, then deletes it from Firestore, emitting the original document upon completion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, formatted as 'collectionName/documentId'.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the document that was deleted as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:52\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a single document from Firebase based on a resource path which includes collection name and document ID.\nMaps the Firestore document to a generic type T.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, formatted as 'collectionName/documentId'.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the requested document as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Creates a new document in a specified Firebase collection and retrieves the newly created document.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the Firestore collection where the document will be created.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be stored in the new document.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the newly created document as type T, after fetching it using its ID.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:85\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Updates an existing document in Firebase and retrieves the updated document.\nAssumes the resource string is formatted as 'collectionName/documentId'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, which is split to get collection name and document ID.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new data for the document.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the updated document as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:24\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Fetches a collection of documents from Firebase and maps them to a PaginatedData structure.\nThis method is generic and can be used for any type of collection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the Firestore collection to query.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nQuery parameters (currently not used in implementation but can be utilized for filtering/sorting).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \nAn observable that emits the paginated data of the specified type.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, from, map, switchMap } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { PaginatedData } from 'src/app/core/interfaces/data';\nimport { DataService } from '../../data.service';\n\nexport class FirebaseDataService extends DataService {\n  /**\n   * Constructs the FirebaseDataService with a reference to FirebaseService.\n   * This service handles all interactions with Firebase, providing methods to get, create, update,\n   * and delete documents in a Firestore database.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(protected firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Fetches a collection of documents from Firebase and maps them to a PaginatedData structure.\n   * This method is generic and can be used for any type of collection.\n   * @param {string} resource - The name of the Firestore collection to query.\n   * @param {any} params - Query parameters (currently not used in implementation but can be utilized for filtering/sorting).\n   * @returns {Observable>} - An observable that emits the paginated data of the specified type.\n   */\n  public query(resource: string, params: any): Observable> {\n    return from(this.firebase.getDocuments(resource)).pipe(\n      map((data) => {\n        return {\n          data: data.map((doc) => {\n            return {\n              id: 0,\n              uuid: doc.id,\n              ...doc.data,\n            } as T;\n          }),\n          pagination: {\n            page: 0,\n            pageSize: data.length,\n            pageCount: 1,\n            total: data.length,\n          },\n        };\n      })\n    );\n  }\n\n  /**\n   * Retrieves a single document from Firebase based on a resource path which includes collection name and document ID.\n   * Maps the Firestore document to a generic type T.\n   * @param {string} resource - The path to the document, formatted as 'collectionName/documentId'.\n   * @returns {Observable} - An observable that emits the requested document as type T.\n   */\n  public get(resource: string): Observable {\n    return from(\n      this.firebase.getDocument(resource.split('/')[0], resource.split('/')[1])\n    ).pipe(\n      map((doc) => {\n        return {\n          id: 0,\n          uuid: doc.id,\n          ...doc.data,\n        } as T;\n      })\n    );\n  }\n\n  /**\n   * Creates a new document in a specified Firebase collection and retrieves the newly created document.\n   * @param {string} resource - The name of the Firestore collection where the document will be created.\n   * @param {any} data - The data to be stored in the new document.\n   * @returns {Observable} - An observable that emits the newly created document as type T, after fetching it using its ID.\n   */\n  public post(resource: string, data: any): Observable {\n    return from(this.firebase.createDocument(resource, data)).pipe(\n      switchMap((doc) => this.get(resource + '/' + doc))\n    );\n  }\n\n  /**\n   * Updates an existing document in Firebase and retrieves the updated document.\n   * Assumes the resource string is formatted as 'collectionName/documentId'.\n   * @param {string} resource - The path to the document, which is split to get collection name and document ID.\n   * @param {any} data - The new data for the document.\n   * @returns {Observable} - An observable that emits the updated document as type T.\n   */\n  public put(resource: string, data: any): Observable {\n    return from(\n      this.firebase.updateDocument(\n        resource.split('/')[0],\n        resource.split('/')[1],\n        data\n      )\n    ).pipe(switchMap((doc) => this.get(resource)));\n  }\n\n  /**\n   * Deletes a document from Firebase and returns the document that was deleted.\n   * Retrieves the document first, then deletes it from Firestore, emitting the original document upon completion.\n   * @param {string} resource - The path to the document, formatted as 'collectionName/documentId'.\n   * @returns {Observable} - An observable that emits the document that was deleted as type T.\n   */\n  public delete(resource: string): Observable {\n    return this.get(resource).pipe(\n      switchMap((doc) => {\n        return from(\n          this.firebase.deleteDocument(\n            resource.split('/')[0],\n            resource.split('/')[1]\n          )\n        ).pipe(map((_) => doc));\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseDocument.html":{"url":"interfaces/FirebaseDocument.html","title":"interface - FirebaseDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     DocumentData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseMediaService.html":{"url":"classes/FirebaseMediaService.html","title":"class - FirebaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MediaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-media.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseMediaService with a reference to FirebaseService.\nThis service will be used to interact with Firebase's functionalities, particularly for uploading images.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides methods for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         MediaService:32\n\n                        \n                    \n\n\n            \n                \n                        Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\nThe method is designed to handle the upload process asynchronously and emit the result as an array of Media.\nEach Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\nIf an error occurs during upload, the observable will emit an error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file data to be uploaded, typically an image file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable that emits an array containing the uploaded media information.\nIf an error occurs during upload, the observable will emit an error.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { MediaService } from '../../media.service';\n\nexport interface Media {\n  id: number;\n  url_small: string;\n  url_medium: string;\n  url_large: string;\n  url_thumbnail: string;\n}\n\nexport class FirebaseMediaService extends MediaService {\n  /**\n   * Constructs the FirebaseMediaService with a reference to FirebaseService.\n   * This service will be used to interact with Firebase's functionalities, particularly for uploading images.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(private firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\n   * The method is designed to handle the upload process asynchronously and emit the result as an array of Media.\n   * Each Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\n   *\n   * @param {Blob} blob - The file data to be uploaded, typically an image file.\n   * @returns {Observable} - An observable that emits an array containing the uploaded media information.\n   * If an error occurs during upload, the observable will emit an error.\n   */\n  public upload(blob: Blob): Observable {\n    return new Observable((obs) => {\n      this.firebase\n        .imageUpload(blob)\n        .then((data) => {\n          var imgs = [];\n          var media: any = data.file;\n          imgs.push(media);\n          obs.next(imgs);\n        })\n        .catch((error) => obs.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseStorageFile.html":{"url":"interfaces/FirebaseStorageFile.html","title":"interface - FirebaseStorageFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseStorageFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseUserCredential.html":{"url":"interfaces/FirebaseUserCredential.html","title":"interface - FirebaseUserCredential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseUserCredential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     UserCredential\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserCredential\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredIncidents$\n                            \n                            \n                                    Public\n                                firebaseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                incidentInfo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilterChange\n                            \n                            \n                                    Async\n                                openFilterModal\n                            \n                            \n                                showAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService, router: Router, firebaseService: FirebaseService, myModal: ModalController, filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService - a service for handling authentication and user authorization.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router - an instance of the Angular Router service used for navigating between different components.\n\n                                                        \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController - a service for managing modal dialogs.\n\n\n                                                        \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service for managing filter service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        incidentInfo\n                        \n                    \n                \n            \n            \n                \nincidentInfo(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:43\n                        \n                    \n\n\n            \n                \n                        Navigates to the incident data page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the incident.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:72\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nInitializes the component by showing all incidents and subscribing to changes in the filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterChange\n                        \n                    \n                \n            \n            \n                \nonFilterChange(filterValues: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:95\n                        \n                    \n\n\n            \n                \n                        Applies the specified filter settings to the incidents.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filterValues\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe filter settings to apply.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFilterModal\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFilterModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:53\n                        \n                    \n\n\n            \n                \n                        Opens the filter modal and applies the selected filter settings.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAll\n                        \n                    \n                \n            \n            \n                \nshowAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:86\n                        \n                    \n\n\n            \n                \n                        Shows all incidents without applying any filters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredIncidents$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.firebaseService.incidents$\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebaseService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:33\n                        \n                    \n\n            \n                \n                    FirebaseService - a service for handling Firebase-related operations.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { Observable, map } from 'rxjs';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { ModalCategoryComponent } from '../data/modal-category/modal-category.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { FilterMobileComponent } from './filter-mobile/filter-mobile.component';\nimport { FilterService } from 'src/app/core/services/filter/filter.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  filteredIncidents$: Observable = this.firebaseService.incidents$;\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _auth AuthService - a service for handling authentication and user authorization.\n   * @param router Router - an instance of the Angular Router service used for navigating between different components.\n   * @param firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param myModal - The ModalController - a service for managing modal dialogs.\n   * @param filterService - A service for managing filter service.\n   */\n  constructor(\n    private _auth: AuthService,\n    private router: Router,\n    public firebaseService: FirebaseService,\n    private myModal: ModalController,\n    private filterService: FilterService\n  ) {}\n\n  /**\n   * Navigates to the incident data page.\n   *\n   * @param id string - the ID of the incident.\n   */\n  incidentInfo(id: string) {\n    if (id) {\n      console.log(id);\n      this.router.navigate(['/home/incident-data', id]);\n    }\n  }\n\n  /**\n   * Opens the filter modal and applies the selected filter settings.\n   */\n  async openFilterModal() {\n    const mod = await this.myModal.create({\n      component: FilterMobileComponent,\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results.data === 'reset') {\n        this.showAll();\n      } else if (results.data) {\n        this.onFilterChange(results.data);\n      }\n    }\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Initializes the component by showing all incidents and subscribing to changes in the filter state.\n   */\n  ngOnInit() {\n    this.showAll();\n    this.filterService.getFilter().subscribe((filterValues) => {\n      if (filterValues) {\n        this.onFilterChange(filterValues);\n      } else {\n        this.showAll();\n      }\n    });\n  }\n\n  /**\n   * Shows all incidents without applying any filters.\n   */\n  showAll() {\n    this.filteredIncidents$ = this.firebaseService.incidents$;\n  }\n\n  /**\n   * Applies the specified filter settings to the incidents.\n   *\n   * @param filterValues - The filter settings to apply.\n   */\n  onFilterChange(filterValues: any) {\n    console.log('filterValues:', filterValues.controls);\n    this.filteredIncidents$ = this.firebaseService.incidents$.pipe(\n      map((incidents) =>\n        incidents.filter((incident: incidentInfo) => {\n          const userIdValue = filterValues.controls.userId.value;\n          const categoryNameValue = filterValues.controls.categoryName.value;\n          const checkedValue = filterValues.controls.checked.value;\n          const resolvedValue = filterValues.controls.resolved.value;\n\n          if (userIdValue && !categoryNameValue) {\n            return (\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue &&\n              incident.userId == userIdValue\n            );\n          } else if (userIdValue) {\n            return (\n              incident.categoryName == categoryNameValue &&\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue &&\n              incident.userId == userIdValue\n            );\n          } else if (!userIdValue && categoryNameValue) {\n            return (\n              incident.categoryName == categoryNameValue &&\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue\n            );\n          } else if (!userIdValue && !categoryNameValue) {\n            return (\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue\n            );\n          } else {\n            return incident;\n          }\n        })\n      )\n    );\n  }\n}\n\n    \n\n    \n        \n    \n    \n        {{'filter.filter' | translate}}\n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    home.page.scss\n                \n                .incidents {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n  row-gap: 20px;\n  column-gap: 30px;\n  width: 100%;\n  padding: 20px;\n\n  app-incidents-info {\n    flex: 0 0 calc(33.333% - 40px);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n  }\n\n  @media (max-width: 850px) {\n    app-incidents-info {\n      flex: 0 0 100%;\n    }\n  }\n}\n\n.mobile {\n  display: none;\n}\n\n@media (max-width: 600px) {\n  .mobile {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 95%;\n    box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n    border-radius: 0.5rem;\n    margin: 2% auto;\n    background-color: #BD1E1E;\n\n    p {\n      font-weight: bold;\n      color: #fff;\n    }\n  }\n\n  .desktop {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{\\'filter.filter\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nCategorySelectableComponent\n\nCategorySelectableComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nCategorySelectableComponent->HomePageModule\n\n\n\n\n\nCategorySelectableMobileComponent\n\nCategorySelectableMobileComponent\n\nHomePageModule -->\n\nCategorySelectableMobileComponent->HomePageModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nHomePageModule -->\n\nFilterComponent->HomePageModule\n\n\n\n\n\nFilterMobileComponent\n\nFilterMobileComponent\n\nHomePageModule -->\n\nFilterMobileComponent->HomePageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nItemCategoryComponent\n\nItemCategoryComponent\n\nHomePageModule -->\n\nItemCategoryComponent->HomePageModule\n\n\n\n\n\nItemUserComponent\n\nItemUserComponent\n\nHomePageModule -->\n\nItemUserComponent->HomePageModule\n\n\n\n\n\nUserSelectableComponent\n\nUserSelectableComponent\n\nHomePageModule -->\n\nUserSelectableComponent->HomePageModule\n\n\n\n\n\nUserSelectableMobileComponent\n\nUserSelectableMobileComponent\n\nHomePageModule -->\n\nUserSelectableMobileComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategorySelectableComponent\n                        \n                        \n                            CategorySelectableMobileComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            FilterMobileComponent\n                        \n                        \n                            HomePage\n                        \n                        \n                            ItemCategoryComponent\n                        \n                        \n                            ItemUserComponent\n                        \n                        \n                            UserSelectableComponent\n                        \n                        \n                            UserSelectableMobileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CategorySelectableComponent } from './category-selectable/category-selectable.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { UserSelectableComponent } from './user-selectable/user-selectable.component';\nimport { ItemCategoryComponent } from './item-category/item-category.component';\nimport { ItemUserComponent } from './item-user/item-user.component';\nimport { FilterMobileComponent } from './filter-mobile/filter-mobile.component';\nimport { UserSelectableMobileComponent } from './user-selectable-mobile/user-selectable-mobile.component';\nimport { CategorySelectableMobileComponent } from './category-selectable-mobile/category-selectable-mobile.component';\n\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    SharedModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    MatCheckboxModule\n  ],\n  declarations: [\n    HomePage,\n    CategorySelectableComponent,\n    ItemCategoryComponent,\n    ItemUserComponent,\n    FilterComponent,\n    UserSelectableComponent,\n    FilterMobileComponent,\n    UserSelectableMobileComponent,\n    CategorySelectableMobileComponent\n  ]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientProvider.html":{"url":"injectables/HttpClientProvider.html","title":"injectable - HttpClientProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                getImage\n                            \n                            \n                                    Public\n                                    Abstract\n                                patch\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:84\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        delete\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        get\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:16\n                        \n                    \n\n\n            \n                \n                        getImage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:69\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        patch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:37\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        post\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:53\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        put\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:94\n                        \n                    \n\n\n            \n                \n                        Sets the trust mode for the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n// rxjs\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport abstract class HttpClientProvider {\n  /**\n   * getImage\n   *\n   * @param url http request url\n   * @param options http request options\n   * @returns observable with http response\n   */\n  public abstract getImage(url: string): Observable;\n\n  /**\n   * get\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public abstract get(url: string, params: any, headers: any): Observable;\n\n  /**\n   * post\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract post(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * put\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract put(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * patch\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract patch(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * delete\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public abstract delete(\n    url: string,\n    params: any,\n    headers: any\n  ): Observable;\n\n  /**\n   * Sets the trust mode for the server\n   * @param mode server trust mode\n   */\n  public abstract setServerTrustMode(\n    mode: 'default' | 'nocheck' | 'pinned' | 'legacy'\n  ): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientWebProvider.html":{"url":"injectables/HttpClientWebProvider.html","title":"injectable - HttpClientWebProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientWebProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client-web.provider.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            HttpClientProvider\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBody\n                            \n                            \n                                    Private\n                                createHeaders\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getImage\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/http/http-client-web.provider.ts:12\n                            \n                        \n\n                \n                    \n                            provider constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                angular http client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBody\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBody(body: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:170\n                        \n                    \n\n\n            \n                \n                        create http request body\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any | HttpParams\n\n                        \n                            \n                                http request body\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    createHeaders(headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:153\n                        \n                    \n\n\n            \n                \n                        create http headers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                angular http headers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:126\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        delete\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:43\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        get\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:29\n\n                        \n                    \n\n\n            \n                \n                        getImage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:103\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        patch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:63\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        post\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:83\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        put\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:142\n\n                        \n                    \n\n\n            \n                \n                        Sets the trust mode for the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// rxjs\nimport { Observable } from 'rxjs';\n\n// providers\nimport { HttpClientProvider } from './http-client.provider';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpClientWebProvider extends HttpClientProvider {\n  /**\n   * provider constructor\n   *\n   * @param httpClient angular http client\n   */\n  constructor(private readonly httpClient: HttpClient) {\n    super();\n  }\n\n  /**\n   * getImage\n   *\n   * @param url http request url\n   * @param options http request options\n   * @returns observable with http response\n   */\n  public getImage(url: string): Observable {\n    return this.httpClient.get(url, {\n      responseType: 'blob',\n    });\n  }\n\n  /**\n   * get\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public get(\n    url: string,\n    params: any = {},\n    headers: any = {}\n  ): Observable {\n    return this.httpClient.get(url, {\n      params: new HttpParams({ fromObject: params }),\n      headers: this.createHeaders(headers),\n    });\n  }\n\n  /**\n   * post\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public post(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    return this.httpClient.post(url, this.createBody(body, urlEncoded), {\n      headers: this.createHeaders(headers, urlEncoded),\n    });\n  }\n\n  /**\n   * put\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public put(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    return this.httpClient.put(url, this.createBody(body, urlEncoded), {\n      headers: this.createHeaders(headers, urlEncoded),\n    });\n  }\n\n  /**\n   * patch\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public patch(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    if (body instanceof FormData) {\n      return this.httpClient.patch(url, body, { headers: headers });\n    } else {\n      return this.httpClient.patch(url, this.createBody(body, urlEncoded), {\n        headers: this.createHeaders(headers, urlEncoded),\n      });\n    }\n  }\n\n  /**\n   * delete\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public delete(\n    url: string,\n    params: any = {},\n    headers: any = {}\n  ): Observable {\n    return this.httpClient.delete(url, {\n      params: new HttpParams({ fromObject: params }),\n      headers: this.createHeaders(headers),\n    });\n  }\n\n  /**\n   * Sets the trust mode for the server\n   *\n   * @param mode server trust mode\n   */\n  public setServerTrustMode(\n    mode: 'default' | 'nocheck' | 'pinned' | 'legacy'\n  ): void {}\n\n  /**\n   * create http headers\n   *\n   * @param headers http headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns angular http headers\n   */\n  private createHeaders(\n    headers: any,\n    urlEncoded: boolean = false\n  ): HttpHeaders {\n    var _headers = new HttpHeaders(headers);\n    if (urlEncoded)\n      _headers.set('Accept', ' application/x-www-form-urlencoded');\n    return _headers;\n  }\n\n  /**\n   * create http request body\n   *\n   * @param body http request body\n   * @param urlEncoded http request as url encoded content-type\n   * @returns http request body\n   */\n  private createBody(body: any, urlEncoded: boolean): any | HttpParams {\n    return urlEncoded ? new HttpParams({ fromObject: body }) : body;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentDataPage.html":{"url":"components/IncidentDataPage.html","title":"component - IncidentDataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentDataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/incident-data/incident-data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-incident-data\n            \n\n\n\n            \n                styleUrls\n                ./incident-data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./incident-data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                incident\n                            \n                            \n                                incidentId\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                setResolvedIncident\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, incidentsService: IncidentsService, translate: CustomTranslateService, messageService: MessageService, dialog: MatDialog, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute - a service provided by Angular that gives access to information about a route associated with a component loaded in an outlet.\n\n                                                        \n                                                \n                                                \n                                                        incidentsService\n                                                  \n                                                        \n                                                                        IncidentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                IncidentsService - a service for managing incidents.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MessageService - a service for displaying messages or notifications to the user within the application.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog - a service for displaying dialog boxes.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:136\n                        \n                    \n\n\n            \n                \n                        The goBack function navigates to the home route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:44\n                        \n                    \n\n\n            \n                \n                        Initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setResolvedIncident\n                        \n                    \n                \n            \n            \n                \n                        \n                    setResolvedIncident(incident: incidentInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:68\n                        \n                    \n\n\n            \n                \n                        Sets an incident as resolved.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incident\n                                            \n                                                            incidentInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    incidentInfo - the incident to be marked as resolved.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:119\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:99\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:37\n                        \n                    \n\n            \n                \n                    MatDialog - a service for displaying dialog boxes.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incident\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incidentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:38\n                        \n                    \n\n            \n                \n                    The `router` parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { IncidentsService } from 'src/app/core/services/api/incidents.service';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\nimport { MessageService } from 'primeng/api';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-incident-data',\n  templateUrl: './incident-data.page.html',\n  styleUrls: ['./incident-data.page.scss'],\n  providers: [MessageService],\n})\nexport class IncidentDataPage implements OnInit {\n  incidentId: string | null = '';\n  incident: any | undefined;\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param route ActivatedRoute - a service provided by Angular that gives access to information about a route associated with a component loaded in an outlet.\n   * @param incidentsService IncidentsService - a service for managing incidents.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   * @param messageService MessageService - a service for displaying messages or notifications to the user within the application.\n   * @param dialog MatDialog - a service for displaying dialog boxes.\n   * @param router The `router` parameter in the constructor is an instance of the Angular Router\n   * service. It is used for navigating between different views in the Angular application based on the\n   * specified routes.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private incidentsService: IncidentsService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    public dialog: MatDialog,\n    public router: Router\n  ) {}\n\n  /**\n   * Initializes the component.\n   */\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.incidentId = params.get('id');\n      if (this.incidentId) {\n        this.incidentsService.getIncidentById(this.incidentId).subscribe({\n          next: (incident) => {\n            if (incident) {\n              this.incident = incident;\n              if (!incident.checked) {\n                incident.checked = true;\n                this.incidentsService.updateIncident(incident);\n              }\n            }\n          },\n        });\n      }\n    });\n  }\n\n  /**\n   * Sets an incident as resolved.\n   *\n   * @param incident incidentInfo - the incident to be marked as resolved.\n   */\n  async setResolvedIncident(incident: incidentInfo) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      data: { message: 'resolved' },\n    });\n\n    dialogRef.afterClosed().subscribe(async (result) => {\n      if (result) {\n        incident.resolved = true;\n        this.incident = incident;\n        this.incidentsService.updateIncident(incident).subscribe({\n          next: async _ => {\n            this.showSuccess('good');\n            await Haptics.impact({ style: ImpactStyle.Medium });\n          },\n          error: async error => {\n            this.incident.resolved = false;\n            this.showError('error');\n            await Haptics.impact({ style: ImpactStyle.Heavy });\n          }\n        });\n      }\n    });\n  }\n  \n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'success',\n          detail: text,\n        });\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n      },\n    });\n  }\n\n  /**\n   * The `goBack` function navigates to the home route using the Angular router.\n   */\n  goBack() {\n    this.router.navigate(['/home'])\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n    \n\n    \n      \n\n        {{incident.title}}\n\n        {{incident.categoryName}}\n\n        {{incident.userName}}\n\n        {{incident.description}}\n\n        {{\"incidents.resolved\" | translate}}\n       \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./incident-data.page.scss\n                \n                .back {\n    width: auto;\n    margin: 2%;\n\n    ion-icon {\n        cursor: pointer;\n    }\n}\n\n.incident {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--text {\n        margin: 0;\n    }\n\n    &--description {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n    \n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{incident.title}}        {{incident.categoryName}}        {{incident.userName}}        {{incident.description}}        {{\"incidents.resolved\" | translate}}               '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentDataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IncidentDataPageModule.html":{"url":"modules/IncidentDataPageModule.html","title":"module - IncidentDataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    IncidentDataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IncidentDataPageModule\n\n\n\ncluster_IncidentDataPageModule_declarations\n\n\n\ncluster_IncidentDataPageModule_imports\n\n\n\n\nIncidentDataPage\n\nIncidentDataPage\n\n\n\nIncidentDataPageModule\n\nIncidentDataPageModule\n\nIncidentDataPageModule -->\n\nIncidentDataPage->IncidentDataPageModule\n\n\n\n\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageModule -->\n\nIncidentDataPageRoutingModule->IncidentDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/incident-data/incident-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IncidentDataPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IncidentDataPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IncidentDataPageRoutingModule } from './incident-data-routing.module';\n\nimport { IncidentDataPage } from './incident-data.page';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IncidentDataPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n  ],\n  declarations: [IncidentDataPage]\n})\nexport class IncidentDataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IncidentDataPageRoutingModule.html":{"url":"modules/IncidentDataPageRoutingModule.html","title":"module - IncidentDataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    IncidentDataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/incident-data/incident-data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IncidentDataPage } from './incident-data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IncidentDataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IncidentDataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentsCircleGraphicComponent.html":{"url":"components/IncidentsCircleGraphicComponent.html","title":"component - IncidentsCircleGraphicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentsCircleGraphicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-incidents-circle-graphic\n            \n\n\n\n            \n                styleUrls\n                ./incidents-circle-graphic.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./incidents-circle-graphic.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Initializes the component and fetches user data from Firebase to generate a chart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map, switchMap, forkJoin } from 'rxjs';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-incidents-circle-graphic',\n  templateUrl: './incidents-circle-graphic.component.html',\n  styleUrls: ['./incidents-circle-graphic.component.scss'],\n})\nexport class IncidentsCircleGraphicComponent implements OnInit {\n  data: any;\n  options: any;\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private translate: CustomTranslateService\n  ) {}\n\n  /**\n   * Initializes the component and fetches user data from Firebase to generate a chart.\n   */\n  ngOnInit() {\n    this._firebaseService.incidents$\n      .pipe(\n        map((incidents) => {\n          const categoryCounts = incidents.reduce((acc: any, incident: any) => {\n            const categoryName = incident.categoryName;\n            acc[categoryName] = (acc[categoryName] || 0) + 1;\n            return acc;\n          }, {});\n\n          return {\n            labels: Object.keys(categoryCounts),\n            datasets: [\n              {\n                data: Object.values(categoryCounts),\n                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n                hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n              },\n            ],\n          };\n        })\n      )\n      .subscribe((chartData) => {\n        this.data = chartData;\n        this.options = {\n          plugins: {\n            legend: {\n              labels: {\n                color: '#495057',\n              },\n            },\n          },\n        };\n      });\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./incidents-circle-graphic.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentsCircleGraphicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentsInfoComponent.html":{"url":"components/IncidentsInfoComponent.html","title":"component - IncidentsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/incidents-info/incidents-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-incidents-info\n            \n\n\n\n            \n                styleUrls\n                ./incidents-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./incidents-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formattedDay\n                            \n                            \n                                formattedTime\n                            \n                            \n                                isScreenSmall\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onIncidentClick\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                incident\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onIncidentClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:33\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\nInitializes the component by checking the initial screen size.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                UsersService - a service for managing user-related operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        incident\n                    \n                \n                \n                    \n                        Type :         incidentInfo | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:23\n                            \n                        \n                \n                    \n                        Represents the input property for passing incident information to the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onIncidentClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:28\n                            \n                        \n                \n                    \n                        Represents the output property for emitting events when an incident is clicked.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onIncidentClick\n                        \n                    \n                \n            \n            \n                \nonIncidentClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Handles the click event on the incident.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event - the click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formattedDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formattedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { UsersService } from 'src/app/core/services/api/users.service';\n\n@Component({\n  selector: 'app-incidents-info',\n  templateUrl: './incidents-info.component.html',\n  styleUrls: ['./incidents-info.component.scss'],\n})\nexport class IncidentsInfoComponent implements OnInit {\n  isScreenSmall: boolean = false;\n\n  /**\n   * Represents the input property for passing incident information to the component.\n   */\n  @Input() incident: incidentInfo | undefined;\n\n  /**\n   * Represents the output property for emitting events when an incident is clicked.\n   */\n  @Output() onIncidentClicked: EventEmitter =\n    new EventEmitter();\n\n  formattedTime: string | undefined;\n  formattedDay: string | undefined;\n  userName: string | undefined;\n\n  /**\n   * Constructs a component constructor function.\n   * Initializes the component by checking the initial screen size.\n   *\n   * @param userService UsersService - a service for managing user-related operations.\n   */\n\n  constructor(private userService: UsersService) {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  /**\n   * Initializes the component.\n   */\n\n  ngOnInit() {\n    if (this.incident) {\n      if (typeof this.incident.date === 'string') {\n        const timestamp = new Date(this.incident.date);\n        this.formattedDay = timestamp.toLocaleDateString();\n        this.formattedTime = timestamp.toLocaleTimeString();\n      } else {\n        const timestamp = this.incident.date;\n        const date = timestamp.toDate();\n        this.formattedDay = date.toLocaleDateString();\n        this.formattedTime = date.toLocaleTimeString();\n      }\n      this.userService.getUserById(this.incident.userId).subscribe((user) => {\n        this.userName = user ? user.name : '';\n      });\n    }\n  }\n\n  /**\n   * Handles the click event on the incident.\n   *\n   * @param event Event - the click event.\n   */\n  onIncidentClick(event: Event) {\n    this.onIncidentClicked.emit(this.incident?.uuid);\n    event.stopPropagation();\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{incident?.title}}\n    {{incident?.title | shortenText}}\n    \n      {{'incidents.unresolved' | translate}}\n    \n  \n\n  \n    \n      \n      \n        {{'incidents.day' |translate}}: {{formattedDay}}\n      \n    \n    \n      \n      \n        {{'incidents.hour' |translate}}: {{formattedTime}}\n      \n    \n    \n      \n      \n        {{'incidents.user' |translate}}: {{userName ? userName : ('incidents.anonymous' | translate)}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./incidents-info.component.scss\n                \n                  .card {\n    padding: 15px;\n    border-radius: 0.5rem;\n    box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n    width: calc((100vw / 3) - (30px * 2) + 10px);\n    height: 190px;\n\n    &--header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      &__title {\n        font-weight: bold;\n      }\n\n      &__status {\n        background-color: #bd1e1e;\n        padding: 2% 5%;\n        border-radius: 2em;\n\n        span {\n          color: #ffffff;\n          font-weight: bold;\n        }\n      }\n    }\n\n    ion-icon {\n      color: #bd1e1e;\n    }\n\n    &--info {\n      margin-top: 5%;\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n\n      span {\n        margin-left: 3%;\n        font-weight: bold;\n      }\n    }\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    @media (max-width: 850px) {\n      width: 100% !important;\n\n      &--header {\n        &__status {\n          margin-left: 1rem;\n        }\n      }\n\n      &--info {\n        margin-top: 0;\n      }\n    }\n  }\n\n  .noCheck {\n    background-color: #BBBBBB;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{incident?.title}}    {{incident?.title | shortenText}}          {{\\'incidents.unresolved\\' | translate}}                                {{\\'incidents.day\\' |translate}}: {{formattedDay}}                                  {{\\'incidents.hour\\' |translate}}: {{formattedTime}}                                  {{\\'incidents.user\\' |translate}}: {{userName ? userName : (\\'incidents.anonymous\\' | translate)}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IncidentsService.html":{"url":"injectables/IncidentsService.html","title":"injectable - IncidentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IncidentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/incidents.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIncidentById\n                            \n                            \n                                updateIncident\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/incidents.service.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor function initializes a private firebaseService property using dependency\ninjection.\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The firebaseService parameter is an instance of the FirebaseService\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIncidentById\n                        \n                    \n                \n            \n            \n                \ngetIncidentById(incidentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/incidents.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Retrieves an incident by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incidentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the incident to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the incident information if found, otherwise undefined.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIncident\n                        \n                    \n                \n            \n            \n                \nupdateIncident(incident: incidentInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/incidents.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Updates an incident.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incident\n                                            \n                                                            incidentInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    incidentInfo - the updated incident information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the incident is updated successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { incidentInfo } from '../../interfaces/incidents-info';\nimport { Observable, catchError, from, map, of, take, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IncidentsService {\n  /**\n   * The constructor function initializes a private firebaseService property using dependency\n   * injection.\n   *\n   * @param firebaseService The `firebaseService` parameter is an instance of the `FirebaseService`\n   * class that is being injected into the constructor using Angular's dependency injection mechanism.\n   * This allows the component or service to have access to the functionality provided by the\n   * `FirebaseService` class.\n   */\n  constructor(private firebaseService: FirebaseService) {}\n\n  /**\n   * Retrieves an incident by its ID.\n   *\n   * @param incidentId string - the ID of the incident to retrieve.\n   * @returns An Observable that emits the incident information if found, otherwise undefined.\n   */\n  getIncidentById(incidentId: string): Observable {\n    return this.firebaseService.incidents$.pipe(\n      take(1),\n      map((incident) =>\n        incident.find((incident) => incident.uuid === incidentId)\n      )\n    );\n  }\n\n  /**\n   * Updates an incident.\n   *\n   * @param incident incidentInfo - the updated incident information.\n   * @returns An Observable that emits a success message if the incident is updated successfully, otherwise emits an error message.\n   */\n  updateIncident(incident: incidentInfo): Observable {\n    return from(this.firebaseService.updateDocument('incidentsInfo', incident.uuid, incident)).pipe(\n      map(response => ({ success: true, data: response })),\n      catchError((err) =>\n        throwError(\n          () =>\n            new Error(\n              `Error: ${err.message}`\n            )\n        ))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemCategoryComponent.html":{"url":"components/ItemCategoryComponent.html","title":"component - ItemCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ItemCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/item-category/item-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-category\n            \n\n\n\n            \n                styleUrls\n                ./item-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    item\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/item-category/item-category.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:16\n                            \n                        \n                \n                    \n                        Setter method for setting the item data.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:23\n                            \n                        \n                \n                    \n                        Output property for emitting a click event.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-category/item-category.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-category/item-category.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Event handler for when the user clicks on the item.\nEmits a click event with the item data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/item-category/item-category.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n\n                \n                    \n                        getitem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:30\n                                \n                            \n                    \n                        \n                                Getter method for retrieving the item data.\n\n\n                                \n                                \n                                \n                                    Returns :     any | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setitem(_item: any | undefined)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:16\n                                \n                            \n                    \n                        \n                                Setter method for setting the item data.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _item\n                                                    \n                                                            \n                                                                        any | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe item data to be set.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-item-category',\n  templateUrl: './item-category.component.html',\n  styleUrls: ['./item-category.component.scss'],\n})\nexport class ItemCategoryComponent implements OnInit {\n  private _item: any | undefined;\n\n  /**\n   * Setter method for setting the item data.\n   *\n   * @param _item - The item data to be set.\n   */\n  @Input('item') set item(_item: any | undefined) {\n    this._item = _item;\n  }\n\n  /**\n   * Output property for emitting a click event.\n   */\n  @Output('clicked') clicked = new EventEmitter();\n\n  /**\n   * Getter method for retrieving the item data.\n   *\n   * @returns The item data.\n   */\n  get item(): any | undefined {\n    return this._item;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for when the user clicks on the item.\n   * Emits a click event with the item data.\n   */\n  onUserClicked() {\n    this.clicked.emit(this._item);\n  }\n}\n\n    \n\n    \n        \n  {{item?.name}}\n\n    \n\n    \n                \n                    ./item-category.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{item?.name}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemUserComponent.html":{"url":"components/ItemUserComponent.html","title":"component - ItemUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ItemUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/item-user/item-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-user\n            \n\n\n\n            \n                styleUrls\n                ./item-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    item\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/item-user/item-user.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:16\n                            \n                        \n                \n                    \n                        Input property to set the item data.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:23\n                            \n                        \n                \n                    \n                        Output property to emit a click event.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-user/item-user.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-user/item-user.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Event handler for when the user clicks on the item.\nEmits a click event with the item data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/item-user/item-user.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n\n                \n                    \n                        getitem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:30\n                                \n                            \n                    \n                        \n                                Getter method to retrieve the item data.\n\n\n                                \n                                \n                                \n                                    Returns :     any | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setitem(_item: any | undefined)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:16\n                                \n                            \n                    \n                        \n                                Input property to set the item data.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _item\n                                                    \n                                                            \n                                                                        any | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe item data to be set.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-item-user',\n  templateUrl: './item-user.component.html',\n  styleUrls: ['./item-user.component.scss'],\n})\nexport class ItemUserComponent implements OnInit {\n  private _item: any | undefined;\n\n  /**\n   * Input property to set the item data.\n   *\n   * @param _item - The item data to be set.\n   */\n  @Input('item') set item(_item: any | undefined) {\n    this._item = _item;\n  }\n\n  /**\n   * Output property to emit a click event.\n   */\n  @Output('clicked') clicked = new EventEmitter();\n\n  /**\n   * Getter method to retrieve the item data.\n   *\n   * @returns The item data.\n   */\n  get item(): any | undefined {\n    return this._item;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for when the user clicks on the item.\n   * Emits a click event with the item data.\n   */\n  onUserClicked() {\n    this.clicked.emit(this._item);\n  }\n}\n\n    \n\n    \n        \n  {{item?.name}}\n\n    \n\n    \n                \n                    ./item-user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{item?.name}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalService.html":{"url":"injectables/LocalService.html","title":"injectable - LocalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/translate/local.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browserLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lang: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/translate/local.service.ts:8\n                            \n                        \n\n                \n                    \n                            The constructor function sets the browser language based on the value returned by\nwindow.navigator.language.\nproperty of type CustomTranslateService. It is used to handle language translation within the\ncomponent or service where this constructor is defined.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe lang parameter in the constructor is a private\nproperty of type CustomTranslateService. It is used to handle language translation within the\ncomponent or service where this constructor is defined.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        browserLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/local.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { CustomTranslateService } from './translate.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalService {\n  browserLanguage: string = '';\n\n  /**\n   * The constructor function sets the browser language based on the value returned by\n   * window.navigator.language.\n   * @param {CustomTranslateService} lang - The `lang` parameter in the constructor is a private\n   * property of type `CustomTranslateService`. It is used to handle language translation within the\n   * component or service where this constructor is defined.\n   */\n  constructor(private lang: CustomTranslateService) {\n    // window.navigator.language returns 'es-ES', we only need 'es'\n    this.browserLanguage = window.navigator.language.split('-')[0];\n    this.lang.use(this.browserLanguage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/login-form/login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n\n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            Constructs the LoginFormComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder service for building the form.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/access/login-form/login-form.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/login-form/login-form.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/login-form/login-form.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Event handler for form submission.\nEmits the user credentials through the onsubmit event emitter.\nResets the form after submission.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/login-form/login-form.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserCredentials } from 'src/app/core/interfaces/user-info';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent implements OnInit {\n  form: FormGroup;\n  @Output() onsubmit = new EventEmitter();\n\n  /**\n   * Constructs the LoginFormComponent.\n   * @param {FormBuilder} formBuilder - FormBuilder service for building the form.\n   */\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for form submission.\n   * Emits the user credentials through the onsubmit event emitter.\n   * Resets the form after submission.\n   */\n  onSub() {\n    this.onsubmit.emit(this.form?.value);\n    this.form.reset();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{'forms.email' | translate}}\n      \n      {{'errors.valid' | translate}}\n    \n  \n    \n      {{'forms.password' | translate}}\n      \n      {{'errors.valid' | translate}}\n    \n  \n    {{\"forms.logIn\" | translate}}\n  \n  \n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                div {\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    \n    \n    .mat-form-field {\n      width: 350px;\n      margin-bottom: 2rem;\n    }\n\n    button {\n      padding: 1rem;\n      border: none;\n      border-radius: 4px;\n      background-color: #0F212D;\n      color: white;\n      font-weight: bold;\n      cursor: pointer;\n      \n      &:hover {\n        background-color: #1b3e56;\n      }\n    \n      &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{\\'forms.email\\' | translate}}            {{\\'errors.valid\\' | translate}}                {{\\'forms.password\\' | translate}}            {{\\'errors.valid\\' | translate}}          {{\"forms.logIn\" | translate}}    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url_large\n                                        \n                                \n                                \n                                        \n                                            url_medium\n                                        \n                                \n                                \n                                        \n                                            url_small\n                                        \n                                \n                                \n                                        \n                                            url_thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_large:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_medium:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_small:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { MediaService } from '../../media.service';\n\nexport interface Media {\n  id: number;\n  url_small: string;\n  url_medium: string;\n  url_large: string;\n  url_thumbnail: string;\n}\n\nexport class FirebaseMediaService extends MediaService {\n  /**\n   * Constructs the FirebaseMediaService with a reference to FirebaseService.\n   * This service will be used to interact with Firebase's functionalities, particularly for uploading images.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(private firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\n   * The method is designed to handle the upload process asynchronously and emit the result as an array of Media.\n   * Each Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\n   *\n   * @param {Blob} blob - The file data to be uploaded, typically an image file.\n   * @returns {Observable} - An observable that emits an array containing the uploaded media information.\n   * If an error occurs during upload, the observable will emit an error.\n   */\n  public upload(blob: Blob): Observable {\n    return new Observable((obs) => {\n      this.firebase\n        .imageUpload(blob)\n        .then((data) => {\n          var imgs = [];\n          var media: any = data.file;\n          imgs.push(media);\n          obs.next(imgs);\n        })\n        .catch((error) => obs.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/media.service.ts:13\n                        \n                    \n\n\n            \n                \n                        Uploads a media blob.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe blob representing the media to upload.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the upload process.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class MediaService {\n  /**\n   * Uploads a media blob.\n   * @param {Blob} blob - The blob representing the media to upload.\n   * @returns {Observable} Observable emitting the result of the upload process.\n   */\n  public abstract upload(blob: Blob): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalCategoryComponent.html":{"url":"components/ModalCategoryComponent.html","title":"component - ModalCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/data/modal-category/modal-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-category\n            \n\n\n\n            \n                styleUrls\n                ./modal-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                mod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryInfo\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    categoryInfo\n                                \n                                \n                                    mode\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:37\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder - a service for creating and managing Angular forms.\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ModalController - a service for managing modal dialogs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryInfo\n                    \n                \n                \n                    \n                        Type :         CategoryInfo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:20\n                            \n                        \n                \n                    \n                        Sets the category information for the form.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:33\n                            \n                        \n                \n                    \n                        Sets the mode for the component.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Handler for cancel action.\nDismisses the modal without passing any data to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Handler for form submission.\nDismisses the modal and passes the updated user information to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        categoryInfo\n                    \n                \n\n\n                \n                    \n                        setcategoryInfo(category: CategoryInfo)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:20\n                                \n                            \n                    \n                        \n                                Sets the category information for the form.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                            \n                                                                            CategoryInfo\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    CategoryInfo - the category information to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n\n\n                \n                    \n                        setmode(m: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:33\n                                \n                            \n                    \n                        \n                                Sets the mode for the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            m\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    string - the mode to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\n\n@Component({\n  selector: 'app-modal-category',\n  templateUrl: './modal-category.component.html',\n  styleUrls: ['./modal-category.component.scss'],\n})\nexport class ModalCategoryComponent implements OnInit {\n  form: FormGroup;\n  mod: string = '';\n  \n  /**\n   * Sets the category information for the form.\n   *\n   * @param category CategoryInfo - the category information to be set.\n   */\n  @Input() set categoryInfo(category: CategoryInfo) {\n    if (category) {\n      this.form.controls['name'].setValue(category.name);\n      this.form.controls['description'].setValue(category.description);\n      this.form.controls['uuid'].setValue(category.uuid);\n    }\n  }\n\n  /**\n   * Sets the mode for the component.\n   *\n   * @param m string - the mode to be set.\n   */\n  @Input() set mode(m: string) {\n    if (m) {\n      this.mod = m;\n    }\n  }\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param formBuilder FormBuilder - a service for creating and managing Angular forms.\n   * @param modal ModalController - a service for managing modal dialogs.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      uuid: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Handler for form submission.\n   * Dismisses the modal and passes the updated user information to the parent component.\n   */\n  onSub() {\n    this.modal.dismiss(this.form.value);\n  }\n\n  /**\n   * Handler for cancel action.\n   * Dismisses the modal without passing any data to the parent component.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n    \n      {{'forms.update' | translate}}\n    \n    \n      {{'data.create' | translate}}\n    \n  \n\n\n\n  \n\n    \n      \n        {{ 'forms.name' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n    \n      \n        {{ 'forms.description' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      {{'forms.update' | translate}}\n      {{'data.create' | translate}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./modal-category.component.scss\n                \n                ion-icon {\n    color: #0f212d;\n  }\n  .form {\n    display: flex;\n    flex-direction: column;\n    padding: 5%;\n  \n    button {\n      padding: 1rem;\n      border: none;\n      border-radius: 4px;\n      background-color: #0f212d;\n      color: white;\n      font-weight: bold;\n      cursor: pointer;\n  \n      &:hover {\n        background-color: #1b3e56;\n      }\n  \n      &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n      }\n    }\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\\'forms.update\\' | translate}}              {{\\'data.create\\' | translate}}                          {{ \\'forms.name\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                                {{ \\'forms.description\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                    {{\\'forms.update\\' | translate}}      {{\\'data.create\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedData.html":{"url":"interfaces/PaginatedData.html","title":"interface - PaginatedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         Pagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pagination\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pageCount\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                passwordMatch\n                            \n                            \n                                    Static\n                                passwordProto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordMatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordMatch(passwordControlName: string, confirmControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:35\n                        \n                    \n\n\n            \n                \n                        Validates if password and confirm password match.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                passwordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the password control.\n\n\n                                            \n                                        \n                                        \n                                                confirmControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the confirm password control.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for password match validation.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordProto\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordProto(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:13\n                        \n                    \n\n\n            \n                \n                        Validates password according to a specified pattern.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe name of the control to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for password validation.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbstractControl,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\nexport class PasswordValidation {\n  /**\n   * Validates password according to a specified pattern.\n   * @param {string} controlName - The name of the control to validate.\n   * @returns {ValidatorFn} Validator function for password validation.\n   */\n  public static passwordProto(controlName: string = ''): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      let password = '';\n      if (control instanceof FormControl) password = control?.value;\n      else password = control.get(controlName)?.value;\n      if (\n        password &&\n        !password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,}$/)\n      ) {\n        return { passwordProto: true };\n      } else {\n        return null;\n      }\n    };\n  }\n\n  /**\n   * Validates if password and confirm password match.\n   * @param {string} passwordControlName - The name of the password control.\n   * @param {string} confirmControlName - The name of the confirm password control.\n   * @returns {ValidatorFn} Validator function for password match validation.\n   */\n  public static passwordMatch(\n    passwordControlName: string,\n    confirmControlName: string\n  ): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const password = control.get(passwordControlName)?.value;\n      const confirmPassword = control.get(confirmControlName)?.value;\n\n      if (password != confirmPassword) {\n        let errors = control?.errors;\n        if (errors && typeof errors === 'object') {\n          Object.assign(errors, {\n            passwordMatch: true,\n          });\n        } else {\n          errors = {\n            passwordMatch: true,\n          };\n        }\n        return errors;\n      } else {\n        let errors = control?.errors;\n        if (errors && typeof errors === 'object') {\n          if (errors['passwordMatch']) delete errors['passwordMatch'];\n        }\n        return control.errors;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Photo.html":{"url":"interfaces/Photo.html","title":"interface - Photo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url_large\n                                        \n                                \n                                \n                                        \n                                            url_medium\n                                        \n                                \n                                \n                                        \n                                            url_small\n                                        \n                                \n                                \n                                        \n                                            url_thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_large:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_medium:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_small:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PictureSelectableComponent.html":{"url":"components/PictureSelectableComponent.html","title":"component - PictureSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PictureSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PICTURE_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-picture-selectable\n            \n\n\n\n            \n                styleUrls\n                ./picture-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./picture-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _picture\n                            \n                            \n                                hasValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                picture$\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePicture\n                            \n                            \n                                close\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePicture\n                            \n                            \n                                onDeletePicture\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pictureModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of PictureSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pictureModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for managing modal windows.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePicture\n                        \n                    \n                \n            \n            \n                \nchangePicture(picture: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Changes the selected picture.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new picture value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Closes the picture modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:35\n                        \n                    \n\n\n            \n                \n                        This method is called when the component is being destroyed. It ensures\nthat any subscriptions to the BehaviorSubject for the selected picture are properly\nterminated by completing the BehaviorSubject, preventing potential memory leaks.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangePicture\n                        \n                    \n                \n            \n            \n                \nonChangePicture(event: Event, fileLoader: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Event handler for changing the picture by uploading a file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event triggering the picture change.\n\n\n                                            \n                                        \n                                        \n                                                fileLoader\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HTML input element for file uploading.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeletePicture\n                        \n                    \n                \n            \n            \n                \nonDeletePicture(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Event handler for deleting the selected picture.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event triggering the picture deletion.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating if the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _picture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        picture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._picture.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:44\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const PICTURE_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-picture-selectable',\n  templateUrl: './picture-selectable.component.html',\n  styleUrls: ['./picture-selectable.component.scss'],\n  providers: [PICTURE_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class PictureSelectableComponent implements OnInit {\n  private _picture = new BehaviorSubject('');\n  public picture$ = this._picture.asObservable();\n  isDisabled: boolean = false;\n  hasValue: boolean = false;\n\n  /**\n   * Creates an instance of PictureSelectableComponent.\n   * @param pictureModal - The ModalController for managing modal windows.\n   */\n  constructor(private pictureModal: ModalController) {}\n\n  /**\n   * This method is called when the component is being destroyed. It ensures\n   * that any subscriptions to the BehaviorSubject for the selected picture are properly\n   * terminated by completing the BehaviorSubject, preventing potential memory leaks.\n   */\n  ngOnDestroy(): void {\n    this._picture.complete();\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Writes a new value to the component.\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.hasValue = true;\n      this._picture.next(obj);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   * @param isDisabled - Boolean value indicating if the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  /**\n   * Changes the selected picture.\n   * @param picture - The new picture value.\n   */\n  changePicture(picture: string) {\n    this.hasValue = picture != '';\n    this._picture.next(picture);\n    this.propagateChange(picture);\n  }\n\n  /**\n   * Event handler for changing the picture by uploading a file.\n   * @param event - The event triggering the picture change.\n   * @param fileLoader - The HTML input element for file uploading.\n   */\n  onChangePicture(event: Event, fileLoader: HTMLInputElement) {\n    event.stopPropagation();\n    fileLoader.onchange = () => {\n      if (fileLoader.files && fileLoader.files?.length > 0) {\n        var file = fileLoader.files[0];\n        var reader = new FileReader();\n        reader.onload = () => {\n          this.changePicture(reader.result as string);\n        };\n        reader.onerror = (error) => {\n          console.log(error);\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    fileLoader.click();\n  }\n\n  /**\n   * Event handler for deleting the selected picture.\n   * @param event - The event triggering the picture deletion.\n   */\n  onDeletePicture(event: Event) {\n    event.stopPropagation();\n    this.changePicture('');\n  }\n\n  /**\n   * Closes the picture modal.\n   */\n  close() {\n    this.pictureModal?.dismiss();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n        \n    \n    \n        \n    \n  \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./picture-selectable.component.scss\n                \n                div.user-picture {\n    height: 200px;\n    width: 300px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  \n    ion-img {\n      width: 100%;\n      height: 100%;\n      align-items: center;\n      cursor: pointer;\n    }\n  \n    ion-button.picture-button {\n      margin: 0;\n      --padding-start: 0;\n      --padding-end: 0;\n  \n      .button-native {\n        padding: 0 !important;\n      }\n    }\n  }\n  \n  ion-modal.auto-height {\n    &.bottom {\n      align-items: flex-end;\n    }\n  \n    --height: auto;\n  \n    .ion-page {\n      position: relative;\n      display: block;\n      contain: content;\n  \n      .inner-content {\n        max-height: 80vh;\n        overflow: auto;\n        padding: 10px;\n      }\n    }\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PictureSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterFormComponent.html":{"url":"components/RegisterFormComponent.html","title":"component - RegisterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/register-form/register-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-form\n            \n\n\n\n            \n                styleUrls\n                ./register-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                hide\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructs the RegisterFormComponent.\nInitializes the form with form controls and validators.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder service for building the form.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/access/register-form/register-form.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/register-form/register-form.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/register-form/register-form.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Event handler for form submission.\nEmits the user registration information through the onsubmit event emitter.\nResets the form after submission.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { UserRegisterInfo } from 'src/app/core/interfaces/user-info';\nimport { EmailValidation } from 'src/app/core/validators/email';\nimport { PasswordValidation } from 'src/app/core/validators/password';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss'],\n})\nexport class RegisterFormComponent implements OnInit {\n  form: FormGroup;\n  hide = true;\n\n  /* The `@Output() onsubmit = new EventEmitter();` line in the code snippet is\n  creating an output property named `onsubmit` of type `EventEmitter`. This output\n  property allows the `RegisterFormComponent` to emit events containing `UserRegisterInfo` data to\n  its parent component or any component that uses this form. */\n  @Output() onsubmit = new EventEmitter();\n\n  /**\n   * Constructs the RegisterFormComponent.\n   * Initializes the form with form controls and validators.\n   * @param {FormBuilder} formBuilder - FormBuilder service for building the form.\n   */\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group(\n      {\n        name: ['', [Validators.required]],\n        surname: ['', [Validators.required]],\n        email: ['', [Validators.required, EmailValidation.email()]],\n        username: ['', [Validators.required]],\n        password: [\n          '',\n          [Validators.required, PasswordValidation.passwordProto()],\n        ],\n        repPassword: [\n          '',\n          [Validators.required, PasswordValidation.passwordProto()],\n        ],\n      },\n      {\n        validators: [\n          PasswordValidation.passwordMatch('password', 'repPassword'),\n        ],\n      }\n    );\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for form submission.\n   * Emits the user registration information through the onsubmit event emitter.\n   * Resets the form after submission.\n   */\n  onSub() {\n    this.onsubmit.emit(this.form?.value);\n    this.form.reset({\n      name: '',\n      surname: '',\n      email: '',\n      username: '',\n      password: '',\n      repPassword: '',\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'forms.name' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.surname' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.email' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n    \n      {{ 'errors.emailError' | translate }}\n    \n  \n\n  \n    {{ 'forms.username' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.password' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n  \n  \n    {{ 'forms.repPassword' | translate }}\n    \n    \n      {{ hide ? 'visibility_off' : 'visibility' }}\n    \n    \n      {{ 'errors.repeatError' | translate }}\n    \n  \n\n  {{ \"forms.register\" | translate }}\n\n    \n\n    \n                \n                    ./register-form.component.scss\n                \n                form {\n  margin-top: 8%;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  .register--button {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n  }\n}\n\n@media (max-width: 900px) {\n  div {\n    margin-top: 30%;\n  }\n  .access__image {\n      display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'forms.name\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.surname\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.email\\' | translate }}              {{ \\'errors.valid\\' | translate }}              {{ \\'errors.emailError\\' | translate }}            {{ \\'forms.username\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.password\\' | translate }}              {{ \\'errors.valid\\' | translate }}              {{ \\'forms.repPassword\\' | translate }}              {{ hide ? \\'visibility_off\\' : \\'visibility\\' }}              {{ \\'errors.repeatError\\' | translate }}        {{ \"forms.register\" | translate }}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/settings/settings.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLang\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLanguage\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, userService: UsersService, myModal: ModalController, media: MediaService, _router: Router, auth: AuthService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/settings/settings.page.ts:20\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserDataPage.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for Firebase operations.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService for user-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for creating and managing modals.\n\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe MediaService for media-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Router for navigating between routes.\n\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe AuthService for authentication-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The translate parameter in the constructor is of type CustomTranslateService.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:52\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nRetrieves the user data for the currently logged-in user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLanguage\n                        \n                    \n                \n            \n            \n                \nsetLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:108\n                        \n                    \n\n\n            \n                \n                        The function setLanguage sets the language for translation in a TypeScript application.\nlanguage code or identifier for the language to be set. This parameter is used to switch the\nlanguage of the application to the specified language\n:type lang: string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe lang parameter in the setLanguage function is a string that represents the\nlanguage code or identifier for the language to be set. This parameter is used to switch the\nlanguage of the application to the specified language\n:type lang: string\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:69\n                        \n                    \n\n\n            \n                \n                        Method for updating user profile information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { UpdateUserComponent } from '../user-data/update-user/update-user.component';\nimport { ModalController } from '@ionic/angular';\nimport { MediaService } from 'src/app/core/services/media.service';\nimport { Router } from '@angular/router';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  user: any | undefined;\n  currentLang: string;\n\n  /**\n   * Creates an instance of UserDataPage.\n   *\n   * @param _firebaseService - The FirebaseService for Firebase operations.\n   * @param userService - The UsersService for user-related operations.\n   * @param myModal - The ModalController for creating and managing modals.\n   * @param media - The MediaService for media-related operations.\n   * @param _router - The Router for navigating between routes.\n   * @param auth - The AuthService for authentication-related operations.\n   * @param translate The `translate` parameter in the constructor is of type `CustomTranslateService`.\n   * It is used for handling translation services within the component or service where it is injected.\n   * This service likely provides methods for translating text or messages into different languages or\n   * for managing localization in the application.\n   */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private userService: UsersService,\n    private myModal: ModalController,\n    private media: MediaService,\n    private _router: Router,\n    protected auth: AuthService,\n    private translate: CustomTranslateService\n  ) {\n    this.currentLang = this.translate.getCurrentLang();\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Retrieves the user data for the currently logged-in user.\n   */\n  ngOnInit() {\n    this.userService\n      .getUserById(this._firebaseService.user!.uid)\n      .subscribe((user) => {\n        if (user) {\n          this.user = user;\n        } else {\n          console.log('User not found!');\n        }\n      });\n  }\n\n  /**\n   * Method for updating user profile information.\n   *\n   * @param user - The updated user information.\n   */\n  async updateUser(user: UserInfo) {\n    const mod = await this.myModal.create({\n      component: UpdateUserComponent,\n      componentProps: {\n        userInfo: user,\n      },\n      cssClass: 'modalDesign',\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      console.log(results.data);\n      if (results?.data?.picture) {\n        if (results?.data?.picture?.substring(0, 4) == 'data') {\n          dataURLtoBlob(results.data.picture, (blob: Blob) => {\n            this.media.upload(blob).subscribe((media: number[]) => {\n              results.data.picture = media[0];\n              this.userService.updateUser(results.data);\n            });\n          });\n        } else {\n          results.data.picture = user.picture;\n          this.userService.updateUser(results.data);\n        }\n      } else {\n        results.data.picture = '';\n        this.userService.updateUser(results.data);\n      }\n    }\n  }\n\n  /**\n   * The function `setLanguage` sets the language for translation in a TypeScript application.\n   * \n   * @param lang - The `lang` parameter in the `setLanguage` function is a string that represents the\n   * language code or identifier for the language to be set. This parameter is used to switch the\n   * language of the application to the specified language\n   * :type lang: string\n   */\n  setLanguage(lang: string) {\n    this.translate.use(lang);\n    this.currentLang = lang;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n\n        {{(auth.user$|async)?.name}} {{(auth.user$|async)?.surname}}\n\n        {{(auth.user$|async)?.username}}\n\n        {{'forms.admin' | translate}}\n\n        {{\"data.update\" | translate}}\n       \n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./settings.page.scss\n                \n                .content {\n    width: 70%;\n    margin: 3% auto;\n\n    .languages {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        padding: 2%;\n        gap: 50px;\n\n        div {\n            display: flex;\n            justify-content: center;\n\n            img {\n                width: 40%;\n            }\n        }\n\n        .selected {\n            outline: 2px solid #0F212D;\n            border-radius: 4px;\n        }\n\n    }\n}\n\n.user {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--username {\n        margin: 0;\n    }\n\n    &--role {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n\n    &:hover {\n        background-color: #1b3e56;\n    }\n\n    &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .content {\n        width: 80%;\n    }\n\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n\n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{(auth.user$|async)?.name}} {{(auth.user$|async)?.surname}}        {{(auth.user$|async)?.username}}        {{\\'forms.admin\\' | translate}}        {{\"data.update\" | translate}}                                                                                                                     '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageModule.html":{"url":"modules/SettingsPageModule.html","title":"module - SettingsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_imports\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nSettingsPageRoutingModule\n\nSettingsPageRoutingModule\n\nSettingsPageModule -->\n\nSettingsPageRoutingModule->SettingsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\nimport { AccordionModule } from 'primeng/accordion';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    AccordionModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageRoutingModule.html":{"url":"modules/SettingsPageRoutingModule.html","title":"module - SettingsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nCategoriesInfoComponent\n\nCategoriesInfoComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCategoriesInfoComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nIncidentsCircleGraphicComponent\n\nIncidentsCircleGraphicComponent\n\nSharedModule -->\n\nIncidentsCircleGraphicComponent->SharedModule\n\n\n\n\n\nIncidentsInfoComponent\n\nIncidentsInfoComponent\n\nSharedModule -->\n\nIncidentsInfoComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nUserCircleGraphicComponent\n\nUserCircleGraphicComponent\n\nSharedModule -->\n\nUserCircleGraphicComponent->SharedModule\n\n\n\n\n\nUsersInfoComponent\n\nUsersInfoComponent\n\nSharedModule -->\n\nUsersInfoComponent->SharedModule\n\n\n\n\n\nCategoriesInfoComponent \n\nCategoriesInfoComponent \n\nCategoriesInfoComponent  -->\n\nSharedModule->CategoriesInfoComponent \n\n\n\n\n\nConfirmDialogComponent \n\nConfirmDialogComponent \n\nConfirmDialogComponent  -->\n\nSharedModule->ConfirmDialogComponent \n\n\n\n\n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent  -->\n\nSharedModule->IncidentsCircleGraphicComponent \n\n\n\n\n\nIncidentsInfoComponent \n\nIncidentsInfoComponent \n\nIncidentsInfoComponent  -->\n\nSharedModule->IncidentsInfoComponent \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent  -->\n\nSharedModule->UserCircleGraphicComponent \n\n\n\n\n\nUsersInfoComponent \n\nUsersInfoComponent \n\nUsersInfoComponent  -->\n\nSharedModule->UsersInfoComponent \n\n\n\n\n\nShortenTextPipe\n\nShortenTextPipe\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategoriesInfoComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            IncidentsCircleGraphicComponent\n                        \n                        \n                            IncidentsInfoComponent\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            UserCircleGraphicComponent\n                        \n                        \n                            UsersInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ShortenTextPipe\n                        \n                        \n                            ShortenTextPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoriesInfoComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            IncidentsCircleGraphicComponent\n                        \n                        \n                            IncidentsInfoComponent\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            UserCircleGraphicComponent\n                        \n                        \n                            UsersInfoComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { IonicModule } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from '../core/translate/translate';\nimport { UsersInfoComponent } from './components/users-info/users-info.component';\nimport { ShortenTextPipe } from '../core/pipes/shorten-text.pipe';\nimport { PictureSelectableComponent } from './components/picture-selectable/picture-selectable.component';\nimport { IncidentsInfoComponent } from './components/incidents-info/incidents-info.component';\nimport { CategoriesInfoComponent } from './components/categories-info/categories-info.component';\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ChartModule } from 'primeng/chart';\nimport { UserCircleGraphicComponent } from './components/user-circle-graphic/user-circle-graphic.component';\nimport { IncidentsCircleGraphicComponent } from './components/incidents-circle-graphic/incidents-circle-graphic.component';\n\n\n@NgModule({\n  declarations: [\n    UsersInfoComponent,\n    PictureSelectableComponent,\n    IncidentsInfoComponent,\n    CategoriesInfoComponent,\n    ConfirmDialogComponent,\n    UserCircleGraphicComponent,\n    IncidentsCircleGraphicComponent\n  ],\n  imports: [\n    CommonModule,\n    ChartModule,\n    IonicModule.forRoot(), \n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ShortenTextPipe,\n    ShortenTextPipe,\n    MatDialogModule,\n    MatButtonModule\n  ],\n  exports: [\n    UsersInfoComponent,\n    PictureSelectableComponent,\n    IncidentsInfoComponent,\n    CategoriesInfoComponent,\n    ConfirmDialogComponent,\n    UserCircleGraphicComponent,\n    IncidentsCircleGraphicComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShortenTextPipe.html":{"url":"pipes/ShortenTextPipe.html","title":"pipe - ShortenTextPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ShortenTextPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/shorten-text.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        shortenText\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | undefined, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/shorten-text.pipe.ts:23\n                        \n                    \n\n\n            \n                \n                        The function \"transform\" takes a string value and limits its length to a specified number, adding\nellipsis if necessary.\ntransformed.\nreturned by the transform function. If the length of the value string is greater than the\nlimit, the function will truncate the string to the limit length and append a period ('.') at\nthe end\ndefault value of 15. It checks if the length of the value is greater than the limit. If it is,\nit returns a substring of the value up to the limit followed by a period. If the length of the\nvalue is not greater than the\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The value parameter is a string that represents the input value that will be\ntransformed.\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    6\n                                            \n\n                                            \n                                                    The limit parameter specifies the maximum length of the string that will be\nreturned by the transform function. If the length of the value string is greater than the\nlimit, the function will truncate the string to the limit length and append a period ('.') at\nthe end\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                The function transform takes a string value and an optional number limit with a\ndefault value of 15. It checks if the length of the value is greater than the limit. If it is,\nit returns a substring of the value up to the limit followed by a period. If the length of the\nvalue is not greater than the\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'shortenText',\n  standalone: true,\n})\nexport class ShortenTextPipe implements PipeTransform {\n  /**\n   * The function \"transform\" takes a string value and limits its length to a specified number, adding\n   * ellipsis if necessary.\n   *\n   * @param value The `value` parameter is a string that represents the input value that will be\n   * transformed.\n   * @param limit The `limit` parameter specifies the maximum length of the string that will be\n   * returned by the `transform` function. If the length of the `value` string is greater than the\n   * `limit`, the function will truncate the string to the `limit` length and append a period ('.') at\n   * the end\n   * @return The function `transform` takes a string `value` and an optional number `limit` with a\n   * default value of 15. It checks if the length of the `value` is greater than the `limit`. If it is,\n   * it returns a substring of the `value` up to the `limit` followed by a period. If the length of the\n   * `value` is not greater than the\n   */\n  transform(value: string | undefined, limit: number = 6): string | undefined {\n    return value!.length > limit ? value!.substring(0, limit) + '...' : value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateUserComponent.html":{"url":"components/UpdateUserComponent.html","title":"component - UpdateUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-data/update-user/update-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-user\n            \n\n\n\n            \n                styleUrls\n                ./update-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                showRoleField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userInfo\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of UpdateUserComponent.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FormBuilder service for building form instances.\n\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for managing modal windows.\n\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userInfo\n                    \n                \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/user-data/update-user/update-user.component.ts:21\n                            \n                        \n                \n                    \n                        Setter method for setting user information to be edited.\nPopulates the form fields with the provided user information.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Handler for cancel action.\nDismisses the modal without passing any data to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Handler for form submission.\nDismisses the modal and passes the updated user information to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRoleField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userInfo\n                    \n                \n\n\n                \n                    \n                        setuserInfo(user: UserInfo)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/user-data/update-user/update-user.component.ts:21\n                                \n                            \n                    \n                        \n                                Setter method for setting user information to be edited.\nPopulates the form fields with the provided user information.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            user\n                                                    \n                                                            \n                                                                            UserInfo\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe user information to be edited.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.scss'],\n})\nexport class UpdateUserComponent implements OnInit {\n  form: FormGroup;\n  showRoleField: boolean = true;\n\n  /**\n   * Setter method for setting user information to be edited.\n   * Populates the form fields with the provided user information.\n   * @param user - The user information to be edited.\n   */\n  @Input() set userInfo(user: UserInfo) {\n    if (user) {\n      this.form.controls['picture'].setValue(user.picture);\n      this.form.controls['name'].setValue(user.name);\n      this.form.controls['surname'].setValue(user.surname);\n      this.form.controls['username'].setValue(user.username);\n      this.form.controls['uuid'].setValue(user.uuid);\n      this.form.controls['role'].setValue(user.role);\n\n      this.auth.user$.subscribe(currentUser => {\n        if (currentUser?.uuid === user.uuid) {\n          this.showRoleField = false;\n        }\n      });\n    }\n  }\n\n  /**\n   * Creates an instance of UpdateUserComponent.\n   * @param formBuilder - The FormBuilder service for building form instances.\n   * @param modal - The ModalController for managing modal windows.\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private auth: AuthService\n  ) {\n    this.form = this.formBuilder.group({\n      picture: ['', [Validators.required]],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      username: ['', [Validators.required]],\n      role: ['', [Validators.required]],\n      uuid: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Handler for form submission.\n   * Dismisses the modal and passes the updated user information to the parent component.\n   */\n  onSub() {\n    if (!this.showRoleField && this.form) {\n      this?.form?.get('role')?.setValue('admin');\n    }\n    this.modal.dismiss(this.form.value);\n  }\n\n  /**\n   * Handler for cancel action.\n   * Dismisses the modal without passing any data to the parent component.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n    \n      {{'forms.update' | translate}}\n    \n  \n\n\n\n  \n      \n\n    \n      \n        {{ 'forms.name' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n    \n      \n        {{ 'forms.surname' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      \n        {{ 'forms.username' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      \n        {{'forms.role' | translate}}\n        \n          {{'forms.admin' | translate}}\n          {{'forms.user' | translate}}\n        \n      \n\n      {{'forms.update' | translate}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./update-user.component.scss\n                \n                ion-icon {\n  color: #0F212D;\n}\n.form {\n  display: flex;\n  flex-direction: column;\n  padding: 2%;\n\n\n  button {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\\'forms.update\\' | translate}}                                {{ \\'forms.name\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                                {{ \\'forms.surname\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                            {{ \\'forms.username\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                            {{\\'forms.role\\' | translate}}                  {{\\'forms.admin\\' | translate}}          {{\\'forms.user\\' | translate}}                    {{\\'forms.update\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCircleGraphicComponent.html":{"url":"components/UserCircleGraphicComponent.html","title":"component - UserCircleGraphicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserCircleGraphicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-circle-graphic\n            \n\n\n\n            \n                styleUrls\n                ./user-circle-graphic.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-circle-graphic.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:14\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Initializes the component and fetches user data from Firebase to generate a chart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { forkJoin, map, switchMap } from 'rxjs';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-user-circle-graphic',\n  templateUrl: './user-circle-graphic.component.html',\n  styleUrls: ['./user-circle-graphic.component.scss'],\n})\nexport class UserCircleGraphicComponent  implements OnInit {\n\n  data: any;\n  options: any;\n\n  /**\n  * Constructs a component constructor function.\n  * \n  * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n  * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n  */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private translate: CustomTranslateService\n  ) { }\n\n  /**\n  * Initializes the component and fetches user data from Firebase to generate a chart.\n  */\n  ngOnInit() {\n    this._firebaseService.users$.pipe(\n      map(users => {\n        const rolesCount = users.reduce((acc: any, user: any) => {\n          acc[user.role] = (acc[user.role] || 0) + 1;\n          return acc;\n        }, {});\n        const roles = Object.keys(rolesCount);\n        return { roles, rolesCount };\n      }),\n      switchMap(({ roles, rolesCount }) => {\n        return forkJoin(\n          roles.map(role => this.translate.get(`forms.${role}`))\n        ).pipe(\n          map(translations => ({\n            labels: translations,\n            datasets: [{\n              data: roles.map(role => rolesCount[role]),\n              backgroundColor: ['#42A5F5', '#66BB6A'],\n              hoverBackgroundColor: ['#64B5F6', '#81C784']\n            }]\n          }))\n        );\n      })\n    ).subscribe(chartData => {\n      this.data = chartData;\n      this.options = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#495057'\n            }\n          }\n        }\n      };\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./user-circle-graphic.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserCircleGraphicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCredentials.html":{"url":"interfaces/UserCredentials.html","title":"interface - UserCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDataPage.html":{"url":"components/UserDataPage.html","title":"component - UserDataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserDataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-data/user-data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-data\n            \n\n\n\n            \n                styleUrls\n                ./user-data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, userService: UsersService, _router: Router, myModal: ModalController, media: MediaService, _firebaseSvc: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-data/user-data.page.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserDataPage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ActivatedRoute service to get URL parameters.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService to manage user data.\n\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Router service for page navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe modal controller to display and control modal windows.\n\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe MediaService for handling media operations.\n\n\n                                                        \n                                                \n                                                \n                                                        _firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/user-data.page.ts:102\n                        \n                    \n\n\n            \n                \n                        The goBack function navigates to the '/data' route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/user-data.page.ts:44\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nSubscribes to changes in URL parameters to get the user ID\nand load corresponding user data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/user-data.page.ts:65\n                        \n                    \n\n\n            \n                \n                        Method to update user data.\nOpens a modal for editing user data and updates the data\non the server once the editing is confirmed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/user-data.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/user-data.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { User } from 'firebase/auth';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { MediaService } from 'src/app/core/services/media.service';\nimport { UpdateUserComponent } from './update-user/update-user.component';\n\n@Component({\n  selector: 'app-user-data',\n  templateUrl: './user-data.page.html',\n  styleUrls: ['./user-data.page.scss'],\n})\nexport class UserDataPage implements OnInit {\n  userId: string | null = '';\n  user: any | undefined;\n\n  /**\n   * Creates an instance of UserDataPage.\n   * @param route - The ActivatedRoute service to get URL parameters.\n   * @param userService - The UsersService to manage user data.\n   * @param _router - The Router service for page navigation.\n   * @param myModal - The modal controller to display and control modal windows.\n   * @param media - The MediaService for handling media operations.\n   * @param _firebaseSvc - The FirebaseService for interacting with Firebase.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UsersService,\n    private _router: Router,\n    private myModal: ModalController,\n    private media: MediaService,\n    private _firebaseSvc: FirebaseService\n  ) {}\n\n  /**\n   * Method executed when the component is initialized.\n   * Subscribes to changes in URL parameters to get the user ID\n   * and load corresponding user data.\n   */\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.userId = params.get('id');\n      if (this.userId) {\n        this.userService.getUserById(this.userId).subscribe((user) => {\n          if (user) {\n            this.user = user;\n          } else {\n            console.log('User not found!');\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Method to update user data.\n   * Opens a modal for editing user data and updates the data\n   * on the server once the editing is confirmed.\n   * @param user - The updated user information.\n   */\n  async updateUser(user: UserInfo) {\n    const mod = await this.myModal.create({\n      component: UpdateUserComponent,\n      componentProps: {\n        userInfo: user,\n      },\n      cssClass: 'modalDesign',\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      console.log(results.data);\n      if (results?.data?.picture) {\n        if (results?.data?.picture?.substring(0, 4) == 'data') {\n          dataURLtoBlob(results.data.picture, (blob: Blob) => {\n            this.media.upload(blob).subscribe((media: number[]) => {\n              results.data.picture = media[0];\n              this.userService.updateUser(results.data);\n            });\n          });\n          this._router.navigate(['/data']);\n        } else {\n          results.data.picture = user.picture;\n          this.userService.updateUser(results.data);\n          this._router.navigate(['/data']);\n        }\n      } else {\n        results.data.picture = '';\n        this.userService.updateUser(results.data);\n        this._router.navigate(['/data']);\n      }\n    }\n  }\n\n  /**\n   * The `goBack` function navigates to the '/data' route using the Angular router.\n   */\n  goBack() {\n    this._router.navigate(['/data'])\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n\n    \n      \n\n        {{user.name}} {{user.surname}}\n\n        {{user.username}}\n\n        {{'forms.user' | translate}}\n        {{'forms.admin' | translate}}\n\n        {{\"data.update\" | translate}}\n       \n    \n  \n\n    \n\n    \n                \n                    ./user-data.page.scss\n                \n                .back {\n    width: auto;\n    margin: 2%;\n\n    ion-icon {\n        cursor: pointer;\n    }\n}\n\n.user {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--username {\n        margin: 0;\n    }\n\n    &--role {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n    \n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{user.name}} {{user.surname}}        {{user.username}}        {{\\'forms.user\\' | translate}}        {{\\'forms.admin\\' | translate}}        {{\"data.update\" | translate}}             '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserDataPageModule.html":{"url":"modules/UserDataPageModule.html","title":"module - UserDataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    UserDataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserDataPageModule\n\n\n\ncluster_UserDataPageModule_imports\n\n\n\ncluster_UserDataPageModule_declarations\n\n\n\n\nUpdateUserComponent\n\nUpdateUserComponent\n\n\n\nUserDataPageModule\n\nUserDataPageModule\n\nUserDataPageModule -->\n\nUpdateUserComponent->UserDataPageModule\n\n\n\n\n\nUserDataPage\n\nUserDataPage\n\nUserDataPageModule -->\n\nUserDataPage->UserDataPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUserDataPageModule -->\n\nSharedModule->UserDataPageModule\n\n\n\n\n\nUserDataPageRoutingModule\n\nUserDataPageRoutingModule\n\nUserDataPageModule -->\n\nUserDataPageRoutingModule->UserDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/user-data/user-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UpdateUserComponent\n                        \n                        \n                            UserDataPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UserDataPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserDataPageRoutingModule } from './user-data-routing.module';\n\nimport { UserDataPage } from './user-data.page';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    // Reactive form\n    ReactiveFormsModule,\n    IonicModule,\n    UserDataPageRoutingModule, \n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    SharedModule\n  ],\n  declarations: [\n    UserDataPage,\n    UpdateUserComponent\n  ]\n})\nexport class UserDataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserDataPageRoutingModule.html":{"url":"modules/UserDataPageRoutingModule.html","title":"module - UserDataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserDataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/user-data/user-data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserDataPage } from './user-data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserDataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserDataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRegisterInfo.html":{"url":"interfaces/UserRegisterInfo.html","title":"interface - UserRegisterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRegisterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserSelectableComponent.html":{"url":"components/UserSelectableComponent.html","title":"component - UserSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/user-selectable/user-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                USER_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-user-selectable\n            \n\n\n\n            \n                styleUrls\n                ./user-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                            \n                                users\n                            \n                            \n                                userSelected\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                onUserClicked\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectUser\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                resetSignal\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:46\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService for fetching user data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:30\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:41\n                            \n                        \n                \n                    \n                        Setter method for setting the selected user.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:177\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Clears the selected user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Filters users based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter users.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Loads users from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked(popover: IonPopover, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a user from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectUser(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Selects a user by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the user to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:56\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:46\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:55\n                        \n                    \n\n            \n                \n                    - The UsersService for fetching user data.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n\n                \n                    \n                        setuser(_user: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:41\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected user.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _user\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected user.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  SimpleChanges,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const USER_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-user-selectable',\n  templateUrl: './user-selectable.component.html',\n  styleUrls: ['./user-selectable.component.scss'],\n  providers: [USER_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class UserSelectableComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  userSelected: any | undefined;\n  disabled: boolean = true;\n  users: any[] = [];\n\n  /**\n   * Setter method for setting the selected user.\n   *\n   * @param _user - The selected user.\n   */\n  @Input() set user(_user: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of UserSelectableComponent.\n   *\n   * @param userService - The UsersService for fetching user data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public userService: UsersService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads users from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.users$.subscribe({\n        next: (users) => {\n          this.users = users;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a user by its ID.\n   *\n   * @param id - The ID of the user to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectUser(id: string | undefined, propagate: boolean = false) {\n    if (id) {\n      await this.userService.getUserById(id).subscribe({\n        next: (user) => {\n          this.userSelected = user;\n        },\n      });\n    } else this.userSelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.userSelected.uuid);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectUser(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected user.\n   */\n  clearSelection() {\n    this.userSelected = undefined;\n  }\n\n  /**\n   * Filters users based on a search value.\n   *\n   * @param value - The search value to filter users.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering users.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a user from the list.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   * @param user - The selected user.\n   */\n  onUserClicked(popover: IonPopover, user: any) {\n    this.selectUser(user.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected user.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectUser(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n    {{userSelected.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./user-selectable.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}    {{userSelected.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserSelectableMobileComponent.html":{"url":"components/UserSelectableMobileComponent.html","title":"component - UserSelectableMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserSelectableMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                USER_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-user-selectable-mobile\n            \n\n\n\n            \n                styleUrls\n                ./user-selectable-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-selectable-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                            \n                                users\n                            \n                            \n                                userSelected\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                onUserClicked\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectUser\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                resetSignal\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService for fetching user data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:23\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:34\n                            \n                        \n                \n                    \n                        Setter method for setting the selected user.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Clears the selected user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:180\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Filters users based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter users.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Loads users from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked(popover: IonPopover, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a user from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectUser(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Selects a user by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the user to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:49\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:39\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:48\n                        \n                    \n\n            \n                \n                    - The UsersService for fetching user data.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n\n                \n                    \n                        setuser(_user: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:34\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected user.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _user\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected user.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const USER_SELECTABLE_MOBILE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableMobileComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-user-selectable-mobile',\n  templateUrl: './user-selectable-mobile.component.html',\n  styleUrls: ['./user-selectable-mobile.component.scss'],\n  providers: [USER_SELECTABLE_MOBILE_VALUE_ACCESSOR]\n})\nexport class UserSelectableMobileComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  userSelected: any | undefined;\n  disabled: boolean = true;\n  users: any[] = [];\n\n  /**\n   * Setter method for setting the selected user.\n   *\n   * @param _user - The selected user.\n   */\n  @Input() set user(_user: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of UserSelectableComponent.\n   *\n   * @param userService - The UsersService for fetching user data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public userService: UsersService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads users from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.users$.subscribe({\n        next: (users) => {\n          this.users = users;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a user by its ID.\n   *\n   * @param id - The ID of the user to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectUser(id: string | undefined, propagate: boolean = false) {\n    if (id) {\n      await this.userService.getUserById(id).subscribe({\n        next: (user) => {\n          this.userSelected = user;\n        },\n      });\n    } else this.userSelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.userSelected.uuid);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectUser(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected user.\n   */\n  clearSelection() {\n    this.userSelected = undefined;\n  }\n\n  /**\n   * Filters users based on a search value.\n   *\n   * @param value - The search value to filter users.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering users.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a user from the list.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   * @param user - The selected user.\n   */\n  onUserClicked(popover: IonPopover, user: any) {\n    this.selectUser(user.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected user.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectUser(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n    {{userSelected.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n\n    \n\n    \n                \n                    ./user-selectable-mobile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}    {{userSelected.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserSelectableMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersInfoComponent.html":{"url":"components/UsersInfoComponent.html","title":"component - UsersInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/users-info/users-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-info\n            \n\n\n\n            \n                styleUrls\n                ./users-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScreenSmall\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                dataUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, auth: AuthService, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:32\n                            \n                        \n\n                \n                    \n                            The constructor function takes a Router object as a parameter and assigns it to a private property\nin a TypeScript class.\ninjection that allows the class to navigate between different components in the Angular\napplication.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is of type Router. It is a dependency\ninjection that allows the class to navigate between different components in the Angular\napplication.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        users\n                    \n                \n                \n                    \n                        Type :         UserInfo[] | null | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/users-info/users-info.component.ts:27\n                            \n                        \n                \n                    \n                        Represents the input property for passing user information to the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onUserClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/users-info/users-info.component.ts:32\n                            \n                        \n                \n                    \n                        Represents the output property for emitting events when a user is clicked.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataUser\n                        \n                    \n                \n            \n            \n                \ndataUser(userId: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Emits an event when a user is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string | undefined - the ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nRetrieves and filters user data from Firebase and the authentication service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\n@Component({\n  selector: 'app-users-info',\n  templateUrl: './users-info.component.html',\n  styleUrls: ['./users-info.component.scss'],\n})\nexport class UsersInfoComponent implements OnInit {\n  users$: Observable | null = null;\n  isScreenSmall: boolean = false;\n\n  /**\n   * Represents the input property for passing user information to the component.\n   */\n  @Input() users: UserInfo[] | null | undefined;\n\n  /**\n   * Represents the output property for emitting events when a user is clicked.\n   */\n  @Output() onUserClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * The constructor function takes a Router object as a parameter and assigns it to a private property\n   * in a TypeScript class.\n   *\n   * @param router The `router` parameter in the constructor is of type `Router`. It is a dependency\n   * injection that allows the class to navigate between different components in the Angular\n   * application.\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   * @param firebaseService - The FirebaseService for interacting with Firebase.\n   */\n  constructor(\n    private router: Router,\n    protected auth: AuthService,\n    protected firebaseService: FirebaseService\n  ) {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Retrieves and filters user data from Firebase and the authentication service.\n   */\n  ngOnInit() {\n    this.users$ = combineLatest([\n      this.firebaseService.users$,\n      this.auth.user$,\n    ]).pipe(\n      map(([users, currentUser]) =>\n        users.filter((user) => user.uuid !== currentUser?.uuid)\n      )\n    );\n  }\n\n  /**\n   * Emits an event when a user is clicked.\n   *\n   * @param userId string | undefined - the ID of the user.\n   */\n  dataUser(userId: string | undefined) {\n    this.onUserClicked.emit(userId);\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n  \n\n  \n    {{'forms.name' | translate }}\n    {{'forms.surname' | translate }}\n    {{'forms.username' | translate }}\n    {{'forms.role' | translate }}\n  \n\n  \n    {{ user.name | shortenText }}\n    {{ user.name }}\n\n    {{ user.surname | shortenText }}\n    {{ user.surname }}\n\n    {{ user.username | shortenText }}\n    {{ user.username }}\n\n    {{'forms.user' | translate}}\n    {{'forms.user' | translate | shortenText }}\n\n    {{'forms.admin' | translate}}\n    {{'forms.admin' | translate | shortenText }}\n\n  \n\n    \n\n    \n                \n                    ./users-info.component.scss\n                \n                ion-list {\n    width: 80%;\n    margin: 3% auto;\n\n    ion-list-header {\n        --background: #0F212D;\n        --color: #fff;\n    }\n\n    .subheader {\n        ion-label {\n          font-weight: bold;\n        }\n    }\n\n    .data {\n        cursor: pointer;\n        position: relative;\n        border-top: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n\n        &:hover {\n            border-color: #0F212D;\n        }\n    }\n}\n\n@media (max-width: 900px) {\n    .subheader {\n        ion-label {\n          margin-left: 0.2%;\n        }\n    }\n}\n\n@media (max-width: 700px) {\n    ion-list {\n        width: 100%;\n        margin-top: 5%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}        {{\\'forms.name\\' | translate }}    {{\\'forms.surname\\' | translate }}    {{\\'forms.username\\' | translate }}    {{\\'forms.role\\' | translate }}        {{ user.name | shortenText }}    {{ user.name }}    {{ user.surname | shortenText }}    {{ user.surname }}    {{ user.username | shortenText }}    {{ user.username }}    {{\\'forms.user\\' | translate}}    {{\\'forms.user\\' | translate | shortenText }}    {{\\'forms.admin\\' | translate}}    {{\\'forms.admin\\' | translate | shortenText }}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserById\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor function initializes a private firebaseService property using dependency\ninjection.\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The firebaseService parameter is an instance of the FirebaseService\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:32\n                        \n                    \n\n\n            \n                \n                        The function getUserById retrieves user information by user ID from a Firebase service and\nreturns it as an observable stream.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The userId parameter is a string that represents the unique identifier of a user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable of type UserInfo or undefined is being returned.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(data: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:46\n                        \n                    \n\n\n            \n                \n                        The updateUser function in TypeScript updates user information using an authentication service.\ncontains information about the user that needs to be updated, such as their name, email, or other\nprofile details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data parameter in the updateUser function is of type UserInfo. It likely\ncontains information about the user that needs to be updated, such as their name, email, or other\nprofile details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserInfo } from '../../interfaces/user-info';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { take, map, Observable } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  /**\n   * The constructor function initializes a private firebaseService property using dependency\n   * injection.\n   *\n   * @param firebaseService The `firebaseService` parameter is an instance of the `FirebaseService`\n   * class that is being injected into the constructor using Angular's dependency injection mechanism.\n   * This allows the component or service to have access to the functionality provided by the\n   * `FirebaseService` class.\n   */\n  constructor(\n    private firebaseService: FirebaseService,\n    private auth: AuthService\n  ) {}\n\n  /**\n   * The function `getUserById` retrieves user information by user ID from a Firebase service and\n   * returns it as an observable stream.\n   *\n   * @param userId The `userId` parameter is a string that represents the unique identifier of a user.\n   * @return An Observable of type UserInfo or undefined is being returned.\n   */\n  getUserById(userId: string): Observable {\n    return this.firebaseService.users$.pipe(\n      take(1),\n      map((users) => users.find((user) => user.uuid === userId))\n    );\n  }\n\n  /**\n   * The `updateUser` function in TypeScript updates user information using an authentication service.\n   *\n   * @param data The `data` parameter in the `updateUser` function is of type `UserInfo`. It likely\n   * contains information about the user that needs to be updated, such as their name, email, or other\n   * profile details.\n   */\n  updateUser(data: UserInfo) {\n    this.auth.updateUser(data).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            AuthServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            httpProviderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            MediaServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/core/helpers/blob.ts\n            \n            function\n            dataURLtoBlob\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/category-info.ts\n            \n            interface\n            CategoryInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            PaginatedData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            Photo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/incidents-info.ts\n            \n            interface\n            incidentInfo\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserCredentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserRegisterInfo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/pipes/capitalize-initial.pipe.ts\n            \n            pipe\n            CapitalizeInitialPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/shorten-text.pipe.ts\n            \n            pipe\n            ShortenTextPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/core/services/api/incidents.service.ts\n            \n            injectable\n            IncidentsService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/services/api/users.service.ts\n            \n            injectable\n            UsersService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/core/services/filter/filter.service.ts\n            \n            injectable\n            FilterService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-auth.service.ts\n            \n            class\n            FirebaseAuthService\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-data.service.ts\n            \n            class\n            FirebaseDataService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-media.service.ts\n            \n            class\n            FirebaseMediaService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-media.service.ts\n            \n            interface\n            Media\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            injectable\n            FirebaseService\n            \n                59 %\n                (22/37)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseDocument\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseStorageFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseUserCredential\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client-web.provider.ts\n            \n            injectable\n            HttpClientWebProvider\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client.provider.ts\n            \n            injectable\n            HttpClientProvider\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/services/media.service.ts\n            \n            injectable\n            MediaService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/services/translate/local.service.ts\n            \n            injectable\n            LocalService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/services/translate/translate.service.ts\n            \n            injectable\n            CustomTranslateService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/core/translate/translate.ts\n            \n            function\n            createTranslateLoader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/email.ts\n            \n            class\n            EmailValidation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/password.ts\n            \n            class\n            PasswordValidation\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/access/access.page.ts\n            \n            component\n            AccessPage\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/pages/access/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/pages/access/register-form/register-form.component.ts\n            \n            component\n            RegisterFormComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/pages/data/data.page.ts\n            \n            component\n            DataPage\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/pages/data/modal-category/modal-category.component.ts\n            \n            component\n            ModalCategoryComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n            \n            component\n            CategorySelectableMobileComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n            \n            variable\n            CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable/category-selectable.component.ts\n            \n            component\n            CategorySelectableComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable/category-selectable.component.ts\n            \n            variable\n            CATEGORY_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/filter-mobile/filter-mobile.component.ts\n            \n            component\n            FilterMobileComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/pages/home/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/pages/home/item-category/item-category.component.ts\n            \n            component\n            ItemCategoryComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/pages/home/item-user/item-user.component.ts\n            \n            component\n            ItemUserComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n            \n            component\n            UserSelectableMobileComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n            \n            variable\n            USER_SELECTABLE_MOBILE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable/user-selectable.component.ts\n            \n            component\n            UserSelectableComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable/user-selectable.component.ts\n            \n            variable\n            USER_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/incident-data/incident-data.page.ts\n            \n            component\n            IncidentDataPage\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/pages/settings/settings.page.ts\n            \n            component\n            SettingsPage\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/pages/user-data/update-user/update-user.component.ts\n            \n            component\n            UpdateUserComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/pages/user-data/user-data.page.ts\n            \n            component\n            UserDataPage\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/categories-info/categories-info.component.ts\n            \n            component\n            CategoriesInfoComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts\n            \n            component\n            IncidentsCircleGraphicComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/incidents-info/incidents-info.component.ts\n            \n            component\n            IncidentsInfoComponent\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            component\n            PictureSelectableComponent\n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            variable\n            PICTURE_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts\n            \n            component\n            UserCircleGraphicComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/users-info/users-info.component.ts\n            \n            component\n            UsersInfoComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.2\n        \n            @angular/cdk : ^17.3.3\n        \n            @angular/common : ^17.0.2\n        \n            @angular/compiler : ^17.0.2\n        \n            @angular/core : ^17.0.2\n        \n            @angular/forms : ^17.0.2\n        \n            @angular/material : ^17.3.3\n        \n            @angular/platform-browser : ^17.0.2\n        \n            @angular/platform-browser-dynamic : ^17.0.2\n        \n            @angular/router : ^17.0.2\n        \n            @capacitor/android : 5.7.4\n        \n            @capacitor/app : 5.0.7\n        \n            @capacitor/core : 5.7.4\n        \n            @capacitor/haptics : ^5.0.7\n        \n            @capacitor/keyboard : 5.0.8\n        \n            @capacitor/status-bar : 5.0.7\n        \n            @fortawesome/fontawesome-svg-core : ^6.5.2\n        \n            @fortawesome/free-solid-svg-icons : ^6.5.2\n        \n            @ionic/angular : ^7.0.0\n        \n            @lottiefiles/lottie-player : ^2.0.4\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            chart.js : ^4.4.3\n        \n            firebase : ^10.10.0\n        \n            ionicons : ^7.0.0\n        \n            lottie-web : ^5.12.2\n        \n            ngx-lottie : ^11.0.2\n        \n            papaparse : ^5.4.1\n        \n            primeng : ^17.13.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../translate.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../blob.ts)\n                        \n                        \n                            httpProviderFactory   (src/.../app.module.ts)\n                        \n                        \n                            MediaServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthServiceFactory\n                        \n                    \n                \n            \n            \n                \nAuthServiceFactory(backend: string, firebase: FirebaseService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpProviderFactory\n                        \n                    \n                \n            \n            \n                \nhttpProviderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MediaServiceFactory\n                        \n                    \n                \n            \n            \n                \nMediaServiceFactory(backend: string, firebase: FirebaseService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/translate/translate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n                        Function to create a loader for translation files.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nHttpClient instance used for loading translation files.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/helpers/blob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataUrl: string, callback)\n                \n            \n\n\n\n\n            \n                \n                        The function dataURLtoBlob converts a data URL to a Blob object and provides the Blob through a\ncallback function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The dataUrl parameter in the dataURLtoBlob function is a string that represents a\ndata URL. Data URLs are URLs that contain data, such as base64 encoded images or other resources,\ndirectly within the URL string.\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The callback parameter is a function that will be called once the operation is\ncompleted. It takes a Blob object as its argument. You can pass a function to the dataURLtoBlob\nfunction as the callback parameter to handle the Blob object once it is created\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/incidentInfo.html":{"url":"interfaces/incidentInfo.html","title":"interface - incidentInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  incidentInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/incidents-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categoryName\n                                        \n                                \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            resolved\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoryName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         Photo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resolved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\nimport { Photo } from \"./data\";\n\nexport interface incidentInfo {\n    checked: boolean,\n    date: Timestamp,\n    description: string,\n    image: Photo,\n    resolved: boolean,\n    title: string,\n    userId: string,\n    uuid: string,\n    categoryName: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\ncluster_AccessPageModule\n\n\n\ncluster_AccessPageModule_declarations\n\n\n\ncluster_AccessPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DataPageModule\n\n\n\ncluster_DataPageModule_declarations\n\n\n\ncluster_DataPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_IncidentDataPageModule\n\n\n\ncluster_IncidentDataPageModule_declarations\n\n\n\ncluster_IncidentDataPageModule_imports\n\n\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\ncluster_SettingsPageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_UserDataPageModule\n\n\n\ncluster_UserDataPageModule_declarations\n\n\n\ncluster_UserDataPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nAccessPage\n\nAccessPage\n\n\n\nAccessPageModule\n\nAccessPageModule\n\nAccessPageModule -->\n\nAccessPage->AccessPageModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAccessPageModule -->\n\nLoginFormComponent->AccessPageModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAccessPageModule -->\n\nRegisterFormComponent->AccessPageModule\n\n\n\n\n\nAccessPageRoutingModule\n\nAccessPageRoutingModule\n\nAccessPageModule -->\n\nAccessPageRoutingModule->AccessPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAccessPageModule -->\n\nSharedModule->AccessPageModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDataPageModule\n\nDataPageModule\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\nCategoriesInfoComponent \n\nCategoriesInfoComponent \n\nCategoriesInfoComponent  -->\n\nSharedModule->CategoriesInfoComponent \n\n\n\n\n\nConfirmDialogComponent \n\nConfirmDialogComponent \n\nConfirmDialogComponent  -->\n\nSharedModule->ConfirmDialogComponent \n\n\n\n\n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent  -->\n\nSharedModule->IncidentsCircleGraphicComponent \n\n\n\n\n\nIncidentsInfoComponent \n\nIncidentsInfoComponent \n\nIncidentsInfoComponent  -->\n\nSharedModule->IncidentsInfoComponent \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent  -->\n\nSharedModule->UserCircleGraphicComponent \n\n\n\n\n\nUsersInfoComponent \n\nUsersInfoComponent \n\nUsersInfoComponent  -->\n\nSharedModule->UsersInfoComponent \n\n\n\n\n\nUserDataPageModule\n\nUserDataPageModule\n\nUserDataPageModule -->\n\nSharedModule->UserDataPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCapitalizeInitialPipe\n\nCapitalizeInitialPipe\n\nAppModule -->\n\nCapitalizeInitialPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDataPage\n\nDataPage\n\nDataPageModule -->\n\nDataPage->DataPageModule\n\n\n\n\n\nModalCategoryComponent\n\nModalCategoryComponent\n\nDataPageModule -->\n\nModalCategoryComponent->DataPageModule\n\n\n\n\n\nDataPageRoutingModule\n\nDataPageRoutingModule\n\nDataPageModule -->\n\nDataPageRoutingModule->DataPageModule\n\n\n\n\n\nCategorySelectableComponent\n\nCategorySelectableComponent\n\nHomePageModule -->\n\nCategorySelectableComponent->HomePageModule\n\n\n\n\n\nCategorySelectableMobileComponent\n\nCategorySelectableMobileComponent\n\nHomePageModule -->\n\nCategorySelectableMobileComponent->HomePageModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nHomePageModule -->\n\nFilterComponent->HomePageModule\n\n\n\n\n\nFilterMobileComponent\n\nFilterMobileComponent\n\nHomePageModule -->\n\nFilterMobileComponent->HomePageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nItemCategoryComponent\n\nItemCategoryComponent\n\nHomePageModule -->\n\nItemCategoryComponent->HomePageModule\n\n\n\n\n\nItemUserComponent\n\nItemUserComponent\n\nHomePageModule -->\n\nItemUserComponent->HomePageModule\n\n\n\n\n\nUserSelectableComponent\n\nUserSelectableComponent\n\nHomePageModule -->\n\nUserSelectableComponent->HomePageModule\n\n\n\n\n\nUserSelectableMobileComponent\n\nUserSelectableMobileComponent\n\nHomePageModule -->\n\nUserSelectableMobileComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nIncidentDataPage\n\nIncidentDataPage\n\n\n\nIncidentDataPageModule\n\nIncidentDataPageModule\n\nIncidentDataPageModule -->\n\nIncidentDataPage->IncidentDataPageModule\n\n\n\n\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageModule -->\n\nIncidentDataPageRoutingModule->IncidentDataPageModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nSettingsPageRoutingModule\n\nSettingsPageRoutingModule\n\nSettingsPageModule -->\n\nSettingsPageRoutingModule->SettingsPageModule\n\n\n\n\n\nCategoriesInfoComponent\n\nCategoriesInfoComponent\n\nSharedModule -->\n\nCategoriesInfoComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nIncidentsCircleGraphicComponent\n\nIncidentsCircleGraphicComponent\n\nSharedModule -->\n\nIncidentsCircleGraphicComponent->SharedModule\n\n\n\n\n\nIncidentsInfoComponent\n\nIncidentsInfoComponent\n\nSharedModule -->\n\nIncidentsInfoComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nUserCircleGraphicComponent\n\nUserCircleGraphicComponent\n\nSharedModule -->\n\nUserCircleGraphicComponent->SharedModule\n\n\n\n\n\nUsersInfoComponent\n\nUsersInfoComponent\n\nSharedModule -->\n\nUsersInfoComponent->SharedModule\n\n\n\n\n\nShortenTextPipe\n\nShortenTextPipe\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\n\n\nUpdateUserComponent\n\nUpdateUserComponent\n\nUserDataPageModule -->\n\nUpdateUserComponent->UserDataPageModule\n\n\n\n\n\nUserDataPage\n\nUserDataPage\n\nUserDataPageModule -->\n\nUserDataPage->UserDataPageModule\n\n\n\n\n\nUserDataPageRoutingModule\n\nUserDataPageRoutingModule\n\nUserDataPageModule -->\n\nUserDataPageRoutingModule->UserDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    27 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        24 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccessPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccessPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IncidentDataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IncidentDataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserDataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserDataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR   (src/.../category-selectable-mobile.component.ts)\n                        \n                        \n                            CATEGORY_SELECTABLE_VALUE_ACCESSOR   (src/.../category-selectable.component.ts)\n                        \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PICTURE_SELECTABLE_VALUE_ACCESSOR   (src/.../picture-selectable.component.ts)\n                        \n                        \n                            USER_SELECTABLE_MOBILE_VALUE_ACCESSOR   (src/.../user-selectable-mobile.component.ts)\n                        \n                        \n                            USER_SELECTABLE_VALUE_ACCESSOR   (src/.../user-selectable.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableMobileComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/category-selectable/category-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'TFCChato',\n  webDir: 'www',\n  server: {\n    androidScheme: 'https'\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDOnguE6cpcz6VKkf-RnI3RcpqS7Xmtbh4\",\n    authDomain: \"chato-a4ef9.firebaseapp.com\",\n    projectId: \"chato-a4ef9\",\n    storageBucket: \"chato-a4ef9.appspot.com\",\n    messagingSenderId: \"770666336001\",\n    appId: \"1:770666336001:web:96e7751d6f04cea0b39500\",\n    measurementId: \"G-Z70NCW6NLN\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDOnguE6cpcz6VKkf-RnI3RcpqS7Xmtbh4\",\n    authDomain: \"chato-a4ef9.firebaseapp.com\",\n    projectId: \"chato-a4ef9\",\n    storageBucket: \"chato-a4ef9.appspot.com\",\n    messagingSenderId: \"770666336001\",\n    appId: \"1:770666336001:web:96e7751d6f04cea0b39500\",\n    measurementId: \"G-Z70NCW6NLN\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PICTURE_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableMobileComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/user-selectable/user-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
