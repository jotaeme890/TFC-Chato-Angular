var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.26,1,0.982]],["body/components/AboutPage.html",[0,0.435,1,1.748,2,1.624,3,0.158,4,0.121,5,1.32,6,1.32,7,1.32,8,1.32,9,0.106,10,4.097,11,1.573,12,1.93,13,1.127,14,2.433,15,2.283,16,1.73,17,6.852,18,1.73,19,6.144,20,0.388,21,0.869,22,2.048,23,1.317,24,0.869,25,4.689,26,4.689,27,0.572,28,0.013,29,0.993,30,0.182,31,0.333,32,0.121,33,0.151,34,5.369,35,6.144,36,6.144,37,6.144,38,6.144,39,6.144,40,6.144,41,4.477,42,6.144,43,6.144,44,6.144,45,2.505,46,2.794,47,2.144,48,2.144,49,2.233,50,1.844,51,3.417,52,2.435,53,3.702,54,3.417,55,3.919,56,4.689,57,2.794,58,2.601,59,5.369,60,4.689,61,4.172,62,2.825,63,2.33,64,2.233,65,2.825,66,2.435,67,6.144,68,3.078,69,3.464,70,4.689,71,2.511,72,3.013,73,1.912,74,4.689,75,6.144,76,3.417,77,3.343,78,2.68,79,4.689,80,4.097,81,4.689,82,3.417,83,2.33,84,2.435,85,2.825,86,4.097,87,2.505,88,2.701,89,4.097,90,1.605,91,1.984,92,4.097,93,4.689,94,2.435,95,0.961,96,1.73,97,1.73,98,1.32,99,1.64,100,1.32,101,0.637,102,1.32,103,1.127,104,1.32,105,1.163,106,1.32,107,1.163,108,1.2,109,1.73,110,1.127,111,1.624,112,1.93,113,1.127,114,1.573,115,1.93,116,1.163,117,1.279,118,1.32,119,1.127,120,1.93,121,1.163,122,1.32,123,1.163,124,1.239,125,1.092,126,1.32,127,1.127,128,1.025,129,1.163,130,1.573,131,1.624,132,1.73,133,1.163,134,1.163,135,1.624,136,1.73,137,1.163,138,1.73,139,1.163,140,1.2,141,1.73,142,1.163,143,1.279,144,1.127,145,1.163,146,1.163,147,1.2,148,1.127,149,1.32,150,1.163,151,1.025,152,1.163,153,1.491,154,1.127,155,1.127,156,1.127,157,1.163,158,1.2,159,1.32,160,1.32,161,0.009,162,0.009]],["title/modules/AboutPageModule.html",[163,1.151,164,2.978]],["body/modules/AboutPageModule.html",[1,1.99,3,0.158,4,0.158,9,0.138,28,0.013,30,0.321,31,0.435,32,0.158,33,0.197,95,1.256,161,0.01,162,0.01,163,1.726,164,6.142,165,2.171,166,2.919,167,4.019,168,3.183,169,2.246,170,2.326,171,5.356,172,5.356,173,5.356,174,5.624,175,3.772,176,2.803,177,2.499,178,6.129,179,2.855,180,2.855,181,4.151,182,3.183,183,4.375,184,2.03,185,3.951,186,1.964,187,3.503,188,5.356]],["title/modules/AboutPageRoutingModule.html",[163,1.151,174,2.776]],["body/modules/AboutPageRoutingModule.html",[0,0.408,1,1.793,3,0.165,4,0.165,9,0.145,28,0.013,30,0.306,31,0.456,32,0.165,33,0.206,161,0.011,162,0.011,165,2.273,170,2.436,174,5.067,179,2.524,180,2.934,188,5.608,189,6.418,190,3.668,191,3.468,192,4.264,193,2.197,194,1.592,195,3.057,196,3.867]],["title/components/AccessPage.html",[0,0.26,103,0.982]],["body/components/AccessPage.html",[0,0.444,1,0.618,2,1.577,3,0.142,4,0.066,5,0.724,6,0.724,7,0.724,8,0.724,9,0.058,11,1.022,12,1.377,13,0.618,14,2.312,15,2.19,16,1.124,18,1.124,20,0.213,21,0.844,22,1.552,23,1.42,24,1.029,27,0.77,28,0.013,29,1.337,30,0.256,31,0.183,32,0.066,33,0.083,45,2.433,46,2.686,47,2.236,48,1.825,49,1.225,50,1.569,52,2.54,53,1.549,55,1.64,57,1.627,62,4.687,63,1.278,64,2.329,65,2.404,69,1.225,71,0.942,78,2.281,82,1.873,84,1.335,87,2.686,88,2.423,90,0.88,91,1.088,95,0.527,96,1.124,97,1.124,98,0.724,99,1.243,100,0.724,101,0.684,102,0.724,103,1.325,104,0.724,105,0.638,106,0.724,107,0.638,108,0.658,109,1.124,110,0.618,111,1.055,112,1.377,113,0.618,114,1.022,115,1.377,116,0.638,117,0.701,118,0.724,119,0.618,120,1.377,121,0.638,122,0.724,123,0.638,124,0.679,125,0.599,126,0.724,127,0.618,128,0.562,129,0.638,130,1.022,131,1.055,132,1.124,133,0.638,134,0.638,135,1.055,136,1.124,137,0.638,138,1.124,139,0.638,140,1.83,141,1.124,142,0.638,143,0.701,144,0.618,145,0.638,146,0.638,147,1.252,148,0.618,149,0.724,150,0.638,151,0.562,152,0.638,153,1.634,154,0.618,155,0.618,156,0.618,157,0.638,158,0.658,159,0.724,160,0.724,161,0.006,162,0.006,169,1.463,191,2.15,193,0.88,197,2.247,198,6.05,199,3.888,200,4.89,201,3.99,202,0.585,203,5.512,204,5.512,205,6.314,206,4.993,207,4.993,208,1.873,209,2.672,210,1.773,211,3.138,212,4.88,213,4.993,214,3.838,215,3.99,216,1.767,217,1.983,218,3.806,219,0.948,220,4.993,221,3.059,222,4.069,223,2.89,224,4.273,225,2.75,226,2.043,227,3.247,228,3.119,229,3.008,230,2.352,231,2.795,232,3.119,233,4.348,234,3.804,235,3.244,236,3.867,237,2.43,238,3.867,239,3.331,240,3.595,241,3.867,242,2.965,243,2.678,244,4.273,245,2.667,246,4.273,247,4.273,248,4.273,249,3.563,250,2.236,251,2.43,252,3.119,253,2.236,254,0.59,255,0.814,256,0.814,257,2.43,258,1.901,259,3.487,260,1.321,261,2.571,262,3.99,263,1.175,264,1.825,265,3.99,266,3.585,267,2.571,268,2.281,269,2.404,270,2.908,271,4.358,272,3.487,273,2.908,274,2.908,275,3.244,276,1.203,277,1.755,278,1.901,279,3.806,280,3.099,281,2.571,282,3.99,283,3.766,284,2.571,285,2.281,286,2.073,287,2.908,288,2.545,289,4.016,290,2.171,291,2.54,292,2.43,293,4.273,294,4.89,295,3.867,296,1.901,297,3.155,298,1.162,299,2.571,300,1.983,301,4.601,302,2.739,303,3.155,304,2.571,305,3.41,306,1.366,307,3.867,308,3.867,309,0.599,310,2.02,311,2.033,312,1.278,313,1.64,314,1.549,315,1.873,316,1.873,317,1.746,318,0.954,319,1.263,320,2.571,321,2.571,322,2.571,323,5.512,324,3.99,325,2.571,326,2.571,327,2.999,328,2.423,329,3.99,330,3.99,331,2.571,332,2.623,333,4.348,334,4.348,335,3.155,336,4.273,337,4.89,338,1.873,339,2.545,340,1.873,341,1.746,342,1.746,343,2.571,344,3.563,345,2.908,346,1.746,347,2.571,348,2.571,349,2.571,350,2.571,351,1.873,352,2.571,353,3.155,354,2.908,355,3.155,356,2.404,357,3.155,358,3.155,359,2.71,360,2.033,361,2.033,362,3.99,363,3.99,364,2.073,365,4.273,366,2.033,367,3.99,368,1.278,369,1.689,370,1.225,371,3.99,372,3.487,373,2.43,374,2.423,375,2.247,376,3.99,377,2.571,378,2.433,379,3.99,380,2.571,381,1.335,382,2.571,383,2.571,384,1.176,385,1.873,386,1.873,387,1.048,388,1.048,389,1.13,390,1.746,391,1.335]],["title/modules/AccessPageModule.html",[163,1.151,392,2.978]],["body/modules/AccessPageModule.html",[3,0.139,4,0.139,9,0.122,28,0.013,30,0.333,31,0.384,32,0.139,33,0.174,95,1.107,103,1.932,139,1.994,140,1.382,146,1.994,147,1.382,161,0.01,162,0.01,163,1.52,165,1.912,166,2.572,167,3.803,168,2.804,169,1.979,170,2.049,175,3.492,176,2.469,177,2.202,179,2.644,180,2.644,181,3.843,182,2.804,183,4.051,184,1.788,185,3.658,186,1.73,187,3.086,199,2.938,210,1.339,243,2.123,392,6.203,393,4.718,394,4.718,395,4.718,396,5.458,397,4.373,398,5.399,399,4.899,400,4.718,401,4.269,402,6.723,403,4.269,404,3.492,405,2.938,406,3.086,407,3.843,408,2.804,409,2.804,410,3.492,411,3.444,412,5.316,413,4.269,414,2.683,415,5.316,416,4.269,417,4.566,418,3.667,419,5.316,420,4.269,421,3.934,422,4.566,423,3.667,424,3.253,425,2.804,426,2.374,427,3.086,428,3.086,429,4.269,430,5.399]],["title/modules/AccessPageRoutingModule.html",[163,1.151,396,2.776]],["body/modules/AccessPageRoutingModule.html",[0,0.408,3,0.165,4,0.165,9,0.145,28,0.013,30,0.306,31,0.456,32,0.165,33,0.206,103,1.793,161,0.011,162,0.011,165,2.273,170,2.436,179,2.524,180,2.934,190,3.668,191,3.468,192,4.264,193,2.197,194,1.592,195,3.057,196,3.867,396,5.067,400,5.608,431,6.418]],["title/guards/AdminGuard.html",[432,3.232,433,2.978]],["body/guards/AdminGuard.html",[2,1.716,3,0.108,4,0.108,9,0.095,11,1.078,20,0.349,21,0.809,23,1.248,24,0.809,27,0.937,28,0.013,30,0.283,31,0.299,32,0.108,33,0.209,52,3.373,101,0.593,153,1.7,161,0.008,162,0.008,177,2.332,193,1.442,199,3.112,208,3.069,209,3.309,212,5.262,214,4.382,216,1.571,219,0.973,221,2.554,222,2.97,223,2.865,224,3.68,225,2.739,226,2.223,230,1.717,235,3.093,239,3.578,243,2.864,245,2.753,250,3.435,251,3.733,252,4.142,254,0.574,255,0.78,256,0.78,257,3.619,258,3.093,260,2.307,263,1.561,269,4.388,276,1.093,286,3.373,291,3.373,296,2.724,302,3.619,310,2.753,318,0.95,319,0.891,433,4.167,434,3.33,435,3.68,436,6.487,437,4.211,438,4.142,439,6.494,440,6.494,441,3.901,442,3.68,443,6.364,444,3.449,445,6.831,446,4.211,447,3.783,448,7.122,449,5.719,450,3.446,451,7.512,452,5.473,453,4.732,454,5.674,455,4.142,456,6.494,457,4.946,458,4.41,459,3.041,460,7.067,461,2.38,462,4.41,463,4.526,464,2.412,465,3.884,466,2.17,467,1.464,468,1.224,469,2.093,470,4.211,471,3.68,472,1.656,473,1.598,474,1.852,475,1.829,476,4.211,477,4.211,478,4.211,479,4.211,480,3.68,481,4.211,482,1.491]],["title/components/AppComponent.html",[0,0.26,105,1.014]],["body/components/AppComponent.html",[0,0.325,1,0.663,2,1.113,3,0.108,4,0.071,5,0.777,6,0.777,7,0.777,8,0.777,9,0.062,11,1.079,12,1.439,13,0.663,14,2.329,15,2.196,16,1.186,18,1.186,20,0.229,21,0.596,22,1.611,23,1.423,24,1.048,27,0.888,28,0.013,29,1.475,30,0.27,31,0.196,32,0.071,33,0.209,49,1.314,50,1.085,52,2.655,53,1.662,55,1.76,57,2.755,58,1.599,61,2.861,62,1.662,63,2.094,64,2.007,68,2.512,69,2.435,71,2.381,72,1.852,73,1.718,77,1.501,78,2.408,83,2.54,84,3.95,85,2.538,86,2.411,87,2.084,88,1.213,89,2.411,90,0.945,91,1.168,95,0.566,96,1.186,97,1.186,98,0.777,99,1.465,100,0.777,101,0.639,102,0.777,103,0.663,104,0.777,105,1.419,106,0.777,107,0.684,108,0.706,109,1.186,110,0.663,111,1.113,112,1.439,113,0.663,114,1.079,115,1.439,116,0.684,117,0.753,118,0.777,119,0.663,120,1.439,121,0.684,122,0.777,123,0.684,124,1.113,125,0.642,126,0.777,127,0.663,128,0.603,129,0.684,130,1.079,131,1.113,132,1.186,133,0.684,134,0.684,135,1.351,136,1.186,137,0.684,138,1.186,139,0.684,140,0.706,141,1.186,142,0.684,143,0.753,144,0.663,145,0.684,146,0.684,147,0.706,148,0.663,149,0.777,150,0.684,151,0.603,152,0.684,153,1.385,154,0.663,155,0.663,156,0.663,157,0.684,158,0.706,159,0.777,160,0.777,161,0.006,162,0.006,186,0.884,191,2.247,193,0.945,194,0.684,199,2.781,202,0.618,208,2.01,209,2.749,210,1.807,212,4.444,214,4.201,216,1.764,217,2.54,219,0.647,223,2.715,225,3.022,226,2.11,229,2.435,230,2.144,235,2.435,238,4.042,239,3.401,242,2.54,243,2.99,250,2.97,251,3.358,252,3.26,253,2.337,254,0.574,255,0.697,256,0.697,257,3.358,258,2.935,260,1.395,263,1.716,264,2.97,268,2.408,276,0.709,277,1.852,291,2.188,292,2.094,296,2.007,298,1.165,300,3.228,309,0.981,310,1.011,315,2.01,316,2.01,317,1.874,318,0.841,319,1.511,332,1.852,333,2.01,334,2.01,344,2.01,364,2.188,369,1.168,370,1.314,372,3.682,373,2.094,378,2.084,384,1.927,385,3.07,387,1.718,388,1.718,389,1.852,390,1.874,391,1.433,438,4.143,441,4.141,447,2.188,455,2.687,459,2.811,461,1.265,463,3.447,464,2.151,466,1.94,468,0.802,473,1.599,475,1.186,480,2.411,482,2.026,483,2.411,484,5.111,485,4.213,486,5.111,487,5.111,488,6.495,489,5.509,490,5.721,491,5.721,492,6.495,493,6.495,494,6.495,495,6.495,496,5.202,497,4.588,498,4.213,499,1.657,500,3.682,501,3.07,502,4.042,503,2.921,504,2.935,505,3.2,506,4.849,507,5.111,508,3.791,509,4.042,510,4.213,511,2.759,512,5.111,513,5.111,514,2.188,515,2.759,516,3.682,517,2.759,518,2.759,519,4.213,520,5.721,521,2.759,522,3.682,523,7.284,524,2.759,525,2.759,526,3.682,527,3.682,528,2.861,529,2.759,530,2.007,531,2.759,532,2.759,533,2.759,534,2.411,535,2.759,536,2.759,537,1.76,538,2.759,539,4.213,540,2.759,541,3.682,542,2.759,543,2.759,544,2.759,545,2.759,546,2.759,547,2.759,548,2.759,549,2.182,550,2.759,551,2.759,552,2.759,553,2.759,554,2.759,555,2.759,556,5.721,557,4.213,558,4.213,559,3.682,560,4.213,561,4.213,562,4.213,563,4.213,564,4.213,565,4.466,566,2.182,567,2.861,568,4.213,569,2.759,570,4.213,571,4.213,572,4.213,573,1.874,574,1.874,575,3.682,576,2.759,577,2.759,578,2.759,579,1.874,580,2.759,581,3.682,582,1.314,583,1.783,584,2.759,585,2.759,586,2.759,587,2.759,588,1.874,589,2.182,590,2.411]],["title/modules/AppModule.html",[163,1.151,591,2.978]],["body/modules/AppModule.html",[3,0.119,4,0.119,9,0.104,15,1.224,28,0.013,30,0.335,31,0.329,32,0.186,33,0.149,95,0.949,105,2.052,161,0.009,162,0.009,163,1.304,165,1.64,166,2.205,167,3.537,168,3.537,169,2.233,170,1.757,175,3.165,176,2.117,177,1.888,179,2.396,180,2.396,185,2.519,186,1.484,187,2.647,193,1.585,209,2.579,216,1.536,309,1.419,339,3.886,397,4.2,404,3.537,405,2.519,406,2.647,407,3.483,408,3.165,409,2.405,410,3.165,417,3.144,418,3.144,422,4.138,423,3.144,425,2.405,426,3.46,427,4.136,428,4.136,475,1.918,534,4.046,591,6.06,592,4.046,593,4.046,594,4.046,595,4.046,596,5.242,597,5.242,598,3.661,599,6.093,600,5.951,601,3.374,602,6.093,603,6.093,604,4.63,605,6.093,606,6.093,607,4.63,608,4.046,609,4.63,610,4.63,611,3.374,612,6.093,613,3.661,614,2.112,615,4.63,616,6.093,617,3.144,618,3.661,619,3.374,620,6.093,621,3.661,622,4.63,623,3.483,624,4.63,625,3.661,626,4.63,627,3.144,628,4.63,629,4.138,630,4.046,631,4.63,632,6.093,633,5.324,634,5.951,635,4.046,636,4.63,637,4.63,638,6.093,639,4.63,640,4.046,641,3.144,642,6.093,643,4.63,644,4.818,645,6.093,646,6.093,647,6.093,648,2.182,649,1.865,650,4.63,651,4.138,652,6.093,653,6.093,654,4.818,655,4.63,656,4.63,657,4.818,658,4.63,659,4.046,660,4.63,661,2.953,662,4.63,663,4.63,664,4.344,665,4.63,666,4.63,667,4.63]],["title/modules/AppRoutingModule.html",[163,1.151,597,2.776]],["body/modules/AppRoutingModule.html",[3,0.142,4,0.142,9,0.124,28,0.013,30,0.308,31,0.391,32,0.142,33,0.177,128,1.204,161,0.01,162,0.01,165,1.951,170,2.09,179,2.166,180,2.677,190,3.149,191,3.248,192,3.891,193,1.886,194,1.366,195,3.996,199,3.704,276,0.927,433,5.965,436,6.387,528,3.741,530,2.624,597,4.623,668,5.508,669,6.807,670,5.965,671,5.508,672,5.508,673,3.741,674,5.508,675,4.623,676,5.508,677,6.807,678,8.186,679,5.508,680,6.929,681,5.508,682,5.508,683,5.508,684,3.741,685,5.508,686,5.508,687,5.508,688,5.508,689,5.508,690,5.508,691,5.508,692,5.508,693,5.508,694,5.508,695,5.508,696,5.508,697,5.508,698,5.508,699,5.508,700,5.508,701,5.508,702,5.508,703,5.508]],["title/guards/AuthGuard.html",[432,3.232,670,2.978]],["body/guards/AuthGuard.html",[3,0.147,4,0.147,9,0.129,11,1.465,20,0.474,21,0.986,23,1.339,24,0.986,27,0.697,28,0.013,30,0.303,31,0.407,32,0.147,33,0.184,101,0.723,161,0.01,162,0.01,193,1.959,199,3.113,202,0.839,208,4.169,209,3.309,212,4.444,214,4.286,219,0.882,254,0.549,255,0.951,257,3.462,298,1.096,319,1.725,434,4.524,436,6.338,442,5,443,6.833,444,3.18,445,6.833,457,4.732,459,2.644,460,6.565,463,3.447,464,2.488,467,1.784,468,1.664,469,2.843,471,5,472,2.25,473,2.171,475,2.116,528,3.886,670,5.077,704,5,705,6.968,706,6.968,707,5.722,708,5.722,709,4.524,710,5.722,711,5.722,712,5.722,713,5.722]],["title/injectables/AuthService.html",[209,1.73,467,1.046]],["body/injectables/AuthService.html",[3,0.187,4,0.121,9,0.106,20,0.391,21,0.873,24,1.147,27,0.988,28,0.013,30,0.267,31,0.336,32,0.121,33,0.152,101,0.714,140,1.987,147,1.58,151,1.349,153,1.758,161,0.009,162,0.009,177,2.517,202,0.905,209,2.612,219,0.871,245,2.999,251,3.857,254,0.542,255,0.938,256,0.938,263,1.753,266,2.57,269,3.719,270,5.314,277,3.526,285,3.528,289,5.314,290,3.968,309,1.698,318,0.938,464,2.84,467,1.58,468,1.373,472,1.857,473,1.792,489,5.766,503,3.931,537,4.951,649,1.925,714,2.16,715,4.127,716,6.009,717,4.143,718,2.651,719,6.15,720,4.192,721,5.394,722,4.723,723,6.173,724,4.165,725,6.173,726,4.723,727,4.723,728,2.714,729,5.394,730,4.723,731,3.968,732,4.498,733,3.085,734,4.723,735,2.427,736,4.192,737,2.612,738,5.394,739,4.723,740,4.881,741,4.723,742,5.394,743,4.723,744,5.394,745,4.723,746,2.846,747,3.013]],["title/pipes/CapitalizeInitialPipe.html",[596,2.776,748,2.031]],["body/pipes/CapitalizeInitialPipe.html",[3,0.139,4,0.139,9,0.122,11,1.382,13,1.298,21,0.764,24,0.764,27,0.934,28,0.013,30,0.209,31,0.384,32,0.139,33,0.174,101,0.76,161,0.01,162,0.01,216,1.839,219,0.684,223,2.464,254,0.426,255,0.737,256,0.737,263,2.039,292,3.341,296,3.202,298,1.357,306,2.302,318,0.737,462,5.535,465,4.972,475,2.062,514,3.492,559,5.875,596,4.566,748,3.341,749,4.269,750,5.875,751,4.718,752,4.972,753,5.875,754,2.821,755,5.399,756,6.888,757,5.875,758,6.723,759,7.199,760,5.744,761,7.883,762,5.744,763,5.744,764,7.883,765,7.322,766,5.335,767,6.398,768,6.398,769,6.398,770,5.875,771,5.399]],["title/components/CategoriesInfoComponent.html",[0,0.26,107,1.014]],["body/components/CategoriesInfoComponent.html",[0,0.465,1,0.852,2,1.34,3,0.176,4,0.091,5,0.998,6,0.998,7,0.998,8,0.998,9,0.08,11,1.298,12,1.667,13,0.852,14,2.384,15,2.237,16,1.428,18,1.428,20,0.294,21,0.717,22,1.82,23,1.314,24,1.108,27,0.834,28,0.013,29,1.447,30,0.197,31,0.252,32,0.091,33,0.114,45,1.445,46,1.445,53,2.135,54,2.583,57,2.414,61,2.407,66,1.841,68,1.445,69,3.489,71,1.859,72,2.23,73,1.445,77,1.929,78,2.026,84,3.552,85,3.894,87,3.109,88,1.558,90,1.736,91,2.146,95,0.727,96,1.428,97,1.428,98,0.998,99,1.458,100,0.998,101,0.76,102,0.998,103,0.852,104,0.998,105,0.879,106,0.998,107,1.603,108,2.005,109,1.428,110,0.852,111,2.124,112,1.667,113,0.852,114,1.298,115,1.667,116,0.879,117,0.967,118,0.998,119,0.852,120,1.667,121,0.879,122,0.998,123,0.879,124,0.937,125,0.825,126,0.998,127,0.852,128,0.775,129,0.879,130,1.298,131,1.34,132,1.428,133,0.879,134,0.879,135,1.34,136,1.428,137,0.879,138,1.428,139,0.879,140,0.907,141,1.428,142,0.879,143,0.967,144,0.852,145,0.879,146,0.879,147,0.907,148,0.852,149,0.998,150,0.879,151,0.775,152,0.879,153,1.325,154,0.852,155,0.852,156,0.852,157,0.879,158,0.907,159,0.998,160,0.998,161,0.007,162,0.007,202,0.743,210,1.858,216,1.144,219,0.866,254,0.591,255,0.933,256,0.933,263,0.852,276,0.597,306,1.736,309,0.825,318,0.882,319,1.253,364,2.634,370,1.688,378,1.445,385,3.695,387,2.414,388,1.445,389,1.558,390,2.407,391,1.841,447,2.634,459,2.453,466,2.453,482,1.796,499,1.994,501,4.314,567,2.407,579,3.444,582,1.688,583,1.5,649,1.258,735,2.328,754,1.736,772,6.912,773,6.255,774,2.583,775,4.682,776,4.01,777,4.682,778,4.01,779,4.01,780,4.431,781,4.01,782,2.52,783,2.759,784,5.921,785,5.921,786,4.01,787,4.01,788,2.803,789,2.068,790,4.431,791,3.695,792,5.792,793,4.144,794,2.068,795,3.097,796,3.35,797,3.097,798,3.097,799,2.803,800,3.649,801,2.803,802,5.071,803,4.682,804,5.407,805,5.625,806,4.644,807,4.01,808,3.007,809,3.544,810,1.924,811,3.234,812,4.431,813,3.544,814,2.634,815,4.709,816,2.898,817,5.071,818,3.544,819,5.071,820,4.01,821,3.544,822,4.01,823,2.583,824,4.01,825,3.544,826,2.803,827,3.222,828,2.407,829,2.803,830,3.544,831,3.544,832,2.803,833,2.803,834,4.01,835,3.444,836,4.431,837,5.071,838,4.431,839,5.071,840,3.777,841,2.135,842,2.261,843,2.407,844,4.431,845,4.431,846,3.234,847,2.803,848,2.261,849,3.097]],["title/injectables/CategoriesService.html",[467,1.046,850,2.607]],["body/injectables/CategoriesService.html",[0,0.347,3,0.14,4,0.101,9,0.089,20,0.326,21,0.772,23,1.204,24,1.006,27,0.92,28,0.013,30,0.276,31,0.279,32,0.101,33,0.126,101,0.783,111,2.256,128,1.192,161,0.008,162,0.008,194,1.554,216,1.231,219,0.9,221,3.109,222,4.185,226,1.868,230,1.638,245,2.696,250,2.495,254,0.56,255,0.97,256,0.923,298,1.209,305,4.205,318,0.97,462,4.596,464,2.688,466,3.058,467,1.397,468,1.143,469,2.711,472,1.546,473,1.492,474,1.729,475,2.286,614,2.422,648,1.748,649,1.908,714,1.798,735,2.146,737,2.864,748,2.711,763,5.36,779,4.314,789,2.225,793,4.306,812,4.768,816,3.868,838,4.768,850,3.48,851,3.436,852,4.768,853,5.456,854,6.266,855,3.11,856,3.933,857,2.599,858,5.456,859,3.933,860,2.146,861,4.077,862,4.996,863,3.933,864,3.287,865,5.456,866,3.933,867,5.456,868,3.933,869,7.109,870,3.933,871,5.475,872,2.508,873,3.933,874,3.436,875,2.671,876,6.592,877,3.11,878,3.933,879,3.933,880,3.933,881,3.933,882,3.933,883,3.933,884,3.933,885,7.81,886,4.565,887,3.933,888,5.456,889,3.933,890,3.933,891,3.933,892,3.933,893,3.933,894,3.933,895,3.933,896,3.933,897,3.933,898,3.933,899,3.515,900,2.866,901,3.933,902,3.933,903,3.933,904,5.456,905,6.266,906,5.475,907,3.436,908,6.266,909,2.866,910,7.109,911,5.475,912,4.314,913,5.456,914,5.456,915,5.456,916,3.976,917,3.976,918,5.456,919,5.456,920,5.456,921,5.456,922,5.456,923,5.456,924,3.933,925,3.933,926,5.456,927,3.933,928,3.933,929,5.456,930,3.976,931,3.933,932,3.933,933,3.933,934,3.933]],["title/interfaces/CategoryInfo.html",[793,2.123,935,1.188]],["body/interfaces/CategoryInfo.html",[3,0.162,4,0.162,9,0.142,20,0.522,28,0.012,32,0.162,101,0.838,161,0.011,162,0.011,202,1.082,254,0.649,256,1.101,298,1.363,448,7.054,793,3.834,828,4.279,899,4.193,935,1.832,936,2.881,937,4.019,938,8.073]],["title/components/CategorySelectableComponent.html",[0,0.26,110,0.982]],["body/components/CategorySelectableComponent.html",[0,0.503,1,0.633,2,1.074,3,0.105,4,0.068,5,0.742,6,0.742,7,0.742,8,0.742,9,0.059,11,1.041,12,1.398,13,0.633,14,2.318,15,2.175,16,1.145,18,1.145,20,0.218,21,0.575,22,1.572,23,0.781,24,1.142,27,0.928,28,0.013,29,1.627,30,0.234,31,0.187,32,0.105,33,0.085,95,0.54,96,1.145,97,1.145,98,0.742,99,1.26,100,0.742,101,0.79,102,0.742,103,0.633,104,0.742,105,0.653,106,0.742,107,0.653,108,1.968,109,1.145,110,1.45,111,2.228,112,1.398,113,0.633,114,1.429,115,1.398,116,0.653,117,0.719,118,0.742,119,0.633,120,1.398,121,0.653,122,0.742,123,0.653,124,1.756,125,0.613,126,0.742,127,0.633,128,0.576,129,0.653,130,1.041,131,1.074,132,1.145,133,0.653,134,0.653,135,1.074,136,1.145,137,0.653,138,1.145,139,0.653,140,0.674,141,1.145,142,0.653,143,0.719,144,0.633,145,0.653,146,0.653,147,1.545,148,0.633,149,0.742,150,0.653,151,0.576,152,0.653,153,1.145,154,0.633,155,0.633,156,0.633,157,0.653,158,0.674,159,0.742,160,0.742,161,0.006,162,0.006,169,1.49,184,0.872,186,0.844,194,0.653,202,0.596,210,1.009,216,1.548,219,0.941,221,1.599,226,1.7,240,3.364,243,1.599,253,1.859,254,0.624,255,1.039,256,1.014,260,1.346,263,1.932,276,0.836,278,1.937,285,3.191,298,1.003,306,2.412,309,1.485,310,2.211,318,1.049,319,1.35,327,1.433,328,3.097,332,1.158,414,2.774,426,1.158,444,1.721,459,2.821,461,1.996,482,1.44,504,2.659,505,2.9,614,2.129,648,2.257,649,1.582,664,2.593,718,1.978,754,2.276,782,2.02,794,2.872,796,3.039,800,2.916,810,1.543,834,3.215,840,4.067,850,4.378,857,2.365,860,1.599,939,5.905,940,5.905,941,1.789,942,3.926,943,3.926,944,3.215,945,4.339,946,5.272,947,2.813,948,3.372,949,2.963,950,4.068,951,2.963,952,3.553,953,2.963,954,4.068,955,2.761,956,2.761,957,4.339,958,2.761,959,2.761,960,3.618,961,2.324,962,2.302,963,3.553,964,3.553,965,2.702,966,3.553,967,3.167,968,2.579,969,4.412,970,2.302,971,2.324,972,2.593,973,2.963,974,4.068,975,2.963,976,4.646,977,2.634,978,4.068,979,4.136,980,2.02,981,2.634,982,2.963,983,5.335,984,2.634,985,2.963,986,2.112,987,4.396,988,2.963,989,2.634,990,2.324,991,2.634,992,3.169,993,2.112,994,3.553,995,2.634,996,2.774,997,2.963,998,2.963,999,2.634,1000,2.963,1001,2.963,1002,2.302,1003,2.963,1004,2.761,1005,2.634,1006,4.378,1007,2.553,1008,4.097,1009,2.761,1010,2.634,1011,2.761,1012,2.302,1013,4.843,1014,2.302,1015,2.963,1016,2.516,1017,2.963,1018,2.761,1019,1.789,1020,2.634,1021,3.372,1022,2.761,1023,2.634,1024,2.761,1025,3.792,1026,2.761,1027,2.302,1028,2.302,1029,2.302,1030,2.302,1031,2.302,1032,2.761,1033,2.593,1034,2.761,1035,2.302,1036,3.553,1037,2.302,1038,2.593,1039,2.593,1040,2.083,1041,1.309,1042,1.68,1043,1.68,1044,1.309,1045,2.302,1046,1.587,1047,2.302,1048,2.302,1049,1.587,1050,1.587,1051,1.789,1052,2.302,1053,4.339,1054,2.302,1055,2.302,1056,1.789,1057,1.789,1058,1.919,1059,1.919,1060,1.919,1061,1.919,1062,2.302,1063,2.963,1064,1.919,1065,1.919,1066,2.302,1067,3.553]],["title/components/CategorySelectableMobileComponent.html",[0,0.26,113,0.982]],["body/components/CategorySelectableMobileComponent.html",[0,0.501,1,0.616,2,1.052,3,0.102,4,0.066,5,0.722,6,0.722,7,0.722,8,0.722,9,0.058,11,1.019,12,1.374,13,0.616,14,2.311,15,2.169,16,1.121,18,1.121,20,0.212,21,0.563,22,1.55,23,0.765,24,1.138,27,0.923,28,0.013,29,1.618,30,0.231,31,0.182,32,0.102,33,0.082,95,0.526,96,1.121,97,1.121,98,0.722,99,1.241,100,0.722,101,0.785,102,0.722,103,0.616,104,0.722,105,0.636,106,0.722,107,0.636,108,1.958,109,1.121,110,0.616,111,2.223,112,1.374,113,1.432,114,2.186,115,1.374,116,0.636,117,0.699,118,0.722,119,0.616,120,1.374,121,0.636,122,0.722,123,0.636,124,1.739,125,0.597,126,0.722,127,0.616,128,0.56,129,0.636,130,1.019,131,1.052,132,1.121,133,0.636,134,0.636,135,1.052,136,1.121,137,0.636,138,1.121,139,0.636,140,0.656,141,1.121,142,0.636,143,0.699,144,0.616,145,0.636,146,0.636,147,1.526,148,0.616,149,0.722,150,0.636,151,0.56,152,0.636,153,1.128,154,0.616,155,0.616,156,0.616,157,0.636,158,0.656,159,0.722,160,0.722,161,0.006,162,0.006,169,1.459,184,0.849,186,0.821,194,0.636,202,0.584,210,0.988,216,1.535,219,0.935,221,1.566,226,1.671,240,3.315,243,1.566,253,1.821,254,0.621,255,1.033,256,1.007,260,1.318,263,1.924,276,0.822,278,1.896,285,3.145,298,0.992,306,2.392,309,1.468,310,2.184,318,1.043,319,1.335,327,1.395,328,3.072,332,1.127,414,2.735,426,1.127,444,1.685,459,2.803,461,1.976,482,1.41,504,2.621,505,2.858,614,2.11,648,2.239,649,1.564,664,2.539,718,1.956,754,2.253,782,1.978,794,2.849,796,3.01,800,2.884,810,1.511,834,3.148,840,4.022,850,4.339,857,2.325,860,1.566,939,5.884,945,4.265,946,5.207,947,2.785,948,3.315,949,2.901,950,4.01,951,2.901,952,3.479,953,2.901,954,4.01,955,2.704,956,2.704,957,4.265,958,2.704,959,2.704,960,3.557,961,2.276,962,2.24,964,3.479,965,2.656,967,3.113,968,2.535,969,4.381,971,2.276,972,2.539,973,2.901,974,4.01,975,2.901,976,4.595,978,4.01,979,4.099,980,1.978,982,2.901,983,5.299,985,2.901,986,2.068,987,4.342,988,2.901,990,2.276,992,3.134,993,2.068,994,3.479,996,2.735,997,2.901,998,2.901,1000,2.901,1001,2.901,1003,2.901,1004,2.704,1006,4.339,1007,2.517,1008,4.046,1009,2.704,1011,2.704,1012,2.24,1013,4.795,1015,2.901,1016,2.493,1017,2.901,1018,2.704,1019,1.741,1021,3.315,1022,2.704,1024,2.704,1025,3.737,1026,2.704,1032,2.704,1033,2.539,1034,2.704,1035,2.24,1036,3.479,1038,2.539,1039,2.539,1040,2.027,1041,1.274,1042,1.635,1043,1.635,1044,1.274,1045,2.24,1046,1.544,1047,2.24,1048,2.24,1049,1.544,1050,1.544,1051,1.741,1052,2.24,1053,4.265,1054,2.24,1055,2.24,1056,1.741,1057,1.741,1058,1.868,1059,1.868,1060,1.868,1061,1.868,1062,2.24,1063,2.901,1064,1.868,1065,1.868,1066,2.24,1067,3.479,1068,5.884,1069,1.741,1070,3.86,1071,2.704,1072,3.86,1073,3.148,1074,3.479,1075,3.479,1076,2.24,1077,2.563,1078,2.563,1079,2.563,1080,2.563,1081,2.563,1082,2.563,1083,2.563,1084,2.24,1085,2.24,1086,2.563,1087,2.24,1088,2.563,1089,2.563,1090,2.24,1091,2.24,1092,2.24,1093,2.24,1094,2.24]],["title/components/ConfirmDialogComponent.html",[0,0.26,116,1.014]],["body/components/ConfirmDialogComponent.html",[0,0.504,1,1.083,2,1.581,3,0.154,4,0.116,5,1.269,6,1.269,7,1.269,8,1.269,9,0.102,11,1.532,12,1.892,13,1.083,14,2.427,15,2.277,16,1.685,18,1.685,20,0.373,21,0.847,22,2.016,23,1.376,24,1.054,27,0.729,28,0.013,29,1.267,30,0.261,31,0.32,32,0.116,33,0.145,62,3.605,95,0.924,96,1.685,97,1.685,98,1.269,99,1.615,100,1.269,101,0.697,102,1.269,103,1.083,104,1.269,105,1.118,106,1.269,107,1.118,108,1.153,109,1.685,110,1.083,111,1.581,112,1.892,113,1.083,114,1.532,115,1.892,116,1.776,117,2.165,118,1.269,119,1.083,120,1.892,121,1.118,122,1.269,123,1.118,124,1.19,125,1.049,126,1.269,127,1.083,128,0.984,129,1.118,130,1.532,131,1.581,132,1.685,133,1.118,134,1.118,135,1.581,136,1.685,137,1.118,138,1.685,139,1.118,140,1.153,141,1.685,142,1.118,143,1.229,144,1.083,145,1.118,146,1.118,147,1.153,148,1.083,149,1.269,150,1.118,151,0.984,152,1.118,153,1.467,154,1.083,155,1.083,156,1.083,157,1.118,158,1.153,159,1.269,160,1.269,161,0.009,162,0.009,202,0.877,210,1.939,211,3.557,216,1.35,219,0.571,222,4.278,254,0.53,255,0.615,256,0.615,298,1.126,301,4.896,314,2.714,318,0.816,319,0.954,327,2.451,354,3.283,641,3.059,718,2.376,789,2.44,823,3.283,1095,5.582,1096,5.202,1097,3.937,1098,6.416,1099,6.719,1100,5.984,1101,5.892,1102,5.216,1103,4.505,1104,7.938,1105,4.505,1106,4.896,1107,4.505,1108,5.229,1109,4.505,1110,4.505,1111,5.984,1112,4.505,1113,3.059,1114,4.505,1115,4.505,1116,4.505,1117,4.505,1118,4.505,1119,5.984,1120,5.984]],["title/injectables/CustomTranslateService.html",[211,2.031,467,1.046]],["body/injectables/CustomTranslateService.html",[3,0.118,4,0.118,9,0.103,20,0.379,21,0.856,23,1.302,24,1.11,27,0.957,28,0.013,29,0.97,30,0.263,31,0.325,32,0.118,33,0.232,101,0.703,161,0.009,162,0.009,202,0.887,210,1.859,211,3.007,216,1.797,219,0.858,223,2.821,225,3.133,226,2.32,227,4.463,230,2.034,236,4.784,239,3.227,253,2.767,254,0.607,255,0.924,256,0.924,260,2.004,263,1.801,268,3.458,292,3.007,296,2.882,298,1.331,302,3.007,309,1.678,318,0.924,319,1.629,328,2.979,342,5.226,356,4.8,408,2.379,409,2.379,461,1.817,464,2.599,467,1.549,468,1.332,472,1.801,473,1.738,474,2.014,475,1.704,499,2.834,509,6.692,514,3.142,516,5.287,530,2.882,541,4.003,649,1.501,709,3.622,714,2.095,718,2.101,728,2.66,735,2.379,746,4.514,806,4.109,810,2.296,968,3.142,980,3.367,1121,4.003,1122,6.775,1123,7.206,1124,5.805,1125,4.581,1126,8.139,1127,6.05,1128,5.92,1129,6.05,1130,4.581,1131,6.05,1132,6.05,1133,3.645,1134,4.581,1135,4.581,1136,5.287,1137,6.05,1138,4.581,1139,4.409,1140,5.287,1141,4.581,1142,6.05,1143,4.581,1144,4.581,1145,4.581,1146,4.581,1147,4.581,1148,4.581,1149,4.581,1150,4.581,1151,3.111,1152,4.581,1153,4.581]],["title/components/DataPage.html",[0,0.26,119,0.982]],["body/components/DataPage.html",[0,0.421,1,0.524,2,1.329,3,0.165,4,0.056,5,0.614,6,0.614,7,0.614,8,0.614,9,0.139,11,0.897,12,1.237,13,0.524,14,2.267,15,2.141,16,0.987,18,0.987,20,0.181,21,0.496,22,1.417,23,0.967,24,1.019,27,0.864,28,0.013,29,1.473,30,0.279,31,0.155,32,0.113,33,0.07,45,2.399,46,1.429,49,1.669,50,2.432,52,1.82,53,1.314,55,3.209,57,2.522,58,2.233,62,4.452,63,1.084,64,2.092,66,2.613,68,1.791,69,1.039,71,2.597,72,1.931,73,1.429,76,1.59,77,1.907,78,1.247,82,2.554,83,1.742,84,1.133,85,1.314,87,2.247,90,0.747,91,1.859,94,1.82,95,0.447,96,0.987,97,0.987,98,0.614,99,1.135,100,0.614,101,0.747,102,0.614,103,0.524,104,0.614,105,0.541,106,0.614,107,0.541,108,1.125,109,0.987,110,0.524,111,2.065,112,1.237,113,0.524,114,0.897,115,1.237,116,0.869,117,0.595,118,0.614,119,1.209,120,1.237,121,0.541,122,0.614,123,0.541,124,0.576,125,0.508,126,0.614,127,0.524,128,0.477,129,0.541,130,1.125,131,1.329,132,0.987,133,0.541,134,0.541,135,0.926,136,0.987,137,0.541,138,0.987,139,0.541,140,0.559,141,0.987,142,1.248,143,1.754,144,0.524,145,0.541,146,0.541,147,0.559,148,0.524,149,0.614,150,0.541,151,0.766,152,0.541,153,1.426,154,0.524,155,0.524,156,0.524,157,0.541,158,0.559,159,0.614,160,0.614,161,0.008,162,0.005,169,1.285,186,0.699,193,0.747,194,1.833,198,5.604,202,0.514,206,4.653,207,4.653,209,0.923,210,1.758,211,2.924,214,3.681,216,1.536,219,0.84,220,3.978,221,2.609,222,3.838,223,1.844,225,1.378,226,1.722,227,2.737,228,2.235,229,2.396,230,2.332,231,2.003,233,2.554,234,2.112,235,1.669,237,2.5,239,1.669,240,3.32,241,2.771,243,1.378,245,2.157,250,1.603,252,2.235,254,0.575,255,0.905,256,0.905,260,1.161,263,1.056,276,1.244,277,2.212,278,1.669,297,2.771,298,1.262,300,2.5,301,4.287,302,2.5,303,2.771,305,3.363,306,1.2,307,3.474,308,3.474,311,1.725,313,1.391,314,1.314,315,1.59,316,1.59,317,1.482,318,1.019,319,1.166,327,2.998,328,2.994,332,2.994,333,3.665,334,3.665,335,2.771,344,2.554,353,2.771,354,2.554,355,2.771,356,3.874,357,2.771,358,2.771,359,2.38,360,1.725,361,1.725,364,2.282,369,1.859,373,2.738,378,2.522,384,2.3,387,2.247,388,2.247,389,1.931,390,1.482,441,1.82,450,2.112,461,1.51,475,0.987,506,2.38,537,1.391,549,4.653,565,3.063,566,3.474,573,1.482,574,1.482,582,2.092,583,1.483,614,1.994,641,1.482,648,1.885,649,1.09,718,2.058,728,1.541,731,1.187,733,1.429,779,2.771,780,3.063,789,1.429,793,3.95,794,1.429,814,2.282,816,2.003,820,2.771,828,1.482,842,1.391,850,3.753,852,4.396,857,1.669,864,2.112,947,1.483,1016,1.285,1040,1.725,1041,1.084,1071,2.38,1095,1.59,1096,1.482,1098,5.843,1101,1.725,1154,1.906,1155,3.505,1156,3.505,1157,3.474,1158,2.771,1159,3.505,1160,5.03,1161,3.505,1162,3.505,1163,1.59,1164,5.03,1165,5.618,1166,3.665,1167,3.363,1168,2.182,1169,3.201,1170,3.839,1171,2.554,1172,2.182,1173,4.653,1174,2.554,1175,3.505,1176,2.182,1177,3.505,1178,5.51,1179,2.182,1180,5.884,1181,4.287,1182,7.855,1183,5.03,1184,3.505,1185,3.505,1186,2.182,1187,3.063,1188,2.182,1189,4.685,1190,2.003,1191,5.142,1192,3.505,1193,2.38,1194,3.209,1195,5.03,1196,3.505,1197,4.393,1198,2.182,1199,5.03,1200,4.393,1201,3.505,1202,2.182,1203,3.505,1204,2.182,1205,3.505,1206,2.38,1207,2.182,1208,2.182,1209,3.505,1210,2.182,1211,2.003,1212,2.182,1213,2.182,1214,1.725,1215,1.482,1216,1.59,1217,1.59,1218,2.182,1219,1.59,1220,2.182,1221,5.03,1222,2.182,1223,2.182,1224,3.505,1225,2.182,1226,2.182,1227,1.725,1228,2.182,1229,1.482,1230,2.182,1231,2.182,1232,2.771,1233,2.182,1234,2.182,1235,2.182,1236,2.182,1237,2.182,1238,2.182,1239,2.182,1240,2.182,1241,2.182,1242,1.482,1243,1.084,1244,2.182,1245,2.182,1246,1.482,1247,2.182,1248,2.182,1249,2.182,1250,2.182,1251,2.182,1252,2.182,1253,2.182,1254,2.182,1255,2.182,1256,2.182,1257,1.906,1258,1.906,1259,2.182,1260,2.182,1261,2.182,1262,2.38,1263,2.554,1264,2.771,1265,2.554,1266,2.554,1267,2.554,1268,2.554,1269,3.505,1270,2.182,1271,2.182,1272,1.906,1273,1.59,1274,3.839,1275,4.393,1276,1.187,1277,2.182,1278,2.182,1279,3.505,1280,3.505,1281,3.063,1282,3.505,1283,2.771,1284,2.092,1285,2.511,1286,2.511,1287,2.003,1288,1.82,1289,1.82,1290,1.603,1291,2.182,1292,2.771,1293,2.38,1294,2.182,1295,1.906,1296,2.182,1297,2.182,1298,1.59,1299,2.182,1300,2.182,1301,2.182]],["title/modules/DataPageModule.html",[163,1.151,1302,2.978]],["body/modules/DataPageModule.html",[3,0.137,4,0.137,9,0.12,28,0.013,30,0.334,31,0.38,32,0.137,33,0.172,95,1.095,119,1.927,142,1.989,143,1.458,161,0.01,162,0.01,163,1.505,165,1.892,166,2.545,167,3.785,168,2.775,169,1.958,170,2.028,175,3.469,176,2.444,177,2.179,179,2.627,180,2.627,181,3.818,182,2.775,183,4.024,184,1.769,185,3.635,186,1.712,187,3.054,210,1.325,243,2.101,276,0.899,374,2.349,397,4.512,399,4.867,404,3.469,405,2.907,406,3.054,407,3.818,408,2.775,409,2.775,410,3.469,411,3.408,412,5.282,413,4.225,414,2.655,415,5.282,416,4.225,417,4.536,418,3.629,419,5.282,420,4.225,421,3.893,422,4.536,423,3.629,424,3.219,425,2.775,426,2.349,427,3.054,428,3.054,429,4.225,1215,3.629,1216,3.893,1302,6.195,1303,4.669,1304,4.669,1305,4.669,1306,5.444,1307,5.343,1308,3.408,1309,6.68,1310,5.343,1311,5.837,1312,4.669,1313,5.837,1314,4.669,1315,4.669]],["title/modules/DataPageRoutingModule.html",[163,1.151,1306,2.776]],["body/modules/DataPageRoutingModule.html",[0,0.408,3,0.165,4,0.165,9,0.145,28,0.013,30,0.306,31,0.456,32,0.165,33,0.206,119,1.793,161,0.011,162,0.011,165,2.273,170,2.436,179,2.524,180,2.934,190,3.668,191,3.468,192,4.264,193,2.197,194,1.592,195,3.057,196,3.867,1306,5.067,1308,4.094,1316,6.418]],["title/injectables/DataService.html",[467,1.046,627,2.776]],["body/injectables/DataService.html",[3,0.117,4,0.117,9,0.102,20,0.376,21,0.851,24,1.057,27,0.991,28,0.013,30,0.262,31,0.323,32,0.117,33,0.146,101,0.775,135,2.276,151,1.314,161,0.009,162,0.009,218,5.225,219,1.044,254,0.641,255,1.019,256,1.019,276,1.403,298,1.336,318,1.085,346,4.085,464,2.845,467,1.54,468,1.32,472,1.786,473,1.723,627,4.085,649,1.492,714,2.077,718,2.596,719,6.123,724,4.221,728,2.645,735,2.365,737,2.546,814,3.73,816,3.438,860,2.365,861,3.624,864,3.624,1133,3.624,1174,4.383,1276,3.273,1317,3.968,1318,4.383,1319,5.256,1320,4.541,1321,5.073,1322,7.55,1323,5.256,1324,4.541,1325,5.256,1326,6.015,1327,5.256,1328,4.541,1329,5.256,1330,4.541,1331,5.256,1332,5.256,1333,3.968,1334,5.233,1335,4.541,1336,6.015,1337,4.085,1338,5.256,1339,6.015,1340,2.736,1341,4.541]],["title/classes/EmailValidation.html",[33,0.131,1342,2.978]],["body/classes/EmailValidation.html",[3,0.15,4,0.15,9,0.131,20,0.482,21,0.996,24,0.823,27,0.858,28,0.013,30,0.226,32,0.15,33,0.187,101,0.785,161,0.01,162,0.01,184,1.927,216,1.588,219,0.737,254,0.459,255,0.794,256,0.794,263,1.398,275,4.048,298,1.236,309,1.355,310,2.132,318,0.794,475,2.131,718,1.804,794,2.87,1342,5.129,1343,3.711,1344,5.084,1345,6.613,1346,7.039,1347,5.818,1348,6.151,1349,6.471,1350,6.151,1351,6.151,1352,6.872,1353,6.151,1354,6.151,1355,6.151,1356,4.241,1357,6.151,1358,4.601,1359,5.084,1360,5.084,1361,5.818,1362,6.613,1363,7.039,1364,5.818,1365,5.818,1366,5.818]],["title/components/FilterComponent.html",[0,0.26,121,1.014]],["body/components/FilterComponent.html",[0,0.433,1,0.847,2,1.334,3,0.13,4,0.091,5,0.992,6,0.992,7,0.992,8,0.992,9,0.079,11,1.293,12,1.662,13,0.847,14,2.383,15,2.243,16,1.422,18,1.422,20,0.292,21,0.714,22,1.815,23,0.677,24,1.077,27,0.832,28,0.013,29,1.444,30,0.229,31,0.25,32,0.091,33,0.113,45,2.059,46,2.895,47,1.611,48,1.611,49,2.405,50,1.985,51,2.567,52,1.83,57,2.406,58,1.337,63,2.509,64,2.405,65,2.122,66,1.83,68,2.406,69,1.678,71,2.602,72,1.549,73,2.059,77,1.917,78,3.684,83,2.932,87,2.981,88,2.834,90,1.206,91,2.497,95,0.722,96,1.422,97,1.422,98,0.992,99,1.454,100,0.992,101,0.612,102,0.992,103,0.847,104,0.992,105,0.874,106,0.992,107,0.874,108,0.902,109,1.422,110,0.847,111,1.559,112,1.662,113,0.847,114,1.65,115,1.662,116,0.874,117,0.961,118,0.992,119,0.847,120,1.662,121,1.761,122,0.992,123,0.874,124,2.17,125,0.82,126,0.992,127,0.847,128,0.77,129,0.874,130,1.293,131,1.334,132,1.422,133,0.874,134,0.874,135,1.334,136,1.422,137,0.874,138,1.422,139,0.874,140,0.902,141,1.422,142,0.874,143,0.961,144,0.847,145,0.874,146,0.874,147,0.902,148,0.847,149,0.992,150,0.874,151,0.77,152,0.874,153,1.398,154,0.847,155,0.847,156,0.847,157,0.874,158,0.902,159,0.992,160,0.992,161,0.007,162,0.007,176,2.699,184,1.167,194,0.874,202,0.74,210,1.599,217,3.202,219,0.446,237,2.509,251,2.509,254,0.508,255,0.481,256,0.481,260,1.672,309,1.176,318,0.481,368,2.509,369,2.497,370,2.405,374,3.439,378,2.406,384,2.699,386,2.567,387,2.059,388,1.436,444,3.165,461,1.516,474,1.549,482,2.09,499,2.534,530,3.07,567,2.392,573,2.392,574,2.392,583,2.137,589,2.785,649,2.027,724,2.622,735,1.985,754,1.729,760,2.567,783,2.747,791,3.679,796,3.343,800,2.309,806,3.429,827,3.211,841,2.122,843,3.429,846,3.22,847,2.785,860,1.985,947,1.491,972,3.22,990,2.886,992,2.509,993,2.622,1007,3.246,1211,3.684,1283,2.785,1284,2.405,1288,1.83,1289,1.83,1290,1.611,1298,2.567,1356,2.122,1367,3.078,1368,5.901,1369,5.049,1370,5.632,1371,5.632,1372,5.632,1373,5.632,1374,5.156,1375,5.156,1376,3.523,1377,4.857,1378,5.049,1379,3.523,1380,3.992,1381,5.049,1382,3.523,1383,3.523,1384,3.523,1385,3.523,1386,3.679,1387,3.22,1388,3.523,1389,3.992,1390,3.523,1391,4.277,1392,2.247,1393,2.392,1394,2.785,1395,4.111,1396,4.377,1397,5.096,1398,4.696,1399,5.096,1400,4.377,1401,4.412,1402,3.078,1403,4.412,1404,3.078,1405,3.078,1406,3.078,1407,3.078,1408,3.078,1409,3.078,1410,4.412,1411,3.078,1412,3.523,1413,3.078,1414,4.412,1415,2.567,1416,3.078,1417,4.412,1418,4.412,1419,4.412,1420,4.412,1421,2.886,1422,2.785,1423,2.785,1424,3.992,1425,2.785,1426,2.785,1427,2.785,1428,3.078,1429,3.078,1430,2.567,1431,2.247,1432,2.785,1433,3.078]],["title/components/FilterMobileComponent.html",[0,0.26,123,1.014]],["body/components/FilterMobileComponent.html",[0,0.428,1,0.82,2,1.304,3,0.127,4,0.088,5,0.961,6,0.961,7,0.961,8,0.961,9,0.077,11,1.263,12,1.632,13,0.82,14,2.376,15,2.23,16,1.389,18,1.389,20,0.282,21,0.698,22,1.788,23,0.948,24,1.085,27,0.856,28,0.013,29,1.486,30,0.246,31,0.242,32,0.088,33,0.11,45,2.363,46,2.952,47,2.65,48,2.65,49,2.35,50,1.94,57,1.391,64,2.35,65,2.055,68,2.363,69,1.625,71,2.573,72,1.5,73,2.011,77,1.856,78,3.629,87,2.363,88,2.548,91,1.444,95,0.699,96,1.389,97,1.389,98,0.961,99,1.432,100,0.961,101,0.601,102,0.961,103,0.82,104,0.961,105,0.846,106,0.961,107,0.846,108,0.873,109,1.389,110,0.82,111,1.304,112,1.632,113,0.82,114,1.263,115,1.632,116,0.846,117,0.93,118,0.961,119,0.82,120,1.632,121,0.846,122,0.961,123,1.575,124,2.186,125,0.794,126,0.961,127,0.82,128,0.745,129,0.846,130,1.263,131,1.304,132,1.389,133,0.846,134,0.846,135,1.304,136,1.389,137,0.846,138,1.389,139,0.846,140,0.873,141,1.389,142,0.846,143,2.162,144,0.82,145,0.846,146,0.846,147,0.873,148,0.82,149,0.961,150,0.846,151,0.745,152,0.846,153,1.302,154,0.82,155,0.82,156,0.82,157,0.846,158,0.873,159,0.961,160,0.961,161,0.007,162,0.007,176,2.65,184,1.13,186,1.093,194,0.846,202,0.723,210,1.575,217,3.155,219,0.432,230,2.226,237,3.155,251,2.451,254,0.501,255,0.465,256,0.465,260,1.634,276,0.83,306,1.168,309,1.149,318,0.791,319,1.227,369,2.088,370,2.35,374,3.416,378,2.363,384,2.65,387,1.391,388,1.391,444,2.972,461,1.906,482,2.249,499,2.497,530,3.025,583,2.088,589,2.697,649,1.948,724,2.562,754,2.174,783,2.684,791,3.594,796,3.311,827,3.153,842,2.176,843,3.35,847,2.697,860,1.94,947,1.444,972,3.146,990,2.82,992,3.155,993,2.562,1007,2.904,1069,2.316,1071,3.35,1072,4.582,1073,3.901,1085,2.981,1102,3.594,1167,4.014,1171,3.594,1211,3.629,1283,2.697,1284,1.625,1288,1.772,1289,1.772,1290,1.56,1356,2.055,1370,5.548,1371,5.548,1372,5.548,1373,5.548,1374,5.064,1375,5.064,1377,4.729,1386,3.594,1387,3.146,1389,3.901,1391,4.059,1392,4.819,1394,2.697,1395,4.05,1396,4.312,1397,3.901,1398,4.627,1399,3.901,1400,4.312,1401,2.981,1402,2.981,1403,4.311,1404,2.981,1405,2.981,1406,2.981,1407,2.981,1408,2.981,1409,2.981,1410,4.311,1411,2.981,1413,2.981,1414,4.311,1415,2.485,1416,2.981,1417,4.311,1418,4.311,1419,4.311,1420,4.311,1426,2.697,1427,2.697,1428,2.981,1429,2.981,1430,2.485,1431,2.176,1434,6.789,1435,5.661,1436,5.021,1437,2.316,1438,4.933,1439,4.933,1440,3.594,1441,4.311,1442,3.411,1443,3.411,1444,3.411,1445,3.411,1446,3.411,1447,3.901,1448,4.933,1449,5.552,1450,3.594,1451,3.901,1452,3.411,1453,3.411,1454,2.316,1455,3.901,1456,3.411]],["title/injectables/FilterService.html",[467,1.046,1377,2.607]],["body/injectables/FilterService.html",[3,0.141,4,0.141,9,0.123,20,0.453,21,0.959,24,1.089,27,0.939,28,0.013,29,1.435,30,0.286,31,0.389,32,0.141,33,0.176,101,0.568,124,2.215,161,0.01,162,0.01,184,1.813,194,1.358,202,0.994,219,0.693,242,3.369,251,3.826,254,0.431,255,0.747,256,0.747,263,1.315,278,3.668,309,1.715,318,0.747,319,1.559,374,3.546,444,3.496,467,1.736,468,1.591,472,2.152,473,2.077,475,1.541,499,2.666,530,3.23,649,2.028,714,2.503,728,2.981,735,2.666,737,2.87,740,5.362,746,4.925,1211,3.129,1356,3.298,1377,4.325,1387,4.325,1391,4.768,1396,3.717,1397,5.362,1398,3.988,1399,5.362,1400,3.717,1457,4.783,1458,7.367,1459,7.7,1460,7.7,1461,6.78,1462,5.473,1463,5.473,1464,6.78,1465,5.473,1466,5.473,1467,5.473,1468,5.473,1469,5.473,1470,5.473]],["title/classes/FirebaseAuthService.html",[33,0.131,611,2.978]],["body/classes/FirebaseAuthService.html",[3,0.204,4,0.071,9,0.062,20,0.229,21,0.597,23,0.532,24,1.049,27,0.99,28,0.013,30,0.222,32,0.071,33,0.165,99,0.624,101,0.78,140,1.311,145,0.686,147,1.311,151,0.923,153,1.764,161,0.006,162,0.006,177,2.336,202,0.904,209,3.181,216,1.467,217,2.098,219,0.781,221,2.915,223,2.261,242,2.544,245,2.923,250,1.931,251,3.231,253,1.931,254,0.533,255,0.842,256,0.782,258,3.097,263,1.377,264,3.189,266,3.357,269,3.451,270,5.312,275,3.097,276,1.265,277,3.142,280,2.975,283,3.526,285,2.413,286,2.193,289,5.081,290,3.117,291,2.659,292,2.098,293,3.689,295,3.338,296,2.729,300,3.231,309,1.334,318,0.782,319,1.084,327,1.505,336,2.418,339,2.693,341,3.477,444,2.424,447,2.659,458,2.867,461,1.72,462,4.189,463,4.075,464,2.74,466,2.766,468,1.488,469,1.375,474,1.216,475,1.964,482,1.495,489,5.141,503,3.274,504,2.011,508,2.786,514,2.193,526,3.689,537,3.654,611,4.174,613,2.188,614,2.162,648,2.289,649,1.865,651,2.867,709,3.338,716,5.682,717,3.917,718,2.474,720,2.867,721,3.689,728,2.519,729,3.689,732,3.076,733,3.213,735,2.557,736,4.735,737,2.951,738,2.418,740,2.188,742,2.418,744,2.418,747,1.765,748,2.098,756,3.689,757,5.391,763,3.076,768,4.474,789,1.722,794,2.651,810,1.602,860,2.659,875,1.879,899,3.204,907,2.418,965,2.297,971,3.274,986,2.193,1007,1.931,1151,2.867,1190,2.413,1229,2.867,1272,2.418,1276,2.297,1343,1.765,1471,3.477,1472,2.418,1473,2.867,1474,6.973,1475,2.767,1476,2.767,1477,4.222,1478,2.867,1479,4.174,1480,4.222,1481,4.222,1482,5.206,1483,2.767,1484,2.767,1485,2.767,1486,2.767,1487,2.767,1488,4.222,1489,3.076,1490,4.174,1491,3.076,1492,6.973,1493,4.222,1494,4.174,1495,5.729,1496,3.076,1497,4.222,1498,2.767,1499,3.076,1500,3.076,1501,3.076,1502,4.222,1503,3.689,1504,2.767,1505,4.735,1506,4.928,1507,4.495,1508,6.502,1509,3.338,1510,4.189,1511,4.174,1512,4.222,1513,2.767,1514,3.076,1515,4.314,1516,5.12,1517,5.12,1518,5.12,1519,5.12,1520,2.767,1521,3.076,1522,3.076,1523,2.867,1524,3.689,1525,4.222,1526,4.222,1527,4.222,1528,4.222,1529,2.867,1530,2.767,1531,4.222,1532,5.729,1533,4.222,1534,4.222,1535,4.222,1536,4.222,1537,4.222,1538,5.12,1539,4.222,1540,3.265,1541,2.767,1542,1.879,1543,2.767,1544,2.767,1545,4.222,1546,4.222,1547,2.767,1548,4.222,1549,4.222,1550,4.222,1551,4.222,1552,2.016,1553,2.767,1554,2.767,1555,4.222,1556,4.222,1557,4.222,1558,4.222,1559,4.222,1560,2.767,1561,2.767,1562,4.222,1563,4.222,1564,2.767,1565,2.767,1566,2.767,1567,2.767,1568,4.222,1569,2.767,1570,2.767,1571,5.12,1572,5.12,1573,2.767,1574,2.767,1575,2.767,1576,2.767,1577,2.767,1578,2.693,1579,2.767,1580,2.767,1581,2.193,1582,2.767,1583,2.767,1584,2.767,1585,2.767,1586,2.767,1587,2.418,1588,2.767,1589,2.767,1590,2.767,1591,2.767,1592,2.767,1593,2.767,1594,2.767,1595,2.767,1596,2.767,1597,2.767,1598,2.767,1599,2.016,1600,2.767,1601,2.767]],["title/classes/FirebaseDataService.html",[33,0.131,1602,3.232]],["body/classes/FirebaseDataService.html",[3,0.091,4,0.091,9,0.079,20,0.292,21,1.005,23,0.678,24,1.005,27,0.963,28,0.013,30,0.25,32,0.091,33,0.113,58,2.241,65,2.125,101,0.833,151,1.104,161,0.007,162,0.007,195,3.564,218,4.53,219,1.01,225,2.536,230,1.936,232,3.223,253,2.311,254,0.662,255,0.969,256,0.969,271,3.996,276,1.369,298,1.31,300,2.511,318,1.039,346,3.432,450,2.125,455,3.223,461,1.517,462,3.432,464,2.786,466,2.933,468,1.026,469,1.753,475,2.145,508,3.509,614,2.268,627,5.08,648,2.619,649,1.762,718,2.508,724,2.625,728,3.289,735,1.987,737,2.729,748,1.753,789,2.061,814,3.349,816,3.686,860,1.987,861,4.279,864,3.885,871,4.416,872,2.25,875,2.395,899,2.625,965,2.75,986,2.625,1016,2.742,1106,3.682,1190,2.889,1276,2.75,1318,3.682,1319,4.416,1321,5.551,1322,7.019,1323,4.416,1325,4.416,1327,4.416,1329,4.416,1331,4.416,1333,4.416,1334,4.699,1338,4.416,1340,3.558,1343,2.25,1471,3.432,1473,3.432,1482,4.973,1503,4.416,1505,5.249,1510,5.455,1515,5.491,1523,3.432,1529,4.379,1542,2.395,1587,3.082,1602,5.099,1603,3.082,1604,3.082,1605,3.527,1606,5.054,1607,5.054,1608,4.699,1609,3.432,1610,3.527,1611,5.054,1612,7.102,1613,7.102,1614,3.527,1615,6.449,1616,6.449,1617,5.054,1618,3.527,1619,3.682,1620,3.527,1621,5.054,1622,5.054,1623,3.527,1624,3.682,1625,5.054,1626,5.054,1627,5.054,1628,3.527,1629,3.527,1630,3.527,1631,3.527,1632,3.527,1633,3.682,1634,3.682,1635,2.25,1636,3.082,1637,5.054,1638,3.082,1639,3.082,1640,3.527,1641,5.905,1642,3.527,1643,3.527,1644,3.527,1645,5.054,1646,5.054,1647,3.682,1648,3.527,1649,5.054,1650,3.527,1651,3.527,1652,3.527,1653,3.527]],["title/interfaces/FirebaseDocument.html",[935,1.188,1654,2.776]],["body/interfaces/FirebaseDocument.html",[3,0.062,4,0.036,9,0.158,13,0.77,20,0.116,27,0.97,28,0.013,29,0.678,30,0.196,31,0.1,32,0.098,33,0.045,41,1.023,50,0.552,58,0.533,90,0.481,99,0.317,101,0.713,108,0.359,128,0.307,130,0.359,151,1.029,153,1.565,158,0.359,161,0.003,162,0.003,177,1.306,194,1.833,195,2.765,202,0.631,216,1.865,217,1.591,218,2.746,219,0.406,221,2.905,222,0.729,223,2.888,225,2.283,226,0.481,229,2.855,234,0.846,235,0.669,239,0.669,242,2.341,245,1.397,251,0.698,253,1.744,254,0.518,257,1.205,258,2.244,260,0.465,263,1.651,264,2.154,268,2.693,269,0.846,273,4.23,274,1.023,275,3.271,276,1.352,277,3.09,278,2.051,279,3.005,280,3.411,287,1.023,288,2.746,290,1.742,291,2.236,292,2.777,296,1.155,298,1.315,300,0.698,302,3.647,305,2.179,306,0.83,309,0.327,310,1.174,318,1.072,319,1.183,328,2.221,332,3.056,338,1.023,339,3.221,340,1.023,341,2.589,342,2.174,345,3.137,351,1.023,356,0.846,368,0.698,374,0.617,381,2.236,414,2.979,441,1.98,444,0.594,447,0.729,452,2.333,453,1.023,455,0.895,457,5.443,458,4.664,459,2.121,461,0.961,464,1.426,465,2.174,466,0.92,467,0.621,468,0.705,472,0.552,473,0.533,475,2.118,482,1.134,499,0.552,503,0.802,504,1.816,505,1.98,508,3.993,514,2.447,530,1.155,614,0.435,648,2.171,649,1.866,651,1.647,661,1.547,717,0.846,718,2.306,724,0.729,728,1.893,731,0.764,733,0.989,735,1.693,736,2.589,737,1.026,746,3.957,747,0.895,752,1.647,754,0.83,762,1.023,766,1.023,793,1.26,794,2.678,808,1.066,810,0.533,811,0.895,814,1.663,816,0.802,860,1.259,861,0.846,862,0.953,864,1.461,886,1.767,900,2.333,909,1.023,917,1.023,930,1.023,935,0.931,936,0.642,965,0.764,968,0.729,979,0.846,980,2.341,986,0.729,1007,1.109,1016,2.576,1044,2.139,1046,3.217,1049,3.217,1050,1.461,1113,0.953,1124,1.023,1133,2.594,1139,4.072,1151,2.174,1181,1.023,1189,2.333,1190,0.802,1193,0.953,1194,2.432,1206,0.953,1217,1.023,1219,1.023,1229,1.647,1242,0.953,1243,3.203,1273,1.023,1276,2.074,1290,0.642,1337,1.647,1387,0.895,1431,0.895,1479,1.023,1490,1.023,1491,1.023,1494,2.333,1496,1.023,1499,1.023,1500,1.767,1501,3.432,1505,4.908,1506,5.004,1507,2.333,1510,5.366,1511,1.023,1514,1.023,1515,5.224,1521,1.023,1522,1.023,1523,5.108,1529,0.953,1540,2.432,1552,2.778,1608,4.599,1619,2.333,1624,1.023,1633,2.778,1634,3.137,1647,1.023,1654,3.942,1655,1.023,1656,4.222,1657,1.11,1658,1.11,1659,1.918,1660,1.11,1661,1.11,1662,1.11,1663,1.11,1664,2.532,1665,1.11,1666,1.11,1667,2.532,1668,3.404,1669,1.11,1670,1.918,1671,1.918,1672,1.11,1673,1.11,1674,1.023,1675,1.11,1676,1.11,1677,1.11,1678,1.11,1679,1.918,1680,1.11,1681,3.725,1682,3.015,1683,1.11,1684,1.918,1685,1.11,1686,1.918,1687,1.918,1688,1.023,1689,1.647,1690,1.11,1691,1.11,1692,1.767,1693,1.11,1694,1.11,1695,1.11,1696,1.11,1697,1.11,1698,1.11,1699,1.11,1700,1.11,1701,1.11,1702,1.11,1703,1.11,1704,2.333,1705,3.404,1706,1.767,1707,1.11,1708,1.918,1709,2.174,1710,1.023,1711,1.023,1712,1.023,1713,1.023,1714,1.023,1715,1.023,1716,1.023,1717,3.432,1718,1.11,1719,1.11,1720,1.11,1721,4.873,1722,1.11,1723,1.918,1724,1.11,1725,4.74,1726,1.11,1727,1.11,1728,1.11,1729,2.532,1730,1.11,1731,1.11,1732,1.11,1733,1.11,1734,1.11,1735,4.59,1736,1.918,1737,1.11,1738,1.918,1739,1.11,1740,1.11,1741,1.918,1742,1.918,1743,6.248,1744,2.532,1745,3.725,1746,1.11,1747,2.532,1748,1.11,1749,1.11,1750,1.11,1751,4.419,1752,1.547,1753,3.199,1754,3.199,1755,1.11,1756,1.11,1757,1.918,1758,2.432,1759,1.918,1760,3.015,1761,3.725,1762,3.137,1763,2.532,1764,1.11,1765,1.11,1766,1.918,1767,0.953,1768,1.11,1769,5.947,1770,2.042,1771,1.11,1772,1.11,1773,1.918,1774,3.404,1775,1.11,1776,0.953,1777,3.725,1778,1.918,1779,1.11,1780,2.532,1781,1.11,1782,1.918,1783,1.11,1784,1.11,1785,4.991,1786,5.978,1787,5.914,1788,4.59,1789,1.11,1790,3.404,1791,1.11,1792,1.11,1793,4.59,1794,1.11,1795,1.11,1796,1.11,1797,1.11,1798,1.11,1799,1.918,1800,1.11,1801,1.918,1802,2.532,1803,1.918,1804,2.532,1805,0.953,1806,1.11,1807,2.532,1808,1.918,1809,1.11,1810,1.023,1811,1.11,1812,1.11,1813,2.532,1814,1.918,1815,1.11,1816,1.918,1817,1.11,1818,2.532,1819,3.015,1820,1.11,1821,1.11,1822,4.222,1823,2.589,1824,1.11,1825,1.918,1826,3.404,1827,1.11,1828,2.532,1829,1.918,1830,2.174,1831,1.11,1832,3.43,1833,2.923,1834,1.11,1835,3.68,1836,2.333,1837,2.532,1838,1.918,1839,2.532,1840,1.11,1841,1.918,1842,1.11,1843,1.11,1844,1.918,1845,1.11,1846,1.11,1847,1.11,1848,1.11,1849,1.11,1850,1.11,1851,1.11,1852,1.11,1853,1.11,1854,1.11,1855,2.532,1856,3.015,1857,1.11,1858,1.11,1859,1.11,1860,1.11,1861,1.11,1862,1.11,1863,1.11,1864,3.015,1865,1.11,1866,1.11,1867,1.11,1868,1.11,1869,1.11,1870,1.11,1871,1.11,1872,1.11,1873,3.015,1874,1.11,1875,1.11,1876,1.023,1877,1.11,1878,1.11,1879,1.11,1880,3.015,1881,1.918,1882,1.11,1883,3.725,1884,1.11,1885,1.11,1886,1.11,1887,3.015,1888,3.015,1889,1.11,1890,1.918,1891,1.918,1892,1.11,1893,2.532,1894,1.11,1895,1.11,1896,1.918,1897,1.11,1898,3.404,1899,1.11,1900,2.532,1901,1.11,1902,1.11,1903,1.918,1904,3.015,1905,1.647,1906,1.11,1907,1.11,1908,1.11,1909,2.532,1910,3.005,1911,1.918,1912,1.11,1913,1.918,1914,1.11,1915,1.11,1916,1.11,1917,1.11,1918,1.918,1919,1.11,1920,0.953,1921,3.015,1922,2.532,1923,1.11,1924,1.11,1925,1.11,1926,1.11,1927,1.11,1928,1.11,1929,1.11,1930,1.11,1931,1.11,1932,1.023,1933,1.11,1934,1.918,1935,1.11,1936,1.918,1937,1.11,1938,1.11,1939,1.11,1940,1.11,1941,1.11,1942,1.11,1943,1.918,1944,1.11,1945,1.11,1946,1.11,1947,1.11,1948,1.11,1949,3.725,1950,1.11,1951,1.11,1952,1.11,1953,3.725,1954,1.023,1955,1.11,1956,3.015,1957,1.11,1958,1.918,1959,1.11,1960,1.11,1961,1.11,1962,1.11]],["title/classes/FirebaseMediaService.html",[33,0.131,617,2.776]],["body/classes/FirebaseMediaService.html",[3,0.126,4,0.126,9,0.184,20,0.406,21,1.046,23,0.942,24,0.895,27,0.902,28,0.013,30,0.272,32,0.163,33,0.158,90,2.819,99,1.427,101,0.656,161,0.009,162,0.009,219,0.801,221,3.083,225,2.487,230,2.221,232,4.034,235,3.012,245,2.318,254,0.499,255,0.863,256,0.863,276,1.245,277,2.781,278,3.012,288,4.466,290,3.441,291,3.285,298,1.163,318,0.863,381,3.285,438,4.034,461,1.899,464,2.746,466,2.807,468,1.425,474,2.155,475,1.381,614,2.474,617,5.023,618,3.876,623,4.228,648,2.556,649,1.216,718,2.171,731,3.441,789,2.579,808,2.155,872,3.127,935,1.425,971,4.376,980,3.143,1016,1.797,1106,4.608,1194,4.034,1227,3.876,1243,4.016,1343,3.127,1471,4.295,1473,4.295,1478,4.295,1482,3.572,1542,3.329,1604,4.284,1609,4.295,1709,4.295,1752,4.034,1753,4.295,1754,5.023,1758,4.034,1770,5.088,1805,3.329,1832,5.324,1833,4.295,1920,4.295,1963,3.876,1964,4.902,1965,5.526,1966,5.526,1967,5.526,1968,5.001,1969,5.001,1970,4.902,1971,5.526,1972,5.526,1973,5.001,1974,5.526,1975,5.526,1976,5.526,1977,5.526,1978,6.118,1979,3.329,1980,3.329,1981,3.329,1982,3.329,1983,4.284,1984,4.284,1985,4.284,1986,4.284,1987,4.284,1988,4.284,1989,4.284,1990,4.284]],["title/interfaces/FirebaseStorageFile.html",[935,1.188,1689,2.776]],["body/interfaces/FirebaseStorageFile.html",[3,0.062,4,0.036,9,0.163,13,0.77,20,0.116,27,0.97,28,0.013,29,0.678,30,0.196,31,0.1,32,0.098,33,0.045,41,1.023,50,0.552,58,0.533,90,0.481,99,0.317,101,0.713,108,0.359,128,0.307,130,0.359,151,1.029,153,1.565,158,0.359,161,0.003,162,0.003,177,1.306,194,1.833,195,3.007,202,0.631,216,1.865,217,1.591,218,2.746,219,0.406,221,2.905,222,0.729,223,2.888,225,2.283,226,0.481,229,2.855,234,0.846,235,0.669,239,0.669,242,2.341,245,1.397,251,0.698,253,1.744,254,0.518,257,1.205,258,2.244,260,0.465,263,1.651,264,2.154,268,2.693,269,0.846,273,4.23,274,1.023,275,3.271,276,1.343,277,3.09,278,2.051,279,3.005,280,3.411,287,1.023,288,2.746,290,1.742,291,2.236,292,2.777,296,1.155,298,1.317,300,0.698,302,3.647,305,2.179,306,0.83,309,0.327,310,1.174,318,1.072,319,1.183,328,2.221,332,3.056,338,1.023,339,3.221,340,1.023,341,2.589,342,2.174,345,3.137,351,1.023,356,0.846,368,0.698,374,0.617,381,2.236,414,2.979,441,1.98,444,0.594,447,0.729,452,2.333,453,1.023,455,0.895,457,5.443,458,4.664,459,2.121,461,0.961,464,1.426,465,2.174,466,0.92,467,0.621,468,0.705,472,0.552,473,0.533,475,2.118,482,1.134,499,0.552,503,0.802,504,1.816,505,1.98,508,3.993,514,2.447,530,1.155,614,0.435,648,2.171,649,1.866,651,1.647,661,1.547,717,0.846,718,2.306,724,0.729,728,1.893,731,0.764,733,0.989,735,1.693,736,2.589,737,1.026,746,3.957,747,0.895,752,1.647,754,0.83,762,1.023,766,1.023,793,1.26,794,2.678,808,1.066,810,0.533,811,0.895,814,1.663,816,0.802,860,1.259,861,0.846,862,0.953,864,1.461,886,1.767,900,2.333,909,1.023,917,1.023,930,1.023,935,0.931,936,0.642,965,0.764,968,0.729,979,0.846,980,2.341,986,0.729,1007,1.109,1016,2.484,1044,2.139,1046,3.217,1049,3.217,1050,1.461,1113,0.953,1124,1.023,1133,2.594,1139,4.072,1151,2.174,1181,1.023,1189,2.333,1190,0.802,1193,0.953,1194,2.432,1206,0.953,1217,1.023,1219,1.023,1229,1.647,1242,0.953,1243,3.203,1273,1.023,1276,2.074,1290,0.642,1337,1.647,1387,0.895,1431,0.895,1479,1.023,1490,1.023,1491,1.023,1494,2.333,1496,1.023,1499,1.023,1500,1.767,1501,3.432,1505,4.908,1506,5.004,1507,2.333,1510,5.366,1511,1.023,1514,1.023,1515,5.224,1521,1.023,1522,1.023,1523,5.108,1529,0.953,1540,2.432,1552,2.778,1608,4.599,1619,2.333,1624,1.023,1633,2.778,1634,3.137,1647,1.023,1654,3.795,1655,1.023,1656,3.725,1657,1.11,1658,1.11,1659,1.918,1660,1.11,1661,1.11,1662,1.11,1663,1.11,1664,2.532,1665,1.11,1666,1.11,1667,2.532,1668,3.404,1669,1.11,1670,1.918,1671,1.918,1672,1.11,1673,1.11,1674,1.023,1675,1.11,1676,1.11,1677,1.11,1678,1.11,1679,1.918,1680,1.11,1681,3.725,1682,3.015,1683,1.11,1684,1.918,1685,1.11,1686,1.918,1687,1.918,1688,1.023,1689,2.174,1690,1.11,1691,1.11,1692,1.767,1693,1.11,1694,1.11,1695,1.11,1696,1.11,1697,1.11,1698,1.11,1699,1.11,1700,1.11,1701,1.11,1702,1.11,1703,1.11,1704,2.333,1705,3.404,1706,1.767,1707,1.11,1708,1.918,1709,2.174,1710,1.023,1711,1.023,1712,1.023,1713,1.023,1714,1.023,1715,1.023,1716,1.023,1717,3.432,1718,1.11,1719,1.11,1720,1.11,1721,4.873,1722,1.11,1723,1.918,1724,1.11,1725,4.74,1726,1.11,1727,1.11,1728,1.11,1729,2.532,1730,1.11,1731,1.11,1732,1.11,1733,1.11,1734,1.11,1735,4.59,1736,1.918,1737,1.11,1738,1.918,1739,1.11,1740,1.11,1741,1.918,1742,1.918,1743,6.248,1744,2.532,1745,3.725,1746,1.11,1747,2.532,1748,1.11,1749,1.11,1750,1.11,1751,4.419,1752,1.547,1753,3.199,1754,3.199,1755,1.11,1756,1.11,1757,1.918,1758,2.432,1759,1.918,1760,3.015,1761,3.725,1762,3.137,1763,2.532,1764,1.11,1765,1.11,1766,1.918,1767,0.953,1768,1.11,1769,5.947,1770,2.042,1771,1.11,1772,1.11,1773,1.918,1774,3.404,1775,1.11,1776,0.953,1777,3.725,1778,1.918,1779,1.11,1780,2.532,1781,1.11,1782,1.918,1783,1.11,1784,1.11,1785,4.991,1786,5.978,1787,5.914,1788,4.59,1789,1.11,1790,3.404,1791,1.11,1792,1.11,1793,4.59,1794,1.11,1795,1.11,1796,1.11,1797,1.11,1798,1.11,1799,1.918,1800,1.11,1801,1.918,1802,2.532,1803,1.918,1804,2.532,1805,0.953,1806,1.11,1807,2.532,1808,1.918,1809,1.11,1810,1.023,1811,1.11,1812,1.11,1813,2.532,1814,1.918,1815,1.11,1816,1.918,1817,1.11,1818,2.532,1819,3.015,1820,1.11,1821,1.11,1822,4.222,1823,2.589,1824,1.11,1825,1.918,1826,3.404,1827,1.11,1828,2.532,1829,1.918,1830,2.174,1831,1.11,1832,3.43,1833,2.923,1834,1.11,1835,3.68,1836,2.333,1837,2.532,1838,1.918,1839,2.532,1840,1.11,1841,1.918,1842,1.11,1843,1.11,1844,1.918,1845,1.11,1846,1.11,1847,1.11,1848,1.11,1849,1.11,1850,1.11,1851,1.11,1852,1.11,1853,1.11,1854,1.11,1855,2.532,1856,3.015,1857,1.11,1858,1.11,1859,1.11,1860,1.11,1861,1.11,1862,1.11,1863,1.11,1864,3.015,1865,1.11,1866,1.11,1867,1.11,1868,1.11,1869,1.11,1870,1.11,1871,1.11,1872,1.11,1873,3.015,1874,1.11,1875,1.11,1876,1.023,1877,1.11,1878,1.11,1879,1.11,1880,3.015,1881,1.918,1882,1.11,1883,3.725,1884,1.11,1885,1.11,1886,1.11,1887,3.015,1888,3.015,1889,1.11,1890,1.918,1891,1.918,1892,1.11,1893,2.532,1894,1.11,1895,1.11,1896,1.918,1897,1.11,1898,3.404,1899,1.11,1900,2.532,1901,1.11,1902,1.11,1903,1.918,1904,3.015,1905,1.647,1906,1.11,1907,1.11,1908,1.11,1909,2.532,1910,3.005,1911,1.918,1912,1.11,1913,1.918,1914,1.11,1915,1.11,1916,1.11,1917,1.11,1918,1.918,1919,1.11,1920,0.953,1921,3.015,1922,2.532,1923,1.11,1924,1.11,1925,1.11,1926,1.11,1927,1.11,1928,1.11,1929,1.11,1930,1.11,1931,1.11,1932,1.023,1933,1.11,1934,1.918,1935,1.11,1936,1.918,1937,1.11,1938,1.11,1939,1.11,1940,1.11,1941,1.11,1942,1.11,1943,1.918,1944,1.11,1945,1.11,1946,1.11,1947,1.11,1948,1.11,1949,3.725,1950,1.11,1951,1.11,1952,1.11,1953,3.725,1954,1.023,1955,1.11,1956,3.015,1957,1.11,1958,1.918,1959,1.11,1960,1.11,1961,1.11,1962,1.11]],["title/interfaces/FirebaseUserCredential.html",[935,1.188,1540,2.607]],["body/interfaces/FirebaseUserCredential.html",[3,0.062,4,0.036,9,0.158,13,0.771,20,0.116,27,0.971,28,0.013,29,0.679,30,0.196,31,0.1,32,0.098,33,0.045,41,1.025,50,0.553,58,0.534,90,0.482,99,0.317,101,0.713,108,0.36,128,0.307,130,0.36,151,1.031,153,1.585,158,0.36,161,0.003,162,0.003,177,1.308,194,1.833,195,2.767,202,0.632,216,1.865,217,1.593,218,2.749,219,0.406,221,2.906,222,0.73,223,2.889,225,2.284,226,0.482,229,2.857,234,0.847,235,0.67,239,0.67,242,2.343,245,1.399,251,0.699,253,1.746,254,0.508,257,1.207,258,2.246,260,0.466,263,1.651,264,2.157,268,2.695,269,0.847,273,4.233,274,1.025,275,3.273,276,1.344,277,3.092,278,2.053,279,3.008,280,3.413,287,1.025,288,2.749,290,1.745,291,2.239,292,2.779,296,1.157,298,1.313,300,0.699,302,3.648,305,2.182,306,0.832,309,0.327,310,1.175,318,1.072,319,1.184,328,2.223,332,3.058,338,1.025,339,3.225,340,1.025,341,2.592,342,2.178,345,3.14,351,1.025,356,0.847,368,0.699,374,0.618,381,2.239,414,2.981,441,1.983,444,0.595,447,0.73,452,2.337,453,1.025,455,0.897,457,5.444,458,4.666,459,2.123,461,0.963,464,1.427,465,2.178,466,0.922,467,0.622,468,0.706,472,0.553,473,0.534,475,2.119,482,1.136,499,0.553,503,0.804,504,1.818,505,1.983,508,3.995,514,2.449,530,1.157,614,0.436,648,2.173,649,1.866,651,1.65,661,1.549,717,0.847,718,2.307,724,0.73,728,1.895,731,0.765,733,0.991,735,1.695,736,2.592,737,1.028,746,3.959,747,0.897,752,1.65,754,0.832,762,1.025,766,1.025,793,1.262,794,2.679,808,1.068,810,0.534,811,0.897,814,1.665,816,0.804,860,1.261,861,0.847,862,0.955,864,1.464,886,1.77,900,2.337,909,1.025,917,1.025,930,1.025,935,0.932,936,0.643,965,0.765,968,0.73,979,0.847,980,2.343,986,0.73,1007,1.111,1016,2.485,1044,2.142,1046,3.22,1049,3.22,1050,1.464,1113,0.955,1124,1.025,1133,2.597,1139,4.075,1151,2.178,1181,1.025,1189,2.337,1190,0.804,1193,0.955,1194,2.435,1206,0.955,1217,1.025,1219,1.025,1229,1.65,1242,0.955,1243,3.205,1273,1.025,1276,2.077,1290,0.643,1337,1.65,1387,0.897,1431,0.897,1479,1.025,1490,1.025,1491,1.025,1494,2.337,1496,1.025,1499,1.025,1500,1.77,1501,3.436,1505,4.91,1506,5.007,1507,2.337,1510,5.367,1511,1.025,1514,1.025,1515,5.225,1521,1.025,1522,1.025,1523,5.109,1529,0.955,1540,2.749,1552,2.782,1608,4.602,1619,2.337,1624,1.025,1633,2.782,1634,3.14,1647,1.025,1654,3.798,1655,1.025,1656,3.729,1657,1.112,1658,1.112,1659,1.921,1660,1.112,1661,1.112,1662,1.112,1663,1.112,1664,2.536,1665,1.112,1666,1.112,1667,2.536,1668,3.408,1669,1.112,1670,1.921,1671,1.921,1672,1.112,1673,1.112,1674,1.025,1675,1.112,1676,1.112,1677,1.112,1678,1.112,1679,1.921,1680,1.112,1681,3.729,1682,3.019,1683,1.112,1684,1.921,1685,1.112,1686,1.921,1687,3.019,1688,1.025,1689,1.65,1690,1.112,1691,1.112,1692,1.77,1693,1.112,1694,1.112,1695,1.112,1696,1.112,1697,1.112,1698,1.112,1699,1.112,1700,1.112,1701,1.112,1702,1.112,1703,1.112,1704,2.337,1705,3.408,1706,1.77,1707,1.112,1708,1.921,1709,2.178,1710,1.025,1711,1.025,1712,1.025,1713,1.025,1714,1.025,1715,1.025,1716,1.025,1717,3.436,1718,1.112,1719,1.112,1720,1.112,1721,4.876,1722,1.112,1723,1.921,1724,1.112,1725,4.743,1726,1.112,1727,1.112,1728,1.112,1729,2.536,1730,1.112,1731,1.112,1732,1.112,1733,1.112,1734,1.112,1735,4.593,1736,1.921,1737,1.112,1738,1.921,1739,1.112,1740,1.112,1741,1.921,1742,1.921,1743,6.25,1744,2.536,1745,3.729,1746,1.112,1747,2.536,1748,1.112,1749,1.112,1750,1.112,1751,4.423,1752,1.549,1753,3.202,1754,3.202,1755,1.112,1756,1.112,1757,1.921,1758,2.435,1759,1.921,1760,3.019,1761,3.729,1762,3.14,1763,2.536,1764,1.112,1765,1.112,1766,1.921,1767,0.955,1768,1.112,1769,5.949,1770,2.045,1771,1.112,1772,1.112,1773,1.921,1774,3.408,1775,1.112,1776,0.955,1777,3.729,1778,1.921,1779,1.112,1780,2.536,1781,1.112,1782,1.921,1783,1.112,1784,1.112,1785,4.994,1786,5.98,1787,5.916,1788,4.593,1789,1.112,1790,3.408,1791,1.112,1792,1.112,1793,4.593,1794,1.112,1795,1.112,1796,1.112,1797,1.112,1798,1.112,1799,1.921,1800,1.112,1801,1.921,1802,2.536,1803,1.921,1804,2.536,1805,0.955,1806,1.112,1807,2.536,1808,1.921,1809,1.112,1810,1.025,1811,1.112,1812,1.112,1813,2.536,1814,1.921,1815,1.112,1816,1.921,1817,1.112,1818,2.536,1819,3.019,1820,1.112,1821,1.112,1822,4.226,1823,2.592,1824,1.112,1825,1.921,1826,3.408,1827,1.112,1828,2.536,1829,1.921,1830,2.178,1831,1.112,1832,3.433,1833,2.927,1834,1.112,1835,3.684,1836,2.337,1837,2.536,1838,1.921,1839,2.536,1840,1.112,1841,1.921,1842,1.112,1843,1.112,1844,1.921,1845,1.112,1846,1.112,1847,1.112,1848,1.112,1849,1.112,1850,1.112,1851,1.112,1852,1.112,1853,1.112,1854,1.112,1855,2.536,1856,3.019,1857,1.112,1858,1.112,1859,1.112,1860,1.112,1861,1.112,1862,1.112,1863,1.112,1864,3.019,1865,1.112,1866,1.112,1867,1.112,1868,1.112,1869,1.112,1870,1.112,1871,1.112,1872,1.112,1873,3.019,1874,1.112,1875,1.112,1876,1.025,1877,1.112,1878,1.112,1879,1.112,1880,3.019,1881,1.921,1882,1.112,1883,3.729,1884,1.112,1885,1.112,1886,1.112,1887,3.019,1888,3.019,1889,1.112,1890,1.921,1891,1.921,1892,1.112,1893,2.536,1894,1.112,1895,1.112,1896,1.921,1897,1.112,1898,3.408,1899,1.112,1900,2.536,1901,1.112,1902,1.112,1903,1.921,1904,3.019,1905,1.65,1906,1.112,1907,1.112,1908,1.112,1909,2.536,1910,3.008,1911,1.921,1912,1.112,1913,1.921,1914,1.112,1915,1.112,1916,1.112,1917,1.112,1918,1.921,1919,1.112,1920,0.955,1921,3.019,1922,2.536,1923,1.112,1924,1.112,1925,1.112,1926,1.112,1927,1.112,1928,1.112,1929,1.112,1930,1.112,1931,1.112,1932,1.025,1933,1.112,1934,1.921,1935,1.112,1936,1.921,1937,1.112,1938,1.112,1939,1.112,1940,1.112,1941,1.112,1942,1.112,1943,1.921,1944,1.112,1945,1.112,1946,1.112,1947,1.112,1948,1.112,1949,3.729,1950,1.112,1951,1.112,1952,1.112,1953,3.729,1954,1.025,1955,1.112,1956,3.019,1957,1.112,1958,1.921,1959,1.112,1960,1.112,1961,1.112,1962,1.112]],["title/components/HomePage.html",[0,0.26,125,0.952]],["body/components/HomePage.html",[0,0.478,1,0.756,2,1.614,3,0.168,4,0.081,5,0.886,6,0.886,7,0.886,8,0.886,9,0.071,13,0.756,14,2.359,15,2.223,16,1.309,18,1.309,20,0.26,21,0.658,22,1.72,23,1.174,24,1.025,27,0.795,28,0.013,29,1.293,30,0.296,31,0.223,32,0.081,33,0.101,45,2.658,46,3.07,47,1.438,48,2.126,49,2.634,50,2.175,52,2.415,57,1.283,58,2.319,63,2.748,64,2.634,66,1.634,68,1.283,71,1.704,73,1.283,76,2.292,78,2.657,87,2.491,88,2.044,90,1.592,91,1.967,92,2.748,95,0.645,96,1.309,97,1.309,98,0.886,99,1.378,100,0.886,101,0.676,102,0.886,103,0.756,104,0.886,105,0.78,106,0.886,107,0.78,108,0.805,109,1.309,110,0.756,111,1.229,112,1.557,113,0.756,114,1.19,115,1.557,116,0.78,117,0.858,118,0.886,119,0.756,120,1.557,121,1.153,122,0.886,123,1.372,124,2.082,125,1.423,126,0.886,127,0.756,128,1.491,129,0.78,130,1.955,131,1.229,132,1.309,133,0.78,134,0.78,135,1.229,136,1.309,137,0.78,138,1.309,139,0.78,140,0.805,141,1.309,142,1.153,143,1.778,144,0.756,145,0.78,146,0.78,147,0.805,148,0.756,149,0.886,150,0.78,151,0.687,152,0.78,153,1.399,154,0.756,155,0.756,156,0.756,157,0.78,158,0.805,159,0.886,160,0.886,161,0.009,162,0.007,176,1.438,186,1.008,193,1.077,194,1.693,202,0.682,209,2.888,210,1.153,214,4.014,216,1.049,219,0.7,225,1.828,226,2.232,230,2.344,235,2.214,237,3.036,243,1.828,250,2.529,252,2.965,254,0.514,255,0.754,256,0.754,258,2.214,259,4.062,260,1.54,263,0.756,276,0.931,298,1.025,309,0.732,313,2.006,318,0.963,319,1.293,328,2.432,332,2.432,366,2.487,368,2.748,369,1.331,370,2.214,373,2.31,378,1.283,386,2.292,387,1.283,444,1.967,450,2.801,461,1.396,464,1.831,468,0.914,469,1.563,475,1.836,499,1.828,506,3.157,508,2.53,528,3.157,530,3.25,573,2.136,574,2.136,575,2.748,581,2.748,583,1.331,614,2.443,648,1.772,718,1.715,789,1.896,843,2.136,846,2.965,857,2.634,912,2.487,916,3.388,969,2.801,990,2.657,992,2.31,993,2.415,1007,2.126,1016,2.501,1041,1.563,1071,3.157,1166,4.452,1167,3.9,1171,3.388,1173,3.676,1215,2.136,1216,2.292,1262,2.136,1263,2.292,1266,2.292,1267,2.292,1268,4.03,1284,1.498,1298,2.292,1377,4.623,1389,4.831,1394,2.487,1421,1.798,1422,2.487,1423,2.487,1424,3.676,1425,2.487,1430,2.292,1431,2.965,1432,2.487,1433,2.748,1435,2.292,1450,3.388,1692,4.03,1991,2.748,1992,5.53,1993,4.649,1994,5.53,1995,3.681,1996,4.649,1997,6.109,1998,6.109,1999,3.145,2000,4.649,2001,4.649,2002,3.145,2003,3.145,2004,4.649,2005,4.649,2006,4.649,2007,3.145,2008,5.53,2009,3.145,2010,3.145,2011,4.649,2012,4.649,2013,5.53,2014,3.145,2015,2.136,2016,3.145,2017,2.748,2018,2.748,2019,3.145,2020,3.145,2021,5.53,2022,3.145,2023,3.145,2024,3.145,2025,4.649,2026,3.145,2027,3.145,2028,2.748,2029,3.145,2030,7.06,2031,3.145,2032,6.824,2033,3.145,2034,6.519,2035,3.145,2036,6.519,2037,3.145,2038,5.339,2039,5.339,2040,4.649,2041,4.649,2042,3.388,2043,4.833,2044,3.145,2045,3.145]],["title/modules/HomePageModule.html",[163,1.151,2046,2.978]],["body/modules/HomePageModule.html",[3,0.131,4,0.131,9,0.115,28,0.013,30,0.332,31,0.361,32,0.131,33,0.163,95,1.042,110,1.902,111,1.71,113,1.902,114,1.919,121,1.963,123,1.963,124,1.343,125,1.843,134,1.963,135,1.71,137,1.963,153,1.326,155,1.902,156,1.902,161,0.009,162,0.009,163,1.431,165,1.799,166,2.42,167,3.698,168,2.639,169,1.862,170,1.928,175,3.361,176,2.324,177,2.072,179,2.544,180,2.544,181,3.699,182,2.639,183,3.899,184,1.683,185,3.521,186,1.628,187,2.904,210,1.26,397,4.306,399,4.715,404,3.361,405,2.764,406,2.904,407,3.699,408,2.639,409,2.639,410,3.361,411,3.241,421,3.702,424,3.061,425,2.639,426,2.234,427,2.904,428,2.904,528,3.45,940,3.702,1068,3.702,1216,3.702,1435,3.702,2017,4.44,2018,6.222,2046,6.308,2047,4.44,2048,4.44,2049,4.44,2050,5.374,2051,5.081,2052,4.44,2053,5.654,2054,6.471,2055,5.081,2056,3.702,2057,4.017,2058,4.017,2059,3.702,2060,3.702]],["title/modules/HomePageRoutingModule.html",[163,1.151,2050,2.776]],["body/modules/HomePageRoutingModule.html",[0,0.408,3,0.165,4,0.165,9,0.145,28,0.013,30,0.306,31,0.456,32,0.165,33,0.206,125,1.737,161,0.011,162,0.011,165,2.273,170,2.436,179,2.524,180,2.934,190,3.668,191,3.468,192,4.264,193,2.197,194,1.592,195,3.057,196,3.867,2050,5.067,2052,5.608,2061,6.418]],["title/injectables/HttpClientProvider.html",[467,1.046,629,2.776]],["body/injectables/HttpClientProvider.html",[3,0.097,4,0.097,9,0.085,20,0.311,21,0.748,24,1.054,27,0.982,28,0.013,29,1.119,30,0.205,31,0.267,32,0.097,33,0.121,50,2.852,101,0.773,161,0.008,162,0.008,219,1.012,254,0.653,255,1.016,256,1.016,298,1.302,309,1.424,318,1.141,346,4.748,441,4.447,459,2.934,464,2.797,467,1.353,468,1.537,472,1.478,473,1.426,629,3.59,714,1.719,718,2.593,719,6.11,810,2.006,814,3.631,1232,6.736,1265,5.428,1318,5.095,1321,4.748,1334,5.825,1910,5.099,2062,6.014,2063,3.284,2064,5.798,2065,6.11,2066,5.343,2067,3.284,2068,3.758,2069,6.859,2070,7.52,2071,4.619,2072,3.758,2073,4.619,2074,3.758,2075,3.284,2076,7.233,2077,6.986,2078,3.758,2079,6.115,2080,5.734,2081,3.284,2082,3.758,2083,3.284,2084,3.758,2085,3.284,2086,4.835,2087,5.343,2088,5.343,2089,3.758,2090,5.798,2091,4.835,2092,3.852]],["title/injectables/HttpClientWebProvider.html",[467,1.046,619,2.978]],["body/injectables/HttpClientWebProvider.html",[3,0.077,4,0.077,9,0.067,20,0.248,21,0.633,23,1.031,24,1.052,27,0.973,28,0.013,29,0.948,30,0.231,31,0.212,32,0.077,33,0.096,50,2.924,99,0.675,101,0.772,161,0.006,162,0.006,169,1.096,219,0.997,243,2.344,254,0.651,255,1.015,256,1.015,263,1.61,298,1.262,309,1.7,318,1.129,319,1.418,346,4.334,374,1.315,404,3.607,405,1.627,441,4.403,459,2.987,464,2.734,467,1.146,468,1.302,472,1.176,473,1.135,474,1.315,475,2.056,482,2.529,619,3.263,621,5.297,629,5.05,630,2.613,649,1.478,714,1.368,718,2.525,810,1.699,814,3.315,1232,6.753,1243,1.486,1265,5.06,1276,3.243,1318,4.65,1321,4.334,1334,5.776,1358,2.365,1473,3.041,1482,5.06,1542,2.031,1910,4.877,2062,4.713,2064,5.208,2065,5.577,2066,4.69,2067,2.613,2069,6.85,2070,7.482,2071,2.613,2073,3.913,2075,2.613,2076,7.302,2077,7.287,2080,5.88,2081,2.613,2083,2.613,2085,2.613,2086,4.244,2087,4.69,2088,4.69,2090,5.208,2091,4.343,2092,3.263,2093,2.613,2094,4.478,2095,5.368,2096,2.991,2097,2.991,2098,4.478,2099,4.478,2100,2.991,2101,6.699,2102,2.991,2103,2.991,2104,5.368,2105,2.991,2106,2.991,2107,2.991,2108,2.991,2109,2.991,2110,2.991,2111,2.991,2112,2.991,2113,4.478,2114,2.991,2115,5.368,2116,6.382,2117,2.991,2118,5.368,2119,2.991,2120,2.991,2121,4.478,2122,2.991,2123,4.478,2124,2.991,2125,2.991,2126,2.991,2127,2.613]],["title/components/IncidentDataPage.html",[0,0.26,127,0.982]],["body/components/IncidentDataPage.html",[0,0.479,1,0.715,2,1.179,3,0.164,4,0.077,5,0.838,6,0.838,7,0.838,8,0.838,9,0.067,11,1.142,12,1.507,13,0.715,14,2.347,15,2.203,16,1.257,18,1.257,20,0.247,21,0.631,22,1.674,23,1.143,24,1.009,27,0.725,28,0.013,29,1.133,30,0.283,31,0.212,32,0.077,33,0.096,45,2.183,46,2.597,47,1.361,48,1.361,49,2.126,50,1.755,57,2.727,58,2.031,62,4.698,63,1.479,64,2.55,66,2.318,68,2.425,69,2.126,71,2.334,72,1.309,73,1.82,83,1.479,87,3.115,88,2.354,90,1.019,91,1.26,94,1.546,95,0.61,96,1.257,97,1.257,98,0.838,99,1.341,100,0.838,101,0.74,102,0.838,103,0.715,104,0.838,105,0.738,106,0.838,107,0.738,108,0.762,109,1.257,110,0.715,111,1.179,112,1.507,113,0.715,114,1.142,115,1.507,116,1.107,117,0.812,118,0.838,119,0.715,120,1.507,121,0.738,122,0.838,123,0.738,124,0.787,125,0.693,126,0.838,127,1.429,128,1.778,129,0.738,130,1.522,131,1.179,132,1.257,133,0.738,134,0.738,135,1.179,136,1.257,137,0.738,138,1.257,139,0.738,140,0.762,141,1.257,142,0.738,143,0.812,144,0.715,145,0.738,146,0.738,147,0.762,148,0.715,149,0.838,150,0.738,151,0.651,152,0.738,153,1.462,154,0.715,155,0.715,156,0.715,157,0.738,158,0.762,159,0.838,160,0.838,161,0.006,162,0.006,169,1.635,193,1.019,194,0.738,198,6.041,199,2.428,202,0.654,206,5.288,207,5.288,210,1.659,211,3.323,212,4.063,213,5.288,216,1.676,219,0.753,220,4.702,221,2.727,222,4.084,223,2.179,226,1.528,227,3.235,228,2.846,229,2.832,230,2.394,231,2.551,233,3.252,234,2.689,237,2.217,239,2.126,240,3.838,241,3.529,242,2.217,243,1.755,244,3.899,245,1.635,246,3.899,247,3.899,248,3.899,254,0.547,255,0.811,256,0.811,263,0.715,276,0.901,286,1.546,297,3.529,298,1.226,300,2.217,301,4.873,302,2.955,303,3.529,305,3.822,306,1.528,307,4.233,308,4.233,309,0.693,310,1.635,311,2.354,314,1.794,315,2.169,316,2.169,317,2.022,318,0.973,319,1.259,327,3.235,328,2.801,332,1.962,333,3.252,334,3.252,335,2.354,344,2.169,353,3.529,354,3.252,355,3.529,356,2.689,357,3.529,358,3.529,359,4.038,360,2.354,361,2.354,364,1.546,368,1.479,369,1.26,370,2.126,373,1.479,378,2.183,381,2.318,384,1.361,387,1.82,388,1.82,389,1.309,391,1.546,482,1.054,499,1.755,549,2.354,582,1.418,583,1.889,588,2.022,641,2.022,684,4.953,718,1.66,731,2.428,754,1.528,789,1.82,794,1.82,810,1.694,841,2.689,848,1.899,916,3.252,947,1.26,1095,2.169,1096,2.022,1098,5.767,1101,2.354,1157,4.233,1158,3.529,1165,6.232,1170,4.677,1214,2.354,1246,2.022,1257,2.601,1258,2.601,1274,2.601,1284,1.418,1285,1.702,1286,1.702,1287,1.702,1288,1.546,1289,1.546,1290,1.361,1293,3.03,1400,4.326,1421,2.551,1581,1.546,1995,4.029,2015,2.022,2038,3.899,2039,2.601,2042,3.252,2128,5.314,2129,2.354,2130,4.677,2131,4.462,2132,2.601,2133,5.412,2134,3.899,2135,2.977,2136,4.462,2137,2.977,2138,4.462,2139,2.977,2140,2.977,2141,2.977,2142,2.601,2143,2.977,2144,2.601,2145,4.462,2146,2.601,2147,2.977,2148,3.899,2149,2.977,2150,2.977,2151,2.977,2152,2.977,2153,2.977,2154,4.462,2155,4.462,2156,4.462,2157,4.462,2158,2.354,2159,3.529,2160,3.252,2161,2.169,2162,2.354]],["title/modules/IncidentDataPageModule.html",[163,1.151,2163,2.978]],["body/modules/IncidentDataPageModule.html",[3,0.15,4,0.15,9,0.132,28,0.013,30,0.328,31,0.415,32,0.15,33,0.188,95,1.198,127,1.969,128,1.542,161,0.01,162,0.01,163,1.646,165,2.07,166,2.784,167,3.939,168,3.036,169,2.142,170,2.218,175,3.666,176,2.673,177,2.383,179,2.776,180,2.776,181,4.034,182,3.036,183,4.253,184,1.936,185,3.84,186,1.873,187,3.341,210,1.45,276,0.984,404,3.666,405,3.18,406,3.341,407,4.034,408,3.036,409,3.036,410,3.666,411,3.728,422,4.793,423,3.969,424,3.521,425,3.036,426,2.57,427,3.341,428,3.341,684,3.969,1308,3.728,2128,4.259,2163,6.092,2164,5.107,2165,5.107,2166,5.107,2167,5.563,2168,5.107]],["title/modules/IncidentDataPageRoutingModule.html",[163,1.151,2167,2.776]],["body/modules/IncidentDataPageRoutingModule.html",[0,0.406,3,0.164,4,0.164,9,0.144,28,0.013,30,0.306,31,0.454,32,0.164,33,0.206,127,1.789,128,1.397,161,0.011,162,0.011,165,2.265,170,2.427,179,2.514,180,2.927,190,3.655,191,3.463,192,4.255,193,2.189,194,1.586,195,3.046,196,3.853,276,1.076,684,4.342,1308,4.079,2128,4.659,2167,5.056]],["title/components/IncidentsCircleGraphicComponent.html",[0,0.26,129,1.014]],["body/components/IncidentsCircleGraphicComponent.html",[0,0.505,1,1.031,2,1.531,3,0.149,4,0.11,5,1.209,6,1.209,7,1.209,8,1.209,9,0.097,11,1.483,12,1.846,13,1.031,14,2.419,15,2.27,16,1.631,18,1.631,20,0.355,21,0.819,22,1.977,23,1.349,24,0.993,27,0.523,28,0.013,29,0.908,30,0.272,31,0.305,32,0.11,33,0.138,58,1.629,65,2.586,71,1.573,95,1.187,96,1.631,97,1.631,98,1.209,99,1.584,100,1.209,101,0.68,102,1.209,103,1.031,104,1.209,105,1.065,106,1.209,107,1.065,108,1.099,109,1.631,110,1.031,111,1.531,112,1.846,113,1.031,114,1.483,115,1.846,116,1.065,117,1.171,118,1.209,119,1.031,120,1.846,121,1.065,122,1.209,123,1.065,124,1.134,125,0.999,126,1.209,127,1.031,128,1.266,129,1.741,130,2.037,131,2.228,132,1.631,133,1.065,134,1.065,135,1.531,136,1.631,137,1.065,138,1.631,139,1.065,140,1.099,141,1.631,142,1.065,143,1.171,144,1.031,145,1.065,146,1.065,147,1.099,148,1.031,149,1.209,150,1.065,151,0.938,152,1.065,153,1.548,154,1.031,155,1.031,156,1.031,157,1.065,158,1.099,159,1.209,160,1.209,161,0.008,162,0.008,194,1.437,202,0.849,210,1.741,211,3.754,216,1.307,219,0.544,226,2.404,227,3.152,228,3.695,229,2.759,230,2.268,231,3.311,250,2.649,254,0.517,255,0.586,256,0.586,276,1.272,314,2.586,318,0.79,319,1.226,468,1.248,469,2.133,475,1.631,499,2.278,614,2.343,648,2.249,748,2.133,789,2.362,857,2.759,875,2.915,916,3.127,1041,2.133,1163,3.127,1169,4.778,1190,3.311,1292,4.58,1396,2.915,2028,3.75,2092,4.778,2169,5.797,2170,5.797,2171,3.394,2172,5.73,2173,5.062,2174,5.062,2175,4.292,2176,5.062,2177,5.062,2178,4.292,2179,3.75,2180,4.292,2181,4.292,2182,4.292,2183,5.793,2184,3.75,2185,5.062,2186,4.292,2187,3.75,2188,4.292,2189,3.75,2190,5.793,2191,5.793,2192,5.793,2193,3.75,2194,4.292,2195,3.75,2196,3.75,2197,3.75,2198,3.75,2199,3.75]],["title/components/IncidentsInfoComponent.html",[0,0.26,133,1.014]],["body/components/IncidentsInfoComponent.html",[0,0.475,1,0.789,2,1.268,3,0.184,4,0.084,5,0.925,6,0.925,7,0.925,8,0.925,9,0.074,11,1.228,12,1.597,13,0.789,14,2.368,15,2.223,16,1.351,18,1.351,20,0.272,21,0.679,22,1.756,23,1.09,24,1.103,27,0.76,28,0.013,29,1.32,30,0.22,31,0.233,32,0.084,33,0.106,45,1.956,46,2.312,47,1.501,48,1.501,49,1.564,50,1.291,51,2.392,52,1.705,55,2.094,57,2.543,58,1.246,61,3.258,63,1.631,64,1.564,68,2.312,69,3.409,71,2.286,73,2.312,76,2.392,83,1.631,84,1.705,85,1.978,87,2.992,88,1.444,90,1.124,91,1.389,94,1.705,95,0.673,96,1.351,97,1.351,98,0.925,99,1.407,100,0.925,101,0.743,102,0.925,103,0.789,104,0.925,105,0.814,106,0.925,107,0.814,108,0.841,109,1.351,110,0.789,111,1.268,112,1.597,113,0.789,114,1.228,115,1.597,116,0.814,117,0.896,118,0.925,119,0.789,120,1.597,121,0.814,122,0.925,123,0.814,124,0.868,125,0.765,126,0.925,127,0.789,128,1.514,129,0.814,130,1.916,131,1.268,132,1.351,133,1.547,134,0.814,135,1.268,136,1.351,137,0.814,138,1.351,139,0.814,140,0.841,141,1.351,142,0.814,143,0.896,144,0.789,145,0.814,146,0.814,147,0.841,148,0.789,149,0.925,150,0.814,151,0.717,152,0.814,153,1.467,154,0.789,155,0.789,156,0.789,157,0.814,158,0.841,159,0.925,160,0.925,161,0.007,162,0.007,194,1.406,202,0.703,210,1.886,216,1.082,219,0.84,230,1.441,237,2.384,250,2.194,254,0.599,255,0.905,256,0.905,263,0.789,271,3.794,298,1.125,306,1.643,309,0.765,318,0.851,319,1.2,364,2.492,368,1.631,369,2.03,370,1.564,378,1.956,386,2.392,387,1.956,388,1.339,389,1.444,391,2.492,447,2.492,459,2.367,474,1.444,482,1.699,499,2.452,501,4.131,567,3.258,573,2.23,574,2.23,582,1.564,583,2.4,590,4.193,649,1.19,735,2.23,754,2.512,774,2.392,775,4.483,776,3.794,777,4.483,778,3.794,781,3.794,782,2.384,783,2.611,786,3.794,787,3.794,788,2.596,789,1.956,790,4.193,791,3.496,792,5.659,795,2.869,796,2.852,798,2.869,799,2.596,800,3.752,801,2.596,803,4.483,804,5.246,805,5.479,806,4.505,807,3.794,808,2.917,810,1.821,811,3.06,822,3.794,823,2.392,824,3.794,826,2.596,827,2.611,829,2.596,832,2.596,833,2.596,842,3.06,846,3.06,857,2.285,1284,2.285,1298,2.392,1421,2.742,1422,4.483,1423,2.596,1424,3.794,1425,2.596,1430,3.496,1432,2.596,1581,3.717,1767,2.23,1776,3.258,1995,3.416,2015,2.23,2086,2.596,2148,2.869,2169,6.223,2200,6.223,2201,6.634,2202,6.634,2203,4.798,2204,5.67,2205,2.596,2206,3.961,2207,4.193,2208,3.85,2209,3.283,2210,4.798,2211,3.283,2212,3.283,2213,4.798,2214,3.283,2215,4.931,2216,3.283,2217,2.23,2218,2.869,2219,4.798,2220,3.283,2221,4.798,2222,3.283,2223,4.798,2224,3.283,2225,2.869,2226,3.283,2227,3.283,2228,3.283,2229,3.283,2230,3.283,2231,2.596,2232,3.283,2233,2.869,2234,6.237,2235,3.794,2236,4.798,2237,4.798,2238,4.798,2239,4.798,2240,4.798,2241,3.283,2242,3.283,2243,3.283,2244,3.283,2245,4.798,2246,3.283,2247,3.283,2248,3.283]],["title/injectables/IncidentsService.html",[467,1.046,2133,2.978]],["body/injectables/IncidentsService.html",[0,0.442,3,0.161,4,0.124,9,0.109,20,0.401,21,0.887,23,1.501,24,0.984,27,0.897,28,0.013,30,0.286,31,0.344,32,0.124,33,0.256,101,0.722,128,1.836,161,0.009,162,0.009,199,3.785,216,1.415,219,0.881,221,2.894,222,3.823,223,2.298,230,2.089,231,3.977,242,3.457,245,2.697,249,5.069,254,0.548,255,0.949,256,0.949,260,2.077,264,2.868,276,0.814,292,3.457,298,1.199,300,3.789,305,3.977,310,1.773,318,0.949,319,1.327,464,2.698,466,2.965,467,1.605,468,1.407,469,2.404,472,1.903,473,1.836,474,2.127,475,1.766,499,2.466,614,2.625,649,1.2,714,2.213,728,2.757,735,2.466,737,3.115,754,2.147,763,5.363,855,3.826,862,4.258,872,3.086,874,4.228,876,5.479,877,3.826,906,4.228,911,4.228,912,3.826,1016,2.697,1133,3.778,1910,3.086,1995,4.707,2130,6.079,2133,4.569,2249,4.228,2250,6.27,2251,6.27,2252,4.838,2253,6.029,2254,6.029,2255,6.079,2256,6.079,2257,6.079,2258,6.27,2259,4.838,2260,4.958,2261,6.27,2262,4.838,2263,4.838,2264,4.228,2265,4.838,2266,4.838,2267,6.27,2268,4.838,2269,4.838,2270,4.838]],["title/components/ItemCategoryComponent.html",[0,0.26,134,1.014]],["body/components/ItemCategoryComponent.html",[0,0.419,1,1.045,2,1.545,3,0.15,4,0.112,5,1.225,6,1.225,7,1.225,8,1.225,9,0.098,11,1.496,12,1.859,13,1.045,14,2.421,15,2.272,16,1.646,18,1.646,20,0.36,21,0.827,22,1.988,23,1.269,24,1.114,27,0.898,28,0.013,29,1.397,30,0.169,31,0.309,32,0.112,33,0.14,95,0.892,96,1.646,97,1.646,98,1.225,99,1.592,100,1.225,101,0.685,102,1.225,103,1.045,104,1.225,105,1.079,106,1.225,107,1.079,108,1.114,109,1.646,110,1.045,111,1.865,112,1.859,113,1.045,114,1.496,115,1.859,116,1.079,117,1.186,118,1.225,119,1.045,120,1.859,121,1.079,122,1.225,123,1.079,124,1.149,125,1.013,126,1.225,127,1.045,128,0.951,129,1.079,130,1.496,131,1.545,132,1.646,133,1.079,134,1.751,135,2.263,136,1.646,137,1.079,138,1.646,139,1.079,140,1.114,141,1.646,142,1.079,143,1.186,144,1.045,145,1.079,146,1.079,147,1.114,148,1.045,149,1.225,150,1.079,151,0.951,152,1.079,153,1.555,154,1.045,155,1.045,156,1.045,157,1.079,158,1.114,159,1.225,160,1.225,161,0.008,162,0.008,202,0.857,219,0.551,254,0.556,255,0.593,256,0.593,264,2.673,276,1.357,306,1.489,318,0.593,319,1.397,461,2.211,466,2.218,475,1.225,649,1.079,724,3.036,754,2.697,782,2.905,783,3.18,796,3.019,800,3.468,815,4.81,827,3.592,961,3.341,967,4.211,968,3.429,996,2.905,1044,3.281,2057,6.309,2215,5.581,2271,6.309,2272,3.439,2273,5.769,2274,5.108,2275,6.626,2276,4.793,2277,4.35,2278,5.845,2279,4.35,2280,4.35,2281,4.35,2282,5.108,2283,4.35,2284,3.801,2285,4.35,2286,5.108,2287,5.845,2288,3.801,2289,3.801,2290,3.801,2291,5.108,2292,3.801,2293,3.801,2294,5.108]],["title/components/ItemUserComponent.html",[0,0.26,137,1.014]],["body/components/ItemUserComponent.html",[0,0.419,1,1.045,2,1.545,3,0.15,4,0.112,5,1.225,6,1.225,7,1.225,8,1.225,9,0.098,11,1.496,12,1.859,13,1.045,14,2.421,15,2.272,16,1.646,18,1.646,20,0.36,21,0.827,22,1.988,23,1.269,24,1.114,27,0.898,28,0.013,29,1.397,30,0.169,31,0.309,32,0.112,33,0.14,95,0.892,96,1.646,97,1.646,98,1.225,99,1.592,100,1.225,101,0.685,102,1.225,103,1.045,104,1.225,105,1.079,106,1.225,107,1.079,108,1.114,109,1.646,110,1.045,111,1.545,112,1.859,113,1.045,114,1.496,115,1.859,116,1.079,117,1.186,118,1.225,119,1.045,120,1.859,121,1.079,122,1.225,123,1.079,124,1.149,125,1.013,126,1.225,127,1.045,128,0.951,129,1.079,130,1.496,131,1.545,132,1.646,133,1.079,134,1.079,135,2.263,136,1.646,137,1.751,138,1.646,139,1.079,140,1.114,141,1.646,142,1.079,143,1.186,144,1.045,145,1.079,146,1.079,147,1.114,148,1.045,149,1.225,150,1.079,151,0.951,152,1.079,153,1.615,154,1.045,155,1.045,156,1.045,157,1.079,158,1.114,159,1.225,160,1.225,161,0.008,162,0.008,202,0.857,219,0.551,254,0.556,255,0.593,256,0.593,264,3.368,276,1.357,306,2.417,318,0.593,319,1.397,461,1.755,466,2.218,475,1.225,649,1.079,754,2.697,782,2.905,783,3.18,796,3.019,800,3.468,815,4.81,827,3.592,961,3.341,971,3.341,996,2.905,1044,3.768,1133,3.522,2058,6.309,2215,5.581,2271,6.309,2275,6.626,2276,4.793,2282,5.108,2284,3.801,2286,5.108,2288,3.801,2289,3.801,2290,3.801,2291,5.108,2292,3.801,2293,3.801,2294,5.108,2295,3.439,2296,5.769,2297,5.108,2298,4.35,2299,5.845,2300,4.35,2301,3.801,2302,4.35,2303,4.35,2304,4.35]],["title/injectables/LocalService.html",[467,1.046,496,2.978]],["body/injectables/LocalService.html",[0,0.476,3,0.147,4,0.147,9,0.129,12,1.606,20,0.472,23,1.599,24,1.133,27,0.695,28,0.013,30,0.27,31,0.405,32,0.147,33,0.183,58,2.164,101,0.592,161,0.01,162,0.01,202,1.02,211,4.136,216,1.569,219,0.722,223,2.549,225,2.95,227,4.082,229,3.574,230,2.253,253,3.18,254,0.631,255,0.778,256,0.778,263,1.803,264,3.431,298,1.093,309,1.328,318,0.778,319,1.472,467,1.78,472,2.243,473,2.164,474,2.507,496,5.067,509,6.332,514,3.612,601,5.067,714,2.608,810,2.639,1140,6.556,1478,5.095,2305,4.983,2306,7.502,2307,5.703,2308,6.954,2309,7.502,2310,6.997,2311,5.703,2312,5.703,2313,5.703,2314,5.703,2315,5.703]],["title/components/LoginFormComponent.html",[0,0.26,139,1.014]],["body/components/LoginFormComponent.html",[0,0.414,1,1.018,2,1.517,3,0.167,4,0.109,5,1.193,6,1.193,7,1.193,8,1.193,9,0.095,11,1.47,12,1.834,13,1.018,14,2.416,15,2.268,16,1.617,18,1.617,20,0.351,21,0.812,22,1.966,23,0.814,24,1.032,27,0.7,28,0.013,29,1.215,30,0.271,31,0.301,32,0.109,33,0.136,45,1.727,46,2.341,47,1.937,48,1.937,57,1.727,68,1.727,71,2.675,72,1.862,73,1.727,77,2.305,83,2.105,87,1.727,94,2.2,95,0.868,96,1.617,97,1.617,98,1.193,99,1.575,100,1.193,101,0.676,102,1.193,103,1.018,104,1.193,105,1.051,106,1.193,107,1.051,108,1.084,109,1.617,110,1.018,111,1.517,112,1.834,113,1.018,114,1.47,115,1.834,116,1.051,117,1.155,118,1.193,119,1.018,120,1.834,121,1.051,122,1.193,123,1.051,124,1.119,125,0.986,126,1.193,127,1.018,128,0.926,129,1.051,130,1.47,131,1.517,132,1.617,133,1.051,134,1.051,135,1.517,136,1.617,137,1.051,138,1.617,139,1.866,140,2.004,141,1.617,142,1.051,143,1.155,144,1.018,145,1.051,146,1.051,147,1.084,148,1.018,149,1.193,150,1.051,151,0.926,152,1.051,153,1.542,154,1.018,155,1.018,156,1.018,157,1.051,158,1.084,159,1.193,160,1.193,161,0.008,162,0.008,184,1.403,193,1.45,202,0.842,210,1.99,214,2.2,219,0.536,230,1.724,254,0.513,255,0.578,256,0.578,266,2.305,270,4.183,275,2.018,280,2.2,312,2.105,318,0.578,369,1.792,370,2.018,373,2.105,374,3.61,378,2.656,384,1.937,387,2.341,388,2.341,389,1.862,401,5.95,414,2.105,466,2.179,474,1.862,582,2.018,583,1.792,649,1.051,783,3.124,789,2.341,796,2.979,800,3.193,827,3.124,947,1.792,996,2.853,1284,2.018,1285,2.421,1286,2.421,1287,2.421,1288,2.2,1289,2.2,1290,1.937,1356,2.552,1380,4.54,1386,4.183,1391,3.924,1392,5.117,1393,2.876,1395,2.702,1415,3.086,1427,3.349,1437,2.876,1440,4.183,1454,2.876,1489,4.183,2161,3.086,2316,6.575,2317,3.349,2318,5.691,2319,5.017,2320,5.088,2321,6.377,2322,5.017,2323,4.236,2324,4.236,2325,5.088,2326,4.236,2327,4.183,2328,3.701,2329,5.017,2330,5.088,2331,5.017,2332,5.741,2333,3.349,2334,4.236]],["title/interfaces/Media.html",[90,1.399,935,1.188]],["body/interfaces/Media.html",[3,0.136,4,0.136,9,0.177,20,0.44,21,0.751,27,0.811,28,0.013,30,0.282,32,0.171,33,0.171,90,2.781,99,1.501,161,0.01,162,0.01,202,0.976,221,2.617,225,2.088,230,1.998,232,3.387,235,2.529,245,1.946,254,0.618,276,1.12,277,2.335,278,2.529,288,3.387,290,2.889,291,2.758,298,1.326,318,0.908,381,2.758,438,3.387,461,1.594,464,2.651,466,2.525,468,1.544,474,2.335,475,1.495,614,2.362,617,4.519,618,4.199,623,3.803,648,2.441,649,1.317,718,1.647,731,2.889,789,2.165,808,3.195,872,3.387,935,1.544,936,2.429,971,3.803,980,2.639,1016,2.792,1106,3.869,1194,3.387,1227,4.199,1243,3.785,1471,3.606,1473,3.606,1478,3.606,1542,3.606,1609,3.606,1709,3.606,1752,3.387,1753,3.606,1754,4.519,1758,3.387,1770,4.244,1805,3.606,1832,4.935,1833,3.606,1920,3.606,1963,4.199,1965,4.64,1966,4.64,1967,4.64,1968,4.199,1969,4.199,1971,4.64,1972,4.64,1973,4.199,1974,4.64,1975,4.64,1976,4.64,1977,4.64,1978,4.64,1979,5.173,1980,5.173,1981,5.173,1982,5.173,1983,4.64,1984,4.64,1985,4.64,1986,4.64,1987,4.64,1988,4.64,1989,4.64,1990,4.64]],["title/injectables/MediaService.html",[467,1.046,623,2.336]],["body/injectables/MediaService.html",[3,0.156,4,0.156,9,0.137,20,0.504,21,1.023,24,0.861,27,0.881,28,0.012,30,0.281,31,0.432,32,0.156,33,0.196,90,2.733,101,0.631,161,0.01,162,0.01,219,0.771,254,0.48,255,0.83,256,0.83,290,3.934,318,0.83,464,2.738,467,1.851,468,1.769,472,2.393,473,2.31,623,4.133,714,2.783,718,2.393,719,5.816,724,3.756,731,3.934,980,3.593,1243,4.23,1752,4.612,1770,5.274,1969,5.718,2335,5.318,2336,6.086]],["title/components/ModalCategoryComponent.html",[0,0.26,142,1.014]],["body/components/ModalCategoryComponent.html",[0,0.503,1,0.862,2,1.351,3,0.153,4,0.092,5,1.01,6,1.01,7,1.01,8,1.01,9,0.081,11,1.309,12,1.678,13,0.862,14,2.386,15,2.239,16,1.44,18,1.44,20,0.297,21,0.723,22,1.83,23,1.249,24,1.097,27,0.837,28,0.013,29,1.454,30,0.252,31,0.255,32,0.092,33,0.115,45,1.462,46,2.085,47,1.64,48,1.64,68,1.462,71,2.617,72,2.248,73,1.462,84,1.863,85,2.161,94,1.863,95,0.735,96,1.44,97,1.44,98,1.01,99,1.466,100,1.01,101,0.741,102,1.01,103,0.862,104,1.01,105,0.89,106,1.01,107,0.89,108,0.918,109,1.44,110,0.862,111,2.095,112,1.678,113,0.862,114,1.309,115,1.678,116,0.89,117,0.978,118,1.01,119,0.862,120,1.678,121,0.89,122,1.01,123,0.89,124,0.948,125,0.835,126,1.01,127,0.862,128,0.784,129,0.89,130,1.309,131,1.351,132,1.44,133,0.89,134,0.89,135,1.351,136,1.44,137,0.89,138,1.44,139,0.89,140,0.918,141,1.44,142,1.612,143,2.245,144,0.862,145,0.89,146,0.89,147,0.918,148,0.862,149,1.01,150,0.89,151,0.784,152,0.89,153,1.464,154,0.862,155,0.862,156,0.862,157,0.89,158,0.918,159,1.01,160,1.01,161,0.007,162,0.007,184,1.188,186,1.149,202,0.75,210,2.022,216,1.154,219,0.755,230,1.951,237,3.229,243,2.011,245,2.694,254,0.579,255,0.813,256,0.886,263,0.862,276,0.861,298,1.181,306,2.041,309,0.835,318,0.886,319,1.082,369,2.164,373,1.782,374,3.362,378,2.43,384,1.64,387,2.085,388,2.085,389,1.577,391,1.863,582,1.708,583,1.518,680,5.678,737,2.164,782,2.541,789,2.085,793,4.077,810,2.71,828,2.435,835,3.473,836,4.468,899,1.863,947,1.518,961,2.923,996,3.229,1033,3.262,1044,3.549,1102,3.726,1167,4.082,1171,3.726,1174,3.726,1215,5.33,1262,4.047,1265,5.572,1281,5.678,1284,1.708,1285,2.05,1286,2.05,1287,2.05,1288,1.863,1289,1.863,1290,1.64,1391,3.591,1392,4.877,1393,2.435,1395,2.287,1436,5.138,1437,2.435,1447,4.043,1449,5.138,1450,3.726,1451,4.043,1454,2.435,1455,2.836,2272,2.836,2273,5.208,2274,4.468,2320,4.734,2325,3.726,2327,3.726,2330,4.734,2337,6.859,2338,3.586,2339,5.114,2340,5.114,2341,3.586,2342,3.586,2343,5.678,2344,3.586,2345,4.468,2346,3.586,2347,3.586,2348,3.586,2349,3.586,2350,3.586,2351,3.586,2352,3.586,2353,3.586,2354,3.586,2355,3.586,2356,3.134,2357,5.678]],["title/interfaces/PaginatedData.html",[935,1.188,1340,2.463]],["body/interfaces/PaginatedData.html",[3,0.164,4,0.164,9,0.143,20,0.527,28,0.012,32,0.202,161,0.011,162,0.011,202,1.088,254,0.585,276,1.323,298,1.273,808,2.798,935,2.285,936,2.91,1016,2.332,1321,5.041,1340,4.472,1635,5.327,1979,4.321,1980,4.321,1981,4.321,1982,4.321,2358,4.636,2359,5.031,2360,5.031,2361,5.031,2362,5.031,2363,5.031,2364,5.031,2365,3.462]],["title/interfaces/Pagination.html",[935,1.188,1635,2.607]],["body/interfaces/Pagination.html",[3,0.161,4,0.161,9,0.141,20,0.518,28,0.012,32,0.201,161,0.011,162,0.011,202,1.077,254,0.635,298,1.266,450,4.702,808,3.74,935,2.269,936,2.861,1016,2.292,1340,3.769,1635,4.688,1636,6.82,1638,6.82,1639,6.82,1979,4.248,1980,4.248,1981,4.248,1982,4.248,2358,4.558,2359,4.946,2360,4.946,2361,4.946,2362,4.946,2363,4.946,2364,4.946,2365,3.403]],["title/classes/PasswordValidation.html",[33,0.131,2366,2.978]],["body/classes/PasswordValidation.html",[3,0.128,4,0.128,9,0.112,20,0.413,21,0.905,24,0.905,27,0.907,28,0.013,30,0.193,32,0.128,33,0.16,101,0.842,117,2.031,161,0.009,162,0.009,184,1.652,194,1.586,216,1.679,219,0.81,254,0.504,255,0.872,256,0.872,263,1.199,272,7.087,277,2.812,280,4.452,298,1.315,309,1.161,310,2.587,318,0.963,475,2.218,508,3.479,718,1.983,794,2.878,814,2.59,1343,3.181,1345,6.882,1348,6.505,1349,6.478,1350,5.588,1351,5.588,1352,6.998,1353,6.505,1354,6.505,1355,6.168,1356,3.853,1357,6.168,1358,3.944,1359,4.358,1360,4.358,1362,4.358,1836,5.425,2218,5.588,2366,4.659,2367,4.358,2368,7.698,2369,7.058,2370,4.988,2371,7.445,2372,4.988,2373,7.058,2374,6.395,2375,4.988,2376,6.395,2377,6.395,2378,4.988,2379,4.988,2380,4.988,2381,4.988,2382,4.988,2383,6.395,2384,4.988,2385,6.395,2386,4.988,2387,6.395,2388,4.988]],["title/interfaces/Photo.html",[935,1.188,2365,2.224]],["body/interfaces/Photo.html",[3,0.159,4,0.159,9,0.14,20,0.514,28,0.012,32,0.2,161,0.011,162,0.011,202,1.072,254,0.646,298,1.351,808,3.419,935,2.261,936,2.837,1016,2.944,1340,3.737,1635,3.956,1979,5.454,1980,5.454,1981,5.454,1982,5.454,2358,4.519,2359,4.904,2360,4.904,2361,4.904,2362,4.904,2363,4.904,2364,4.904,2365,3.979]],["title/components/PictureSelectableComponent.html",[0,0.26,144,0.982]],["body/components/PictureSelectableComponent.html",[0,0.491,1,0.722,2,1.187,3,0.115,4,0.077,5,0.846,6,0.846,7,0.846,8,0.846,9,0.151,11,1.15,12,1.515,13,0.722,14,2.349,15,2.204,16,1.265,18,1.265,20,0.249,21,0.635,22,1.682,23,0.577,24,1.122,27,0.907,28,0.013,29,1.667,30,0.232,31,0.213,32,0.115,33,0.097,45,1.831,46,1.831,49,1.43,50,2.116,53,1.809,54,2.188,55,4.078,57,1.224,58,2.426,59,2.624,63,2.674,64,2.563,66,2.333,77,1.634,82,2.188,83,1.492,84,3.102,87,1.831,88,1.975,91,1.271,95,0.616,96,1.682,97,1.682,98,0.846,99,1.513,100,0.846,101,0.772,102,0.846,103,0.722,104,0.846,105,0.745,106,0.846,107,0.745,108,0.769,109,1.265,110,0.722,111,1.187,112,1.515,113,0.722,114,1.529,115,1.515,116,0.745,117,0.819,118,0.846,119,0.722,120,1.515,121,0.745,122,0.846,123,0.745,124,0.794,125,0.699,126,0.846,127,0.722,128,0.656,129,0.745,130,1.15,131,1.187,132,1.265,133,0.745,134,0.745,135,1.187,136,1.265,137,0.745,138,1.265,139,0.745,140,0.769,141,1.265,142,0.745,143,1.744,144,1.671,145,2.078,146,0.745,147,1.637,148,0.722,149,0.846,150,0.745,151,0.656,152,0.745,153,1.224,154,0.722,155,0.722,156,0.722,157,0.745,158,0.769,159,0.846,160,0.846,161,0.006,162,0.006,169,1.646,184,0.994,186,0.962,194,0.745,202,0.659,216,1.613,219,0.906,221,1.181,237,2.232,243,1.766,254,0.587,255,1.016,256,0.975,260,1.487,263,1.893,285,3.413,292,2.232,298,0.939,306,1.538,309,1.489,310,1.646,318,0.997,319,1.139,368,2.674,369,2.527,384,2.054,388,1.224,389,1.32,426,1.32,444,1.901,450,1.809,459,2.774,461,1.793,468,0.873,474,1.32,482,2.115,500,3.925,504,2.139,522,5.218,588,2.039,649,1.813,718,1.669,746,4.19,760,3.273,800,3.672,810,1.705,860,1.766,941,2.039,943,4.255,944,3.552,947,2.527,948,3.654,955,3.05,956,3.05,958,3.05,959,3.05,969,4.042,992,2.968,996,2.968,1004,3.05,1006,4.561,1007,3.068,1008,4.342,1009,3.05,1011,3.05,1018,3.05,1019,2.039,1021,4.556,1022,3.05,1024,3.05,1025,4.055,1026,3.05,1032,3.05,1033,2.865,1034,3.05,1038,2.865,1039,2.865,1042,1.915,1043,1.915,1056,2.039,1057,2.039,1108,3.925,1167,3.835,1206,3.05,1293,2.039,1767,2.039,1830,2.039,1905,3.05,1968,4.722,2043,2.624,2233,3.925,2389,6.313,2390,5.818,2391,4.255,2392,5.381,2393,5.381,2394,4.491,2395,5.972,2396,4.491,2397,4.491,2398,3.003,2399,4.491,2400,5.381,2401,3.552,2402,4.491,2403,3.003,2404,3.003,2405,3.003,2406,4.491,2407,4.491,2408,4.491,2409,4.491,2410,4.491,2411,4.491,2412,4.491,2413,4.491,2414,4.491,2415,3.003,2416,4.491,2417,5.972,2418,5.381,2419,3.003,2420,4.491,2421,5.972,2422,4.491,2423,3.003,2424,4.491,2425,3.003,2426,3.003,2427,3.003,2428,3.003,2429,3.003,2430,3.003,2431,4.491,2432,3.003,2433,3.003,2434,3.003,2435,3.003,2436,4.491,2437,3.003,2438,3.003,2439,3.003,2440,3.003,2441,3.003,2442,3.003,2443,3.003,2444,3.003,2445,3.003,2446,3.003,2447,3.003,2448,3.003,2449,3.003,2450,3.003,2451,3.003,2452,3.003,2453,3.003,2454,3.003,2455,3.003,2456,3.003,2457,3.003,2458,3.003,2459,3.003,2460,3.003,2461,3.003]],["title/components/RegisterFormComponent.html",[0,0.26,146,1.014]],["body/components/RegisterFormComponent.html",[0,0.381,1,0.873,2,1.363,3,0.154,4,0.093,5,1.023,6,1.023,7,1.023,8,1.023,9,0.082,11,1.321,12,1.69,13,0.873,14,2.389,15,2.242,16,1.453,18,1.453,20,0.301,21,0.73,22,1.84,23,0.698,24,1.014,27,0.629,28,0.013,29,1.092,30,0.268,31,0.258,32,0.093,33,0.117,45,2.104,46,2.104,47,1.661,48,1.661,57,2.104,68,1.481,71,2.53,72,1.597,73,1.481,83,1.805,87,1.481,90,1.243,91,1.537,94,1.886,95,0.744,96,1.453,97,1.453,98,1.023,99,1.474,100,1.023,101,0.716,102,1.023,103,0.873,104,1.023,105,0.901,106,1.023,107,0.901,108,0.93,109,1.453,110,0.873,111,1.363,112,1.69,113,0.873,114,1.321,115,1.69,116,0.901,117,0.991,118,1.023,119,0.873,120,1.69,121,0.901,122,1.023,123,0.901,124,0.96,125,0.846,126,1.023,127,0.873,128,0.794,129,0.901,130,1.321,131,1.363,132,1.453,133,0.901,134,0.901,135,1.363,136,1.453,137,0.901,138,1.453,139,0.901,140,0.93,141,1.453,142,0.901,143,0.991,144,0.873,145,0.901,146,1.779,147,1.964,148,0.873,149,1.023,150,0.901,151,0.794,152,0.901,153,1.47,154,0.873,155,0.873,156,0.873,157,0.901,158,0.93,159,1.023,160,1.023,161,0.007,162,0.007,184,1.203,202,0.756,210,2.101,219,0.46,230,1.549,245,1.891,254,0.473,255,0.495,256,0.495,263,0.873,275,2.458,280,2.68,283,2.076,289,3.76,309,0.846,310,1.891,312,1.805,318,0.495,364,2.68,365,3.173,369,1.537,370,1.73,373,2.564,374,3.59,378,2.447,384,1.661,387,2.104,388,2.104,389,1.597,403,5.833,466,1.958,474,1.597,499,2.029,582,1.73,583,1.537,649,0.901,783,2.807,789,2.104,796,2.745,800,2.988,827,2.807,835,3.504,848,2.316,947,1.537,996,2.564,1246,2.466,1284,1.73,1285,2.076,1286,2.076,1287,2.076,1288,1.886,1289,1.886,1290,1.661,1342,2.646,1356,2.188,1380,4.08,1386,3.76,1391,3.616,1392,4.961,1393,4.437,1395,2.316,1415,2.646,1426,4.08,1437,2.466,1440,3.76,1454,2.466,1489,3.76,1578,3.291,1581,2.68,2317,2.872,2318,5.244,2319,4.509,2320,4.761,2321,6.031,2322,3.173,2325,4.761,2327,5.225,2328,3.173,2329,4.509,2330,5.667,2331,4.509,2333,2.872,2366,2.646,2462,6.446,2463,6.902,2464,5.159,2465,3.631,2466,3.631,2467,3.631,2468,3.631,2469,3.631,2470,3.631,2471,5.159,2472,6.001,2473,3.631,2474,4.08,2475,5.159,2476,4.08,2477,5.159,2478,5.159,2479,5.159,2480,5.159,2481,5.159,2482,3.631]],["title/components/SettingsPage.html",[0,0.26,148,0.982]],["body/components/SettingsPage.html",[0,0.467,1,0.74,2,1.21,3,0.166,4,0.079,5,0.867,6,0.867,7,0.867,8,0.867,9,0.069,11,1.172,12,1.538,13,0.74,14,2.355,15,2.21,16,1.289,18,1.289,20,0.255,21,0.914,22,1.703,23,1.162,24,0.958,27,0.666,28,0.013,29,0.969,30,0.298,31,0.219,32,0.079,33,0.099,45,2.635,46,2.937,47,2.093,48,1.408,49,2.88,50,2.663,51,2.244,52,2.377,57,2.859,58,2.073,62,3.291,63,1.53,64,2.88,66,2.837,68,2.466,69,2.18,71,2.368,72,2.012,73,1.866,83,1.53,87,3.2,88,2.402,90,2.401,91,1.303,94,1.6,95,0.631,96,1.289,97,1.289,98,0.867,99,1.364,100,0.867,101,0.728,102,0.867,103,0.74,104,0.867,105,0.764,106,0.867,107,0.764,108,0.788,109,1.289,110,0.74,111,1.21,112,1.538,113,0.74,114,1.172,115,1.538,116,0.764,117,0.84,118,0.867,119,0.74,120,1.538,121,0.764,122,0.867,123,0.764,124,0.814,125,0.717,126,0.867,127,0.74,128,0.673,129,0.764,130,1.172,131,1.21,132,1.289,133,0.764,134,0.764,135,1.21,136,1.289,137,0.764,138,1.289,139,0.764,140,0.788,141,1.289,142,0.764,143,0.84,144,0.74,145,0.764,146,0.764,147,0.788,148,1.453,149,0.867,150,1.355,151,0.673,152,0.764,153,1.698,154,1.313,155,0.74,156,0.74,157,0.764,158,0.788,159,0.867,160,0.867,161,0.009,162,0.007,186,0.987,191,2.012,193,1.054,194,1.135,202,0.671,209,2.866,210,1.858,211,3.365,214,3.517,219,0.692,223,1.677,225,2.148,226,1.87,227,2.972,228,3.484,229,2.602,230,2.033,231,3.122,232,3.484,233,3.98,234,3.291,235,2.602,236,4.781,237,3.211,238,4.319,239,2.602,245,2.216,250,3.097,252,2.919,254,0.553,255,0.745,256,0.624,257,3.005,258,2.18,260,1.516,276,0.919,286,1.6,298,1.016,312,1.53,313,1.964,314,1.856,318,0.983,319,1.484,328,2.402,332,2.402,359,3.108,364,1.6,366,2.435,368,1.53,369,1.937,370,2.602,373,1.53,375,2.691,378,2.227,381,2.377,384,1.408,387,2.227,388,1.866,389,1.354,391,1.6,461,1.816,463,2.758,497,4.762,530,2.18,537,1.964,566,2.435,579,2.091,582,1.467,583,1.937,588,3.108,614,2.1,623,3.871,648,1.467,720,3.108,728,2.012,732,3.335,733,2.635,737,1.937,754,1.567,808,1.354,841,3.291,842,1.964,846,1.964,848,1.964,857,3.431,860,1.8,947,1.303,969,1.856,986,2.377,992,2.274,993,2.377,1041,1.53,1163,2.244,1166,4.406,1167,3.871,1169,3.98,1174,3.335,1243,2.274,1246,2.091,1262,2.091,1263,2.244,1264,2.435,1266,2.244,1267,2.244,1268,2.244,1284,2.18,1285,2.616,1286,1.76,1287,1.76,1288,1.6,1289,1.6,1290,1.408,1293,3.108,1332,4,1421,3.122,1509,3.619,1581,1.6,2042,3.335,2059,2.244,2158,2.435,2159,3.619,2160,3.98,2161,2.244,2162,2.435,2206,3.871,2208,4.106,2217,2.091,2260,2.435,2310,4,2333,2.435,2483,2.691,2484,5.462,2485,4.577,2486,5.462,2487,4.577,2488,5.284,2489,4.577,2490,4.577,2491,3.08,2492,4.577,2493,3.08,2494,3.08,2495,3.08,2496,2.244,2497,2.691,2498,2.435,2499,2.091,2500,2.691,2501,3.08,2502,4.577,2503,3.08,2504,3.08,2505,3.08,2506,3.08,2507,2.691,2508,2.691,2509,2.691,2510,2.691,2511,2.691,2512,2.691,2513,2.691,2514,2.691,2515,2.691,2516,2.691,2517,4.773,2518,2.691,2519,4.773,2520,2.691,2521,3.08,2522,4.577,2523,4.577,2524,4.577,2525,3.335,2526,4,2527,3.08,2528,3.08]],["title/modules/SettingsPageModule.html",[163,1.151,2529,2.978]],["body/modules/SettingsPageModule.html",[3,0.151,4,0.151,9,0.132,28,0.013,30,0.328,31,0.417,32,0.151,33,0.189,95,1.202,148,1.97,161,0.01,162,0.01,163,1.651,165,2.077,166,2.794,167,3.944,168,3.046,169,2.149,170,2.226,175,3.674,176,2.682,177,2.391,179,2.781,180,2.781,181,4.043,182,3.046,183,4.575,184,1.942,185,3.848,186,1.879,187,3.352,210,1.455,404,3.674,405,3.191,406,3.352,407,4.043,408,3.046,409,3.046,410,3.674,411,3.741,424,3.533,425,3.046,426,2.579,427,3.352,428,3.352,530,2.794,1313,6.18,1314,5.125,2529,6.095,2530,5.125,2531,5.125,2532,5.125,2533,5.568,2534,5.865,2535,5.125]],["title/modules/SettingsPageRoutingModule.html",[163,1.151,2533,2.776]],["body/modules/SettingsPageRoutingModule.html",[0,0.408,3,0.165,4,0.165,9,0.145,28,0.013,30,0.306,31,0.456,32,0.165,33,0.206,148,1.793,161,0.011,162,0.011,165,2.273,170,2.436,179,2.524,180,2.934,190,3.668,191,3.468,192,4.264,193,2.197,194,1.592,195,3.057,196,3.867,2533,5.067,2535,5.608,2536,6.418]],["title/modules/SharedModule.html",[163,1.151,397,2.224]],["body/modules/SharedModule.html",[3,0.126,4,0.126,9,0.11,28,0.013,30,0.33,31,0.347,32,0.126,33,0.157,95,1.002,107,2.068,116,2.068,129,2.068,131,1.953,133,2.068,144,2.004,152,2.068,157,2.068,161,0.009,162,0.009,163,1.377,165,1.731,166,2.329,167,3.631,168,2.539,169,1.792,170,2.653,175,3.279,176,2.236,177,1.993,179,2.482,180,2.482,181,3.608,182,2.539,185,2.66,186,1.566,210,1.213,397,4.713,404,3.279,405,2.66,406,2.794,407,3.608,408,2.539,409,2.539,410,3.279,417,4.287,418,3.32,422,3.32,423,3.32,424,2.945,425,2.539,426,2.149,427,2.794,428,2.794,608,4.272,640,5.516,641,3.32,659,4.272,773,3.865,1096,3.32,1214,3.865,2053,4.272,2170,3.865,2200,3.865,2390,3.562,2537,4.272,2538,4.272,2539,4.272,2540,4.272,2541,5.543,2542,4.888,2543,4.888,2544,3.865,2545,6.992,2546,4.888,2547,4.888,2548,4.888,2549,6.313,2550,4.888,2551,4.888,2552,6.313,2553,4.888,2554,4.888,2555,3.865,2556,6.313]],["title/pipes/ShortenTextPipe.html",[748,2.031,2541,2.776]],["body/pipes/ShortenTextPipe.html",[3,0.128,4,0.128,9,0.112,11,1.274,13,1.196,21,0.704,24,0.704,27,0.907,28,0.013,30,0.193,31,0.354,32,0.128,33,0.16,101,0.732,161,0.009,162,0.009,216,1.862,219,0.63,223,2.727,254,0.392,255,0.962,256,0.679,263,2.08,296,3.544,298,1.345,302,3.174,306,2.187,309,1.732,310,2.341,318,0.871,447,3.663,475,1.798,508,3.475,514,3.663,748,3.174,749,3.936,752,5.506,753,5.581,754,2.634,759,6.879,760,5.138,767,6.162,769,6.162,770,5.581,808,3.52,1136,5.581,1524,5.581,1704,5.138,1762,4.654,1835,5.138,1932,6.185,2235,5.05,2541,4.337,2557,5.581,2558,4.35,2559,6.387,2560,8.599,2561,4.978,2562,6.387,2563,6.387,2564,8.189,2565,7.052,2566,7.052,2567,7.052,2568,6.387,2569,6.387,2570,4.978,2571,4.978]],["title/injectables/ThemeService.html",[467,1.046,497,2.776]],["body/injectables/ThemeService.html",[3,0.149,4,0.149,9,0.13,15,1.527,20,0.479,21,0.992,23,1.347,24,1.11,27,0.704,28,0.013,29,1.223,30,0.272,31,0.411,32,0.149,33,0.186,101,0.727,161,0.01,162,0.01,182,3.002,194,1.434,202,1.028,219,0.888,254,0.619,255,0.956,298,1.187,319,1.75,467,1.795,472,2.273,473,2.193,497,4.761,714,2.643,794,2.357,1113,3.925,1515,3.686,2572,5.05,2573,7.546,2574,7.546,2575,7.01,2576,5.779,2577,7.846,2578,7.01,2579,7.01,2580,7.01,2581,5.779,2582,7.546,2583,7.546,2584,5.779,2585,7.546,2586,5.779,2587,5.779,2588,7.546,2589,5.779,2590,7.546,2591,5.779,2592,5.779,2593,5.779,2594,5.779,2595,5.779,2596,5.779,2597,5.779,2598,5.779,2599,5.779,2600,5.779,2601,5.779]],["title/components/UpdateUserComponent.html",[0,0.26,150,1.014]],["body/components/UpdateUserComponent.html",[0,0.457,1,0.803,2,1.285,3,0.147,4,0.086,5,0.941,6,0.941,7,0.941,8,0.941,9,0.075,11,1.245,12,1.613,13,0.803,14,2.372,15,2.226,16,1.369,18,1.369,20,0.277,21,0.688,22,1.771,23,1.284,24,1.043,27,0.767,28,0.013,29,1.331,30,0.259,31,0.238,32,0.086,33,0.108,45,1.363,46,1.982,47,1.529,48,1.529,68,1.363,71,2.556,72,2.137,73,1.363,84,1.736,85,2.014,94,1.736,95,0.685,96,1.369,97,1.369,98,0.941,99,1.419,100,0.941,101,0.693,102,0.941,103,0.803,104,0.941,105,0.829,106,0.941,107,0.829,108,0.856,109,1.369,110,0.803,111,1.285,112,1.613,113,0.803,114,1.245,115,1.613,116,0.829,117,0.912,118,0.941,119,0.803,120,1.613,121,0.829,122,0.941,123,0.829,124,0.883,125,0.778,126,0.941,127,0.803,128,0.73,129,0.829,130,1.245,131,1.285,132,1.369,133,0.829,134,0.829,135,1.285,136,1.369,137,0.829,138,1.369,139,0.829,140,0.856,141,1.369,142,0.829,143,2.11,144,0.803,145,1.206,146,0.829,147,0.856,148,0.803,149,0.941,150,1.73,151,1.611,152,0.829,153,1.698,154,0.803,155,0.803,156,0.803,157,0.829,158,0.856,159,0.941,160,0.941,161,0.007,162,0.007,184,1.107,186,1.071,202,0.713,209,2.951,210,2.054,217,2.847,219,0.616,223,1.782,225,1.912,226,1.664,230,1.46,237,2.416,239,2.729,242,2.847,245,2.799,250,2.62,254,0.567,255,0.663,256,0.663,257,3.465,258,2.729,260,1.61,263,1.512,264,2.62,276,0.818,286,1.736,306,1.664,309,0.778,310,1.782,312,1.661,313,2.132,318,0.858,319,1.213,369,2.057,373,1.661,374,3.402,378,2.336,384,1.529,387,1.982,388,1.982,389,1.47,438,3.654,459,2.536,461,1.72,463,3.451,464,2.309,466,2.174,482,1.184,502,4.53,503,3.274,504,2.729,505,2.975,506,3.89,582,1.592,583,1.415,733,3.065,737,2.057,782,2.416,820,5.284,835,3.301,860,1.912,899,1.736,947,1.415,961,2.779,967,3.654,968,2.975,996,3.126,1044,1.661,1102,3.542,1167,3.986,1284,1.592,1285,1.911,1286,1.911,1287,1.911,1288,1.736,1289,1.736,1290,1.529,1391,3.451,1392,4.795,1393,2.27,1395,3.101,1421,1.911,1436,4.973,1437,2.27,1440,3.542,1441,4.248,1447,3.844,1449,4.973,1450,3.542,1451,3.844,1454,2.27,1455,2.643,1578,2.132,1581,1.736,1599,2.436,1954,4.174,2295,2.643,2296,5.006,2297,4.248,2301,2.921,2320,4.583,2325,3.542,2327,4.869,2330,5.081,2343,5.496,2345,4.248,2356,2.921,2357,5.496,2401,3.844,2474,3.844,2476,3.844,2498,5.944,2499,5.105,2525,3.542,2602,5.105,2603,5.729,2604,4.861,2605,5.729,2606,3.343,2607,3.343,2608,3.343,2609,3.343,2610,3.343,2611,3.343,2612,3.343,2613,3.343,2614,3.343,2615,3.343,2616,3.343,2617,3.343,2618,3.343,2619,3.343,2620,2.921,2621,4.861,2622,3.343,2623,4.248,2624,3.844]],["title/components/UserCircleGraphicComponent.html",[0,0.26,152,1.014]],["body/components/UserCircleGraphicComponent.html",[0,0.504,1,1.017,2,1.516,3,0.147,4,0.109,5,1.192,6,1.192,7,1.192,8,1.192,9,0.095,11,1.469,12,1.833,13,1.017,14,2.416,15,2.268,16,1.616,18,1.616,20,0.35,21,0.812,22,1.965,23,1.341,24,0.987,27,0.516,28,0.013,29,0.896,30,0.271,31,0.301,32,0.109,33,0.136,58,1.606,65,2.55,71,1.551,95,1.176,96,1.616,97,1.616,98,1.192,99,1.575,100,1.192,101,0.675,102,1.192,103,1.017,104,1.192,105,1.05,106,1.192,107,1.05,108,1.084,109,1.616,110,1.017,111,1.516,112,1.833,113,1.017,114,1.469,115,1.833,116,1.05,117,1.154,118,1.192,119,1.017,120,1.833,121,1.05,122,1.192,123,1.05,124,1.118,125,0.985,126,1.192,127,1.017,128,0.925,129,1.05,130,1.469,131,2.225,132,1.616,133,1.05,134,1.05,135,1.516,136,1.616,137,1.05,138,1.616,139,1.05,140,1.084,141,1.616,142,1.05,143,1.154,144,1.017,145,1.05,146,1.05,147,1.084,148,1.017,149,1.192,150,1.05,151,0.925,152,1.731,153,1.692,154,1.017,155,1.017,156,1.017,157,1.05,158,1.084,159,1.192,160,1.192,161,0.008,162,0.008,194,1.423,202,0.841,210,1.731,211,3.738,216,1.294,219,0.536,226,2.39,227,3.122,228,3.66,229,2.733,230,2.259,231,3.28,250,2.624,254,0.513,255,0.577,256,0.577,276,1.266,314,2.55,318,0.783,319,1.215,468,1.23,469,2.103,475,1.833,499,2.256,614,2.333,648,2.236,748,2.103,789,2.34,857,2.733,875,3.897,1041,2.103,1128,3.698,1163,3.084,1169,4.744,1190,3.28,1292,4.537,2092,4.744,2171,3.346,2172,5.689,2173,5.014,2174,3.698,2176,5.014,2177,5.014,2179,5.014,2184,3.698,2185,5.014,2187,3.698,2189,3.698,2193,3.698,2195,3.698,2196,3.698,2197,3.698,2198,3.698,2199,3.698,2555,5.769,2625,6.375,2626,5.738,2627,4.232,2628,4.232,2629,4.232,2630,6.51,2631,4.232,2632,5.738,2633,6.51,2634,4.232,2635,5.738,2636,4.232,2637,4.232,2638,4.232,2639,4.232,2640,4.232,2641,4.232,2642,4.232,2643,4.232]],["title/interfaces/UserCredentials.html",[266,2.224,935,1.188]],["body/interfaces/UserCredentials.html",[3,0.16,4,0.16,9,0.14,20,0.516,28,0.012,30,0.242,32,0.2,101,0.761,145,1.546,161,0.011,162,0.011,202,1.075,254,0.578,266,3.99,275,3.908,276,1.049,280,4.047,283,3.562,286,3.809,298,1.364,312,3.097,733,2.541,899,3.237,935,2.266,936,2.85,937,3.975,1578,4.678,1581,3.809,2365,3.391,2644,4.928,2645,5.799]],["title/components/UserDataPage.html",[0,0.26,154,0.982]],["body/components/UserDataPage.html",[0,0.439,1,0.786,2,1.264,3,0.17,4,0.084,5,0.921,6,0.921,7,0.921,8,0.921,9,0.074,11,1.225,12,1.593,13,0.786,14,2.368,15,2.222,16,1.347,18,1.347,20,0.271,21,0.677,22,1.753,23,0.919,24,0.937,27,0.583,28,0.013,29,0.692,30,0.295,31,0.232,32,0.084,33,0.105,45,2.701,46,2.701,47,1.496,48,1.496,49,2.279,50,1.881,57,2.822,58,2.147,63,1.625,64,2.695,66,2.485,68,2.538,69,2.279,71,2.428,72,1.438,73,1.951,83,1.625,87,3.14,88,2.487,90,2.447,91,1.384,94,1.699,95,0.67,96,1.347,97,1.347,98,0.921,99,1.404,100,0.921,101,0.718,102,0.921,103,0.786,104,0.921,105,0.811,106,0.921,107,0.811,108,0.837,109,1.347,110,0.786,111,1.264,112,1.593,113,0.786,114,1.225,115,1.593,116,0.811,117,0.892,118,0.921,119,0.786,120,1.593,121,0.811,122,0.921,123,0.811,124,0.864,125,0.762,126,0.921,127,0.786,128,0.715,129,0.811,130,1.225,131,1.264,132,1.347,133,0.811,134,0.811,135,1.264,136,1.347,137,0.811,138,1.347,139,0.811,140,0.837,141,1.347,142,0.811,143,1.95,144,0.786,145,0.811,146,0.811,147,0.837,148,0.786,149,0.921,150,1.403,151,1.36,152,0.811,153,1.738,154,1.663,155,0.786,156,0.786,157,0.811,158,0.837,159,0.921,160,0.921,161,0.009,162,0.007,186,1.048,193,1.12,194,1.187,202,0.701,210,1.717,212,3.609,213,5.472,214,3.594,217,2.378,219,0.876,226,1.638,230,1.869,245,1.754,254,0.491,255,0.653,256,0.653,260,1.584,263,0.786,276,1.324,286,1.699,298,0.752,309,0.762,312,1.625,318,0.975,319,1.465,328,2.487,332,2.487,359,3.249,364,1.699,368,1.625,369,1.384,370,2.279,373,1.625,378,2.307,381,2.485,384,1.496,387,1.951,388,1.951,389,1.438,391,1.699,441,3.233,450,2.883,454,4.181,461,1.869,582,1.558,583,2.025,588,2.221,614,2.146,623,3.955,648,1.533,675,4.699,720,3.249,732,3.486,733,2.701,735,1.881,737,2.025,754,1.638,794,1.951,808,1.438,841,2.883,848,2.086,857,2.279,860,1.881,947,1.384,992,2.378,993,2.485,1007,2.188,1016,1.754,1041,1.625,1157,4.474,1158,3.783,1166,4.536,1167,3.558,1173,3.783,1187,5.44,1211,3.234,1243,2.378,1246,2.221,1262,2.221,1263,2.383,1264,2.586,1266,2.383,1267,2.383,1268,2.383,1284,1.558,1285,1.869,1286,1.869,1287,1.869,1288,1.699,1289,1.699,1290,1.496,1293,3.249,1349,3.783,1421,2.735,1581,1.699,1609,3.249,1688,2.383,2042,3.486,2059,2.383,2091,3.486,2129,2.586,2132,2.858,2134,4.181,2142,2.858,2144,2.858,2146,2.858,2158,2.586,2159,3.783,2160,3.486,2161,2.383,2162,2.586,2206,3.955,2208,4.228,2217,2.221,2231,3.783,2260,2.586,2401,3.783,2488,5.44,2496,2.383,2497,2.858,2499,2.221,2500,2.858,2507,2.858,2508,2.858,2509,2.858,2510,2.858,2511,2.858,2512,2.858,2513,2.858,2514,2.858,2515,2.858,2516,2.858,2517,4.944,2518,2.858,2519,4.944,2520,2.858,2525,3.486,2526,4.181,2602,4.699,2624,3.783,2646,6.225,2647,4.785,2648,4.785,2649,3.271,2650,4.785,2651,4.785,2652,3.271,2653,4.181,2654,4.785,2655,4.785,2656,3.271,2657,5.657,2658,4.181,2659,4.181]],["title/modules/UserDataPageModule.html",[163,1.151,673,2.776]],["body/modules/UserDataPageModule.html",[3,0.141,4,0.141,9,0.123,28,0.013,30,0.332,31,0.388,32,0.141,33,0.176,95,1.121,150,2,151,1.195,153,1.389,154,1.938,161,0.01,162,0.01,163,1.54,165,1.936,166,2.604,167,3.824,168,2.84,169,2.004,170,2.075,175,3.519,176,2.5,177,2.229,179,2.665,180,2.665,181,3.873,182,2.84,183,4.083,184,1.811,185,3.687,186,1.752,187,3.125,210,1.356,243,2.15,276,0.92,374,2.404,397,4.387,399,4.937,404,3.519,405,2.975,406,3.125,407,3.873,408,2.84,409,2.84,410,3.519,411,3.487,412,5.358,413,4.323,414,2.717,415,5.358,416,4.323,417,4.602,418,3.713,419,5.358,420,4.323,421,3.984,424,3.294,425,2.84,426,2.404,427,3.125,428,3.125,429,4.323,673,5.748,675,3.713,1308,3.487,1311,5.921,1312,4.778,1315,4.778,2059,3.984,2168,4.778,2499,3.713,2602,3.713,2660,4.778,2661,4.778,2662,4.778,2663,5.475]],["title/modules/UserDataPageRoutingModule.html",[163,1.151,2663,2.776]],["body/modules/UserDataPageRoutingModule.html",[0,0.406,3,0.164,4,0.164,9,0.144,28,0.013,30,0.306,31,0.454,32,0.164,33,0.206,153,1.311,154,1.789,161,0.011,162,0.011,165,2.265,170,2.427,179,2.514,180,2.927,190,3.655,191,3.463,192,4.255,193,2.189,194,1.586,195,3.046,196,3.853,276,1.076,675,4.342,1308,4.079,2602,4.342,2663,5.056]],["title/interfaces/UserInfo.html",[733,1.667,935,1.188]],["body/interfaces/UserInfo.html",[3,0.153,4,0.153,9,0.134,20,0.493,28,0.012,30,0.231,32,0.196,101,0.841,145,1.966,161,0.01,162,0.01,202,1.046,254,0.656,255,1.081,266,3.239,275,3.86,276,1.002,283,3.402,286,4.209,298,1.374,312,2.958,733,2.91,899,4.116,935,2.222,936,2.722,937,3.797,1578,5.168,1581,4.209,2365,3.239,2644,4.707,2645,5.643]],["title/interfaces/UserRegisterInfo.html",[283,2.336,935,1.188]],["body/interfaces/UserRegisterInfo.html",[3,0.155,4,0.155,9,0.136,20,0.499,28,0.012,30,0.234,32,0.198,101,0.844,145,1.495,161,0.01,162,0.01,202,1.054,254,0.65,266,3.28,275,3.873,276,1.015,280,3.991,283,4.11,286,4.223,298,1.373,312,2.996,733,2.458,899,3.131,935,2.234,936,2.757,937,3.845,1578,5.186,1581,4.223,2365,3.28,2644,4.767,2645,5.686]],["title/components/UserSelectableComponent.html",[0,0.26,155,0.982]],["body/components/UserSelectableComponent.html",[0,0.503,1,0.633,2,1.074,3,0.104,4,0.068,5,0.741,6,0.741,7,0.741,8,0.741,9,0.059,11,1.041,12,1.398,13,0.633,14,2.318,15,2.175,16,1.144,18,1.144,20,0.218,21,0.575,22,1.572,23,0.781,24,1.142,27,0.928,28,0.013,29,1.627,30,0.234,31,0.187,32,0.104,33,0.085,95,0.54,96,1.144,97,1.144,98,0.741,99,1.259,100,0.741,101,0.79,102,0.741,103,0.633,104,0.741,105,0.653,106,0.741,107,0.653,108,1.041,109,1.144,110,0.633,111,1.074,112,1.398,113,0.633,114,1.429,115,1.398,116,0.653,117,0.718,118,0.741,119,0.633,120,1.398,121,0.653,122,0.741,123,0.653,124,1.756,125,0.613,126,0.741,127,0.633,128,0.575,129,0.653,130,1.041,131,1.074,132,1.144,133,0.653,134,0.653,135,1.074,136,1.144,137,0.653,138,1.144,139,0.653,140,0.674,141,1.144,142,0.653,143,0.718,144,0.633,145,0.653,146,0.653,147,1.544,148,0.633,149,0.741,150,0.653,151,0.575,152,0.653,153,1.734,154,0.633,155,1.597,156,0.633,157,0.653,158,1.949,159,0.741,160,0.741,161,0.006,162,0.006,169,1.49,184,0.872,186,0.844,194,0.653,202,0.596,210,1.008,216,1.548,219,0.941,221,1.598,226,1.7,240,3.363,243,1.598,253,1.859,254,0.624,255,1.038,256,1.014,260,1.346,263,1.932,276,0.836,278,1.936,285,3.19,298,1.002,306,2.411,309,1.484,310,2.211,318,1.049,319,1.349,327,2.211,328,3.096,332,1.158,414,2.774,426,1.158,444,1.72,459,2.82,461,1.995,482,1.439,504,2.659,505,2.899,614,2.128,648,2.257,649,1.581,664,2.592,717,2.449,718,1.977,754,2.275,782,2.02,794,2.872,796,3.039,800,2.915,810,1.542,840,4.066,857,2.364,860,1.598,941,1.788,943,3.925,944,3.214,947,2.812,948,3.371,949,2.961,950,4.067,951,2.961,953,2.961,954,4.067,955,2.76,956,2.76,958,2.76,959,2.76,960,3.617,961,2.323,963,3.551,965,2.701,966,3.551,967,3.166,968,2.578,969,4.411,970,2.301,971,2.323,972,2.592,973,2.961,974,4.067,975,2.961,976,4.645,978,4.067,979,4.135,980,2.02,982,2.961,983,5.335,985,2.961,986,2.111,987,4.395,988,2.961,990,2.323,992,3.168,993,2.111,996,2.774,997,2.961,998,2.961,1000,2.961,1001,2.961,1002,2.301,1003,2.961,1004,2.76,1006,4.377,1007,2.553,1008,4.096,1009,2.76,1011,2.76,1013,4.842,1014,2.301,1015,2.961,1016,2.435,1017,2.961,1018,2.76,1019,1.788,1021,3.371,1022,2.76,1024,2.76,1025,3.791,1026,2.76,1027,2.301,1028,2.301,1029,2.301,1030,2.301,1031,2.301,1032,2.76,1033,2.592,1034,2.76,1037,2.301,1038,2.592,1039,2.592,1041,1.308,1042,1.679,1043,1.679,1044,1.308,1046,1.586,1049,1.586,1050,1.586,1051,1.788,1056,1.788,1057,1.788,1058,1.918,1059,1.918,1060,1.918,1061,1.918,1063,2.961,1064,1.918,1065,1.918,2056,5.904,2205,2.082,2206,3.923,2208,4.096,2217,1.788,2276,2.76,2664,5.904,2665,3.925,2666,4.338,2667,3.551,2668,2.633,2669,2.633,2670,2.633,2671,2.633,2672,2.633,2673,2.633,2674,3.551,2675,2.633,2676,2.633,2677,2.633,2678,3.551,2679,2.633,2680,2.633,2681,2.301,2682,2.301,2683,2.301,2684,2.082,2685,2.301,2686,4.338,2687,2.301,2688,2.301,2689,2.301,2690,2.301,2691,3.214,2692,3.551]],["title/components/UserSelectableMobileComponent.html",[0,0.26,156,0.982]],["body/components/UserSelectableMobileComponent.html",[0,0.5,1,0.616,2,1.052,3,0.102,4,0.066,5,0.722,6,0.722,7,0.722,8,0.722,9,0.058,11,1.019,12,1.374,13,0.616,14,2.311,15,2.169,16,1.121,18,1.121,20,0.212,21,0.563,22,1.549,23,0.765,24,1.138,27,0.923,28,0.013,29,1.618,30,0.231,31,0.182,32,0.102,33,0.082,95,0.525,96,1.121,97,1.121,98,0.722,99,1.241,100,0.722,101,0.785,102,0.722,103,0.616,104,0.722,105,0.636,106,0.722,107,0.636,108,1.019,109,1.121,110,0.616,111,1.052,112,1.374,113,0.616,114,2.186,115,1.374,116,0.636,117,0.699,118,0.722,119,0.616,120,1.374,121,0.636,122,0.722,123,0.636,124,1.739,125,0.597,126,0.722,127,0.616,128,0.56,129,0.636,130,1.019,131,1.052,132,1.121,133,0.636,134,0.636,135,1.052,136,1.121,137,0.636,138,1.121,139,0.636,140,0.656,141,1.121,142,0.636,143,0.699,144,0.616,145,0.636,146,0.636,147,1.525,148,0.616,149,0.722,150,0.636,151,0.56,152,0.636,153,1.731,154,0.616,155,1.173,156,1.432,157,0.636,158,1.938,159,0.722,160,0.722,161,0.006,162,0.006,169,1.459,184,0.849,186,0.821,194,0.636,202,0.583,210,0.987,216,1.534,219,0.935,221,1.565,226,1.671,240,3.315,243,1.565,253,1.82,254,0.621,255,1.033,256,1.007,260,1.318,263,1.924,276,0.821,278,1.896,285,3.145,298,0.991,306,2.392,309,1.468,310,2.183,318,1.043,319,1.335,327,2.165,328,3.071,332,1.127,414,2.734,426,1.127,444,1.684,459,2.802,461,1.976,482,1.409,504,2.621,505,2.857,614,2.109,648,2.238,649,1.564,664,2.538,717,2.398,718,1.955,754,2.253,782,1.978,794,2.848,796,3.009,800,2.883,810,1.51,840,4.022,857,2.324,860,1.565,947,2.785,948,3.314,949,2.9,950,4.009,951,2.9,953,2.9,954,4.009,955,2.703,956,2.703,958,2.703,959,2.703,960,3.556,961,2.275,965,2.655,967,3.112,968,2.534,969,4.381,971,2.275,972,2.538,973,2.9,974,4.009,975,2.9,976,4.594,978,4.009,979,4.098,980,1.978,982,2.9,983,5.298,985,2.9,986,2.067,987,4.341,988,2.9,990,2.275,992,3.133,993,2.067,996,2.734,997,2.9,998,2.9,1000,2.9,1001,2.9,1003,2.9,1004,2.703,1006,4.339,1007,2.516,1008,4.045,1009,2.703,1011,2.703,1013,4.794,1015,2.9,1016,2.411,1017,2.9,1018,2.703,1019,1.74,1021,3.314,1022,2.703,1024,2.703,1025,3.736,1026,2.703,1032,2.703,1033,2.538,1034,2.703,1038,2.538,1039,2.538,1041,1.273,1042,1.634,1043,1.634,1044,1.273,1046,1.544,1049,1.544,1050,1.544,1051,1.74,1056,1.74,1057,1.74,1058,1.867,1059,1.867,1060,1.867,1061,1.867,1063,2.9,1064,1.867,1065,1.867,1069,1.74,1071,2.703,1072,3.858,1073,3.147,1074,3.478,1075,3.478,1076,2.239,1084,2.239,1087,2.239,1090,2.239,1091,2.239,1092,2.239,1093,2.239,1094,2.239,2060,5.883,2205,2.026,2206,3.888,2208,4.045,2217,1.74,2276,2.703,2664,5.883,2666,4.264,2667,3.478,2674,3.478,2678,3.478,2681,2.239,2682,2.239,2683,2.239,2684,2.026,2685,2.239,2686,4.264,2687,2.239,2688,2.239,2689,2.239,2690,2.239,2691,3.147,2692,3.478,2693,3.858,2694,2.562,2695,2.562,2696,2.562,2697,2.562,2698,2.562,2699,2.562,2700,2.562,2701,2.562,2702,2.562,2703,2.562,2704,2.562]],["title/components/UsersInfoComponent.html",[0,0.26,157,1.014]],["body/components/UsersInfoComponent.html",[0,0.406,1,0.72,2,1.688,3,0.164,4,0.077,5,0.844,6,0.844,7,0.844,8,0.844,9,0.068,11,1.148,12,1.513,13,0.72,14,2.349,15,2.204,16,1.263,18,1.263,20,0.248,21,0.634,22,1.68,23,1.404,24,1.052,27,0.727,28,0.013,29,1.263,30,0.26,31,0.213,32,0.077,33,0.216,52,2.791,53,1.805,54,2.183,57,2.191,61,2.034,66,1.556,68,1.222,69,3.042,71,1.643,72,1.971,73,1.222,77,1.63,84,3.317,87,2.979,88,1.317,90,1.535,91,1.898,95,0.614,96,1.263,97,1.263,98,0.844,99,1.346,100,0.844,101,0.721,102,0.844,103,0.72,104,0.844,105,0.743,106,0.844,107,0.743,108,0.767,109,1.263,110,0.72,111,1.185,112,1.513,113,0.72,114,1.148,115,1.513,116,0.743,117,0.817,118,0.844,119,0.72,120,1.513,121,0.743,122,0.844,123,0.743,124,0.792,125,0.698,126,0.844,127,0.72,128,0.655,129,0.743,130,1.148,131,1.185,132,1.263,133,0.743,134,0.743,135,1.185,136,1.263,137,0.743,138,1.263,139,0.743,140,0.767,141,1.263,142,0.743,143,0.817,144,0.72,145,0.743,146,0.743,147,0.767,148,0.72,149,0.844,150,0.743,151,0.655,152,0.743,153,1.585,154,0.72,155,0.72,156,0.72,157,1.48,158,1.999,159,0.844,160,0.844,161,0.006,162,0.006,193,1.026,202,0.657,209,2.837,210,1.991,214,4.017,216,1.011,217,2.67,219,0.809,223,2.457,225,1.763,226,1.535,230,1.346,235,2.559,239,3.193,243,2.113,249,3.915,250,2.457,254,0.603,255,0.871,256,0.871,257,3.331,258,3.042,263,1.535,264,2.921,268,2.563,276,0.905,277,1.971,296,2.136,298,1.004,306,1.535,309,1.044,312,1.489,313,1.911,318,0.914,319,1.419,364,2.329,378,1.222,385,3.267,387,2.191,388,1.222,389,1.317,390,2.034,391,1.556,438,3.427,447,2.329,459,2.637,461,1.346,463,3.237,464,2.419,466,2.424,468,0.871,469,1.489,482,1.588,501,3.915,502,4.249,503,3.071,504,2.559,505,2.791,506,3.649,527,4.695,537,2.86,567,2.034,579,3.045,582,1.427,583,1.268,614,2.307,648,1.911,649,0.743,728,1.971,733,2.191,735,2.113,748,1.489,754,2.379,774,2.183,775,4.249,776,3.545,777,4.249,778,3.545,781,3.545,782,2.228,783,2.44,786,3.545,787,3.545,788,2.369,792,5.05,794,2.733,796,2.728,797,2.618,799,2.369,800,3.454,801,2.369,803,4.249,804,5.05,805,5.3,806,4.337,807,3.545,808,2.808,810,1.702,811,2.86,815,3.267,822,3.545,823,2.183,824,3.545,826,2.369,827,2.44,829,2.369,832,2.369,833,2.369,835,3.045,840,3.427,841,1.805,842,1.911,843,2.034,844,3.918,845,3.918,846,2.86,848,1.911,849,2.618,990,2.563,992,2.228,993,2.329,1016,1.643,1041,1.489,1211,2.563,1599,2.183,1609,3.045,2207,2.618,2231,4.717,2235,5.883,2253,3.545,2254,4.249,2276,3.649,2474,3.545,2476,3.545,2525,4.346,2544,5.972,2620,2.618,2623,3.918,2624,4.717,2658,5.212,2659,5.212,2684,2.369,2691,3.545,2705,6.6,2706,4.484,2707,2.996,2708,4.484,2709,4.484,2710,4.484,2711,2.996,2712,4.484,2713,2.996,2714,2.996,2715,4.484,2716,2.996,2717,2.996,2718,2.996,2719,2.996,2720,2.996,2721,2.996]],["title/injectables/UsersService.html",[467,1.046,2206,2.336]],["body/injectables/UsersService.html",[0,0.435,3,0.158,4,0.12,9,0.105,20,0.388,21,0.868,23,1.516,24,0.969,27,0.886,28,0.013,29,0.991,30,0.293,31,0.333,32,0.12,33,0.254,101,0.803,153,1.687,161,0.009,162,0.009,199,3.725,209,3.075,216,1.806,219,0.867,223,2.838,230,2.369,231,3.913,242,3.402,245,2.892,249,4.989,254,0.622,255,0.934,256,0.934,257,3.402,258,2.923,260,2.032,264,2.806,268,3.508,275,3.261,276,1.223,279,4.367,291,3.556,292,3.749,295,5.414,298,1.186,300,3.921,302,3.049,318,0.934,319,1.538,464,2.613,467,1.571,468,1.361,469,2.326,472,1.84,473,1.776,475,1.728,499,2.413,514,3.187,613,3.701,614,2.615,648,1.966,714,2.14,720,5.258,728,2.698,733,3.264,735,2.413,737,2.897,747,2.985,754,2.101,855,3.701,872,2.985,877,3.701,1016,2.249,1211,4.312,1509,5.414,1599,3.41,1717,4.471,1823,4.167,1876,4.989,2206,3.508,2253,5.966,2254,5.966,2255,5.983,2256,5.983,2257,5.983,2264,4.09,2722,4.09,2723,7.267,2724,4.68,2725,6.136,2726,4.68,2727,6.136,2728,6.136,2729,4.68,2730,4.68,2731,4.68,2732,4.68,2733,4.68]],["title/coverage.html",[2734,4.896]],["body/coverage.html",[0,0.541,1,0.963,9,0.09,10,3.5,28,0.013,33,0.23,58,3.239,88,2.43,90,1.372,103,0.963,105,0.994,107,0.994,110,0.963,113,0.963,114,1.978,116,0.994,119,0.963,121,0.994,123,0.994,125,0.933,127,0.963,129,0.994,131,1.802,133,0.994,134,0.994,137,0.994,139,0.994,142,0.994,144,0.963,146,0.994,148,0.963,150,0.994,152,0.994,154,0.963,155,0.963,156,0.963,157,0.994,161,0.008,162,0.008,197,3.5,209,1.695,211,1.991,216,1.614,254,0.316,266,2.18,283,2.29,312,3.144,401,3.167,403,3.167,410,2.081,432,4.37,433,2.919,435,3.5,467,2.084,483,3.5,496,2.919,497,2.72,596,2.72,598,5.003,611,2.919,614,1.242,617,2.72,619,2.919,621,3.167,623,2.29,625,4.37,627,2.72,629,2.72,644,3.167,649,0.994,654,3.167,657,3.167,661,2.555,670,2.919,675,2.72,684,2.72,704,3.5,715,3.5,733,1.633,748,2.746,750,3.5,751,3.5,772,3.5,773,3.167,774,4.61,793,2.081,828,2.72,841,2.413,850,2.555,851,3.5,935,2.35,937,4.565,939,4.97,940,4.027,941,5.024,942,3.167,1068,4.027,1069,4.86,1070,3.167,1095,2.919,1096,2.72,1097,3.5,1121,3.5,1154,3.5,1215,2.72,1295,6.626,1317,3.5,1340,2.413,1342,2.919,1344,3.5,1367,3.5,1377,2.555,1434,3.5,1435,2.919,1457,3.5,1471,4.632,1472,3.5,1540,2.555,1602,3.167,1603,3.5,1635,2.555,1654,2.72,1655,4.97,1689,2.72,1823,2.72,1963,4.37,1991,3.5,1995,2.413,2015,2.72,2056,4.027,2057,3.167,2058,3.167,2060,4.027,2062,4.37,2063,3.5,2093,3.5,2128,2.919,2129,4.37,2133,2.919,2160,4.027,2169,4.37,2170,3.167,2171,4.37,2200,3.167,2206,2.29,2249,3.5,2271,4.37,2272,4.37,2295,4.37,2305,3.5,2316,3.5,2317,4.37,2335,3.5,2337,3.5,2358,4.61,2365,2.18,2366,2.919,2367,3.5,2389,4.37,2390,4.027,2391,3.167,2462,3.5,2483,3.5,2496,2.919,2498,3.167,2499,2.72,2541,2.72,2544,3.167,2555,3.167,2557,3.5,2558,3.5,2572,3.5,2602,3.753,2625,3.5,2664,4.97,2665,3.167,2693,3.167,2705,3.5,2722,3.5,2734,3.5,2735,4.006,2736,4.006,2737,3.5,2738,7.726,2739,8.141,2740,5.526,2741,5.526,2742,7.582,2743,6.327,2744,6.327,2745,3.5,2746,5.526,2747,6.327,2748,7.156,2749,4.006,2750,4.006,2751,4.006,2752,5.526,2753,5.526,2754,5.526,2755,4.006,2756,4.006,2757,4.006,2758,4.006,2759,4.006,2760,5.526,2761,4.006,2762,4.006,2763,4.006,2764,4.006,2765,4.006,2766,4.006,2767,4.006,2768,4.006,2769,5.526,2770,5.526,2771,4.006,2772,5.526,2773,3.5,2774,5.526,2775,4.006,2776,4.006,2777,4.006,2778,4.006,2779,4.006,2780,4.006,2781,6.821,2782,6.821,2783,4.006,2784,4.006,2785,4.006,2786,4.006,2787,4.006,2788,6.327,2789,6.327,2790,4.006,2791,4.006,2792,5.526,2793,4.006,2794,4.006,2795,4.006,2796,4.006,2797,4.006,2798,4.006,2799,3.5,2800,3.5,2801,4.006,2802,4.006]],["title/dependencies.html",[166,2.345,2803,2.972]],["body/dependencies.html",[28,0.013,31,0.421,80,5.178,161,0.01,162,0.01,166,2.822,182,3.077,184,1.962,186,1.899,193,2.029,317,4.024,408,3.962,409,3.077,425,3.077,468,1.723,579,4.024,600,6.219,601,5.186,633,6.219,634,5.178,635,5.178,648,1.899,2804,5.925,2805,8.38,2806,5.925,2807,7.117,2808,5.925,2809,5.925,2810,5.925,2811,5.925,2812,7.117,2813,5.925,2814,7.628,2815,5.925,2816,5.925,2817,5.925,2818,5.925,2819,5.925,2820,5.925,2821,6.219,2822,5.925,2823,7.117,2824,5.925,2825,7.117,2826,5.925,2827,5.925,2828,5.925,2829,5.925,2830,5.925,2831,5.925,2832,5.925,2833,5.925,2834,5.925,2835,5.925,2836,5.925,2837,5.925,2838,5.925,2839,5.925,2840,5.925,2841,5.925,2842,5.925,2843,5.925,2844,5.925,2845,5.925]],["title/miscellaneous/functions.html",[2846,2.478,2847,4.302]],["body/miscellaneous/functions.html",[20,0.473,28,0.012,101,0.831,161,0.01,162,0.01,216,1.861,219,1.014,223,2.751,225,2.245,227,3.786,229,2.719,232,3.642,254,0.631,255,1.093,256,0.949,260,1.891,276,1.315,277,3.3,279,3.642,296,2.719,298,1.309,302,2.837,404,4.16,410,3.614,425,2.965,441,3.899,598,4.514,614,2.423,644,5.502,648,2.504,654,5.502,657,5.502,664,4.438,861,3.44,1006,5.109,1051,3.877,1191,4.989,1193,4.725,1243,3.883,1276,3.106,1337,3.877,1478,3.877,1489,4.16,1758,3.642,1810,4.16,1830,3.877,1905,3.877,1973,5.502,2069,5.502,2080,4.514,2496,5.837,2653,6.081,2745,4.989,2773,4.989,2846,4.16,2847,4.989,2848,7.506,2849,5.709,2850,5.709,2851,5.709,2852,5.709,2853,5.709,2854,5.709,2855,5.709,2856,6.958,2857,5.709,2858,5.709,2859,5.709,2860,5.709,2861,5.709]],["title/interfaces/incidentInfo.html",[935,1.188,1995,2.463]],["body/interfaces/incidentInfo.html",[3,0.153,4,0.153,9,0.134,20,0.494,28,0.012,30,0.277,32,0.153,161,0.01,162,0.01,202,1.048,254,0.666,256,1.082,276,1.004,298,1.356,381,4.119,459,3.124,899,4.119,935,1.735,936,2.728,937,3.805,1211,4.533,1396,5.385,1398,5.778,1400,5.385,1674,4.347,1776,5.385,1995,4.305,2015,4.052,2225,6.93,2365,4.315,2862,7.93]],["title/index.html",[20,0.338,2863,3.572]],["body/index.html",[1,1.625,2,1.205,28,0.013,95,0.935,103,1.625,105,1.945,107,1.945,110,1.625,113,1.625,116,1.945,119,1.625,121,1.677,123,1.677,125,1.574,127,1.625,129,1.945,133,1.945,134,1.677,137,1.677,139,1.677,142,1.677,144,1.884,146,1.677,148,1.625,150,1.677,152,1.945,154,1.625,155,1.625,156,1.625,157,1.945,161,0.009,162,0.009,163,1.284,164,5.601,165,1.615,166,2.172,167,2.369,168,2.369,169,1.672,170,1.731,171,3.985,172,3.985,173,3.985,174,4.591,175,3.133,176,2.086,177,1.86,191,2.005,391,2.369,392,6.013,393,3.985,394,3.985,395,3.985,396,4.591,397,4.711,434,3.606,591,5.973,592,3.985,593,3.985,594,3.985,595,3.985,596,4.591,597,4.591,673,5.523,714,2.086,749,3.606,936,2.086,1302,6.013,1303,3.985,1304,3.985,1305,3.985,1306,4.591,1343,2.909,1421,3.448,2046,6.243,2047,3.985,2048,3.985,2049,3.985,2050,4.591,2163,5.601,2164,3.985,2165,3.985,2166,3.985,2167,4.591,2529,5.601,2530,3.985,2531,3.985,2532,3.985,2533,4.591,2537,3.985,2538,3.985,2539,3.985,2540,3.985,2541,4.885,2660,3.985,2661,3.985,2662,3.985,2663,4.591,2863,3.985,2864,4.561,2865,4.561,2866,4.561,2867,4.561,2868,4.561]],["title/modules.html",[165,1.984]],["body/modules.html",[28,0.01,161,0.01,162,0.01,164,4.493,165,2.184,174,4.187,392,4.493,396,4.187,397,3.355,591,4.493,597,4.187,601,6.185,673,4.187,1242,5.731,1302,4.493,1306,4.187,2046,4.493,2050,4.187,2163,4.493,2167,4.187,2529,4.493,2533,4.187,2663,4.187,2821,7.417,2869,8.488,2870,8.68,2871,8.438]],["title/properties.html",[202,0.722,2803,2.972]],["body/properties.html",[28,0.012,125,1.552,161,0.011,162,0.011,202,0.977,256,0.909,2872,6.666,2873,6.666,2874,7.626,2875,6.666,2876,6.666,2877,6.666,2878,6.666]],["title/routes.html",[191,2.464]],["body/routes.html",[28,0.011,161,0.011,162,0.011,191,2.985]],["title/miscellaneous/variables.html",[2846,2.478,2879,4.302]],["body/miscellaneous/variables.html",[20,0.439,28,0.013,34,6.992,110,1.275,113,1.275,114,2.049,144,1.275,155,1.275,156,1.275,161,0.01,162,0.01,254,0.647,263,1.973,277,2.924,309,1.912,310,2.933,426,3.448,482,1.879,625,6.021,661,4.241,939,4.845,940,3.865,941,5.434,942,5.258,1038,5.002,1039,5.002,1042,5.002,1043,5.002,1068,3.865,1069,5.171,1070,5.258,1706,4.845,1710,4.845,1711,4.845,1712,4.845,1713,4.845,1714,4.845,1715,5.293,1716,4.845,2056,3.865,2060,3.865,2091,3.865,2127,4.636,2389,4.195,2390,3.865,2391,5.258,2664,4.845,2665,5.258,2693,5.258,2737,5.811,2799,4.636,2800,4.636,2846,3.865,2879,4.636,2880,6.65,2881,5.305,2882,5.305,2883,5.305,2884,6.65,2885,5.305,2886,5.305,2887,5.305,2888,5.305,2889,5.305,2890,5.305,2891,5.305,2892,6.65,2893,6.65,2894,6.65,2895,6.65,2896,6.65,2897,6.65,2898,6.65,2899,6.65,2900,6.65,2901,6.65]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":58,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2873,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":2845,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":849,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["0.24",{"_index":1425,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["0.25",{"_index":1300,"title":{},"body":{"components/DataPage.html":{}}}],["0.5rem",{"_index":386,"title":{},"body":{"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["0.8em",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2739,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2749,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2764,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2748,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2744,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2747,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2751,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2750,"title":{},"body":{"coverage.html":{}}}],["0f212d",{"_index":72,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["0px",{"_index":1298,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["1",{"_index":65,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["1.6rem",{"_index":2162,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["1/1",{"_index":2746,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2769,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2771,"title":{},"body":{"coverage.html":{}}}],["10.10.0",{"_index":2833,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":2766,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":88,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["100px",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":83,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["11.0.2",{"_index":2836,"title":{},"body":{"dependencies.html":{}}}],["11/17",{"_index":2796,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2867,"title":{},"body":{"index.html":{}}}],["12/14",{"_index":2778,"title":{},"body":{"coverage.html":{}}}],["13",{"_index":2866,"title":{},"body":{"index.html":{}}}],["15",{"_index":2567,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["15.0.0",{"_index":2828,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1422,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["16px",{"_index":1429,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["17",{"_index":2864,"title":{},"body":{"index.html":{}}}],["17.0.2",{"_index":2805,"title":{},"body":{"dependencies.html":{}}}],["17.13.0",{"_index":2840,"title":{},"body":{"dependencies.html":{}}}],["17.3.3",{"_index":2807,"title":{},"body":{"dependencies.html":{}}}],["19/23",{"_index":2782,"title":{},"body":{"coverage.html":{}}}],["190px",{"_index":2243,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["1:770666336001:web:96e7751d6f04cea0b39500",{"_index":2899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b3e56",{"_index":1287,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["1px",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["2",{"_index":1421,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"index.html":{}}}],["2.0.4",{"_index":2827,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2843,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":2743,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2792,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2775,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2777,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":2456,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["20px",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{}}}],["22/37",{"_index":2763,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":2868,"title":{},"body":{"index.html":{}}}],["24px",{"_index":1296,"title":{},"body":{"components/DataPage.html":{}}}],["250px",{"_index":1258,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["27",{"_index":2865,"title":{},"body":{"index.html":{}}}],["28",{"_index":2776,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":2246,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["2px",{"_index":846,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["2rem",{"_index":2161,"title":{},"body":{"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["3",{"_index":842,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["3/4",{"_index":2754,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2759,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2790,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2789,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":365,"title":{},"body":{"components/AccessPage.html":{},"components/RegisterFormComponent.html":{}}}],["300px",{"_index":1293,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["30px",{"_index":76,"title":{},"body":{"components/AboutPage.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["33",{"_index":2770,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":2334,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["36a2eb",{"_index":2191,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["4",{"_index":2514,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["4.4.3",{"_index":2832,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":2752,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":2772,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2160,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["40px",{"_index":575,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["42",{"_index":2788,"title":{},"body":{"coverage.html":{}}}],["42a5f5",{"_index":2639,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["46",{"_index":2793,"title":{},"body":{"coverage.html":{}}}],["49",{"_index":2158,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["495057",{"_index":2199,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["4px",{"_index":1285,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["5",{"_index":391,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["5.0.7",{"_index":2814,"title":{},"body":{"dependencies.html":{}}}],["5.0.8",{"_index":2817,"title":{},"body":{"dependencies.html":{}}}],["5.12.2",{"_index":2835,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":2838,"title":{},"body":{"dependencies.html":{}}}],["5.7.4",{"_index":2812,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":2755,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2757,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2780,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1295,"title":{},"body":{"components/DataPage.html":{},"coverage.html":{}}}],["50px",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/SettingsPage.html":{}}}],["54",{"_index":2797,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":2779,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":2740,"title":{},"body":{"coverage.html":{}}}],["59",{"_index":2762,"title":{},"body":{"coverage.html":{}}}],["5rem",{"_index":93,"title":{},"body":{"components/AboutPage.html":{}}}],["6",{"_index":2568,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["6.5.2",{"_index":2823,"title":{},"body":{"dependencies.html":{}}}],["6/11",{"_index":2798,"title":{},"body":{"coverage.html":{}}}],["6/12",{"_index":2791,"title":{},"body":{"coverage.html":{}}}],["6/13",{"_index":2794,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2761,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":2774,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2758,"title":{},"body":{"coverage.html":{}}}],["6000",{"_index":361,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["600px",{"_index":92,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["60px",{"_index":589,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["64",{"_index":2795,"title":{},"body":{"coverage.html":{}}}],["64b5f6",{"_index":2641,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["66",{"_index":2742,"title":{},"body":{"coverage.html":{}}}],["66bb6a",{"_index":2640,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["7.0.0",{"_index":2825,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2841,"title":{},"body":{"dependencies.html":{}}}],["7/12",{"_index":2741,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2768,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2787,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":375,"title":{},"body":{"components/AccessPage.html":{},"components/SettingsPage.html":{}}}],["700px",{"_index":390,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/UsersInfoComponent.html":{}}}],["71",{"_index":1424,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["72",{"_index":2783,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2753,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2786,"title":{},"body":{"coverage.html":{}}}],["770666336001",{"_index":2898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["777777",{"_index":1289,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["8",{"_index":1246,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["8.0.0",{"_index":2830,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":2785,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":2784,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":841,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["80px",{"_index":1301,"title":{},"body":{"components/DataPage.html":{}}}],["80vh",{"_index":2461,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["81c784",{"_index":2642,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["82",{"_index":2781,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2756,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2760,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":1432,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["86.3vh",{"_index":56,"title":{},"body":{"components/AboutPage.html":{}}}],["87",{"_index":2767,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":1283,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["9",{"_index":1365,"title":{},"body":{"classes/EmailValidation.html":{}}}],["9._",{"_index":1364,"title":{},"body":{"classes/EmailValidation.html":{}}}],["90",{"_index":2765,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":74,"title":{},"body":{"components/AboutPage.html":{}}}],["900px",{"_index":848,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentDataPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["90px",{"_index":70,"title":{},"body":{"components/AboutPage.html":{}}}],["95",{"_index":1433,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{}}}],["_",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["__forms",{"_index":367,"title":{},"body":{"components/AccessPage.html":{}}}],["__image",{"_index":376,"title":{},"body":{"components/AccessPage.html":{}}}],["__status",{"_index":2245,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["__title",{"_index":2244,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["_app",{"_index":1690,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_auth",{"_index":1692,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{}}}],["_categories",{"_index":1700,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_category",{"_index":1036,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["_categoryservice",{"_index":1164,"title":{},"body":{"components/DataPage.html":{}}}],["_data",{"_index":324,"title":{},"body":{"components/AccessPage.html":{}}}],["_data.role",{"_index":325,"title":{},"body":{"components/AccessPage.html":{}}}],["_db",{"_index":1691,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_firebaseservice",{"_index":1169,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["_firebasesvc",{"_index":2646,"title":{},"body":{"components/UserDataPage.html":{}}}],["_headers",{"_index":2123,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["_headers.set('accept",{"_index":2125,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["_incidents",{"_index":1698,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_info",{"_index":1566,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["_info.uuid",{"_index":1567,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["_islogged",{"_index":1694,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_item",{"_index":2275,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["_language",{"_index":1122,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["_logged",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["_picture",{"_index":2392,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["_router",{"_index":2488,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["_user",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["_users",{"_index":1696,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_webstorage",{"_index":1693,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["a4ef9",{"_index":2896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a4ef9.appspot.com",{"_index":2897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a4ef9.firebaseapp.com",{"_index":2895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["about'},{'name",{"_index":102,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["about.page",{"_index":188,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{}}}],["about.page.html",{"_index":19,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":164,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["aboutpageroutingmodule",{"_index":174,"title":{"modules/AboutPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["absolute",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["abstract",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/MediaService.html":{}}}],["abstractcontrol",{"_index":1355,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["acc",{"_index":2184,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["acc[categoryname",{"_index":2183,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["acc[user.role",{"_index":2632,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["access",{"_index":199,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["access'},{'name",{"_index":104,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["access.page",{"_index":400,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{}}}],["access.page.html",{"_index":201,"title":{},"body":{"components/AccessPage.html":{}}}],["access.page.scss",{"_index":200,"title":{},"body":{"components/AccessPage.html":{}}}],["access.tologin",{"_index":363,"title":{},"body":{"components/AccessPage.html":{}}}],["access.toregister",{"_index":362,"title":{},"body":{"components/AccessPage.html":{}}}],["access.webp",{"_index":383,"title":{},"body":{"components/AccessPage.html":{}}}],["access__forms",{"_index":371,"title":{},"body":{"components/AccessPage.html":{}}}],["access__image",{"_index":2482,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["accessors",{"_index":961,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["accesspage",{"_index":103,"title":{"components/AccessPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["accesspagemodule",{"_index":392,"title":{"modules/AccessPageModule.html":{}},"body":{"modules/AccessPageModule.html":{},"index.html":{},"modules.html":{}}}],["accesspageroutingmodule",{"_index":396,"title":{"modules/AccessPageRoutingModule.html":{}},"body":{"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["according",{"_index":2376,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["accordingly",{"_index":806,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["accordionmodule",{"_index":1313,"title":{},"body":{"modules/DataPageModule.html":{},"modules/SettingsPageModule.html":{}}}],["account",{"_index":1922,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["action",{"_index":1447,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["actions",{"_index":847,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["activated",{"_index":451,"title":{},"body":{"guards/AdminGuard.html":{}}}],["activatedroute",{"_index":213,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["activatedroutesnapshot",{"_index":443,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["actual_component",{"_index":160,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["actualizada",{"_index":904,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["actualizar",{"_index":930,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["add",{"_index":1808,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adddoc",{"_index":1662,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adddoc(collectionref",{"_index":1815,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adding",{"_index":1136,"title":{},"body":{"injectables/CustomTranslateService.html":{},"pipes/ShortenTextPipe.html":{}}}],["additional",{"_index":1522,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["address",{"_index":1921,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adds",{"_index":758,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["admin",{"_index":448,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/CategoryInfo.html":{}}}],["adminguard",{"_index":433,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminid",{"_index":938,"title":{},"body":{"interfaces/CategoryInfo.html":{}}}],["against",{"_index":1865,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["age",{"_index":1955,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["aizasydongue6cpcz6vkkf",{"_index":2893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":908,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["align",{"_index":63,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["alldata",{"_index":1742,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldata[collectionname",{"_index":1746,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldocs",{"_index":1842,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldocs.docs.filter((doc",{"_index":1845,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["allowed",{"_index":1290,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["allowing",{"_index":1809,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["allows",{"_index":249,"title":{},"body":{"components/AccessPage.html":{},"injectables/IncidentsService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["already",{"_index":341,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["androidscheme",{"_index":2890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":243,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["angular's",{"_index":2255,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["angular/animations",{"_index":2804,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2806,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"injectables/ThemeService.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":405,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/compiler",{"_index":2808,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":184,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"modules/DataPageModule.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"modules/SettingsPageModule.html":{},"components/UpdateUserComponent.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2809,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":418,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/checkbox",{"_index":2055,"title":{},"body":{"modules/HomePageModule.html":{}}}],["angular/material/dialog",{"_index":641,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":413,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/icon",{"_index":420,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/input",{"_index":416,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/select",{"_index":1312,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/tabs",{"_index":1310,"title":{},"body":{"modules/DataPageModule.html":{}}}],["angular/platform",{"_index":600,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":193,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UsersInfoComponent.html":{},"dependencies.html":{}}}],["anonymously",{"_index":1898,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["api",{"_index":1034,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["apikey",{"_index":1710,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["app.component",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":105,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["append",{"_index":2566,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["appends",{"_index":765,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["appid",{"_index":1715,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":239,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["application/pdf",{"_index":1765,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["application/x",{"_index":2126,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["applies",{"_index":1389,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{}}}],["apply",{"_index":1431,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{}}}],["applying",{"_index":2012,"title":{},"body":{"components/HomePage.html":{}}}],["appmodule",{"_index":591,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appname",{"_index":2887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":597,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["argument",{"_index":2861,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arguments",{"_index":799,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["around",{"_index":2527,"title":{},"body":{"components/SettingsPage.html":{}}}],["array",{"_index":1832,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["arrays",{"_index":1741,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["asociadas",{"_index":923,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["assigns",{"_index":2709,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["associated",{"_index":246,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["assumes",{"_index":1621,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["async",{"_index":328,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["async)?.name",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["async)?.surname",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["asynchronous",{"_index":1535,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["asynchronously",{"_index":1972,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["attempts",{"_index":1479,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth",{"_index":257,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["auth.service",{"_index":613,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["auth.service.ts",{"_index":1472,"title":{},"body":{"classes/FirebaseAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:10",{"_index":1476,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["auth.service.ts:124",{"_index":1513,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["auth.user",{"_index":556,"title":{},"body":{"components/AppComponent.html":{}}}],["auth.user$|async)?.name",{"_index":2522,"title":{},"body":{"components/SettingsPage.html":{}}}],["auth.user$|async)?.surname",{"_index":2523,"title":{},"body":{"components/SettingsPage.html":{}}}],["auth.user$|async)?.username",{"_index":2524,"title":{},"body":{"components/SettingsPage.html":{}}}],["auth/email",{"_index":340,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/invalid",{"_index":351,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/operation",{"_index":1937,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/weak",{"_index":1939,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["authdomain",{"_index":1711,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":1925,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["authenticated",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":258,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["authguard",{"_index":670,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":2877,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":259,"title":{},"body":{"components/AccessPage.html":{},"components/HomePage.html":{}}}],["authservice",{"_index":209,"title":{"injectables/AuthService.html":{}},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["authservice:10",{"_index":1485,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:11",{"_index":1484,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:12",{"_index":1486,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:153",{"_index":1504,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:178",{"_index":1498,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:189",{"_index":1530,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:44",{"_index":1487,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:83",{"_index":1520,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:9",{"_index":1483,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservicefactory",{"_index":657,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authservicefactory(backend",{"_index":2851,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auto",{"_index":66,"title":{},"body":{"components/AboutPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["automatically",{"_index":1477,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["available",{"_index":1242,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules.html":{}}}],["avatar",{"_index":587,"title":{},"body":{"components/AppComponent.html":{}}}],["await",{"_index":332,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["backend",{"_index":664,"title":{},"body":{"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/functions.html":{}}}],["backend:string",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["background",{"_index":378,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["backgroundcolor",{"_index":2189,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["bar",{"_index":2819,"title":{},"body":{"dependencies.html":{}}}],["base64",{"_index":2857,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":253,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LocalService.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["bbbbbb",{"_index":2248,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["bd1e1e",{"_index":1430,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["before",{"_index":766,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["behaviorsubject",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["behaviorsubject(false",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["behaviorsubject(null",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{}}}],["being",{"_index":292,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/PictureSelectableComponent.html":{},"injectables/UsersService.html":{}}}],["between",{"_index":52,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["binary",{"_index":1759,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["blob",{"_index":1243,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["blob([csvcontent",{"_index":1244,"title":{},"body":{"components/DataPage.html":{}}}],["blobs",{"_index":1755,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["block",{"_index":82,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/DataPage.html":{},"components/PictureSelectableComponent.html":{}}}],["body",{"_index":2076,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["bold",{"_index":583,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["boolean",{"_index":459,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["bootstrap",{"_index":168,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["border",{"_index":387,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["borrada",{"_index":927,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["borrar",{"_index":919,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["both",{"_index":1539,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["bottom",{"_index":77,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["box",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["boxes",{"_index":1170,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["break",{"_index":345,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["browse",{"_index":2870,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":601,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":440,"title":{},"body":{"guards/AdminGuard.html":{}}}],["browser/animations",{"_index":604,"title":{},"body":{"modules/AppModule.html":{}}}],["browser/animations/async",{"_index":610,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":603,"title":{},"body":{"modules/AppModule.html":{}}}],["browserlanguage",{"_index":2306,"title":{},"body":{"injectables/LocalService.html":{}}}],["browsermodule",{"_index":599,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":1772,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["building",{"_index":1440,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["button",{"_index":384,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["button.picture",{"_index":2457,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["búsqueda",{"_index":1854,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["c.name",{"_index":883,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["calc((100vw",{"_index":2242,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["calc(33.333",{"_index":2044,"title":{},"body":{"components/HomePage.html":{}}}],["callback",{"_index":1006,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":1905,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["calling",{"_index":1499,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["calls",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{}}}],["campo",{"_index":1961,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["canactivate",{"_index":436,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":442,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["cancel",{"_index":1102,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["capacitor.config.ts",{"_index":2737,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":2811,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":2813,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":2815,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":317,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"dependencies.html":{}}}],["capacitor/keyboard",{"_index":2816,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":2818,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":2885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalized",{"_index":768,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["capitalizeinitial",{"_index":559,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{}}}],["capitalizeinitialpipe",{"_index":596,"title":{"pipes/CapitalizeInitialPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{},"index.html":{}}}],["capitalizes",{"_index":756,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["capitalizing",{"_index":1518,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["card",{"_index":2241,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["case",{"_index":339,"title":{},"body":{"components/AccessPage.html":{},"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["cases",{"_index":287,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch",{"_index":1049,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["catch((err",{"_index":1151,"title":{},"body":{"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch((error",{"_index":1227,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["catch(async",{"_index":1803,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catcherror",{"_index":874,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["catcherror((err",{"_index":906,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["categories",{"_index":108,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["categoriesinfocomponent",{"_index":107,"title":{"components/CategoriesInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["categoriesselectorcomponent",{"_index":964,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoriesservice",{"_index":850,"title":{"injectables/CategoriesService.html":{}},"body":{"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"coverage.html":{}}}],["category",{"_index":111,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["category'},{'name",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["category(_category",{"_index":1045,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["category.admin",{"_index":894,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.adminid",{"_index":892,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.component",{"_index":1216,"title":{},"body":{"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["category.component.html",{"_index":2274,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["category.component.scss",{"_index":2273,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["category.component.ts",{"_index":2272,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:12",{"_index":2346,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:13",{"_index":2347,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:16",{"_index":2278,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:20",{"_index":2339,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:23",{"_index":2279,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:30",{"_index":2285,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:32",{"_index":2277,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:33",{"_index":2340,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:36",{"_index":2280,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:37",{"_index":2338,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:42",{"_index":2281,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:56",{"_index":2341,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:62",{"_index":2344,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:70",{"_index":2342,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:9",{"_index":2283,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.description",{"_index":839,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["category.name",{"_index":838,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{}}}],["category.uuid",{"_index":926,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category/item",{"_index":2057,"title":{},"body":{"modules/HomePageModule.html":{},"components/ItemCategoryComponent.html":{},"coverage.html":{}}}],["category/modal",{"_index":1215,"title":{},"body":{"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["category_selectable_mobile_value_accessor",{"_index":1070,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category_selectable_value_accessor",{"_index":942,"title":{},"body":{"components/CategorySelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorycounts",{"_index":2181,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["categoryid",{"_index":867,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryinfo",{"_index":793,"title":{"interfaces/CategoryInfo.html":{}},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["categoryinfo(category",{"_index":2350,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["categoryname",{"_index":1396,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"interfaces/incidentInfo.html":{}}}],["categorynamevalue",{"_index":2032,"title":{},"body":{"components/HomePage.html":{}}}],["categoryselectablecomponent",{"_index":110,"title":{"components/CategorySelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categoryselectablemobilecomponent",{"_index":113,"title":{"components/CategorySelectableMobileComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categoryselected",{"_index":945,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoryselected.data.name",{"_index":1067,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoryservice",{"_index":946,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoría",{"_index":885,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["cccccc",{"_index":1288,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["center",{"_index":64,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["certain",{"_index":1928,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["chain",{"_index":1534,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["change",{"_index":1018,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["changeform",{"_index":203,"title":{},"body":{"components/AccessPage.html":{}}}],["changepicture",{"_index":2394,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture",{"_index":2402,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changes",{"_index":1007,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["changing",{"_index":2420,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["character",{"_index":764,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["characters",{"_index":1943,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["chart",{"_index":2177,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["chart.js",{"_index":2831,"title":{},"body":{"dependencies.html":{}}}],["chartdata",{"_index":2196,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["chartmodule",{"_index":2552,"title":{},"body":{"modules/SharedModule.html":{}}}],["chato",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["checkbox",{"_index":1428,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["checked",{"_index":1398,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/incidentInfo.html":{}}}],["checkedvalue",{"_index":2034,"title":{},"body":{"components/HomePage.html":{}}}],["checking",{"_index":790,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["checks",{"_index":447,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{}}}],["checkscreensize",{"_index":778,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["checkscreensize(width",{"_index":807,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["children",{"_index":677,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["circle",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["class",{"_index":33,"title":{"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"classes/PasswordValidation.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":1343,"title":{},"body":{"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"classes/PasswordValidation.html":{},"index.html":{}}}],["clears",{"_index":978,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["clearsearch",{"_index":949,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["clearsearch(input",{"_index":975,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["clearselection",{"_index":950,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["click",{"_index":2215,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["clicked",{"_index":815,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["clicks",{"_index":2282,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["client",{"_index":621,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["client.provider",{"_index":630,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{}}}],["client.provider.ts",{"_index":2063,"title":{},"body":{"injectables/HttpClientProvider.html":{},"coverage.html":{}}}],["client.provider.ts:16",{"_index":2074,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:26",{"_index":2072,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:37",{"_index":2082,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:53",{"_index":2084,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:69",{"_index":2078,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:84",{"_index":2068,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:94",{"_index":2089,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["close",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["closes",{"_index":1108,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":171,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":172,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_imports",{"_index":173,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule",{"_index":393,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule_declarations",{"_index":394,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule_imports",{"_index":395,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":592,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":595,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":594,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":593,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_datapagemodule",{"_index":1303,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_datapagemodule_declarations",{"_index":1305,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_datapagemodule_imports",{"_index":1304,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":2047,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":2048,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_imports",{"_index":2049,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule",{"_index":2164,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule_declarations",{"_index":2165,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule_imports",{"_index":2166,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule",{"_index":2530,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule_declarations",{"_index":2532,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule_imports",{"_index":2531,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_sharedmodule",{"_index":2537,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2538,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_exports",{"_index":2540,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_imports",{"_index":2539,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule",{"_index":2660,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule_declarations",{"_index":2662,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule_imports",{"_index":2661,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["code",{"_index":1933,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["coincidan",{"_index":1852,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection",{"_index":1510,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection's",{"_index":1838,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection(this._db",{"_index":1745,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionname",{"_index":1743,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionname/documentid",{"_index":1613,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["collectionref",{"_index":1814,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionreference",{"_index":1673,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collections",{"_index":1705,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["color",{"_index":71,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["column",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["combinelatest",{"_index":2715,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["commonmodule",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["complete",{"_index":1502,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["completed",{"_index":2860,"title":{},"body":{"miscellaneous/functions.html":{}}}],["completes",{"_index":1526,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["completing",{"_index":2410,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["completion",{"_index":1503,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["component_template",{"_index":100,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["componentprops",{"_index":1264,"title":{},"body":{"components/DataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["components/categories",{"_index":2550,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/confirm",{"_index":2551,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/incidents",{"_index":2549,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/picture",{"_index":2548,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/user",{"_index":2554,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/users",{"_index":2543,"title":{},"body":{"modules/SharedModule.html":{}}}],["con",{"_index":886,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["concatenated",{"_index":1775,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["condition",{"_index":1868,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["config",{"_index":661,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":1707,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["confirm",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["confirmation",{"_index":1205,"title":{},"body":{"components/DataPage.html":{}}}],["confirmcontrolname",{"_index":2371,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["confirmdialogcomponent",{"_index":116,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["confirmed",{"_index":2654,"title":{},"body":{"components/UserDataPage.html":{}}}],["confirmpassword",{"_index":2383,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["connect",{"_index":1488,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["connectanonymously",{"_index":1904,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connected",{"_index":1506,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connects",{"_index":1916,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connectuserwithemailandpassword",{"_index":1552,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.error('error",{"_index":1050,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["console.error('failed",{"_index":1228,"title":{},"body":{"components/DataPage.html":{}}}],["console.error('no",{"_index":1241,"title":{},"body":{"components/DataPage.html":{}}}],["console.error(err",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{}}}],["console.log",{"_index":1940,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log('all",{"_index":329,"title":{},"body":{"components/AccessPage.html":{}}}],["console.log('bad",{"_index":350,"title":{},"body":{"components/AccessPage.html":{}}}],["console.log('filtervalues",{"_index":2026,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('object",{"_index":896,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["console.log('user",{"_index":2508,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["console.log(`email",{"_index":1936,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(`error",{"_index":1938,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(err",{"_index":1547,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["console.log(error",{"_index":2450,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["console.log(error.message",{"_index":1946,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(id",{"_index":2019,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(results.data",{"_index":2511,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["console.log(this.form.value",{"_index":1413,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["console.log(this.message.message",{"_index":1115,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["console.log(this.themelink",{"_index":2598,"title":{},"body":{"injectables/ThemeService.html":{}}}],["console.log(this.themelink.href",{"_index":2601,"title":{},"body":{"injectables/ThemeService.html":{}}}],["const",{"_index":194,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"injectables/ThemeService.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["construct",{"_index":1784,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject('firebase",{"_index":1702,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["constructor(_auth",{"_index":1999,"title":{},"body":{"components/HomePage.html":{}}}],["constructor(_firebaseservice",{"_index":1163,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["constructor(auth",{"_index":208,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["constructor(categoryservice",{"_index":962,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["constructor(dialogref",{"_index":1103,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["constructor(filterservice",{"_index":1376,"title":{},"body":{"components/FilterComponent.html":{}}}],["constructor(firebase",{"_index":1604,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{}}}],["constructor(firebaseservice",{"_index":855,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["constructor(firebasesvc",{"_index":1475,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["constructor(formbuilder",{"_index":1437,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["constructor(httpclient",{"_index":2096,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["constructor(lang",{"_index":2307,"title":{},"body":{"injectables/LocalService.html":{}}}],["constructor(picturemodal",{"_index":2398,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["constructor(private",{"_index":474,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{}}}],["constructor(protected",{"_index":1630,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["constructor(rendererfactory",{"_index":2576,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(route",{"_index":2132,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["constructor(router",{"_index":2707,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["constructor(translate",{"_index":1125,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["constructor(userservice",{"_index":2205,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["constructs",{"_index":789,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["contain",{"_index":1830,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["container",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["containing",{"_index":278,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["contains",{"_index":291,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/UsersService.html":{}}}],["content",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["contenttype",{"_index":1797,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["contrast",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":1349,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"components/UserDataPage.html":{}}}],["control.errors",{"_index":2388,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(confirmcontrolname)?.value",{"_index":2384,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(controlname)?.value",{"_index":1360,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["control.get(passwordcontrolname)?.value",{"_index":2382,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control?.errors",{"_index":2385,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control?.value",{"_index":1359,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["controller",{"_index":2648,"title":{},"body":{"components/UserDataPage.html":{}}}],["controlname",{"_index":1350,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["controls",{"_index":1426,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/RegisterFormComponent.html":{}}}],["controlvalueaccessor",{"_index":2434,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["converted",{"_index":1201,"title":{},"body":{"components/DataPage.html":{}}}],["converts",{"_index":1191,"title":{},"body":{"components/DataPage.html":{},"miscellaneous/functions.html":{}}}],["core",{"_index":2822,"title":{},"body":{"dependencies.html":{}}}],["core/guards/admin.guard",{"_index":672,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/auth.guard",{"_index":671,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/pipes/capitalize",{"_index":636,"title":{},"body":{"modules/AppModule.html":{}}}],["core/pipes/shorten",{"_index":2546,"title":{},"body":{"modules/SharedModule.html":{}}}],["core/services/auth.service",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["core/services/data.service",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/firebase/api/firebase",{"_index":612,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/firebase/firebase.service",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/http/http",{"_index":620,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/media.service",{"_index":624,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/theme/theme.service",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["core/services/translate/local.service",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["core/translate/translate",{"_index":608,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["corresponding",{"_index":2651,"title":{},"body":{"components/UserDataPage.html":{}}}],["cover",{"_index":380,"title":{},"body":{"components/AccessPage.html":{}}}],["coverage",{"_index":2734,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creada",{"_index":902,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["crear",{"_index":909,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["create",{"_index":1276,"title":{},"body":{"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["createbody",{"_index":2094,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createbody(body",{"_index":2099,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createcategory",{"_index":852,"title":{},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{}}}],["createcategory(category",{"_index":858,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["created",{"_index":861,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["createdocument",{"_index":1807,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdocument(collectionname",{"_index":1812,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdocumentwithid",{"_index":1819,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createheaders",{"_index":2095,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createheaders(headers",{"_index":2102,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["creates",{"_index":860,"title":{},"body":{"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["createtranslateloader",{"_index":410,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":2854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createuserwithemailandpassword",{"_index":1681,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createuserwithemailandpassword(info.email",{"_index":1564,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["creating",{"_index":1174,"title":{},"body":{"components/DataPage.html":{},"injectables/DataService.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{}}}],["credentials",{"_index":270,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{}}}],["credentials.email",{"_index":1553,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.password",{"_index":1554,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user",{"_index":1556,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user.user",{"_index":1557,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user.user.uid",{"_index":1558,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["criteria",{"_index":1841,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["criterio",{"_index":1853,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["cssclass",{"_index":2509,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["csv",{"_index":1182,"title":{},"body":{"components/DataPage.html":{}}}],["csvcontent",{"_index":1183,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles",{"_index":1221,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles.hasownproperty(key",{"_index":1223,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles[key",{"_index":1224,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows",{"_index":1234,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows.join('\\r\\n",{"_index":1240,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows.unshift(headers.join",{"_index":1239,"title":{},"body":{"components/DataPage.html":{}}}],["current",{"_index":251,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["currentlang",{"_index":2486,"title":{},"body":{"components/SettingsPage.html":{}}}],["currently",{"_index":986,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["currentuser",{"_index":2719,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["currentuser?.uuid",{"_index":2620,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["cursor",{"_index":388,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["customtranslateservice",{"_index":211,"title":{"injectables/CustomTranslateService.html":{}},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["dark",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["data",{"_index":276,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"injectables/DataService.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{}}}],["data'},{'name",{"_index":120,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["data)).pipe",{"_index":1644,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.categories",{"_index":834,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["data.create",{"_index":1281,"title":{},"body":{"components/DataPage.html":{},"components/ModalCategoryComponent.html":{}}}],["data.data",{"_index":1279,"title":{},"body":{"components/DataPage.html":{}}}],["data.data['email",{"_index":1591,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['name",{"_index":1588,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['picture",{"_index":1590,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['role",{"_index":1592,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['surname",{"_index":1589,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['username",{"_index":1593,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.download",{"_index":1280,"title":{},"body":{"components/DataPage.html":{}}}],["data.file",{"_index":1987,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["data.graphic",{"_index":1282,"title":{},"body":{"components/DataPage.html":{}}}],["data.id",{"_index":1594,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.length",{"_index":1637,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.map((doc",{"_index":1632,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.module",{"_index":676,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module').then",{"_index":685,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module').then(m",{"_index":698,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module.ts",{"_index":2168,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["data.page",{"_index":1308,"title":{},"body":{"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["data.page.html",{"_index":1158,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.scss",{"_index":1157,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts",{"_index":2129,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["data.page.ts:115",{"_index":2139,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:18",{"_index":2142,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts:19",{"_index":2134,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts:34",{"_index":2141,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:40",{"_index":2135,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:44",{"_index":2649,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.page.ts:64",{"_index":2137,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:65",{"_index":2652,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.page.ts:95",{"_index":2140,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.service",{"_index":1629,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.service.ts",{"_index":1603,"title":{},"body":{"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["data.service.ts:6",{"_index":1605,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.update",{"_index":2526,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["data.users",{"_index":2691,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["data/:id",{"_index":682,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data/incident",{"_index":684,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"coverage.html":{}}}],["data/modal",{"_index":2016,"title":{},"body":{"components/HomePage.html":{}}}],["data/update",{"_index":2498,"title":{},"body":{"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"coverage.html":{}}}],["data/user",{"_index":675,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"coverage.html":{}}}],["data:t",{"_index":2363,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["database",{"_index":1523,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dataobject",{"_index":1200,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject.hasownproperty(key",{"_index":1230,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject[key].length",{"_index":1231,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject[key].map((row",{"_index":1235,"title":{},"body":{"components/DataPage.html":{}}}],["datapage",{"_index":119,"title":{"components/DataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["datapagemodule",{"_index":1302,"title":{"modules/DataPageModule.html":{}},"body":{"modules/DataPageModule.html":{},"index.html":{},"modules.html":{}}}],["datapageroutingmodule",{"_index":1306,"title":{"modules/DataPageRoutingModule.html":{}},"body":{"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["dataservice",{"_index":627,"title":{"injectables/DataService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["dataservice:101",{"_index":1610,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:24",{"_index":1623,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:52",{"_index":1614,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:72",{"_index":1618,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:85",{"_index":1620,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataset",{"_index":1195,"title":{},"body":{"components/DataPage.html":{}}}],["datasets",{"_index":2187,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["dataurl",{"_index":2856,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob",{"_index":2496,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":2855,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob(results.data.picture",{"_index":2515,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["datauser",{"_index":2706,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["datauser(userid",{"_index":2712,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["date",{"_index":2225,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["date(this.incident.date",{"_index":2220,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["date.now",{"_index":1794,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["date.tolocaledatestring",{"_index":2227,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["date.tolocaletimestring",{"_index":2228,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["de",{"_index":41,"title":{},"body":{"components/AboutPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["declarations",{"_index":167,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["decorators",{"_index":823,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["default",{"_index":309,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":814,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{}}}],["delete(resource",{"_index":1319,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["delete(url",{"_index":2067,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["deletecategory",{"_index":779,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{}}}],["deletecategory(category",{"_index":812,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{}}}],["deletecategory(info",{"_index":1175,"title":{},"body":{"components/DataPage.html":{}}}],["deleted",{"_index":816,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedoc",{"_index":1669,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedoc(docref",{"_index":1879,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedocument",{"_index":1873,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedocument('categoryinfo",{"_index":925,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["deletes",{"_index":864,"title":{},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deleteuser",{"_index":1682,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deleting",{"_index":1206,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["deletion",{"_index":2424,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["dependencies",{"_index":166,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":2253,"title":{},"body":{"injectables/IncidentsService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["depending",{"_index":1783,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deps",{"_index":428,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["description",{"_index":256,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"properties.html":{}}}],["deselect",{"_index":951,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["deselect(popover",{"_index":982,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["deselects",{"_index":985,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["designed",{"_index":1971,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["desired",{"_index":1884,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["desktop",{"_index":2045,"title":{},"body":{"components/HomePage.html":{}}}],["destroyed",{"_index":2406,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["detail",{"_index":359,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["detailed",{"_index":1508,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["details",{"_index":295,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["dialog",{"_index":1098,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["dialog'},{'name",{"_index":118,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["dialog.${this.message.message",{"_index":1116,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component",{"_index":1214,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"modules/SharedModule.html":{}}}],["dialog.component.html",{"_index":1100,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1099,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1097,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":1105,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1110,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1112,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":1109,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":1107,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.no",{"_index":1119,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.yes",{"_index":1120,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog/confirm",{"_index":1096,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":1101,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":1259,"title":{},"body":{"components/DataPage.html":{}}}],["dialogref.afterclosed().subscribe(async",{"_index":2150,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["dialogs",{"_index":1171,"title":{},"body":{"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{}}}],["different",{"_index":235,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["direction",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["directive",{"_index":98,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["directives",{"_index":159,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["directly",{"_index":2859,"title":{},"body":{"miscellaneous/functions.html":{}}}],["directory",{"_index":1771,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["disabled",{"_index":947,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["dismisses",{"_index":1449,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["display",{"_index":45,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["display:flex",{"_index":585,"title":{},"body":{"components/AppComponent.html":{}}}],["displayed",{"_index":301,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["displaying",{"_index":240,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["displays",{"_index":220,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["div",{"_index":2333,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["div.user",{"_index":2455,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["dividermodule",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":1647,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc(this._db",{"_index":1826,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.data",{"_index":1634,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.id",{"_index":1633,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.id.includes(substring",{"_index":1846,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docid",{"_index":1822,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docref",{"_index":900,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap",{"_index":1858,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.data",{"_index":1862,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.exists",{"_index":1860,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.id",{"_index":1861,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["document",{"_index":1515,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/ThemeService.html":{}}}],["document.body.appendchild(link",{"_index":1253,"title":{},"body":{"components/DataPage.html":{}}}],["document.body.removechild(link",{"_index":1255,"title":{},"body":{"components/DataPage.html":{}}}],["document.createelement('a",{"_index":1249,"title":{},"body":{"components/DataPage.html":{}}}],["document.getelementbyid('app",{"_index":2589,"title":{},"body":{"injectables/ThemeService.html":{}}}],["documentation",{"_index":2735,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":1656,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentos",{"_index":1850,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentpath",{"_index":1888,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentref",{"_index":1893,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentreference",{"_index":1670,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documents",{"_index":1608,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentsnapshot",{"_index":1671,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["download",{"_index":1181,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["downloadcsv",{"_index":1159,"title":{},"body":{"components/DataPage.html":{}}}],["downloadcsv(csvcontent",{"_index":1177,"title":{},"body":{"components/DataPage.html":{}}}],["downloaded",{"_index":1184,"title":{},"body":{"components/DataPage.html":{}}}],["downloads",{"_index":1192,"title":{},"body":{"components/DataPage.html":{}}}],["downloadurl",{"_index":1801,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dropdownmodule",{"_index":642,"title":{},"body":{"modules/AppModule.html":{}}}],["during",{"_index":288,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["dynamic",{"_index":2810,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":1923,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["each",{"_index":1194,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["edit",{"_index":819,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["editcategory",{"_index":780,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{}}}],["editcategory(category",{"_index":817,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["editcategory(info",{"_index":1185,"title":{},"body":{"components/DataPage.html":{}}}],["edited",{"_index":820,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/UpdateUserComponent.html":{}}}],["editing",{"_index":1187,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{}}}],["efficiently",{"_index":1537,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["el",{"_index":1735,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["element",{"_index":97,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["ellipsis",{"_index":2563,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["email",{"_index":275,"title":{},"body":{"components/AccessPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UsersService.html":{}}}],["email(controlname",{"_index":1346,"title":{},"body":{"classes/EmailValidation.html":{}}}],["email.match(/^[a",{"_index":1361,"title":{},"body":{"classes/EmailValidation.html":{}}}],["email:string",{"_index":2644,"title":{},"body":{"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["emailvalidation",{"_index":1342,"title":{"classes/EmailValidation.html":{}},"body":{"classes/EmailValidation.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["emailvalidation.email",{"_index":2470,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["emit",{"_index":971,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["emitevent",{"_index":1412,"title":{},"body":{"components/FilterComponent.html":{}}}],["emits",{"_index":466,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["emitted",{"_index":1890,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["emitter",{"_index":1380,"title":{},"body":{"components/FilterComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["emitting",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ItemCategoryComponent.html":{},"injectables/MediaService.html":{}}}],["empleados",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["empty",{"_index":762,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["en",{"_index":1146,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["encapsulation",{"_index":1155,"title":{},"body":{"components/DataPage.html":{}}}],["encoded",{"_index":2080,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["encontraron",{"_index":1849,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["end",{"_index":760,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"components/FilterComponent.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{}}}],["enough",{"_index":1942,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ensures",{"_index":2407,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["environment",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebaseconfig",{"_index":663,"title":{},"body":{"modules/AppModule.html":{}}}],["equality",{"_index":1867,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["err",{"_index":336,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{}}}],["err.code",{"_index":337,"title":{},"body":{"components/AccessPage.html":{}}}],["err.message",{"_index":911,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["error",{"_index":221,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["error(\"not",{"_index":652,"title":{},"body":{"modules/AppModule.html":{}}}],["error('database",{"_index":1878,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error('error",{"_index":907,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{}}}],["error('una",{"_index":884,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["error('user",{"_index":1595,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["error(`error",{"_index":928,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["error(`failed",{"_index":1748,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error.code",{"_index":1935,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error.message",{"_index":1749,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["errors",{"_index":272,"title":{},"body":{"components/AccessPage.html":{},"classes/PasswordValidation.html":{}}}],["errors.emailerror",{"_index":2475,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["errors.repeaterror",{"_index":2480,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["errors.valid",{"_index":2330,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["errors['passwordmatch",{"_index":2387,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["es",{"_index":1140,"title":{},"body":{"injectables/CustomTranslateService.html":{},"injectables/LocalService.html":{}}}],["este",{"_index":887,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["etc",{"_index":1782,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["event",{"_index":800,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["event.stoppropagation",{"_index":2233,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["eventemitter",{"_index":796,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["events",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["evt",{"_index":1001,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["example",{"_index":1773,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["example@example.com",{"_index":1924,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["executed",{"_index":992,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["executes",{"_index":1336,"title":{},"body":{"injectables/DataService.html":{}}}],["exist",{"_index":1857,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["existe",{"_index":890,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["existing",{"_index":1331,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["existingcategories.some((c",{"_index":882,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["exists",{"_index":1507,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["exitosamente",{"_index":905,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["exportdata",{"_index":1160,"title":{},"body":{"components/DataPage.html":{}}}],["exports",{"_index":170,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{}}}],["extends",{"_index":1473,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{}}}],["extension",{"_index":1777,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["factories",{"_index":667,"title":{},"body":{"modules/AppModule.html":{}}}],["failed",{"_index":1497,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fails",{"_index":1490,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["false",{"_index":482,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["falsy",{"_index":761,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["fetch",{"_index":1229,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fetches",{"_index":1190,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["fetching",{"_index":965,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["ff6384",{"_index":2190,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["ffce56",{"_index":2192,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["fff",{"_index":843,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/UsersInfoComponent.html":{}}}],["ffffff",{"_index":2247,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["field",{"_index":414,"title":{},"body":{"modules/AccessPageModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"modules/DataPageModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["fieldname",{"_index":1953,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldpath",{"_index":1672,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fields",{"_index":1954,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{}}}],["fieldupdate",{"_index":1958,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldvalue",{"_index":1956,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["fileloader",{"_index":2417,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.click",{"_index":2452,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files",{"_index":2442,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files?.length",{"_index":2443,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files[0",{"_index":2444,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.onchange",{"_index":2441,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["filename",{"_index":1178,"title":{},"body":{"components/DataPage.html":{}}}],["filereader",{"_index":2446,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["files",{"_index":1193,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["fileupload",{"_index":1751,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filter",{"_index":124,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["filter'},{'name",{"_index":122,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["filter(value",{"_index":988,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["filter.apply",{"_index":1420,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["filter.component.html",{"_index":1369,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.scss",{"_index":1368,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.filter",{"_index":2041,"title":{},"body":{"components/HomePage.html":{}}}],["filter.reset",{"_index":1419,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["filter/filter.component",{"_index":2017,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["filterchanged",{"_index":1374,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["filtercomponent",{"_index":121,"title":{"components/FilterComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["filtereddocs",{"_index":1844,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtereddocs.length",{"_index":1847,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtereddocs.map((doc",{"_index":1848,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filteredincidents",{"_index":1994,"title":{},"body":{"components/HomePage.html":{}}}],["filtering",{"_index":1000,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["filtering/sorting",{"_index":1627,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["filtermobilecomponent",{"_index":123,"title":{"components/FilterMobileComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["filters",{"_index":990,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["filterscomponent",{"_index":1439,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["filterservice",{"_index":1377,"title":{"injectables/FilterService.html":{}},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/HomePage.html":{},"coverage.html":{}}}],["filterstate",{"_index":1458,"title":{},"body":{"injectables/FilterService.html":{}}}],["filtervalues",{"_index":2008,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls",{"_index":2027,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.categoryname.value",{"_index":2033,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.checked.value",{"_index":2035,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.resolved.value",{"_index":2037,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.userid.value",{"_index":2031,"title":{},"body":{"components/HomePage.html":{}}}],["final",{"_index":1778,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["finally",{"_index":1519,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebase",{"_index":648,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["firebase's",{"_index":1966,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["firebase.service",{"_index":1541,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebase/app",{"_index":1660,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase/auth",{"_index":1688,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserDataPage.html":{}}}],["firebase/firebase.service",{"_index":872,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/UsersService.html":{}}}],["firebase/firestore",{"_index":1674,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/incidentInfo.html":{}}}],["firebase/storage",{"_index":1680,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase:firebaseservice",{"_index":646,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseapp",{"_index":1659,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebaseauthservice",{"_index":611,"title":{"classes/FirebaseAuthService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"coverage.html":{}}}],["firebaseauthservice(firebase",{"_index":658,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseconfig",{"_index":1706,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["firebasedataservice",{"_index":1602,"title":{"classes/FirebaseDataService.html":{}},"body":{"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["firebasedocument",{"_index":1654,"title":{"interfaces/FirebaseDocument.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebasemediaservice",{"_index":617,"title":{"classes/FirebaseMediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["firebasemediaservice(firebase",{"_index":650,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseservice",{"_index":614,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["firebasestorage",{"_index":1679,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebasestoragefile",{"_index":1689,"title":{"interfaces/FirebaseStorageFile.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebasesvc",{"_index":1481,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebaseusercredential",{"_index":1540,"title":{"interfaces/FirebaseUserCredential.html":{}},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firestorage",{"_index":1789,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firestore",{"_index":1505,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["first",{"_index":462,"title":{},"body":{"guards/AdminGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["fixed",{"_index":1294,"title":{},"body":{"components/DataPage.html":{}}}],["fixedname",{"_index":1572,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname.charat(0).touppercase",{"_index":1575,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname.slice(1",{"_index":1576,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname[0",{"_index":1573,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname[0].touppercase",{"_index":1574,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["flag",{"_index":811,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["flex",{"_index":46,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["fn",{"_index":1008,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["followed",{"_index":769,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["following",{"_index":1516,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["font",{"_index":68,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["footer",{"_index":86,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["forkjoin",{"_index":2179,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["form",{"_index":374,"title":{},"body":{"components/AccessPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"modules/UserDataPageModule.html":{}}}],["form'},{'name",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["form.component",{"_index":402,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["form.component.html",{"_index":2319,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.scss",{"_index":2318,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts",{"_index":2317,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:17",{"_index":2326,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:18",{"_index":2322,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:19",{"_index":2467,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:21",{"_index":2464,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:31",{"_index":2323,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:38",{"_index":2324,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:52",{"_index":2465,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:59",{"_index":2466,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form/login",{"_index":401,"title":{},"body":{"modules/AccessPageModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form/register",{"_index":403,"title":{},"body":{"modules/AccessPageModule.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["format",{"_index":1189,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["formatted",{"_index":1612,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["formattedday",{"_index":2201,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["formattedtime",{"_index":2202,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["formbuilder",{"_index":1392,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["formcontrol",{"_index":1356,"title":{},"body":{"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{}}}],["formcontrol(false",{"_index":1399,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{}}}],["formcontrol(initialformstate.get('checked')?.value",{"_index":1407,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(initialformstate.get('resolved')?.value",{"_index":1408,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(initialformstate.get('userid')?.value",{"_index":1406,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(initialformstate?.get('categoryname')?.value",{"_index":1405,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(undefined",{"_index":1397,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{}}}],["formdata",{"_index":2120,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["formgroup",{"_index":1391,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["forms",{"_index":1033,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["forms.actions",{"_index":837,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["forms.admin",{"_index":2525,"title":{},"body":{"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["forms.description",{"_index":836,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["forms.email",{"_index":2329,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["forms.login",{"_index":2332,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["forms.name",{"_index":835,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.password",{"_index":2331,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["forms.register",{"_index":2481,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["forms.reppassword",{"_index":2477,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["forms.role",{"_index":2623,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.surname",{"_index":2474,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.update",{"_index":2357,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["forms.user",{"_index":2624,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["forms.username",{"_index":2476,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["formsmodule",{"_index":183,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["formstate",{"_index":1410,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["fortawesome/fontawesome",{"_index":2820,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":2824,"title":{},"body":{"dependencies.html":{}}}],["forwardref",{"_index":1038,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":2260,"title":{},"body":{"injectables/IncidentsService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["framework",{"_index":2878,"title":{},"body":{"properties.html":{}}}],["freeconnection",{"_index":1790,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["from(this.firebase.createdocument(resource",{"_index":1643,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["from(this.firebase.getdocuments(resource)).pipe",{"_index":1631,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["from(this.firebaseservice.updatedocument('incidentsinfo",{"_index":2268,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["from(this.firebasesvc.signout(false",{"_index":1596,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fromobject",{"_index":2115,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["full",{"_index":689,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":216,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionalities",{"_index":438,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["functionality",{"_index":2257,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["functions",{"_index":2847,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":370,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["generate",{"_index":2176,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["generic",{"_index":1616,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["get(key",{"_index":1129,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["get(resource",{"_index":1323,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["get(url",{"_index":2071,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getalldata",{"_index":1219,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getapp",{"_index":1658,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getcategory",{"_index":853,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategory(categoryid",{"_index":865,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcurrentlang",{"_index":1123,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["getdoc",{"_index":1665,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdoc(docref",{"_index":1859,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs",{"_index":1667,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(collection(this._db",{"_index":1843,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(q",{"_index":1872,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocument",{"_index":1855,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocuments(collectionname",{"_index":1834,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsby",{"_index":1864,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsbysubstring",{"_index":1839,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl",{"_index":1677,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl(storageref",{"_index":1800,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfilter",{"_index":1459,"title":{},"body":{"injectables/FilterService.html":{}}}],["getfirestore",{"_index":1661,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfirestore(this._app",{"_index":1722,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getimage",{"_index":2064,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getimage(url",{"_index":2073,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getincidentbyid",{"_index":2250,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["getincidentbyid(incidentid",{"_index":2258,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["getitem",{"_index":2284,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["getstorage",{"_index":1675,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getstorage(this._app",{"_index":1724,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getter",{"_index":2286,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["getuser",{"_index":1750,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getuserbyid",{"_index":2723,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid(this._firebaseservice.user!.uid",{"_index":2505,"title":{},"body":{"components/SettingsPage.html":{}}}],["getuserbyid(userid",{"_index":2725,"title":{},"body":{"injectables/UsersService.html":{}}}],["given",{"_index":1132,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["gives",{"_index":244,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["good",{"_index":330,"title":{},"body":{"components/AccessPage.html":{}}}],["graph",{"_index":2871,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":1292,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic'},{'name",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["graphic.component",{"_index":2556,"title":{},"body":{"modules/SharedModule.html":{}}}],["graphic.component.html",{"_index":2173,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.scss",{"_index":2172,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts",{"_index":2171,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["graphic.component.ts:12",{"_index":2178,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["graphic.component.ts:13",{"_index":2174,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts:14",{"_index":2626,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts:29",{"_index":2175,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["graphic.component.ts:30",{"_index":2627,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["graphic/incidents",{"_index":2170,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["graphic/user",{"_index":2555,"title":{},"body":{"modules/SharedModule.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["graphics",{"_index":1291,"title":{},"body":{"components/DataPage.html":{}}}],["gray",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["greater",{"_index":2564,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["guard",{"_index":432,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":434,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"index.html":{}}}],["h1",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["handle",{"_index":1478,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["handler",{"_index":996,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["handles",{"_index":271,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsInfoComponent.html":{}}}],["handling",{"_index":226,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["haptics",{"_index":315,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["haptics.impact",{"_index":333,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["hasincident",{"_index":914,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["hasincidentwithoriginalname",{"_index":929,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["hasvalue",{"_index":2393,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["having",{"_index":1930,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["header",{"_index":61,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["header__toolbar",{"_index":584,"title":{},"body":{"components/AppComponent.html":{}}}],["headers",{"_index":1232,"title":{},"body":{"components/DataPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["height",{"_index":55,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["hidden",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["hide",{"_index":2463,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["home",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["home'},{'name",{"_index":126,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["home.page",{"_index":2052,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":1993,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1992,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":125,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["homepagemodule",{"_index":2046,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["homepageroutingmodule",{"_index":2050,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["homeurl",{"_index":705,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hostlistener",{"_index":826,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hostlistener('window:resize",{"_index":824,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hostlisteners",{"_index":786,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hover",{"_index":582,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["hoverbackgroundcolor",{"_index":2193,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["html",{"_index":96,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["htmlinputelement",{"_index":2418,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["htmllinkelement",{"_index":2585,"title":{},"body":{"injectables/ThemeService.html":{}}}],["http",{"_index":2069,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["http:httpclient",{"_index":655,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":404,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":616,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientprovider",{"_index":629,"title":{"injectables/HttpClientProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientprovider:103",{"_index":2108,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:126",{"_index":2105,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:142",{"_index":2111,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:29",{"_index":2107,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:43",{"_index":2106,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:63",{"_index":2109,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:83",{"_index":2110,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientwebprovider",{"_index":619,"title":{"injectables/HttpClientWebProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientwebprovider(http",{"_index":656,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":2104,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpheaders(headers",{"_index":2124,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpparams",{"_index":2101,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpproviderfactory",{"_index":654,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httpproviderfactory(http",{"_index":2852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https",{"_index":2891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://ionicframework.com",{"_index":2876,"title":{},"body":{"properties.html":{}}}],["icon",{"_index":85,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["icons",{"_index":80,"title":{},"body":{"components/AboutPage.html":{},"dependencies.html":{}}}],["id",{"_index":1016,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["identified",{"_index":1829,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["identifier",{"_index":1823,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["identifies",{"_index":1951,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["identify",{"_index":1825,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ids",{"_index":1837,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["image",{"_index":381,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"interfaces/incidentInfo.html":{}}}],["image/jpeg",{"_index":1763,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["images",{"_index":1758,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["imageupload",{"_index":1804,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["imageupload(blob",{"_index":1805,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["img",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["imgs",{"_index":1986,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["imgs.push(media",{"_index":1988,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["immediately",{"_index":1892,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["impactstyle",{"_index":316,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["impactstyle.heavy",{"_index":344,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["impactstyle.medium",{"_index":335,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["implementation",{"_index":1625,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["implemented",{"_index":653,"title":{},"body":{"modules/AppModule.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["import('./pages/about/about.module').then",{"_index":700,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/access/access.module').then",{"_index":690,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/data/data.module').then(m",{"_index":694,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then",{"_index":679,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/incident",{"_index":683,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/settings/settings.module').then",{"_index":692,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/user",{"_index":697,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1767,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["imports",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["incidencias",{"_index":922,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["incident",{"_index":128,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["incident)).pipe",{"_index":2269,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident.categoryname",{"_index":916,"title":{},"body":{"injectables/CategoriesService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{}}}],["incident.checked",{"_index":2038,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{}}}],["incident.description",{"_index":2156,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.find((incident",{"_index":2266,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident.resolved",{"_index":2039,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{}}}],["incident.title",{"_index":2154,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.userid",{"_index":2040,"title":{},"body":{"components/HomePage.html":{}}}],["incident.username",{"_index":2155,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.uuid",{"_index":2267,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident?.title",{"_index":2234,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidentdatapage",{"_index":127,"title":{"components/IncidentDataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentdatapagemodule",{"_index":2163,"title":{"modules/IncidentDataPageModule.html":{}},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["incidentdatapageroutingmodule",{"_index":2167,"title":{"modules/IncidentDataPageRoutingModule.html":{}},"body":{"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["incidentid",{"_index":2130,"title":{},"body":{"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["incidentinfo",{"_index":1995,"title":{"interfaces/incidentInfo.html":{}},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["incidentinfo(id",{"_index":2001,"title":{},"body":{"components/HomePage.html":{}}}],["incidents",{"_index":130,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["incidents.anonymous",{"_index":2240,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.day",{"_index":2237,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.filter((incident",{"_index":2029,"title":{},"body":{"components/HomePage.html":{}}}],["incidents.hour",{"_index":2238,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.reduce((acc",{"_index":2182,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["incidents.resolved",{"_index":2157,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incidents.some",{"_index":915,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["incidents.unresolved",{"_index":2236,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.user",{"_index":2239,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidentscirclegraphiccomponent",{"_index":129,"title":{"components/IncidentsCircleGraphicComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentsinfo",{"_index":1738,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["incidentsinfocomponent",{"_index":133,"title":{"components/IncidentsInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentsservice",{"_index":2133,"title":{"injectables/IncidentsService.html":{}},"body":{"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"coverage.html":{}}}],["includes",{"_index":455,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["including",{"_index":1496,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"miscellaneous/variables.html":{}}}],["indexeddblocalpersistence",{"_index":1686,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["indicates",{"_index":1901,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["indicating",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["inesperado",{"_index":1584,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["info'},{'name",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component",{"_index":2545,"title":{},"body":{"modules/SharedModule.html":{}}}],["info.component.html",{"_index":776,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.scss",{"_index":775,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts",{"_index":774,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:17",{"_index":825,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:18",{"_index":795,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:19",{"_index":798,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:20",{"_index":2209,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:21",{"_index":797,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:22",{"_index":788,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:23",{"_index":2216,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:24",{"_index":2207,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:25",{"_index":2708,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:32",{"_index":821,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:39",{"_index":813,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:41",{"_index":2212,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:48",{"_index":818,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:53",{"_index":2714,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:58",{"_index":802,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:64",{"_index":2214,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:67",{"_index":809,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:69",{"_index":2713,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:75",{"_index":2210,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:79",{"_index":2710,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:84",{"_index":2211,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:88",{"_index":2711,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.email",{"_index":1583,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.name",{"_index":1272,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{}}}],["info.password",{"_index":1565,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.role",{"_index":1580,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.surname",{"_index":1579,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.ts",{"_index":937,"title":{},"body":{"interfaces/CategoryInfo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["info.username",{"_index":1582,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.uuid",{"_index":1571,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info/categories",{"_index":773,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/incidents",{"_index":2200,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/users",{"_index":2544,"title":{},"body":{"modules/SharedModule.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["information",{"_index":245,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":1482,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{}}}],["init",{"_index":1124,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["init(firebaseconfig",{"_index":1718,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initform",{"_index":1370,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["initial",{"_index":791,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["initial.pipe",{"_index":637,"title":{},"body":{"modules/AppModule.html":{}}}],["initial.pipe.ts",{"_index":751,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{}}}],["initial.pipe.ts:17",{"_index":755,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["initialauthresolved",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["initialform",{"_index":1469,"title":{},"body":{"injectables/FilterService.html":{}}}],["initialformstate",{"_index":1403,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["initialize",{"_index":1708,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeapp",{"_index":1657,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeapp(firebaseconfig",{"_index":1720,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth",{"_index":1685,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth(getapp",{"_index":1726,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initialized",{"_index":993,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["initializes",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/RegisterFormComponent.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["initializestate",{"_index":1460,"title":{},"body":{"injectables/FilterService.html":{}}}],["initiates",{"_index":1180,"title":{},"body":{"components/DataPage.html":{}}}],["inject",{"_index":1113,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/ThemeService.html":{}}}],["inject(mat_dialog_data",{"_index":1111,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["injectable",{"_index":467,"title":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/ThemeService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/ThemeService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/ThemeService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["injected",{"_index":231,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["injection",{"_index":2254,"title":{},"body":{"injectables/IncidentsService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["inline",{"_index":81,"title":{},"body":{"components/AboutPage.html":{}}}],["inner",{"_index":2460,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["input",{"_index":306,"title":{},"body":{"components/AccessPage.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["input('item",{"_index":2289,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["input.value",{"_index":1064,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["inputs",{"_index":782,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["instance",{"_index":260,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/IncidentsService.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":1358,"title":{},"body":{"classes/EmailValidation.html":{},"injectables/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{}}}],["instances",{"_index":1441,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/UpdateUserComponent.html":{}}}],["intentar",{"_index":934,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["interact",{"_index":1965,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["interacting",{"_index":1609,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["interactions",{"_index":1606,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["interface",{"_index":935,"title":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{}},"body":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["interfaces",{"_index":936,"title":{},"body":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{},"index.html":{}}}],["interfaces/category",{"_index":878,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["interfaces/data",{"_index":1341,"title":{},"body":{"injectables/DataService.html":{}}}],["interfaces/incidents",{"_index":2263,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["interfaces/user",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["invalid",{"_index":274,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["io.ionic.starter",{"_index":2886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":84,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["ionic",{"_index":2874,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["ionicmodule.forroot",{"_index":659,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["ionicons",{"_index":2834,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":605,"title":{},"body":{"modules/AppModule.html":{}}}],["ioninput",{"_index":976,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["ionmenu",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["ionpopover",{"_index":983,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["isactive",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["isactive(url",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["isdisabled",{"_index":1021,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["islogged",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["isscreensmall",{"_index":777,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["issplash",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["issue",{"_index":1957,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserconnected",{"_index":1909,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserconnectedanonymously",{"_index":1913,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["item",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["item(_item",{"_index":2290,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["item.active",{"_index":569,"title":{},"body":{"components/AppComponent.html":{}}}],["item?.name",{"_index":2294,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["itemcategorycomponent",{"_index":134,"title":{"components/ItemCategoryComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["items",{"_index":368,"title":{},"body":{"components/AccessPage.html":{},"components/FilterComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["items:center",{"_index":586,"title":{},"body":{"components/AppComponent.html":{}}}],["itemusercomponent",{"_index":137,"title":{"components/ItemUserComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["itself",{"_index":456,"title":{},"body":{"guards/AdminGuard.html":{}}}],["join",{"_index":1238,"title":{},"body":{"components/DataPage.html":{}}}],["jpeg",{"_index":1764,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["jpg",{"_index":1780,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["json",{"_index":1199,"title":{},"body":{"components/DataPage.html":{}}}],["json.stringify(row[fieldname",{"_index":1237,"title":{},"body":{"components/DataPage.html":{}}}],["jsontocsv",{"_index":1161,"title":{},"body":{"components/DataPage.html":{}}}],["jsontocsv(dataobject",{"_index":1196,"title":{},"body":{"components/DataPage.html":{}}}],["justify",{"_index":49,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["key",{"_index":356,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{}}}],["key}.csv",{"_index":1226,"title":{},"body":{"components/DataPage.html":{}}}],["kinds",{"_index":1811,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["la",{"_index":910,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["label",{"_index":845,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["labels",{"_index":2185,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["lang",{"_index":2310,"title":{},"body":{"injectables/LocalService.html":{},"components/SettingsPage.html":{}}}],["language",{"_index":509,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"injectables/LocalService.html":{}}}],["languages",{"_index":236,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/SettingsPage.html":{}}}],["lastvaluefrom",{"_index":1143,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["lastvaluefrom(this.translate.use(language",{"_index":1148,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["leaks",{"_index":2414,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["left",{"_index":567,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["legacy",{"_index":2088,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["legend",{"_index":95,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["length",{"_index":1932,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["letter",{"_index":757,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["life",{"_index":360,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["light",{"_index":553,"title":{},"body":{"components/AppComponent.html":{}}}],["lightgray",{"_index":580,"title":{},"body":{"components/AppComponent.html":{}}}],["limit",{"_index":2560,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["limits",{"_index":2562,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["line",{"_index":1297,"title":{},"body":{"components/DataPage.html":{}}}],["link",{"_index":1248,"title":{},"body":{"components/DataPage.html":{}}}],["link.click",{"_index":1254,"title":{},"body":{"components/DataPage.html":{}}}],["link.download",{"_index":1251,"title":{},"body":{"components/DataPage.html":{}}}],["link.href",{"_index":1250,"title":{},"body":{"components/DataPage.html":{}}}],["link.style.display",{"_index":1252,"title":{},"body":{"components/DataPage.html":{}}}],["linkelement",{"_index":2588,"title":{},"body":{"injectables/ThemeService.html":{}}}],["list",{"_index":840,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["listens",{"_index":803,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["literal",{"_index":1197,"title":{},"body":{"components/DataPage.html":{}}}],["load",{"_index":2650,"title":{},"body":{"components/UserDataPage.html":{}}}],["loadchildren",{"_index":678,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":247,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["loader",{"_index":425,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["loading",{"_index":1051,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/functions.html":{}}}],["loads",{"_index":1003,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["local",{"_index":1532,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["localization",{"_index":238,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/SettingsPage.html":{}}}],["locallang",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["localservice",{"_index":496,"title":{"injectables/LocalService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LocalService.html":{},"coverage.html":{}}}],["locate",{"_index":1875,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["located",{"_index":1950,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["location",{"_index":1768,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["logged",{"_index":463,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["login",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["login(credentials",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["loginformcomponent",{"_index":139,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginurl",{"_index":706,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loginuser",{"_index":204,"title":{},"body":{"components/AccessPage.html":{}}}],["loginuser(data",{"_index":265,"title":{},"body":{"components/AccessPage.html":{}}}],["logo",{"_index":372,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{}}}],["logout",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["logs",{"_index":269,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["los",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["lottie",{"_index":633,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lottiefiles/lottie",{"_index":2826,"title":{},"body":{"dependencies.html":{}}}],["m",{"_index":680,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ModalCategoryComponent.html":{}}}],["m.aboutpagemodule",{"_index":701,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.accesspagemodule",{"_index":691,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.datapagemodule",{"_index":695,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":681,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.incidentdatapagemodule",{"_index":686,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.settingspagemodule",{"_index":693,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.userdatapagemodule",{"_index":699,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["manage",{"_index":2647,"title":{},"body":{"components/UserDataPage.html":{}}}],["managing",{"_index":237,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{}}}],["manipulating",{"_index":439,"title":{},"body":{"guards/AdminGuard.html":{}}}],["map",{"_index":469,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["map(([users",{"_index":2718,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["map((data",{"_index":1587,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["map((doc",{"_index":1642,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["map((fieldname",{"_index":1236,"title":{},"body":{"components/DataPage.html":{}}}],["map((incident",{"_index":2265,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["map((incidents",{"_index":2028,"title":{},"body":{"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{}}}],["map((user",{"_index":477,"title":{},"body":{"guards/AdminGuard.html":{}}}],["map((users",{"_index":2731,"title":{},"body":{"injectables/UsersService.html":{}}}],["map(response",{"_index":2270,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["map(translations",{"_index":2637,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["map(users",{"_index":2629,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["mapfunction",{"_index":1883,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapfunction(doc.data",{"_index":1886,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapped",{"_index":1881,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["maps",{"_index":1615,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["margin",{"_index":57,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["marked",{"_index":2138,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["mat",{"_index":1427,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{}}}],["mat_dialog_data",{"_index":1114,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["matbuttonmodule",{"_index":417,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["match",{"_index":1836,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/PasswordValidation.html":{}}}],["matcheckboxmodule",{"_index":2054,"title":{},"body":{"modules/HomePageModule.html":{}}}],["matches",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":162,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1165,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["matdialogmodule",{"_index":640,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["matdialogref",{"_index":1104,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["material",{"_index":429,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matformfieldmodule",{"_index":412,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["maticonmodule",{"_index":419,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matinputmodule",{"_index":415,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matselectmodule",{"_index":1311,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["mattabsmodule",{"_index":1309,"title":{},"body":{"modules/DataPageModule.html":{}}}],["max",{"_index":91,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["maximum",{"_index":2569,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["measurementid",{"_index":1716,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["mechanism",{"_index":2256,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["media",{"_index":90,"title":{"interfaces/Media.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["media.service",{"_index":618,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["media.service.ts",{"_index":1963,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["media.service.ts:13",{"_index":1964,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["media[0",{"_index":2518,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["mediaservice",{"_index":623,"title":{"injectables/MediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["mediaservice:32",{"_index":1970,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["mediaservicefactory",{"_index":644,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mediaservicefactory(backend",{"_index":2853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["meet",{"_index":1927,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["memory",{"_index":2413,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["menu",{"_index":523,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.about",{"_index":564,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.close",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.graphics",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.home",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.logout",{"_index":563,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.settings",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["menucontroller",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":222,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["messages",{"_index":234,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["messageservice",{"_index":198,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["messagingsenderid",{"_index":1714,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["method",{"_index":461,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["mimetype",{"_index":1760,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["min",{"_index":2159,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["minimum",{"_index":1931,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["miscellaneous",{"_index":2846,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1525,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["mobile",{"_index":1071,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile'},{'name",{"_index":115,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["mobile.component",{"_index":2018,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["mobile.component.html",{"_index":1073,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.scss",{"_index":1072,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts",{"_index":1069,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mobile.component.ts:102",{"_index":2701,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:103",{"_index":1085,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:111",{"_index":2702,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:112",{"_index":1086,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:118",{"_index":2703,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:119",{"_index":1088,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:125",{"_index":2698,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:126",{"_index":1081,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:134",{"_index":2695,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:135",{"_index":1078,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:143",{"_index":2697,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:144",{"_index":1080,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:15",{"_index":1443,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:150",{"_index":2699,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:151",{"_index":1083,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:160",{"_index":2700,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:161",{"_index":1082,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:17",{"_index":1442,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:170",{"_index":2694,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:171",{"_index":1077,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:180",{"_index":2696,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:181",{"_index":1079,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:19",{"_index":1438,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:23",{"_index":1076,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:25",{"_index":1091,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:26",{"_index":1093,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:27",{"_index":1090,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:34",{"_index":1075,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:39",{"_index":1074,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:45",{"_index":1446,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:48",{"_index":1092,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:49",{"_index":1094,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:53",{"_index":1445,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:55",{"_index":1084,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:61",{"_index":1444,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:73",{"_index":1087,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:83",{"_index":1453,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:91",{"_index":2704,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:92",{"_index":1089,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:94",{"_index":1452,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile/category",{"_index":1068,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mobile/filter",{"_index":1435,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["mobile/user",{"_index":2060,"title":{},"body":{"modules/HomePageModule.html":{},"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mod",{"_index":1262,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["mod.ondiddismiss",{"_index":1267,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["mod.present",{"_index":1266,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["modal",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["modal.auto",{"_index":2459,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["modalcategorycomponent",{"_index":142,"title":{"components/ModalCategoryComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["modalcontroller",{"_index":1167,"title":{},"body":{"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["modaldesign",{"_index":2510,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["modals",{"_index":2490,"title":{},"body":{"components/SettingsPage.html":{}}}],["mode",{"_index":1265,"title":{},"body":{"components/DataPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/ModalCategoryComponent.html":{}}}],["mode(m",{"_index":2354,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["modifies",{"_index":1517,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["modify",{"_index":1952,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["module",{"_index":163,"title":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["modules",{"_index":165,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["msg",{"_index":1788,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["multi",{"_index":1043,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["mymodal",{"_index":1166,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["name",{"_index":101,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["native",{"_index":2458,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["navigate",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"components/UsersInfoComponent.html":{}}}],["navigates",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["navigating",{"_index":252,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{}}}],["navigation",{"_index":454,"title":{},"body":{"guards/AdminGuard.html":{},"components/UserDataPage.html":{}}}],["navigationend",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":1524,"title":{},"body":{"classes/FirebaseAuthService.html":{},"pipes/ShortenTextPipe.html":{}}}],["need",{"_index":2312,"title":{},"body":{"injectables/LocalService.html":{}}}],["needed",{"_index":1514,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["needs",{"_index":1876,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["new",{"_index":649,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["newly",{"_index":1529,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["next",{"_index":327,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/IncidentDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["ng_value_accessor",{"_index":1039,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["ngondestroy",{"_index":2395,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["ngx",{"_index":408,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["nocheck",{"_index":2086,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{}}}],["nombre",{"_index":888,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["none",{"_index":373,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["notadmin",{"_index":224,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{}}}],["notification",{"_index":308,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["notifications",{"_index":241,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["null",{"_index":794,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"classes/PasswordValidation.html":{},"injectables/ThemeService.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["number",{"_index":808,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["numbers",{"_index":1945,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["obj",{"_index":1025,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["object",{"_index":277,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"classes/PasswordValidation.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign(errors",{"_index":2386,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["object.keys(categorycounts",{"_index":2186,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["object.keys(dataobject[key][0",{"_index":1233,"title":{},"body":{"components/DataPage.html":{}}}],["object.keys(rolescount",{"_index":2634,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["object.values(categorycounts",{"_index":2188,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["objects",{"_index":1833,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["objeto",{"_index":1960,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["obs.error(error",{"_index":1990,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["obs.next(imgs",{"_index":1989,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["observable",{"_index":464,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["observable((obs",{"_index":1983,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["observable((subscr",{"_index":1550,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["observables",{"_index":1495,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["occurs",{"_index":1978,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["oncancel",{"_index":1436,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["oncategoryclicked",{"_index":952,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["oncategoryclicked(popover",{"_index":994,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["once",{"_index":2653,"title":{},"body":{"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["onchangepicture",{"_index":2396,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event",{"_index":2416,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture",{"_index":2397,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event",{"_index":2422,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["oneditclicked",{"_index":784,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["onfilter",{"_index":953,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["onfilter(evt",{"_index":998,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["onfilterchange",{"_index":1996,"title":{},"body":{"components/HomePage.html":{}}}],["onfilterchange(filtervalues",{"_index":2006,"title":{},"body":{"components/HomePage.html":{}}}],["onincidentclick",{"_index":2203,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["onincidentclick(event",{"_index":2213,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["onincidentclicked",{"_index":2204,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onloadcategories",{"_index":954,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["onresize",{"_index":781,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onresize(event",{"_index":822,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onsnapshot",{"_index":1664,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsub",{"_index":2320,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["onsubmit",{"_index":2321,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["ontrashclicked",{"_index":785,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["onuserclicked",{"_index":2276,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onuserclicked(popover",{"_index":2674,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["opendialog",{"_index":1162,"title":{},"body":{"components/DataPage.html":{}}}],["opendialog(category",{"_index":1203,"title":{},"body":{"components/DataPage.html":{}}}],["openfiltermodal",{"_index":1997,"title":{},"body":{"components/HomePage.html":{}}}],["opens",{"_index":1173,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/UserDataPage.html":{}}}],["operation",{"_index":1337,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["operations",{"_index":857,"title":{},"body":{"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["operators",{"_index":1533,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["optional",{"_index":255,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":1897,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["options",{"_index":2092,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["original",{"_index":871,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseDataService.html":{}}}],["originalname",{"_index":869,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["otherwise",{"_index":763,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"injectables/IncidentsService.html":{}}}],["out",{"_index":177,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DataPageModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["outlet",{"_index":248,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["outline",{"_index":2528,"title":{},"body":{"components/SettingsPage.html":{}}}],["output",{"_index":827,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["output('clicked",{"_index":2292,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["outputs",{"_index":783,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["overflow",{"_index":59,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{}}}],["overview",{"_index":2863,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["package",{"_index":2803,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":369,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["page",{"_index":450,"title":{},"body":{"guards/AdminGuard.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"components/HomePage.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["page:number",{"_index":2359,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["pagecount",{"_index":1638,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["pagecount:number",{"_index":2361,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["pages/user",{"_index":674,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pagesize",{"_index":1636,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["pagesize:number",{"_index":2360,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["paginated",{"_index":1338,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["paginateddata",{"_index":1340,"title":{"interfaces/PaginatedData.html":{}},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["pagination",{"_index":1635,"title":{"interfaces/Pagination.html":{}},"body":{"classes/FirebaseDataService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["pagination:pagination",{"_index":2364,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["papaparse",{"_index":2837,"title":{},"body":{"dependencies.html":{}}}],["para",{"_index":37,"title":{},"body":{"components/AboutPage.html":{}}}],["param",{"_index":318,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["parameter",{"_index":223,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":219,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1334,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["params.get('id",{"_index":2146,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["params['error",{"_index":321,"title":{},"body":{"components/AccessPage.html":{}}}],["parent",{"_index":2343,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["particularly",{"_index":1967,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["pass",{"_index":1810,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["passes",{"_index":2345,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["passing",{"_index":1451,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["password",{"_index":280,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{}}}],["password.match(/^(?=.*[a",{"_index":2378,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["password:string",{"_index":2645,"title":{},"body":{"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["passwordcontrolname",{"_index":2373,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch",{"_index":2368,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch(passwordcontrolname",{"_index":2370,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto",{"_index":2369,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto(controlname",{"_index":2374,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation",{"_index":2366,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["passwordvalidation.passwordmatch('password",{"_index":2473,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["passwordvalidation.passwordproto",{"_index":2471,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["patch",{"_index":2065,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["patch(url",{"_index":2075,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["path",{"_index":195,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["pathmatch",{"_index":688,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":2377,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["pdf",{"_index":1766,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["performs",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{}}}],["period",{"_index":759,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["persistence",{"_index":1727,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["photo",{"_index":2365,"title":{"interfaces/Photo.html":{}},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["picture",{"_index":145,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["picture_selectable_value_accessor",{"_index":2391,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picturemodal",{"_index":2400,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["pictureselectablecomponent",{"_index":144,"title":{"components/PictureSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pinned",{"_index":2087,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["pipe",{"_index":748,"title":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}},"body":{"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["pipe(map",{"_index":933,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["pipe(map((_",{"_index":1653,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["pipe(switchmap((doc",{"_index":1650,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["pipes",{"_index":749,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{},"index.html":{}}}],["pipetransform",{"_index":770,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["platform",{"_index":606,"title":{},"body":{"modules/AppModule.html":{}}}],["player",{"_index":634,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["plugins",{"_index":2198,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["png",{"_index":1781,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["pointer",{"_index":389,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["pointing",{"_index":1974,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["popover",{"_index":987,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["popover.dismiss",{"_index":1063,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["populates",{"_index":2605,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["porque",{"_index":920,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["position",{"_index":53,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["post",{"_index":346,"title":{},"body":{"components/AccessPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["post(resource",{"_index":1327,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["post(url",{"_index":2081,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["postregister",{"_index":1474,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["postregister(info",{"_index":1512,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["potential",{"_index":2412,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["prefix",{"_index":1774,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["preloadallmodules",{"_index":669,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":703,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preventing",{"_index":2411,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["primary",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng",{"_index":2839,"title":{},"body":{"dependencies.html":{}}}],["primeng/accordion",{"_index":1314,"title":{},"body":{"modules/DataPageModule.html":{},"modules/SettingsPageModule.html":{}}}],["primeng/api",{"_index":311,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["primeng/chart",{"_index":2553,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/divider",{"_index":639,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dropdown",{"_index":643,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/toast",{"_index":423,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{}}}],["private",{"_index":319,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["problemas",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["process",{"_index":290,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["production",{"_index":2892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1509,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"injectables/UsersService.html":{}}}],["project",{"_index":2875,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":1712,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":457,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise((resolve",{"_index":1813,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise(async",{"_index":1785,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["propagate",{"_index":1013,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["propagatechange",{"_index":948,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["propagating",{"_index":1032,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["properly",{"_index":2408,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["properties",{"_index":202,"title":{"properties.html":{}},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"interfaces/incidentInfo.html":{},"properties.html":{}}}],["property",{"_index":264,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["protected",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["provide",{"_index":426,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":609,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":242,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"components/UpdateUserComponent.html":{},"injectables/UsersService.html":{}}}],["providedin",{"_index":472,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/ThemeService.html":{},"injectables/UsersService.html":{}}}],["providelottieoptions",{"_index":632,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":2098,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["providers",{"_index":169,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"index.html":{}}}],["provides",{"_index":232,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"miscellaneous/functions.html":{}}}],["providing",{"_index":1607,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["public",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["puede",{"_index":918,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["put",{"_index":1318,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["put(resource",{"_index":1329,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["put(url",{"_index":2083,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["q",{"_index":1870,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["que",{"_index":1851,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query",{"_index":218,"title":{},"body":{"components/AccessPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query(resource",{"_index":1333,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["queryparams",{"_index":481,"title":{},"body":{"guards/AdminGuard.html":{}}}],["querysnapshot",{"_index":1744,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["querysnapshot.docs.map((doc",{"_index":1747,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["radius",{"_index":1284,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["raw",{"_index":1757,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reactive",{"_index":1315,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["reactiveformsmodule",{"_index":399,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/UserDataPageModule.html":{}}}],["reader",{"_index":2445,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onerror",{"_index":2449,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onload",{"_index":2447,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.readasdataurl(file",{"_index":2451,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["readonly",{"_index":2112,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["real",{"_index":1882,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["received",{"_index":1493,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["recent",{"_index":1889,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["redirects",{"_index":449,"title":{},"body":{"guards/AdminGuard.html":{}}}],["redirectto",{"_index":687,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":1676,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ref(this._webstorage",{"_index":1796,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reference",{"_index":1106,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["refers",{"_index":1761,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reflect",{"_index":1527,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["refreshed",{"_index":1538,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["refreshes",{"_index":1531,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["register",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["register(info",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["registered",{"_index":293,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{}}}],["registerformcomponent",{"_index":146,"title":{"components/RegisterFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["registeronchange",{"_index":955,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registeronchange(fn",{"_index":1004,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registerontouched",{"_index":956,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registerontouched(fn",{"_index":1009,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registers",{"_index":285,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registeruser",{"_index":205,"title":{},"body":{"components/AccessPage.html":{}}}],["registeruser(data",{"_index":282,"title":{},"body":{"components/AccessPage.html":{}}}],["registration",{"_index":289,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{}}}],["reject",{"_index":1787,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject('document",{"_index":1863,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(err",{"_index":1818,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(error",{"_index":1793,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["rejected",{"_index":1947,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["rejects",{"_index":1856,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["related",{"_index":250,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{}}}],["relative",{"_index":54,"title":{},"body":{"components/AboutPage.html":{},"components/CategoriesInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["relevant",{"_index":294,"title":{},"body":{"components/AccessPage.html":{}}}],["remarks",{"_index":1217,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["removed",{"_index":1877,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["renderer",{"_index":2573,"title":{},"body":{"injectables/ThemeService.html":{}}}],["renderer2",{"_index":2583,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendererfactory",{"_index":2579,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendererfactory2",{"_index":2577,"title":{},"body":{"injectables/ThemeService.html":{}}}],["repeat",{"_index":379,"title":{},"body":{"components/AccessPage.html":{}}}],["reppassword",{"_index":2472,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["represent",{"_index":1756,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["representing",{"_index":980,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["represents",{"_index":302,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"pipes/ShortenTextPipe.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["request",{"_index":2070,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["requested",{"_index":1617,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["required",{"_index":1926,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reset",{"_index":176,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["resetfilters",{"_index":1371,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["resetrequested",{"_index":1375,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["resets",{"_index":1386,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["resetsignal",{"_index":960,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["resetting",{"_index":973,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["resize",{"_index":805,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["resolutions",{"_index":1976,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["resolve",{"_index":1786,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(deleteuser(this._user",{"_index":1948,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(docref.id",{"_index":1817,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(false",{"_index":1911,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(null",{"_index":1934,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(this._auth!.currentuser",{"_index":1912,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolved",{"_index":1400,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/IncidentDataPage.html":{},"interfaces/incidentInfo.html":{}}}],["resolvedvalue",{"_index":2036,"title":{},"body":{"components/HomePage.html":{}}}],["resolves",{"_index":458,"title":{},"body":{"guards/AdminGuard.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resource",{"_index":1322,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["resource.split('/')[0",{"_index":1649,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["resource.split('/')[1",{"_index":1641,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["resources",{"_index":2858,"title":{},"body":{"miscellaneous/functions.html":{}}}],["respectively",{"_index":1480,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["response",{"_index":1910,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{}}}],["responsetype",{"_index":2114,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["resueltos",{"_index":1418,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["result",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["resulting",{"_index":1339,"title":{},"body":{"injectables/DataService.html":{}}}],["results",{"_index":161,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.data",{"_index":1268,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["results.data.picture",{"_index":2517,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["results?.data",{"_index":1269,"title":{},"body":{"components/DataPage.html":{}}}],["results?.data?.picture",{"_index":2512,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["results?.data?.picture?.substring(0",{"_index":2513,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["retrieve",{"_index":1133,"title":{},"body":{"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ItemUserComponent.html":{}}}],["retrieved",{"_index":1326,"title":{},"body":{"injectables/DataService.html":{}}}],["retrieves",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["retrieving",{"_index":2287,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["return",{"_index":475,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"classes/PasswordValidation.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LocalService.html":{},"pipes/ShortenTextPipe.html":{},"injectables/UsersService.html":{}}}],["returning",{"_index":465,"title":{},"body":{"guards/AdminGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["rgba(0",{"_index":1299,"title":{},"body":{"components/DataPage.html":{}}}],["rgba(71",{"_index":1423,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["right",{"_index":565,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{}}}],["rni3rcpqs7xmtbh4",{"_index":2894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":286,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"classes/FirebaseAuthService.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["roles",{"_index":2633,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["roles.map(role",{"_index":2635,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["rolescount",{"_index":2630,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["rolescount[role",{"_index":2638,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["root",{"_index":473,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/ThemeService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":106,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["route",{"_index":212,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["router",{"_index":214,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["routereusestrategy",{"_index":602,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":192,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":196,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":702,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":445,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":191,"title":{"routes.html":{}},"body":{"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["routing.module.ts",{"_index":190,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["row",{"_index":366,"title":{},"body":{"components/AccessPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{}}}],["rxjs",{"_index":468,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/PictureSelectableComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":873,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["rxjs/operators",{"_index":470,"title":{},"body":{"guards/AdminGuard.html":{}}}],["same",{"_index":1975,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["save",{"_index":1821,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["screen",{"_index":792,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["se",{"_index":917,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["search",{"_index":979,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["searching",{"_index":1869,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["security",{"_index":1929,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["seems",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["select",{"_index":1017,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selectable",{"_index":114,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable'},{'name",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["selectable.component",{"_index":2053,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SharedModule.html":{}}}],["selectable.component.html",{"_index":944,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.scss",{"_index":943,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts",{"_index":941,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable.component.ts:109",{"_index":2676,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:110",{"_index":1005,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:116",{"_index":2423,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:118",{"_index":2677,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:119",{"_index":1010,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:124",{"_index":2404,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:125",{"_index":2679,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:126",{"_index":1020,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:132",{"_index":2672,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:133",{"_index":991,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:141",{"_index":2669,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:142",{"_index":981,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:150",{"_index":2671,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:151",{"_index":989,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:157",{"_index":2673,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:158",{"_index":999,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:167",{"_index":2675,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:168",{"_index":995,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:177",{"_index":2668,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:178",{"_index":977,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:187",{"_index":2670,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:188",{"_index":984,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:19",{"_index":2429,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:20",{"_index":2432,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:21",{"_index":2430,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:22",{"_index":2399,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:30",{"_index":970,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:32",{"_index":1028,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:33",{"_index":1030,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:34",{"_index":1027,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:35",{"_index":2405,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:39",{"_index":2415,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:41",{"_index":966,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:44",{"_index":2433,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:46",{"_index":963,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:50",{"_index":2428,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:55",{"_index":1029,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:56",{"_index":1031,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:61",{"_index":2425,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:62",{"_index":1002,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:69",{"_index":2426,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:75",{"_index":2427,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:80",{"_index":1014,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:83",{"_index":2403,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:94",{"_index":2419,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:98",{"_index":2680,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:99",{"_index":1023,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable/category",{"_index":940,"title":{},"body":{"components/CategorySelectableComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable/picture",{"_index":2390,"title":{},"body":{"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable/user",{"_index":2056,"title":{},"body":{"modules/HomePageModule.html":{},"components/UserSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcategory",{"_index":957,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["selectcategory(id",{"_index":1012,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["selected",{"_index":969,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selecting",{"_index":997,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selection",{"_index":974,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["selects",{"_index":1015,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selectuser",{"_index":2667,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selectuser(id",{"_index":2678,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["server",{"_index":2091,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/UserDataPage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":230,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["services",{"_index":228,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["services/auth.service",{"_index":471,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["set",{"_index":1044,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setcategory(_category",{"_index":1035,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["setcategoryinfo(category",{"_index":2348,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["setdisabledstate",{"_index":958,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1019,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":1057,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setdoc",{"_index":1666,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setdoc(docref",{"_index":1827,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setfilters",{"_index":1372,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["setitem(_item",{"_index":2288,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["setlanguage",{"_index":2487,"title":{},"body":{"components/SettingsPage.html":{}}}],["setlanguage(lang",{"_index":2492,"title":{},"body":{"components/SettingsPage.html":{}}}],["setmode(m",{"_index":2349,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["setresolvedincident",{"_index":2131,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["setresolvedincident(incident",{"_index":2136,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["sets",{"_index":810,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["setservertrustmode",{"_index":2066,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["setservertrustmode(mode",{"_index":2085,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["setter",{"_index":967,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ItemCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["settheme",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["setting",{"_index":968,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ItemCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["settings",{"_index":530,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{}}}],["settings'},{'name",{"_index":149,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["settings.page",{"_index":2535,"title":{},"body":{"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{}}}],["settings.page.html",{"_index":2485,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page.scss",{"_index":2484,"title":{},"body":{"components/SettingsPage.html":{}}}],["settingspage",{"_index":148,"title":{"components/SettingsPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["settingspagemodule",{"_index":2529,"title":{"modules/SettingsPageModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"index.html":{},"modules.html":{}}}],["settingspageroutingmodule",{"_index":2533,"title":{"modules/SettingsPageRoutingModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["setuser(_user",{"_index":2681,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setuserinfo(user",{"_index":2611,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["severity",{"_index":358,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["shadow",{"_index":574,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["shared",{"_index":430,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["shared/shared.module",{"_index":631,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":397,"title":{"modules/SharedModule.html":{}},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["shortentext",{"_index":2235,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{}}}],["shortentextpipe",{"_index":2541,"title":{"pipes/ShortenTextPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"coverage.html":{},"index.html":{}}}],["showall",{"_index":1998,"title":{},"body":{"components/HomePage.html":{}}}],["showerror",{"_index":206,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["showerror(text",{"_index":297,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["showing",{"_index":2004,"title":{},"body":{"components/HomePage.html":{}}}],["showrolefield",{"_index":2603,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["shows",{"_index":2011,"title":{},"body":{"components/HomePage.html":{}}}],["showsuccess",{"_index":207,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["showsuccess(text",{"_index":303,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["sign",{"_index":1501,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signal",{"_index":972,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["signaling",{"_index":1381,"title":{},"body":{"components/FilterComponent.html":{}}}],["signed",{"_index":1902,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanon",{"_index":1900,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanon=false",{"_index":1899,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously",{"_index":1683,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth",{"_index":1792,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth!).catch((error",{"_index":1919,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signing",{"_index":1903,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinwithemailandpassword",{"_index":1684,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout",{"_index":1500,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(signinanon",{"_index":1906,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(this._auth",{"_index":1802,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signs",{"_index":1896,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["simplechanges",{"_index":1037,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["single",{"_index":1325,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["size",{"_index":69,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["slogan",{"_index":75,"title":{},"body":{"components/AboutPage.html":{}}}],["snapshot",{"_index":452,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["snapshot.data",{"_index":1894,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["social",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["solid",{"_index":579,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{},"dependencies.html":{}}}],["solucionar",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["solución",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["something",{"_index":1779,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["space",{"_index":51,"title":{},"body":{"components/AboutPage.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{}}}],["span",{"_index":590,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["special",{"_index":1944,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["specific",{"_index":273,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["specified",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"classes/PasswordValidation.html":{},"pipes/ShortenTextPipe.html":{}}}],["specifies",{"_index":1762,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["specify",{"_index":1866,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["split",{"_index":1622,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["src/.../app.module.ts",{"_index":2848,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../blob.ts",{"_index":2850,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../category",{"_index":2880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../picture",{"_index":2883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../translate.ts",{"_index":2849,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user",{"_index":2884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":668,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:105",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:110",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:17",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:52",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:72",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:79",{"_index":529,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:86",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:93",{"_index":515,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":598,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":435,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:16",{"_index":437,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:42",{"_index":446,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":704,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:17",{"_index":707,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:24",{"_index":708,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/helpers/blob",{"_index":2497,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["src/app/core/helpers/blob.ts",{"_index":2745,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/interfaces/category",{"_index":828,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/CategoryInfo.html":{},"components/DataPage.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["src/app/core/interfaces/data",{"_index":1628,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["src/app/core/interfaces/data.ts",{"_index":2358,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["src/app/core/interfaces/incidents",{"_index":2015,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["src/app/core/interfaces/user",{"_index":312,"title":{},"body":{"components/AccessPage.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["src/app/core/pipes/capitalize",{"_index":750,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/shorten",{"_index":2557,"title":{},"body":{"pipes/ShortenTextPipe.html":{},"coverage.html":{}}}],["src/app/core/services/api/categories.service",{"_index":1040,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{}}}],["src/app/core/services/api/categories.service.ts",{"_index":851,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/app/core/services/api/categories.service.ts:116",{"_index":870,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:19",{"_index":856,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:27",{"_index":866,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:37",{"_index":859,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:80",{"_index":863,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/incidents.service",{"_index":2143,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["src/app/core/services/api/incidents.service.ts",{"_index":2249,"title":{},"body":{"injectables/IncidentsService.html":{},"coverage.html":{}}}],["src/app/core/services/api/incidents.service.ts:27",{"_index":2259,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/incidents.service.ts:42",{"_index":2262,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/incidents.service.ts:9",{"_index":2252,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/users.service",{"_index":2217,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["src/app/core/services/api/users.service.ts",{"_index":2722,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/core/services/api/users.service.ts:10",{"_index":2724,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:32",{"_index":2726,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:46",{"_index":2729,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/auth.service",{"_index":313,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:10",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:11",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:12",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:19",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:26",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:31",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:44",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:9",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/data.service.ts",{"_index":1317,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/core/services/data.service.ts:15",{"_index":1335,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:25",{"_index":1324,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:33",{"_index":1328,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:41",{"_index":1330,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:48",{"_index":1320,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/filter/filter.service",{"_index":1394,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{}}}],["src/app/core/services/filter/filter.service.ts",{"_index":1457,"title":{},"body":{"injectables/FilterService.html":{},"coverage.html":{}}}],["src/app/core/services/filter/filter.service.ts:16",{"_index":1465,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter/filter.service.ts:25",{"_index":1462,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter/filter.service.ts:32",{"_index":1463,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter/filter.service.ts:9",{"_index":1466,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/firebase/api/firebase",{"_index":1471,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["src/app/core/services/firebase/firebase.service",{"_index":1041,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["src/app/core/services/firebase/firebase.service.ts",{"_index":1655,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["src/app/core/services/http/http",{"_index":2062,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["src/app/core/services/media.service",{"_index":2500,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["src/app/core/services/media.service.ts",{"_index":2335,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["src/app/core/services/media.service.ts:13",{"_index":2336,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/core/services/theme/theme.service",{"_index":2501,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/core/services/theme/theme.service.ts",{"_index":2572,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/core/services/theme/theme.service.ts:29",{"_index":2581,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme/theme.service.ts:8",{"_index":2584,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/theme/theme.service.ts:9",{"_index":2578,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/core/services/translate/local.service.ts",{"_index":2305,"title":{},"body":{"injectables/LocalService.html":{},"coverage.html":{}}}],["src/app/core/services/translate/local.service.ts:8",{"_index":2308,"title":{},"body":{"injectables/LocalService.html":{}}}],["src/app/core/services/translate/translate.service",{"_index":314,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["src/app/core/services/translate/translate.service.ts",{"_index":1121,"title":{},"body":{"injectables/CustomTranslateService.html":{},"coverage.html":{}}}],["src/app/core/services/translate/translate.service.ts:11",{"_index":1127,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:26",{"_index":1135,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:37",{"_index":1138,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:47",{"_index":1134,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:57",{"_index":1130,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:8",{"_index":1141,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/translate/translate",{"_index":411,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["src/app/core/translate/translate.ts",{"_index":2773,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/validators/email",{"_index":2468,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["src/app/core/validators/email.ts",{"_index":1344,"title":{},"body":{"classes/EmailValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/email.ts:14",{"_index":1347,"title":{},"body":{"classes/EmailValidation.html":{}}}],["src/app/core/validators/password",{"_index":2469,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["src/app/core/validators/password.ts",{"_index":2367,"title":{},"body":{"classes/PasswordValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/password.ts:13",{"_index":2375,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/core/validators/password.ts:35",{"_index":2372,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/pages/about/about",{"_index":189,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/about/about.page.ts:12",{"_index":26,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:8",{"_index":25,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/access/access",{"_index":431,"title":{},"body":{"modules/AccessPageRoutingModule.html":{}}}],["src/app/pages/access/access.module.ts",{"_index":398,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["src/app/pages/access/access.page.ts",{"_index":197,"title":{},"body":{"components/AccessPage.html":{},"coverage.html":{}}}],["src/app/pages/access/access.page.ts:106",{"_index":267,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:129",{"_index":304,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:146",{"_index":299,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:19",{"_index":215,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:55",{"_index":281,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:60",{"_index":261,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:72",{"_index":284,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/login",{"_index":2316,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/pages/access/register",{"_index":2462,"title":{},"body":{"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["src/app/pages/data/data",{"_index":1316,"title":{},"body":{"modules/DataPageRoutingModule.html":{}}}],["src/app/pages/data/data.module.ts",{"_index":1307,"title":{},"body":{"modules/DataPageModule.html":{}}}],["src/app/pages/data/data.page.ts",{"_index":1154,"title":{},"body":{"components/DataPage.html":{},"coverage.html":{}}}],["src/app/pages/data/data.page.ts:105",{"_index":1179,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:127",{"_index":1204,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:145",{"_index":1210,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:154",{"_index":1186,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:179",{"_index":1172,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:210",{"_index":1176,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:22",{"_index":1168,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:229",{"_index":1208,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:249",{"_index":1207,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:40",{"_index":1212,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:44",{"_index":1202,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:54",{"_index":1188,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:75",{"_index":1198,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/modal",{"_index":2337,"title":{},"body":{"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/category",{"_index":939,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/home/filter",{"_index":1434,"title":{},"body":{"components/FilterMobileComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/filter/filter.component.ts",{"_index":1367,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/filter/filter.component.ts:19",{"_index":1382,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:24",{"_index":1379,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:26",{"_index":1378,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:47",{"_index":1384,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:55",{"_index":1383,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:77",{"_index":1390,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:88",{"_index":1388,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:96",{"_index":1385,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/home",{"_index":2061,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":2051,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1991,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:19",{"_index":2000,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:33",{"_index":2014,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:43",{"_index":2002,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:53",{"_index":2009,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:72",{"_index":2003,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:86",{"_index":2010,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:95",{"_index":2007,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/item",{"_index":2271,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/user",{"_index":2664,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/incident",{"_index":2128,"title":{},"body":{"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings",{"_index":2536,"title":{},"body":{"modules/SettingsPageRoutingModule.html":{}}}],["src/app/pages/settings/settings.module.ts",{"_index":2534,"title":{},"body":{"modules/SettingsPageModule.html":{}}}],["src/app/pages/settings/settings.page.ts",{"_index":2483,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings.page.ts:102",{"_index":2493,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:20",{"_index":2495,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:21",{"_index":2489,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:54",{"_index":2491,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:71",{"_index":2494,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/user",{"_index":2602,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/shared/components/categories",{"_index":772,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/confirm",{"_index":1095,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"coverage.html":{}}}],["src/app/shared/components/incidents",{"_index":2169,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/picture",{"_index":2389,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/user",{"_index":2625,"title":{},"body":{"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/users",{"_index":2705,"title":{},"body":{"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module",{"_index":421,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/UserDataPageModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2542,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":2799,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":2559,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["start",{"_index":2043,"title":{},"body":{"components/HomePage.html":{},"components/PictureSelectableComponent.html":{}}}],["state",{"_index":444,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["statements",{"_index":2736,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1345,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["status",{"_index":1874,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["storage",{"_index":1753,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["storagebucket",{"_index":1713,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["storageref",{"_index":1795,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["store",{"_index":1820,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stored",{"_index":1619,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stores",{"_index":1521,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stream",{"_index":2727,"title":{},"body":{"injectables/UsersService.html":{}}}],["string",{"_index":298,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{}}}],["strong",{"_index":1941,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["structure",{"_index":1624,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["style",{"_index":334,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["stylesheet",{"_index":2594,"title":{},"body":{"injectables/ThemeService.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["su",{"_index":931,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["subheader",{"_index":844,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["subject",{"_index":1139,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(mapfunction(data",{"_index":1895,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(snapshot.docs.map((doc",{"_index":1885,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["submission",{"_index":2325,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["subscr.complete",{"_index":1562,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.error('cannot",{"_index":1559,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.error(err",{"_index":1563,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.next(_info",{"_index":1570,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.next(data",{"_index":1561,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscribe",{"_index":1273,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribe((chartdata",{"_index":2194,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["subscribe((user",{"_index":2506,"title":{},"body":{"components/SettingsPage.html":{}}}],["subscribe(chartdata",{"_index":2643,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["subscribers",{"_index":1891,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribes",{"_index":217,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["subscribetocollection",{"_index":1880,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetodocument",{"_index":1887,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetofilterstate",{"_index":1373,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["subscribing",{"_index":2005,"title":{},"body":{"components/HomePage.html":{}}}],["subscriptions",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["substring",{"_index":1835,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["success",{"_index":305,"title":{},"body":{"components/AccessPage.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["successful",{"_index":1494,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["successfully",{"_index":862,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{}}}],["such",{"_index":279,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["super",{"_index":1542,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{}}}],["support",{"_index":2869,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":1578,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["svg",{"_index":2821,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["switch",{"_index":338,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["switch(backend",{"_index":647,"title":{},"body":{"modules/AppModule.html":{}}}],["switchmap",{"_index":875,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["switchmap((doc",{"_index":1645,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["switchmap((docref",{"_index":898,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["switchmap((existingcategories",{"_index":881,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["switchmap((incidents",{"_index":913,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["switchtheme",{"_index":2575,"title":{},"body":{"injectables/ThemeService.html":{}}}],["switchtheme(theme",{"_index":2580,"title":{},"body":{"injectables/ThemeService.html":{}}}],["t",{"_index":1321,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/PaginatedData.html":{}}}],["table",{"_index":2802,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2801,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":877,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["take(1",{"_index":2264,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["takes",{"_index":296,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["tap",{"_index":709,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{}}}],["tap(logged",{"_index":711,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tasks",{"_index":1536,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["terminated",{"_index":2409,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["text",{"_index":62,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["text.pipe",{"_index":2547,"title":{},"body":{"modules/SharedModule.html":{}}}],["text.pipe.ts",{"_index":2558,"title":{},"body":{"pipes/ShortenTextPipe.html":{},"coverage.html":{}}}],["text.pipe.ts:23",{"_index":2561,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["text/css",{"_index":2596,"title":{},"body":{"injectables/ThemeService.html":{}}}],["text/csv;charset=utf",{"_index":1245,"title":{},"body":{"components/DataPage.html":{}}}],["tfcchato",{"_index":2888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["theme",{"_index":2582,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themecodes",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["themelink",{"_index":2574,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeservice",{"_index":497,"title":{"injectables/ThemeService.html":{}},"body":{"components/AppComponent.html":{},"components/SettingsPage.html":{},"injectables/ThemeService.html":{},"coverage.html":{}}}],["theme}.css",{"_index":2600,"title":{},"body":{"injectables/ThemeService.html":{}}}],["then((_",{"_index":1149,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["then((credentials",{"_index":1555,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["then((data",{"_index":1985,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["then((dataobject",{"_index":1220,"title":{},"body":{"components/DataPage.html":{}}}],["then((docref",{"_index":1816,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["then(async",{"_index":1799,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._app",{"_index":1719,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth",{"_index":1725,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth!.currentuser",{"_index":1914,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth!.currentuser.isanonymous",{"_index":1915,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.currentuser",{"_index":1791,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.onauthstatechanged(async",{"_index":1728,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.signout",{"_index":1907,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categories",{"_index":1737,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categories.asobservable",{"_index":1701,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categoryservice",{"_index":1270,"title":{},"body":{"components/DataPage.html":{}}}],["this._categoryservice.createcategory(results?.data).subscribe",{"_index":1277,"title":{},"body":{"components/DataPage.html":{}}}],["this._categoryservice.deletecategory(info).subscribe",{"_index":1278,"title":{},"body":{"components/DataPage.html":{}}}],["this._db",{"_index":1721,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._firebaseservice",{"_index":1218,"title":{},"body":{"components/DataPage.html":{}}}],["this._firebaseservice.incidents",{"_index":2180,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["this._firebaseservice.users$.pipe",{"_index":2628,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["this._incidents",{"_index":1739,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._incidents.asobservable",{"_index":1699,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.asobservable",{"_index":1695,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(false",{"_index":1740,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(true",{"_index":1732,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._item",{"_index":2291,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["this._language.asobservable",{"_index":1142,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._language.getvalue",{"_index":1152,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._language.next(language",{"_index":1150,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._logged.asobservable",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["this._logged.next(false",{"_index":1548,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._logged.next(true",{"_index":1546,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._picture.asobservable",{"_index":2431,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.complete",{"_index":2435,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(obj",{"_index":2437,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(picture",{"_index":2439,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._router.navigate(['/data",{"_index":2657,"title":{},"body":{"components/UserDataPage.html":{}}}],["this._user",{"_index":1729,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._user.asobservable",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["this._user.next(data",{"_index":1545,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.next(null",{"_index":1549,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.next(user",{"_index":1601,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.value?.uuid",{"_index":1600,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._users",{"_index":1734,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._users.asobservable",{"_index":1697,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._webstorage",{"_index":1723,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.auth.islogged$.pipe",{"_index":710,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.islogged$.subscribe((logged",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.login(_data).subscribe",{"_index":349,"title":{},"body":{"components/AccessPage.html":{}}}],["this.auth.logout",{"_index":479,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.auth.logout().subscribe(async",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.register(_data).subscribe",{"_index":326,"title":{},"body":{"components/AccessPage.html":{}}}],["this.auth.updateuser(data).subscribe",{"_index":2733,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.auth.user",{"_index":2717,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.auth.user$.pipe",{"_index":476,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.auth.user$.subscribe(currentuser",{"_index":2619,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.browserlanguage",{"_index":2313,"title":{},"body":{"injectables/LocalService.html":{}}}],["this.categories",{"_index":1048,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.categoryselected",{"_index":1053,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.categoryservice.getcategory(id).then((category",{"_index":1052,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.changepicture",{"_index":2453,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.changepicture(reader.result",{"_index":2448,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.checkscreensize(event.target.innerwidth",{"_index":832,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.checkscreensize(window.innerwidth",{"_index":829,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.clearselection",{"_index":1060,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.clicked.emit(this._item",{"_index":2293,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["this.connectanonymously",{"_index":1908,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.createbody(body",{"_index":2118,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.createheaders(headers",{"_index":2116,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.currentlang",{"_index":2502,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.data",{"_index":2195,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["this.deletecategory(category",{"_index":1260,"title":{},"body":{"components/DataPage.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1257,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.dialogref.close",{"_index":1118,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.disabled",{"_index":1058,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.downloadcsv(csvcontent",{"_index":1225,"title":{},"body":{"components/DataPage.html":{}}}],["this.fileupload(blob",{"_index":1806,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.filter",{"_index":1065,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.filter(evt.detail.value",{"_index":1061,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.filteredincidents",{"_index":2025,"title":{},"body":{"components/HomePage.html":{}}}],["this.filterservice.getfilter().subscribe((filtervalues",{"_index":2023,"title":{},"body":{"components/HomePage.html":{}}}],["this.filterservice.getfilter().subscribe((formstate",{"_index":1409,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.filterservice.getfilter().value",{"_index":1404,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.filterservice.updatefilterstate(this.form",{"_index":1414,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.filterstate",{"_index":1468,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.filterstate.next(form",{"_index":1467,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.filterstate.next(initialform",{"_index":1470,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.firebase",{"_index":1984,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["this.firebase.categories$.subscribe",{"_index":1047,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.firebase.deletedocument",{"_index":1652,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.getdocument(resource.split('/')[0",{"_index":1640,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.updatedocument",{"_index":1648,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.users$.subscribe",{"_index":2683,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.firebaseservice",{"_index":924,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.categories$.pipe",{"_index":880,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.createdocument('categoryinfo",{"_index":897,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.getdocument('categoryinfo",{"_index":879,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.incidents",{"_index":2013,"title":{},"body":{"components/HomePage.html":{}}}],["this.firebaseservice.incidents$.pipe",{"_index":912,"title":{},"body":{"injectables/CategoriesService.html":{},"components/HomePage.html":{},"injectables/IncidentsService.html":{}}}],["this.firebaseservice.updatedocument",{"_index":932,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.updatedocument('categoryinfo",{"_index":901,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user",{"_index":891,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user.email",{"_index":895,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user.uid",{"_index":893,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.users",{"_index":2716,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.firebaseservice.users$.pipe",{"_index":2730,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.firebasesvc",{"_index":1551,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.createdocumentwithid",{"_index":1577,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.getdocument('userinfo",{"_index":1585,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.islogged$.subscribe((logged",{"_index":1543,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.updatedocument('userinfo",{"_index":1597,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.user.uid",{"_index":1586,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.user?.uid",{"_index":1568,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.form",{"_index":1395,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.form.controls['description'].setvalue(category.description",{"_index":2352,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['name'].setvalue(category.name",{"_index":2351,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['name'].setvalue(user.name",{"_index":2614,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['picture'].setvalue(user.picture",{"_index":2613,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['role'].setvalue(user.role",{"_index":2618,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['surname'].setvalue(user.surname",{"_index":2615,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['username'].setvalue(user.username",{"_index":2616,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['uuid'].setvalue(category.uuid",{"_index":2353,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['uuid'].setvalue(user.uuid",{"_index":2617,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.reset",{"_index":1415,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.form.setvalue(formstate.value",{"_index":1411,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.formattedday",{"_index":2221,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.formattedtime",{"_index":2223,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.formbuilder.group",{"_index":1454,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.get(resource",{"_index":1646,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.get(resource).pipe",{"_index":1651,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.hasvalue",{"_index":2436,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.httpclient.delete(url",{"_index":2122,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.get(url",{"_index":2113,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.patch(url",{"_index":2121,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.post(url",{"_index":2117,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.put(url",{"_index":2119,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.incident",{"_index":2148,"title":{},"body":{"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{}}}],["this.incident.date",{"_index":2219,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.incident.resolved",{"_index":2152,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentid",{"_index":2145,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.getincidentbyid(this.incidentid).subscribe",{"_index":2147,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.updateincident(incident",{"_index":2149,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.updateincident(incident).subscribe",{"_index":2151,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.init",{"_index":1144,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.init(config",{"_index":1703,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.initform",{"_index":1402,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.initialauthresolved",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdisabled",{"_index":2438,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.isscreensmall",{"_index":833,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.isuserconnected",{"_index":1917,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.isuserconnectedanonymously",{"_index":1918,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.jsontocsv(dataobject",{"_index":1222,"title":{},"body":{"components/DataPage.html":{}}}],["this.lang.use(this.browserlanguage",{"_index":2315,"title":{},"body":{"injectables/LocalService.html":{}}}],["this.login",{"_index":323,"title":{},"body":{"components/AccessPage.html":{}}}],["this.me().subscribe",{"_index":1544,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.me().subscribe((data",{"_index":1560,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.media.upload(blob).subscribe((media",{"_index":2516,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this.message",{"_index":1117,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.messageservice.add",{"_index":355,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.mod",{"_index":2355,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.modal.dismiss('reset",{"_index":1456,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["this.modal.dismiss(null",{"_index":1455,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.modal.dismiss(this.form.value",{"_index":2356,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.mymodal.create",{"_index":1263,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this.oneditclicked.emit(category",{"_index":831,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["this.onfilterchange(filtervalues",{"_index":2024,"title":{},"body":{"components/HomePage.html":{}}}],["this.onfilterchange(results.data",{"_index":2022,"title":{},"body":{"components/HomePage.html":{}}}],["this.onincidentclicked.emit(this.incident?.uuid",{"_index":2232,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.onsubmit.emit(this.form?.value",{"_index":2328,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.ontrashclicked.emit(category",{"_index":830,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["this.onuserclicked.emit(userid",{"_index":2721,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.options",{"_index":2197,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["this.picturemodal?.dismiss",{"_index":2454,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.postregister(_info).subscribe((data",{"_index":1569,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.propagatechange",{"_index":1056,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.propagatechange(picture",{"_index":2440,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.propagatechange(this.categoryselected.data.name",{"_index":1054,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.propagatechange(this.userselected.uuid",{"_index":2687,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.renderer",{"_index":2586,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.renderer.appendchild(document.head",{"_index":2597,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.renderer.createelement('link",{"_index":2591,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.rendererfactory.createrenderer(null",{"_index":2587,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.resetrequested.emit",{"_index":1416,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.resetsignal.subscribe",{"_index":1059,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.route.parammap.subscribe((params",{"_index":2144,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":320,"title":{},"body":{"components/AccessPage.html":{}}}],["this.router.createurltree([this.homeurl",{"_index":712,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.createurltree([this.loginurl",{"_index":713,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/about",{"_index":550,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/access",{"_index":480,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{}}}],["this.router.navigate(['/access']).catch(err",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/data",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home']).catch(err",{"_index":540,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home/incident",{"_index":2020,"title":{},"body":{"components/HomePage.html":{}}}],["this.router.navigate(['/settings",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate([`/data/user/${userid",{"_index":1261,"title":{},"body":{"components/DataPage.html":{}}}],["this.router.url.includes(url",{"_index":544,"title":{},"body":{"components/AppComponent.html":{}}}],["this.selectcategory(category.uuid",{"_index":1062,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.selectcategory(obj.name",{"_index":1055,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.selectcategory(undefined",{"_index":1066,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.selectuser(obj.name",{"_index":2688,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.selectuser(undefined",{"_index":2690,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.selectuser(user.uuid",{"_index":2689,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.settheme",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showall",{"_index":2021,"title":{},"body":{"components/HomePage.html":{}}}],["this.showerror('cant",{"_index":1275,"title":{},"body":{"components/DataPage.html":{}}}],["this.showerror('emailuser",{"_index":343,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('error",{"_index":2153,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.showerror('failregister",{"_index":347,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('loginerror",{"_index":352,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('unknown",{"_index":348,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('waitadmin",{"_index":322,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showrolefield",{"_index":2621,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.showsuccess('good",{"_index":1274,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.showsuccess('waitadmin",{"_index":331,"title":{},"body":{"components/AccessPage.html":{}}}],["this.subscribetocollection",{"_index":1736,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetocollection('userinfo",{"_index":1733,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetofilterstate",{"_index":1401,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.themelink",{"_index":2590,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themelink.href",{"_index":2599,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themelink.id",{"_index":2592,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themelink.rel",{"_index":2593,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themelink.type",{"_index":2595,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themeservice.switchtheme('light",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.addlangs(['es",{"_index":1145,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.get(`forms.${role",{"_index":2636,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["this.translate.get(key",{"_index":1153,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.get(message).subscribe",{"_index":354,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.translate.getcurrentlang",{"_index":2503,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.translate.setdefaultlang(this._language.value",{"_index":1147,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.use(lang",{"_index":2521,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.user",{"_index":2507,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this.userid",{"_index":2655,"title":{},"body":{"components/UserDataPage.html":{}}}],["this.username",{"_index":2230,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.users",{"_index":2684,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.userselected",{"_index":2686,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.userservice",{"_index":2504,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.userservice.getuserbyid(id).subscribe",{"_index":2685,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.userservice.getuserbyid(this.incident.userid).subscribe((user",{"_index":2229,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.userservice.getuserbyid(this.userid).subscribe((user",{"_index":2656,"title":{},"body":{"components/UserDataPage.html":{}}}],["this.userservice.updateuser(results.data",{"_index":2519,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this?.form?.get('role')?.setvalue('admin",{"_index":2622,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["through",{"_index":1489,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"miscellaneous/functions.html":{}}}],["throw",{"_index":651,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["throwerror",{"_index":876,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["throws",{"_index":1511,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["thumbnails",{"_index":1977,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["tiene",{"_index":921,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["time",{"_index":453,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["timestamp",{"_index":1776,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["timestamp.todate",{"_index":2226,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["timestamp.tolocaledatestring",{"_index":2222,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["timestamp.tolocaletimestring",{"_index":2224,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["title",{"_index":2862,"title":{},"body":{"interfaces/incidentInfo.html":{}}}],["tl",{"_index":357,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["toabout",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["toabout(menu",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":307,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["toast.${text",{"_index":353,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["toastmodule",{"_index":422,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{}}}],["todata",{"_index":492,"title":{},"body":{"components/AppComponent.html":{}}}],["toggles",{"_index":262,"title":{},"body":{"components/AccessPage.html":{}}}],["tohome",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbar",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":364,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["tosettings",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["total",{"_index":1639,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["total:number",{"_index":2362,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["touched",{"_index":1011,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["transform",{"_index":752,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["transform(value",{"_index":753,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["transformed",{"_index":767,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["translate",{"_index":210,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["translate.service",{"_index":2311,"title":{},"body":{"injectables/LocalService.html":{}}}],["translate/core",{"_index":409,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2829,"title":{},"body":{"dependencies.html":{}}}],["translated",{"_index":1131,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translateloader",{"_index":407,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule",{"_index":406,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule.forchild",{"_index":424,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule.forroot",{"_index":660,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":1126,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translating",{"_index":233,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["translation",{"_index":227,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"miscellaneous/functions.html":{}}}],["translations",{"_index":1128,"title":{},"body":{"injectables/CustomTranslateService.html":{},"components/UserCircleGraphicComponent.html":{}}}],["transparent",{"_index":385,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["triggered",{"_index":1448,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["triggering",{"_index":2421,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["true",{"_index":310,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/EmailValidation.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["truncate",{"_index":2565,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["trust",{"_index":2090,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["try",{"_index":1046,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["tslib",{"_index":2842,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["tus",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["type",{"_index":254,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":2218,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"classes/PasswordValidation.html":{}}}],["typescript",{"_index":268,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["typically",{"_index":1709,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["uid",{"_index":1492,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["un",{"_index":1959,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unauthenticated",{"_index":1528,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["undefined",{"_index":754,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["unique",{"_index":1717,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["uniquely",{"_index":1824,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unsubscribe",{"_index":1668,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["up",{"_index":1704,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["update",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["updatecategory",{"_index":854,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategory(category",{"_index":868,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategory(results?.data",{"_index":1271,"title":{},"body":{"components/DataPage.html":{}}}],["updated",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["updatedoc",{"_index":1663,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(doc(collectionref",{"_index":1831,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(documentref",{"_index":1962,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocument",{"_index":1828,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocumentfield",{"_index":1949,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatefilterstate",{"_index":1461,"title":{},"body":{"injectables/FilterService.html":{}}}],["updatefilterstate(form",{"_index":1464,"title":{},"body":{"injectables/FilterService.html":{}}}],["updateincident",{"_index":2251,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["updateincident(incident",{"_index":2261,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["updates",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["updateuser",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["updateuser(data",{"_index":2728,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(user",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["updateusercomponent",{"_index":150,"title":{"components/UpdateUserComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["updating",{"_index":1332,"title":{},"body":{"injectables/DataService.html":{},"components/SettingsPage.html":{}}}],["upload",{"_index":1770,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["upload(blob",{"_index":1969,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["uploadbytes",{"_index":1678,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploadbytes(storageref",{"_index":1798,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploaded",{"_index":1754,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["uploading",{"_index":1968,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{}}}],["uploads",{"_index":1752,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["upon",{"_index":1611,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["url",{"_index":441,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["url('../../../assets/images/vectorial",{"_index":382,"title":{},"body":{"components/AccessPage.html":{}}}],["url.createobjecturl(blob",{"_index":1247,"title":{},"body":{"components/DataPage.html":{}}}],["url.revokeobjecturl(url",{"_index":1256,"title":{},"body":{"components/DataPage.html":{}}}],["url_large",{"_index":1981,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_medium",{"_index":1980,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_small",{"_index":1979,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_thumbnail",{"_index":1982,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["urlencoded",{"_index":2077,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["urls",{"_index":1973,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["urltree",{"_index":460,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["use",{"_index":342,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["use(language",{"_index":1137,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["useclass",{"_index":666,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":225,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":1042,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":427,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["user",{"_index":153,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["user!.uuid",{"_index":1598,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["user's",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user'},{'name",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["user(_user",{"_index":2682,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["user.component",{"_index":2059,"title":{},"body":{"modules/HomePageModule.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{}}}],["user.component.html",{"_index":2297,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{}}}],["user.component.scss",{"_index":2296,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{}}}],["user.component.ts",{"_index":2295,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:13",{"_index":2609,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:14",{"_index":2610,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:16",{"_index":2299,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:21",{"_index":2604,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:23",{"_index":2300,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:30",{"_index":2304,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:32",{"_index":2298,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:36",{"_index":2301,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{}}}],["user.component.ts:42",{"_index":2302,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:62",{"_index":2606,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:68",{"_index":2608,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:79",{"_index":2607,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:9",{"_index":2303,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.email",{"_index":1731,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.name",{"_index":2231,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.picture",{"_index":2520,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["user.role",{"_index":478,"title":{},"body":{"guards/AdminGuard.html":{}}}],["user.surname",{"_index":2658,"title":{},"body":{"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.uid",{"_index":1730,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.username",{"_index":2659,"title":{},"body":{"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.uuid",{"_index":1599,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["user/:id",{"_index":696,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user/item",{"_index":2058,"title":{},"body":{"modules/HomePageModule.html":{},"components/ItemUserComponent.html":{},"coverage.html":{}}}],["user/update",{"_index":2499,"title":{},"body":{"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"coverage.html":{}}}],["user_selectable_mobile_value_accessor",{"_index":2693,"title":{},"body":{"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_selectable_value_accessor",{"_index":2665,"title":{},"body":{"components/UserSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercirclegraphiccomponent",{"_index":152,"title":{"components/UserCircleGraphicComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["usercredential",{"_index":1687,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["usercredentials",{"_index":266,"title":{"interfaces/UserCredentials.html":{}},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["userdatapage",{"_index":154,"title":{"components/UserDataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["userdatapagemodule",{"_index":673,"title":{"modules/UserDataPageModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["userdatapageroutingmodule",{"_index":2663,"title":{"modules/UserDataPageRoutingModule.html":{}},"body":{"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["userid",{"_index":1211,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["useridvalue",{"_index":2030,"title":{},"body":{"components/HomePage.html":{}}}],["userinfo",{"_index":733,"title":{"interfaces/UserInfo.html":{}},"body":{"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userinfo(user",{"_index":2612,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["userinfo(userid",{"_index":1209,"title":{},"body":{"components/DataPage.html":{}}}],["username",{"_index":1581,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["userregisterinfo",{"_index":283,"title":{"interfaces/UserRegisterInfo.html":{}},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["users",{"_index":158,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["users.filter(user",{"_index":2720,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["users.find((user",{"_index":2732,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.reduce((acc",{"_index":2631,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["userselectablecomponent",{"_index":155,"title":{"components/UserSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userselectablemobilecomponent",{"_index":156,"title":{"components/UserSelectableMobileComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userselected",{"_index":2666,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["userselected.name",{"_index":2692,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["userservice",{"_index":2208,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["usersinfocomponent",{"_index":157,"title":{"components/UsersInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["usersservice",{"_index":2206,"title":{"injectables/UsersService.html":{}},"body":{"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uses",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{}}}],["usevalue",{"_index":662,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue:'firebase",{"_index":665,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":300,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["utilized",{"_index":1626,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["uuid",{"_index":899,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{}}}],["valid",{"_index":1491,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["validate",{"_index":1351,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validates",{"_index":1348,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validation",{"_index":1354,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validationerrors",{"_index":1357,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validator",{"_index":1353,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validatorfn",{"_index":1352,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validators",{"_index":1393,"title":{},"body":{"components/FilterComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["validators.required",{"_index":2327,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["value",{"_index":263,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["value!.length",{"_index":2570,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["value!.substring(0",{"_index":2571,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["value.charat(0).touppercase",{"_index":771,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["values",{"_index":1387,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["var",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["variable",{"_index":2738,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2879,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1920,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["version",{"_index":2872,"title":{},"body":{"properties.html":{}}}],["viewencapsulation",{"_index":1213,"title":{},"body":{"components/DataPage.html":{}}}],["viewencapsulation.none",{"_index":1156,"title":{},"body":{"components/DataPage.html":{}}}],["views",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["visibility",{"_index":2479,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["visibility_off",{"_index":2478,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["vistos",{"_index":1417,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"injectables/ThemeService.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["want",{"_index":1769,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["web",{"_index":635,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["web.provider",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["web.provider.ts",{"_index":2093,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["web.provider.ts:12",{"_index":2097,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["web.provider.ts:153",{"_index":2103,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["web.provider.ts:170",{"_index":2100,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["webdir",{"_index":2889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":73,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["where(field",{"_index":1871,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["whether",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["white",{"_index":1286,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["whose",{"_index":1840,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["width",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["width:99",{"_index":377,"title":{},"body":{"components/AccessPage.html":{}}}],["window",{"_index":804,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["window.navigator.language",{"_index":2309,"title":{},"body":{"injectables/LocalService.html":{}}}],["window.navigator.language.split",{"_index":2314,"title":{},"body":{"injectables/LocalService.html":{}}}],["window:resize",{"_index":787,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["window:resize(event",{"_index":801,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["windows",{"_index":2401,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["within",{"_index":229,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"miscellaneous/functions.html":{}}}],["without",{"_index":1450,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["wrap",{"_index":2042,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["writes",{"_index":1024,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["writevalue",{"_index":959,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["writevalue(obj",{"_index":1022,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["written",{"_index":1026,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["www",{"_index":2127,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":903,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["ya",{"_index":889,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["yes",{"_index":2079,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["z0",{"_index":1363,"title":{},"body":{"classes/EmailValidation.html":{}}}],["z70ncw6nln",{"_index":2901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z\\d]{8",{"_index":2381,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z])(?=.*[a",{"_index":2379,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z])(?=.*\\d)[a",{"_index":2380,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z]{2",{"_index":1366,"title":{},"body":{"classes/EmailValidation.html":{}}}],["za",{"_index":1362,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["zone.js",{"_index":2844,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":175,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/about/about.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      CHATO\n      \n        Tu solución para solucionar los problemas de tus empleados\n      \n      \n        \n        \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                .container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: relative;\n    height: 86.3vh;\n    margin: 0;\n    overflow: hidden;\n}\n\n.header {\n    text-align: center;\n    flex: 1;\n    overflow: auto;\n}\n\nh1 {\n    font-size: 90px;\n    color: #0f212d;\n    font-weight: 900;\n}\n\n.slogan {\n    font-size: 30px;\n    color: #0f212d;\n    margin-bottom: 20px;\n}\n\n.social-icons a {\n    display: inline-block;\n    margin: 0 10px;\n\n    ion-icon {\n        color: #0f212d;\n    }\n}\n\n.footer {\n    width: 100%;\n    position: absolute;\n    bottom: 0;\n}\n\n\n@media (max-width: 600px) {\n    .container {\n        height: 100%;\n        .header {\n            h1 {\n                font-size: 5rem;\n            }\n            \n            .slogan {\n                font-size: 1rem;\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            CHATO              Tu solución para solucionar los problemas de tus empleados                                                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AboutPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPageRoutingModule } from './about-routing.module';\n\nimport { AboutPage } from './about.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AboutPageRoutingModule\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccessPage.html":{"url":"components/AccessPage.html","title":"component - AccessPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/access.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-access\n            \n\n\n\n            \n                styleUrls\n                ./access.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./access.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeForm\n                            \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, translate: CustomTranslateService, messageService: MessageService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/access.page.ts:19\n                            \n                        \n\n                \n                    \n                            The constructor function subscribes to query parameters and displays an error message if the\n'error' parameter is 'notAdmin'.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\nMessageService. It is likely used for displaying messages or notifications to the user within\nthe application.\nservice provided by Angular that gives access to information about a route associated with a\ncomponent loaded in an outlet. It allows you to access route parameters, query parameters, and\nother information related to the current route.\nservice. It is used for navigating between different components in your Angular application based\non the defined routes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService - a service for handling authentication and user authorization.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The translate parameter in the constructor is of type CustomTranslateService.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The messageService parameter in the constructor is of type\nMessageService. It is likely used for displaying messages or notifications to the user within\nthe application.\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The route parameter in the constructor is of type ActivatedRoute, which is a\nservice provided by Angular that gives access to information about a route associated with a\ncomponent loaded in an outlet. It allows you to access route parameters, query parameters, and\nother information related to the current route.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different components in your Angular application based\non the defined routes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeForm\n                        \n                    \n                \n            \n            \n                \nchangeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:60\n                        \n                    \n\n\n            \n                \n                        The function toggles the value of the login property.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(data: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:106\n                        \n                    \n\n\n            \n                \n                        The loginUser function in TypeScript logs in a user with provided credentials and handles\nerrors, displaying a specific error message for invalid email.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    UserCredentials object containing user login information, such as email and password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(data: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:72\n                        \n                    \n\n\n            \n                \n                        The function registerUser registers a user with the role 'user' and handles different error\ncases during the registration process.\nThis parameter likely contains information about a user that is being registered, such as their\nemail, password, and any other relevant details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The registerUser function takes in a parameter data of type UserRegisterInfo.\nThis parameter likely contains information about a user that is being registered, such as their\nemail, password, and any other relevant details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:146\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:129\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/access.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport {\n  UserCredentials,\n  UserRegisterInfo,\n} from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\n\n@Component({\n  selector: 'app-access',\n  templateUrl: './access.page.html',\n  styleUrls: ['./access.page.scss'],\n  providers: [MessageService],\n})\nexport class AccessPage implements OnInit {\n  login = true;\n\n  /**\n   * The constructor function subscribes to query parameters and displays an error message if the\n   * 'error' parameter is 'notAdmin'.\n   *\n   * @param auth AuthService - a service for handling authentication and user authorization.\n   * @param translate The `translate` parameter in the constructor is of type `CustomTranslateService`.\n   * It is used for handling translation services within the component or service where it is injected.\n   * This service likely provides methods for translating text or messages into different languages or\n   * for managing localization in the application.\n   * @param messageService The `messageService` parameter in the constructor is of type\n   * `MessageService`. It is likely used for displaying messages or notifications to the user within\n   * the application.\n   * @param route The `route` parameter in the constructor is of type `ActivatedRoute`, which is a\n   * service provided by Angular that gives access to information about a route associated with a\n   * component loaded in an outlet. It allows you to access route parameters, query parameters, and\n   * other information related to the current route.\n   * @param router The `router` parameter in the constructor is an instance of the Angular Router\n   * service. It is used for navigating between different components in your Angular application based\n   * on the defined routes.\n   */\n  constructor(\n    private auth: AuthService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.route.queryParams.subscribe((params) => {\n      if (params['error'] === 'notAdmin') {\n        this.showError('waitAdmin');\n      }\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * The function toggles the value of the `login` property.\n   */\n  changeForm() {\n    this.login = !this.login;\n  }\n\n  /**\n   * The function `registerUser` registers a user with the role 'user' and handles different error\n   * cases during the registration process.\n   *\n   * @param data The `registerUser` function takes in a parameter `data` of type `UserRegisterInfo`.\n   * This parameter likely contains information about a user that is being registered, such as their\n   * email, password, and any other relevant details.\n   */\n  registerUser(data: UserRegisterInfo) {\n    let _data: UserRegisterInfo = { ...data };\n    _data.role = 'user';\n    this.auth.register(_data).subscribe({\n      next: async (data) => {\n        console.log('ALL WAS GOOD');\n        this.showSuccess('waitAdmin');\n        await Haptics.impact({ style: ImpactStyle.Medium });\n      },\n      error: async (err) => {\n        if (err.code) {\n          switch (err.code) {\n            case 'auth/email-already-in-use':\n              this.showError('emailUser');\n              await Haptics.impact({ style: ImpactStyle.Heavy });\n              break;\n            case 'post-registration-error':\n              this.showError('failRegister');\n              await Haptics.impact({ style: ImpactStyle.Heavy });\n              break;\n          }\n        } else {\n          this.showError('Unknown registration error');\n        }\n      },\n    });\n  }\n\n  /**\n   * The `loginUser` function in TypeScript logs in a user with provided credentials and handles\n   * errors, displaying a specific error message for invalid email.\n   *\n   * @param data UserCredentials object containing user login information, such as email and password\n   */\n  loginUser(data: UserCredentials) {\n    let _data: UserCredentials = { ...data };\n    this.auth.login(_data).subscribe({\n      next: async (data) => {\n        console.log('ALL WAS GOOD');\n        await Haptics.impact({ style: ImpactStyle.Medium });\n      },\n      error: async (err) => {\n        console.log('BAD', err);\n        if (err.code === 'auth/invalid-email') {\n          this.showError('loginError');\n          await Haptics.impact({ style: ImpactStyle.Heavy });\n        }\n      },\n    });\n  }\n\n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({ key: 'tl', severity: 'info', detail: text });\n        this.login = true;\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n        this.login = true;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n\n      \n      \n      {{'access.toRegister' | translate}}\n    \n      {{'access.toLogin' | translate}}\n    \n\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./access.page.scss\n                \n                ion-content {\n    margin-top: 30%;\n}\n\n.access {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n\n    &__forms {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        padding: 20px;\n        gap: 20px;\n\n        .access__forms--logo {\n            display: none;\n            width: 30%;\n        }\n\n        app-login-form,\n        app-register-form {\n            width: 70%;\n        }\n    }\n\n    &__image {\n        flex: 1;\n        width:99%;\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: cover;\n        background-image: url('../../../assets/images/vectorial-access.webp');\n    }\n\n    button {\n        background-color: transparent;\n        padding: 0.5rem;\n        border: none;\n        cursor: pointer;\n    }\n}\n\n@media (max-width: 700px) {\n    .access {\n        flex-direction: column;\n    \n        &__forms {  \n            .access__forms--logo {\n                display: block;\n                width: 30%;\n            }\n    \n            app-login-form {\n                width: 100%;\n            }\n\n            app-register-form {\n                margin-top: -5%;\n                width: 100%;\n            }\n        }\n    \n        &__image {\n            display: none;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{\\'access.toRegister\\' | translate}}          {{\\'access.toLogin\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccessPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccessPageModule.html":{"url":"modules/AccessPageModule.html","title":"module - AccessPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AccessPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccessPageModule\n\n\n\ncluster_AccessPageModule_declarations\n\n\n\ncluster_AccessPageModule_imports\n\n\n\n\nAccessPage\n\nAccessPage\n\n\n\nAccessPageModule\n\nAccessPageModule\n\nAccessPageModule -->\n\nAccessPage->AccessPageModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAccessPageModule -->\n\nLoginFormComponent->AccessPageModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAccessPageModule -->\n\nRegisterFormComponent->AccessPageModule\n\n\n\n\n\nAccessPageRoutingModule\n\nAccessPageRoutingModule\n\nAccessPageModule -->\n\nAccessPageRoutingModule->AccessPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAccessPageModule -->\n\nSharedModule->AccessPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/access/access.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccessPage\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            RegisterFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccessPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AccessPageRoutingModule } from './access-routing.module';\n\nimport { AccessPage } from './access.page';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccessPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n     // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    // Shared\n    SharedModule,\n    ToastModule\n  ],\n  declarations: [\n    AccessPage,\n    LoginFormComponent,\n    RegisterFormComponent\n  ]\n})\nexport class AccessPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccessPageRoutingModule.html":{"url":"modules/AccessPageRoutingModule.html","title":"module - AccessPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccessPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/access/access-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccessPage } from './access.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccessPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccessPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:16\n                            \n                        \n\n                \n                    \n                            The constructor function takes AuthService and Router as parameters.\nhandling authentication-related functionalities in the application.\nnavigating between different components in an Angular application by manipulating the browser's\nURL.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is an instance of the AuthService class, which is used for\nhandling authentication-related functionalities in the application.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter is an instance of the Angular Router service. It is used for\nnavigating between different components in an Angular application by manipulating the browser's\nURL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/admin.guard.ts:42\n                        \n                    \n\n\n            \n                \n                        The function canActivate checks if the user is an admin and returns true, logs out the user and\nredirects to an access page with an error message if not.\nrepresents the activated route snapshot at the time of navigation. It contains information about\nthe route, its parameters, and related data.\nthe current router state snapshot, which includes information about the current activated route,\nthe URL, and the router state itself. It is of type RouterStateSnapshot.\nPromise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\nchecks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\nIf the user is logged in but not an admin, it logs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe route parameter in the canActivate method\nrepresents the activated route snapshot at the time of navigation. It contains information about\nthe route, its parameters, and related data.\n\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe state parameter in the canActivate method represents\nthe current router state snapshot, which includes information about the current activated route,\nthe URL, and the router state itself. It is of type RouterStateSnapshot.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                The canActivate method is returning an Observable that emits a boolean or UrlTree, a\nPromise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\nchecks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\nIf the user is logged in but not an admin, it logs\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  /**\n   * The constructor function takes AuthService and Router as parameters.\n   *\n   * @param auth The `auth` parameter is an instance of the `AuthService` class, which is used for\n   * handling authentication-related functionalities in the application.\n   * @param router The `router` parameter is an instance of the Angular Router service. It is used for\n   * navigating between different components in an Angular application by manipulating the browser's\n   * URL.\n   */\n  constructor(private auth: AuthService, private router: Router) {}\n\n  /**\n   * The function `canActivate` checks if the user is an admin and returns true, logs out the user and\n   * redirects to an access page with an error message if not.\n   * @param {ActivatedRouteSnapshot} route - The `route` parameter in the `canActivate` method\n   * represents the activated route snapshot at the time of navigation. It contains information about\n   * the route, its parameters, and related data.\n   * @param {RouterStateSnapshot} state - The `state` parameter in the `canActivate` method represents\n   * the current router state snapshot, which includes information about the current activated route,\n   * the URL, and the router state itself. It is of type `RouterStateSnapshot`.\n   * @returns The `canActivate` method is returning an Observable that emits a boolean or UrlTree, a\n   * Promise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\n   * checks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\n   * If the user is logged in but not an admin, it logs\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.auth.user$.pipe(\n      map((user) => {\n        if (user && user.role === 'admin') {\n          return true;\n        }\n        if (user) this.auth.logout();\n        this.router.navigate(['/access'], {\n          queryParams: { error: 'notAdmin' },\n        });\n        return false;\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialAuthResolved\n                            \n                            \n                                isSplash\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                setTheme\n                            \n                            \n                                toAbout\n                            \n                            \n                                toData\n                            \n                            \n                                toHome\n                            \n                            \n                                toSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router, localLang: LocalService, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:17\n                            \n                        \n\n                \n                    \n                            The constructor initializes subscriptions to authentication and router events in a TypeScript\nclass.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\nprivate property that is used to access the LocalService service within the class. This service\nis likely used for handling localization or language-related functionalities in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\n\n                                                        \n                                                \n                                                \n                                                        localLang\n                                                  \n                                                        \n                                                                        LocalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The localLang parameter in the constructor is of type LocalService. It is a\nprivate property that is used to access the LocalService service within the class. This service\nis likely used for handling localization or language-related functionalities in the application.\n\n                                                        \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:65\n                        \n                    \n\n\n            \n                \n                        The function isActive checks if the current URL includes a specified URL string and returns a\nboolean value.\nused to check if the current URL matches the provided url parameter.\nspecified URL string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The isActive function takes a url parameter of type string. This function is likely\nused to check if the current URL matches the provided url parameter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                A boolean value is being returned, indicating whether the current URL contains the\nspecified URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:93\n                        \n                    \n\n\n            \n                \n                        The logOut function calls the logout method of the auth object.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setTheme\n                        \n                    \n                \n            \n            \n                \n                        \n                    setTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAbout\n                        \n                    \n                \n            \n            \n                \ntoAbout(menu: IonMenu)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:105\n                        \n                    \n\n\n            \n                \n                        The toAbout function navigates to the '/about' route using the Angular router and close the menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                        IonMenu\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The menu\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toData\n                        \n                    \n                \n            \n            \n                \ntoData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:86\n                        \n                    \n\n\n            \n                \n                        The toData function navigates to the '/data' route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toHome\n                        \n                    \n                \n            \n            \n                \ntoHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:72\n                        \n                    \n\n\n            \n                \n                        The toHome function uses the Angular router to navigate to the '/home' route.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSettings\n                        \n                    \n                \n            \n            \n                \ntoSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:79\n                        \n                    \n\n\n            \n                \n                        The toSettings function navigates to the settings route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialAuthResolved\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSplash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LocalService } from './core/services/translate/local.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AuthService } from './core/services/auth.service';\nimport { filter } from 'rxjs';\nimport { IonMenu, MenuController } from '@ionic/angular';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\nimport { ThemeService } from './core/services/theme/theme.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent implements OnInit{\n  isSplash: boolean = false;\n  initialAuthResolved = false;\n\n  /**\n   * The constructor initializes subscriptions to authentication and router events in a TypeScript\n   * class.\n   *\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   * @param router The `router` parameter in the constructor is an instance of the Angular Router\n   * service. It is used for navigating between different views in the Angular application based on the\n   * specified routes.\n   * @param localLang The `localLang` parameter in the constructor is of type `LocalService`. It is a\n   * private property that is used to access the `LocalService` service within the class. This service\n   * is likely used for handling localization or language-related functionalities in the application.\n   */\n  constructor(\n    protected auth: AuthService,\n    private router: Router,\n    private localLang: LocalService,\n    private themeService: ThemeService\n  ) {\n    this.auth.isLogged$.subscribe((logged) => {\n      if (this.initialAuthResolved) {\n        if (logged) {\n          this.router.navigate(['/home']).catch(err => console.error(err));\n        } else {\n          this.router.navigate(['/access']).catch(err => console.error(err));\n        }\n      } else {\n        this.initialAuthResolved = true;\n      }\n    });\n  }\n  ngOnInit(): void {\n    this.setTheme()\n  }\n\n  /**\n   * The function `isActive` checks if the current URL includes a specified URL string and returns a\n   * boolean value.\n   *\n   * @param url The `isActive` function takes a `url` parameter of type string. This function is likely\n   * used to check if the current URL matches the provided `url` parameter.\n   * @return A boolean value is being returned, indicating whether the current URL contains the\n   * specified URL string.\n   */\n  isActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  /**\n   * The `toHome` function uses the Angular router to navigate to the '/home' route.\n   */\n  toHome() {\n    this.router.navigate(['/home']);\n  }\n\n  /**\n   * The `toSettings` function navigates to the settings route using the Angular router.\n   */\n  toSettings() {\n    this.router.navigate(['/settings']);\n  }\n\n  /**\n   * The `toData` function navigates to the '/data' route using the Angular router.\n   */\n  toData() {\n    this.router.navigate(['/data']);\n  }\n\n  /**\n   * The `logOut` function calls the `logout` method of the `auth` object.\n   */\n  logOut() {\n    this.auth.logout().subscribe(async (_) => {\n      await this.router.navigate(['/access']);\n      await Haptics.impact({ style: ImpactStyle.Heavy });\n    });\n  }\n\n  /**\n   * The `toAbout` function navigates to the '/about' route using the Angular router and close the menu.\n   *\n   * @param menu The menu\n   */\n  toAbout(menu: IonMenu) {\n    this.router.navigate(['/about']);\n    menu.close();\n  }\n\n  private setTheme() {\n    const themeCodes: string[] = [\n      \"light\",\n      \"dark\"\n    ];\n\n    this.themeService.switchTheme('light')\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n    \n  \n  \n  \n    \n    \n      \n        \n          \n        \n        \n          {{(auth.user$ | async)?.name }} {{ (auth.user$ | async)?.surname | capitalizeInitial}}\n        \n      \n    \n  \n    \n\n    \n      \n        \n\n          \n            \n            {{'menu.home' | translate}}\n          \n\n          \n            \n            {{'menu.settings' | translate}}\n          \n          \n          \n            \n            {{'menu.graphics' | translate}}\n          \n\n          \n            \n            {{'menu.logOut' | translate}}\n          \n          \n        \n\n      \n      \n        {{'menu.about' | translate}}\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                ion-item {\n    cursor: pointer;\n}\n\nion-icon {\n    margin-right: 20px;\n}\n\nion-menu-button {\n    --color: #0F212D;\n    font-size: 50px;\n    margin-left: 100px;\n}\n\nion-item.active {\n    --background: #0F212D;\n    --color: var(--ion-color-primary-contrast);\n    \n    ion-icon {\n      color: var(--ion-color-primary-contrast);\n    }\n}\n\nion-header {\n    --background: transparent;\n    ion-toolbar {\n        --background: transparent;\n        border: none;\n        box-shadow: none;\n        \n        .app-logo {\n          height: 100px;\n          margin-right: 40px;\n        }\n    }\n\n}\n\n.menu-footer {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    text-align: center;\n    padding: 10px;\n    font-size: 0.8em;\n    color: gray;\n    border-top: 1px solid lightgray;\n  \n    p {\n      margin: 0;\n    }\n\n    &:hover {\n        cursor: pointer;\n        p {\n            font-weight: bold;\n        }\n    }\n}\n\n\n.menu--header__toolbar {\n    margin-top: 5%;\n    display:flex;\n    align-items:center;\n    justify-content: center;\n    gap: 20px;\n\n    ion-avatar {\n        img {\n            width: 60px;\n        }\n    }\n\n    span {\n        font-weight: bold;\n    }\n}\n    \n\n@media (max-width: 700px) {\n    ion-menu-button{\n        font-size: 40px;\n        margin-left: 10px;\n    }\n\n    ion-header {\n        ion-toolbar {\n            .app-logo {\n              margin-right: 10px;\n            }\n        }\n    }\n    \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    {{(auth.user$ | async)?.name }} {{ (auth.user$ | async)?.surname | capitalizeInitial}}                                                                            {{\\'menu.home\\' | translate}}                                            {{\\'menu.settings\\' | translate}}                                                      {{\\'menu.graphics\\' | translate}}                                            {{\\'menu.logOut\\' | translate}}                                                {{\\'menu.about\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCapitalizeInitialPipe\n\nCapitalizeInitialPipe\n\nAppModule -->\n\nCapitalizeInitialPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CapitalizeInitialPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { IonicModule, IonicRouteStrategy, Platform } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { createTranslateLoader } from './core/translate/translate';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\nimport { FirebaseAuthService } from './core/services/firebase/api/firebase-auth.service';\nimport { FirebaseService } from './core/services/firebase/firebase.service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FirebaseMediaService } from './core/services/firebase/api/firebase-media.service';\nimport { HttpClientWebProvider } from './core/services/http/http-client-web.provider';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { MediaService } from './core/services/media.service';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './core/services/auth.service';\nimport { DataService } from './core/services/data.service';\nimport { HttpClientProvider } from './core/services/http/http-client.provider';\nimport { ToastModule } from 'primeng/toast';\nimport { SharedModule } from './shared/shared.module';\n\nimport { provideLottieOptions } from 'ngx-lottie';\nimport player from 'lottie-web';\nimport { CapitalizeInitialPipe } from './core/pipes/capitalize-initial.pipe';\nimport { DividerModule } from 'primeng/divider';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport { DropdownModule } from 'primeng/dropdown';\n\nexport function MediaServiceFactory(\n  backend:string,\n  firebase:FirebaseService){\n  switch(backend){\n    case 'Firebase':\n      return new FirebaseMediaService(firebase);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\nexport function httpProviderFactory(\n  http:HttpClient) {\n  return new HttpClientWebProvider(http);\n}\n\nexport function AuthServiceFactory(\n  backend:string,\n  firebase:FirebaseService\n) {\n  switch(backend){\n    case 'Firebase':\n      return new FirebaseAuthService(firebase);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CapitalizeInitialPipe,\n  ],\n  imports: [\n    DropdownModule,\n    BrowserAnimationsModule,\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n    SharedModule,\n    DividerModule,\n  ],\n  providers: [\n    provideLottieOptions({\n      player: () => player,\n    }),\n    {\n      provide: 'firebase-config',\n      useValue: environment.firebaseConfig\n    },\n    {\n      provide: 'backend',\n      useValue:'Firebase'\n    },\n    { \n      provide: RouteReuseStrategy, \n      useClass: IonicRouteStrategy \n    },\n    // Factories\n    {\n      provide: HttpClientProvider,\n      deps: [HttpClient, Platform],\n      useFactory: httpProviderFactory,  \n    },\n    {\n      provide: AuthService,\n      deps: ['backend', FirebaseService],\n      useFactory: AuthServiceFactory,  \n    },\n    {\n      provide: MediaService,\n      deps: ['backend', FirebaseService],\n      useFactory: MediaServiceFactory,  \n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { AdminGuard } from './core/guards/admin.guard';\nimport { UserDataPageModule } from './pages/user-data/user-data.module';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./pages/home/home.module').then( m => m.HomePageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n      {\n        path: 'incident-data/:id',\n        loadChildren: () => \"import('./pages/incident-data/incident-data.module').then( m => m.IncidentDataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: 'access',\n    pathMatch: 'full'\n  },\n  {\n    path: 'access',\n    loadChildren: () => \"import('./pages/access/access.module').then( m => m.AccessPageModule)\"\n  },\n  {\n    path: 'settings',\n    loadChildren: () => \"import('./pages/settings/settings.module').then( m => m.SettingsPageModule)\",\n    canActivate: [AuthGuard, AdminGuard]\n  },\n  {\n    path: 'data',\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./pages/data/data.module').then(m => m.DataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n      {\n        path: 'user/:id',\n        loadChildren: () => \"import('./pages/user-data/user-data.module').then(m => m.UserDataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n    ]\n  },\n  {\n    path: 'about',\n    loadChildren: () => \"import('./pages/about/about.module').then( m => m.AboutPageModule)\",\n    canActivate: [AuthGuard, AdminGuard],\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                homeUrl\n                            \n                            \n                                    Private\n                                loginUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth.guard.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable, map, tap } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  private loginUrl: string = '/access';\n  private homeUrl: string = '/home';\n\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n    return this.auth.isLogged$.pipe(\n      tap(logged => {\n        if (logged) {\n          return this.router.createUrlTree([this.homeUrl]);\n        } else {\n          return this.router.createUrlTree([this.loginUrl]);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                login\n                            \n                            \n                                    Public\n                                    Abstract\n                                logout\n                            \n                            \n                                    Public\n                                    Abstract\n                                me\n                            \n                            \n                                    Public\n                                    Abstract\n                                register\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Performs user login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser credentials for login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable emitting the authenticated user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Logs out the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Retrieves information about the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting information about the current user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Registers a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser information for registration.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the registration process.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Updates the user's information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUpdated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the update process.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UserInfo, UserCredentials } from '../interfaces/user-info';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class AuthService {\n  protected _logged = new BehaviorSubject(false);\n  public isLogged$ = this._logged.asObservable();\n  protected _user = new BehaviorSubject(null);\n  public user$ = this._user.asObservable();\n\n  /**\n   * Performs user login.\n   * @param {Object} credentials - User credentials for login.\n   * @returns {Observable} Observable emitting the authenticated user.\n   */\n  public abstract login(credentials: Object): Observable;\n\n  /**\n   * Registers a new user.\n   * @param {Object} info - User information for registration.\n   * @returns {Observable} Observable emitting the result of the registration process.\n   */\n  public abstract register(info: Object): Observable;\n\n  /**\n   * Logs out the current user.\n   */\n  public abstract logout(): Observable;\n\n  /**\n   * Retrieves information about the current user.\n   * @returns {Observable} Observable emitting information about the current user.\n   */\n  public abstract me(): Observable;\n\n  /**\n   * Updates the user's information.\n   * @param {UserInfo} user - Updated user information.\n   * @returns {Observable} Observable emitting the result of the update process.\n   */\n  public abstract updateUser(user: UserInfo): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizeInitialPipe.html":{"url":"pipes/CapitalizeInitialPipe.html","title":"pipe - CapitalizeInitialPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizeInitialPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/capitalize-initial.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        capitalizeInitial\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/capitalize-initial.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        The function takes a string as input, capitalizes the first letter, and adds a period at the end.\nvalue is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\nfirst character of the string and appends a period at the end before returning the transformed\nstring.\nof the value is capitalized and followed by a period.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value parameter in the transform function is a string or undefined. If the\nvalue is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\nfirst character of the string and appends a period at the end before returning the transformed\nstring.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                An empty string is being returned if the value is falsy. Otherwise, the first character\nof the value is capitalized and followed by a period.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalizeInitial',\n})\nexport class CapitalizeInitialPipe implements PipeTransform {\n  /**\n   * The function takes a string as input, capitalizes the first letter, and adds a period at the end.\n   *\n   * @param value The `value` parameter in the `transform` function is a string or undefined. If the\n   * `value` is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\n   * first character of the string and appends a period at the end before returning the transformed\n   * string.\n   * @return An empty string is being returned if the `value` is falsy. Otherwise, the first character\n   * of the `value` is capitalized and followed by a period.\n   */\n  transform(value: string | undefined): string {\n    if (!value) {\n      return '';\n    }\n    return value.charAt(0).toUpperCase() + '.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesInfoComponent.html":{"url":"components/CategoriesInfoComponent.html","title":"component - CategoriesInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/categories-info/categories-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories-info\n            \n\n\n\n            \n                styleUrls\n                ./categories-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categories-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScreenSmall\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                editCategory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onEditClicked\n                            \n                            \n                                onTrashClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/categories-info/categories-info.component.ts:22\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\nInitializes the component by checking the initial screen size.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categories\n                    \n                \n                \n                    \n                        Type :         CategoryInfo[] | null | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onEditClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTrashClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:19\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Emits an event when the delete icon for a category is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCategory\n                        \n                    \n                \n            \n            \n                \neditCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Emits an event when the edit icon for a category is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/categories-info/categories-info.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\n\n@Component({\n  selector: 'app-categories-info',\n  templateUrl: './categories-info.component.html',\n  styleUrls: ['./categories-info.component.scss'],\n})\nexport class CategoriesInfoComponent implements OnInit {\n  isScreenSmall: boolean = false;\n  @Input() categories: CategoryInfo[] | null | undefined;\n  @Output() onTrashClicked: EventEmitter =\n    new EventEmitter();\n  @Output() onEditClicked: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * Constructs a component constructor function.\n   * Initializes the component by checking the initial screen size.\n   */\n  constructor() {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Emits an event when the delete icon for a category is clicked.\n   *\n   * @param category CategoryInfo - the category to be deleted.\n   */\n  deleteCategory(category: CategoryInfo) {\n    this.onTrashClicked.emit(category);\n  }\n\n  /**\n   * Emits an event when the edit icon for a category is clicked.\n   *\n   * @param category CategoryInfo - the category to be edited.\n   */\n  editCategory(category: CategoryInfo) {\n    this.onEditClicked.emit(category);\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n  \n\n  \n    {{'forms.name' | translate }}\n    {{'forms.description' | translate }}\n     \n    {{'forms.actions' | translate }}\n  \n\n  \n    {{category.name}}\n    {{category.description}}\n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./categories-info.component.scss\n                \n                ion-list {\n    width: 80%;\n    margin: 3% auto;\n\n    ion-list-header {\n        --background: #0F212D;\n        --color: #fff;\n    }\n\n    .subheader {\n        ion-label {\n          font-weight: bold;\n        }\n    }\n\n    .data {\n        position: relative;\n        border-top: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n\n        &:hover {\n            border-color: #0F212D;\n        }\n\n        #actions {\n            display: flex;\n            gap: 20px;\n            cursor: pointer;\n\n        }\n    }\n}\n\n@media (max-width: 900px) {\n    .subheader {\n        ion-label {\n          margin-left: 0.2%;\n        }\n    }\n}\n\n@media (max-width: 700px) {\n    ion-list {\n        width: 100%;\n        margin-top: 5%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}        {{\\'forms.name\\' | translate }}    {{\\'forms.description\\' | translate }}         {{\\'forms.actions\\' | translate }}        {{category.name}}    {{category.description}}                                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                getCategory\n                            \n                            \n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/categories.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCategory\n                        \n                    \n                \n            \n            \n                \ncreateCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Creates a new category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is created successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Deletes a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is deleted successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory(categoryId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategory\n                        \n                    \n                \n            \n            \n                \nupdateCategory(category: CategoryInfo, originalName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Updates a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the updated category information.\n\n                                            \n                                        \n                                        \n                                                originalName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the original name of the category.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is updated successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {\n  catchError,\n  first,\n  map,\n  switchMap,\n  throwError,\n  of,\n  from,\n  take,\n} from 'rxjs';\nimport { CategoryInfo } from '../../interfaces/category-info';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoriesService {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param firebaseService FirebaseService - a service for handling Firebase-related operations.\n   */\n  constructor(private firebaseService: FirebaseService) {}\n\n  getCategory(categoryId: string) {\n    return this.firebaseService.getDocument('categoryInfo', categoryId)\n  }\n\n  /**\n   * Creates a new category.\n   *\n   * @param category CategoryInfo - the category information to be created.\n   * @returns An Observable that emits a success message if the category is created successfully, otherwise emits an error message.\n   */\n  createCategory(category: CategoryInfo): Observable {\n    return this.firebaseService.categories$.pipe(\n      first(),\n      switchMap((existingCategories) => {\n        if (existingCategories.some((c) => c.name === category.name)) {\n          return throwError(\n            () => new Error('Una categoría con este nombre ya existe.')\n          );\n        }\n        if (this.firebaseService.user) {\n          category.adminId = this.firebaseService.user.uid || '';\n          category.admin = this.firebaseService.user.email || '';\n        }\n        console.log('object');\n        return from(\n          this.firebaseService.createDocument('categoryInfo', category)\n        ).pipe(\n          switchMap((docRef) => {\n            const uuid = docRef;\n            return from(\n              this.firebaseService.updateDocument('categoryInfo', uuid, {\n                uuid,\n              })\n            ).pipe(\n              map(() => 'Categoría creada y actualizada exitosamente con UUID.')\n            );\n          })\n        );\n      }),\n      catchError((err) =>\n        throwError(\n          () => new Error('Error al crear la categoría: ' + err.message)\n        )\n      )\n    );\n  }\n\n  /**\n   * Deletes a category.\n   *\n   * @param category CategoryInfo - the category information to be deleted.\n   * @returns An Observable that emits a success message if the category is deleted successfully, otherwise emits an error message.\n   */\n  deleteCategory(category: CategoryInfo): Observable {\n    return this.firebaseService.incidents$.pipe(\n      first(),\n      switchMap((incidents) => {\n        const hasIncident = incidents.some(\n          (incident) => incident.categoryName === category.name\n        );\n        if (hasIncident) {\n          return throwError(\n            () =>\n              new Error(\n                'No se puede borrar la categoría porque tiene incidencias asociadas'\n              )\n          );\n        }\n        return this.firebaseService\n          .deleteDocument('categoryInfo', category.uuid)\n          .then(() => {\n            return 'Categoría borrada exitosamente.';\n          });\n      }),\n      catchError((err) => {\n        return throwError(\n          () => new Error(`Error al borrar la categoría: ${err.message}`)\n        );\n      })\n    );\n  }\n\n  /**\n   * Updates a category.\n   *\n   * @param category CategoryInfo - the updated category information.\n   * @param originalName string - the original name of the category.\n   * @returns An Observable that emits a success message if the category is updated successfully, otherwise emits an error message.\n   */\n  updateCategory(\n    category: CategoryInfo,\n    originalName: string\n  ): Observable {\n    return this.firebaseService.incidents$.pipe(\n      first(),\n      switchMap((incidents) => {\n        const hasIncidentWithOriginalName = incidents.some(\n          (incident) => incident.categoryName === originalName\n        );\n        if (hasIncidentWithOriginalName) {\n          return throwError(\n            () =>\n              new Error(\n                'No se puede actualizar la categoría porque tiene incidencias asociadas con su nombre original'\n              )\n          );\n        }\n        return from(\n          this.firebaseService.updateDocument(\n            'categoryInfo',\n            category.uuid,\n            category\n          )\n        ).pipe(map(() => 'Categoría actualizada exitosamente.'));\n      }),\n      catchError((err) =>\n        throwError(\n          () =>\n            new Error(\n              `Error al intentar actualizar la categoría: ${err.message}`\n            )\n        )\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryInfo.html":{"url":"interfaces/CategoryInfo.html","title":"interface - CategoryInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoryInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/category-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            adminId\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CategoryInfo {\n    name: string;\n    admin: string;\n    adminId: string;\n    description: string;\n    uuid: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategorySelectableComponent.html":{"url":"components/CategorySelectableComponent.html","title":"component - CategorySelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategorySelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/category-selectable/category-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                CATEGORY_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-category-selectable\n            \n\n\n\n            \n                styleUrls\n                ./category-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                categorySelected\n                            \n                            \n                                    Public\n                                categoryService\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategoryClicked\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectCategory\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                resetSignal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    category\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:46\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoriesSelectorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe CategoriesService for fetching category data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:41\n                            \n                        \n                \n                    \n                        Setter method for setting the selected category.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:30\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Clears the selected category.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Filters categories based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter categories.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategoryClicked\n                        \n                    \n                \n            \n            \n                \nonCategoryClicked(popover: IonPopover, category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a category from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected category.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering categories.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Loads categories from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectCategory(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Selects a category by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the category to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorySelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categoryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoriesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:55\n                        \n                    \n\n            \n                \n                    - The CategoriesService for fetching category data.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:56\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:46\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n\n                \n                    \n                        setcategory(_category: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:41\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected category.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _category\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected category.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  SimpleChanges,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const CATEGORY_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-category-selectable',\n  templateUrl: './category-selectable.component.html',\n  styleUrls: ['./category-selectable.component.scss'],\n  providers: [CATEGORY_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class CategorySelectableComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  categorySelected: any | undefined;\n  disabled: boolean = true;\n  categories: any[] = [];\n\n  /**\n   * Setter method for setting the selected category.\n   *\n   * @param _category - The selected category.\n   */\n  @Input() set category(_category: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of CategoriesSelectorComponent.\n   *\n   * @param categoryService - The CategoriesService for fetching category data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public categoryService: CategoriesService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads categories from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.categories$.subscribe({\n        next: (categories) => {\n          this.categories = categories;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a category by its ID.\n   *\n   * @param id - The ID of the category to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectCategory(\n    id: string | undefined,\n    propagate: boolean = false\n  ) {\n    if (id) {\n      await this.categoryService.getCategory(id).then((category) => {\n        this.categorySelected = category;\n      });\n    } else this.categorySelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.categorySelected.data.name);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectCategory(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected category.\n   */\n  clearSelection() {\n    this.categorySelected = undefined;\n  }\n\n  /**\n   * Filters categories based on a search value.\n   *\n   * @param value - The search value to filter categories.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering categories.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a category from the list.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   * @param category - The selected category.\n   */\n  onCategoryClicked(popover: IonPopover, category: any) {\n    this.selectCategory(category.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected category.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectCategory(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n    {{categorySelected.data.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./category-selectable.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}    {{categorySelected.data.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategorySelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategorySelectableMobileComponent.html":{"url":"components/CategorySelectableMobileComponent.html","title":"component - CategorySelectableMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategorySelectableMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-category-selectable-mobile\n            \n\n\n\n            \n                styleUrls\n                ./category-selectable-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-selectable-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                categorySelected\n                            \n                            \n                                    Public\n                                categoryService\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategoryClicked\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectCategory\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                resetSignal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    category\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoriesSelectorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe CategoriesService for fetching category data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:34\n                            \n                        \n                \n                    \n                        Setter method for setting the selected category.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:23\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:171\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:135\n                        \n                    \n\n\n            \n                \n                        Clears the selected category.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Filters categories based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter categories.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategoryClicked\n                        \n                    \n                \n            \n            \n                \nonCategoryClicked(popover: IonPopover, category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a category from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected category.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering categories.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Loads categories from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectCategory(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Selects a category by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the category to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorySelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categoryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoriesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:48\n                        \n                    \n\n            \n                \n                    - The CategoriesService for fetching category data.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:49\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:39\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n\n                \n                    \n                        setcategory(_category: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:34\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected category.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _category\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected category.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableMobileComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-category-selectable-mobile',\n  templateUrl: './category-selectable-mobile.component.html',\n  styleUrls: ['./category-selectable-mobile.component.scss'],\n  providers: [CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR]\n})\nexport class CategorySelectableMobileComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  categorySelected: any | undefined;\n  disabled: boolean = true;\n  categories: any[] = [];\n\n  /**\n   * Setter method for setting the selected category.\n   *\n   * @param _category - The selected category.\n   */\n  @Input() set category(_category: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of CategoriesSelectorComponent.\n   *\n   * @param categoryService - The CategoriesService for fetching category data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public categoryService: CategoriesService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads categories from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.categories$.subscribe({\n        next: (categories) => {\n          this.categories = categories;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a category by its ID.\n   *\n   * @param id - The ID of the category to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectCategory(\n    id: string | undefined,\n    propagate: boolean = false\n  ) {\n    if (id) {\n      await this.categoryService.getCategory(id).then((category) => {\n        this.categorySelected = category;\n      });\n    } else this.categorySelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.categorySelected.data.name);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectCategory(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected category.\n   */\n  clearSelection() {\n    this.categorySelected = undefined;\n  }\n\n  /**\n   * Filters categories based on a search value.\n   *\n   * @param value - The search value to filter categories.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering categories.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a category from the list.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   * @param category - The selected category.\n   */\n  onCategoryClicked(popover: IonPopover, category: any) {\n    this.selectCategory(category.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected category.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectCategory(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n    {{categorySelected.data.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./category-selectable-mobile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}    {{categorySelected.data.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategorySelectableMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n\n\n            \n                styleUrls\n                ./confirm-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, message: any, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialogRef - a reference to the dialog component.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                string - the message to be displayed in the dialog.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Closes the dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:18\n                        \n                    \n\n            \n                \n                    MatDialogRef - a reference to the dialog component.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:20\n                        \n                    \n\n            \n                \n                    string - the message to be displayed in the dialog.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param dialogRef MatDialogRef - a reference to the dialog component.\n   * @param message string - the message to be displayed in the dialog.\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA)\n    public message: any,\n    private translate: CustomTranslateService,\n  ) {}\n\n  ngOnInit() {\n    console.log(this.message.message);\n    let message = `dialog.${this.message.message}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.message = text\n      },\n    });\n  }\n\n  /**\n   * Closes the dialog.\n   */\n  cancel() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  {{message}}\n\n\n  {{'dialog.no' | translate}}\n  {{'dialog.yes' | translate}}\n\n\n    \n\n    \n                \n                    ./confirm-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{message}}  {{\\'dialog.no\\' | translate}}  {{\\'dialog.yes\\' | translate}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomTranslateService.html":{"url":"injectables/CustomTranslateService.html","title":"injectable - CustomTranslateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomTranslateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/translate/translate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _language\n                            \n                            \n                                    Public\n                                language$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getCurrentLang\n                            \n                            \n                                    Private\n                                    Async\n                                init\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/translate/translate.service.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor initializes the TranslateService and calls the init() method.\nTranslateService class, which is likely used for handling translations in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe translate parameter is an instance of the\nTranslateService class, which is likely used for handling translations in the application.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:57\n                        \n                    \n\n\n            \n                \n                        The function get returns an Observable that retrieves a translated string based on a given key.\ntranslation value from the translation service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key parameter is a string that represents the key used to retrieve a\ntranslation value from the translation service.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable of type string is being returned.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentLang\n                        \n                    \n                \n            \n            \n                \ngetCurrentLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:26\n                        \n                    \n\n\n            \n                \n                        The init function initializes language settings by adding languages and setting a default\nlanguage.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(language: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:37\n                        \n                    \n\n\n            \n                \n                        The function use in TypeScript sets the language for translation and updates the language\nsubject accordingly.\nrepresenting the language to be used for translation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe use function takes a language parameter, which is a string\nrepresenting the language to be used for translation.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _language\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    'es'\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/translate.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        language$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._language.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/translate.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, lastValueFrom, tap } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomTranslateService {\n  private _language: BehaviorSubject = new BehaviorSubject(\n    'es'\n  );\n  public language$ = this._language.asObservable();\n\n  /**\n   * The constructor initializes the TranslateService and calls the init() method.\n   * @param {TranslateService} translate - The `translate` parameter is an instance of the\n   * `TranslateService` class, which is likely used for handling translations in the application.\n   */\n  constructor(private translate: TranslateService) {\n    this.init();\n  }\n\n  /**\n   * The `init` function initializes language settings by adding languages and setting a default\n   * language.\n   */\n  private async init() {\n    this.translate.addLangs(['es', 'en']);\n    this.translate.setDefaultLang(this._language.value);\n  }\n\n  /**\n   * The function `use` in TypeScript sets the language for translation and updates the language\n   * subject accordingly.\n   * @param {string} language - The `use` function takes a `language` parameter, which is a string\n   * representing the language to be used for translation.\n   */\n  use(language: string) {\n    lastValueFrom(this.translate.use(language))\n      .then((_) => {\n        this._language.next(language);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  getCurrentLang(): string {\n    return this._language.getValue();\n  }\n\n  /**\n   * The function `get` returns an Observable that retrieves a translated string based on a given key.\n   * @param {string} key - The `key` parameter is a string that represents the key used to retrieve a\n   * translation value from the translation service.\n   * @returns An Observable of type string is being returned.\n   */\n  get(key: string): Observable {\n    return this.translate.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataPage.html":{"url":"components/DataPage.html","title":"component - DataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/data/data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-data\n            \n\n\n\n            \n                styleUrls\n                ./data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                    Public\n                                downloadCSV\n                            \n                            \n                                    Async\n                                editCategory\n                            \n                            \n                                exportData\n                            \n                            \n                                    Public\n                                jsonToCSV\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, router: Router, _categoryService: CategoriesService, translate: CustomTranslateService, messageService: MessageService, dialog: MatDialog, myModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/data/data.page.ts:22\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router - an instance of the Angular Router service used for navigating between different components.\n\n                                                        \n                                                \n                                                \n                                                        _categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CategoriesService - a service for managing categories.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MessageService - a service for displaying messages or notifications to the user within the application.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog - a service for displaying dialog boxes.\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ModalController - a service for managing modal dialogs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:179\n                        \n                    \n\n\n            \n                \n                        Opens a modal dialog for creating a new category.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(info: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:210\n                        \n                    \n\n\n            \n                \n                        Deletes a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        downloadCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadCSV(csvContent: string, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:105\n                        \n                    \n\n\n            \n                \n                        Initiates the download of a CSV file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                csvContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe CSV content to be downloaded.\n\n\n                                            \n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the CSV file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    editCategory(info: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:154\n                        \n                    \n\n\n            \n                \n                        Opens a modal dialog for editing a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportData\n                        \n                    \n                \n            \n            \n                \nexportData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:54\n                        \n                    \n\n\n            \n                \n                        Method to export data to CSV format.\nFetches data from Firebase, converts it to CSV format, and initiates CSV file downloads.\nThis method retrieves data from Firebase using the FirebaseService, converts it to CSV format,\nand initiates the download of CSV files for each dataset.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        jsonToCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    jsonToCSV(dataObject: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:75\n                        \n                    \n\n\n            \n                \n                        Converts JSON data to CSV format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataObject\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JSON data object to be converted to CSV.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                An object containing CSV content for each dataset.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:127\n                        \n                    \n\n\n            \n                \n                        Opens a confirmation dialog for deleting a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:249\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:229\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n            \n                \nuserInfo(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:145\n                        \n                    \n\n\n            \n                \n                        Navigates to the user information page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/data.page.ts:40\n                        \n                    \n\n            \n                \n                    MatDialog - a service for displaying dialog boxes.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\nimport { ModalController } from '@ionic/angular';\nimport { ModalCategoryComponent } from './modal-category/modal-category.component';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.page.html',\n  styleUrls: ['./data.page.scss'],\n  providers: [MessageService],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DataPage implements OnInit {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param router Router - an instance of the Angular Router service used for navigating between different components.\n   * @param _categoryService CategoriesService - a service for managing categories.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   * @param messageService MessageService - a service for displaying messages or notifications to the user within the application.\n   * @param dialog MatDialog - a service for displaying dialog boxes.\n   * @param myModal ModalController - a service for managing modal dialogs.\n   */\n  constructor(\n    protected _firebaseService: FirebaseService,\n    private router: Router,\n    private _categoryService: CategoriesService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    public dialog: MatDialog,\n    private myModal: ModalController\n  ) {}\n\n  ngOnInit() {}\n\n  /**\n   * Method to export data to CSV format.\n   * Fetches data from Firebase, converts it to CSV format, and initiates CSV file downloads.\n   *\n   * @remarks\n   * This method retrieves data from Firebase using the FirebaseService, converts it to CSV format,\n   * and initiates the download of CSV files for each dataset.\n   */\n  exportData(): void {\n    this._firebaseService\n      .getAllData()\n      .then((dataObject) => {\n        const csvFiles = this.jsonToCSV(dataObject);\n        for (const key in csvFiles) {\n          if (csvFiles.hasOwnProperty(key)) {\n            const csvContent = csvFiles[key];\n            this.downloadCSV(csvContent, `${key}.csv`);\n          }\n        }\n      })\n      .catch((error) => console.error('Failed to fetch data', error));\n  }\n\n  /**\n   * Converts JSON data to CSV format.\n   *\n   * @param dataObject - The JSON data object to be converted to CSV.\n   * @returns An object containing CSV content for each dataset.\n   */\n  public jsonToCSV(dataObject: { [key: string]: any[] }): {\n    [key: string]: string;\n  } {\n    const csvFiles: { [key: string]: string } = {};\n\n    for (const key in dataObject) {\n      if (dataObject.hasOwnProperty(key) && dataObject[key].length > 0) {\n        const headers = Object.keys(dataObject[key][0]);\n        const csvRows = dataObject[key].map((row) =>\n          headers\n            .map((fieldName) =>\n              JSON.stringify(row[fieldName], (key, value) =>\n                value == null ? '' : value\n              )\n            )\n            .join(',')\n        );\n        csvRows.unshift(headers.join(','));\n        csvFiles[key] = csvRows.join('\\r\\n');\n      }\n    }\n    return csvFiles;\n  }\n\n  /**\n   * Initiates the download of a CSV file.\n   *\n   * @param csvContent - The CSV content to be downloaded.\n   * @param filename - The name of the CSV file.\n   */\n  public downloadCSV(csvContent: string, filename: string): void {\n    if (!csvContent) {\n      console.error('No CSV content available for download.');\n      return;\n    }\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens a confirmation dialog for deleting a category.\n   *\n   * @param category CategoryInfo - the category information to be deleted.\n   */\n  openDialog(category: CategoryInfo): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      data: { message: 'delete' },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.deleteCategory(category);\n      }\n    });\n  }\n\n  /**\n   * Navigates to the user information page.\n   *\n   * @param userId string - the ID of the user.\n   */\n  userInfo(userId: string) {\n    this.router.navigate([`/data/user/${userId}`]);\n  }\n\n  /**\n   * Opens a modal dialog for editing a category.\n   *\n   * @param info CategoryInfo - the category information to be edited.\n   */\n  async editCategory(info: CategoryInfo) {\n    const mod = await this.myModal.create({\n      component: ModalCategoryComponent,\n      componentProps: {\n        categoryInfo: info,\n        mode: 'update',\n      },\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results?.data) {\n        this._categoryService\n          .updateCategory(results?.data, info.name)\n          .subscribe({\n            next: (_) => this.showSuccess('good'),\n            error: (_) => this.showError('cant'),\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens a modal dialog for creating a new category.\n   */\n  async createCategory() {\n    const mod = await this.myModal.create({\n      component: ModalCategoryComponent,\n      componentProps: {\n        categoryInfo: null,\n        mode: 'create',\n      },\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results?.data) {\n        this._categoryService.createCategory(results?.data).subscribe({\n          next: async (_) => {\n            this.showSuccess('good');\n            await Haptics.impact({ style: ImpactStyle.Medium });\n          },\n          error: async (_) => {\n            this.showError('cant');\n            await Haptics.impact({ style: ImpactStyle.Heavy });\n          },\n        });\n      }\n    }\n  }\n\n  /**\n   * Deletes a category.\n   *\n   * @param info CategoryInfo - the category to delete.\n   */\n  deleteCategory(info: CategoryInfo) {\n    this._categoryService.deleteCategory(info).subscribe({\n      next: async (_) => {\n        this.showSuccess('good');\n        await Haptics.impact({ style: ImpactStyle.Medium });\n      },\n      error: async (_) => {\n        this.showError('cant');\n        await Haptics.impact({ style: ImpactStyle.Heavy });\n      },\n    });\n  }\n\n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'success',\n          detail: text,\n        });\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        {{'data.data' | translate}}\n      \n\n      \n        {{ \"data.download\" | translate }}\n      \n\n      \n\n      \n        {{ \"data.create\" | translate }}\n      \n\n      \n\n      \n        +\n      \n    \n  \n    \n      \n      \n        \n        {{'data.graphic' | translate}}\n      \n\n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./data.page.scss\n                \n                ion-icon {\n    margin-right: 8px;\n}\n\n.category-mobile {\n    display: none;\n\n    button {\n        padding: 1rem;\n        border: none;\n        border-radius: 4px;\n        background-color: #0F212D;\n        color: white;\n        font-weight: bold;\n        cursor: pointer;\n\n        &:hover {\n            background-color: #1b3e56;\n        }\n\n        &:disabled {\n            background-color: #cccccc;\n            color: #777777;\n            cursor: not-allowed;\n        }\n    }\n}\n\n.graphics {\n    margin-top: 3%;\n}\n\napp-user-circle-graphic {\n    display: block;\n    max-width: 300px;\n    margin: 0 auto;\n    height: auto;\n}\n\napp-incidents-circle-graphic {\n    display: block;\n    max-width: 300px;\n    margin: 0 auto;\n    height: auto;\n}\n\n.category-button {\n    position: fixed;\n    bottom: 10px;\n    right: 20px;\n    width: 50px;\n    height: 50px;\n    padding: 0;\n    background-color: #0F212D;\n    color: white;\n    border-radius: 50%;\n    cursor: pointer;\n    font-size: 24px;\n    line-height: 50px;\n    text-align: center;\n\n    &:hover {\n        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);\n    }\n}\n\n.download-data {\n    margin-top: 30px;\n    display: flex;\n    justify-content: center;\n\n    button {\n        padding: 1rem;\n        border: none;\n        border-radius: 4px;\n        background-color: #0F212D;\n        color: white;\n        font-weight: bold;\n        cursor: pointer;\n\n        &:hover {\n            background-color: #1b3e56;\n        }\n\n        &:disabled {\n            background-color: #cccccc;\n            color: #777777;\n            cursor: not-allowed;\n        }\n    }\n}\n\n\n@media (max-width: 700px) {\n    .category-mobile {\n        margin-top: 80px;\n        margin-bottom: -10px;\n        display: flex;\n        justify-content: center;\n    }\n\n    .category-button {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{\\'data.data\\' | translate}}                    {{ \"data.download\" | translate }}                          {{ \"data.create\" | translate }}                          +                                            {{\\'data.graphic\\' | translate}}                                                                                                          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataPageModule.html":{"url":"modules/DataPageModule.html","title":"module - DataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    DataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataPageModule\n\n\n\ncluster_DataPageModule_imports\n\n\n\ncluster_DataPageModule_declarations\n\n\n\n\nDataPage\n\nDataPage\n\n\n\nDataPageModule\n\nDataPageModule\n\nDataPageModule -->\n\nDataPage->DataPageModule\n\n\n\n\n\nModalCategoryComponent\n\nModalCategoryComponent\n\nDataPageModule -->\n\nModalCategoryComponent->DataPageModule\n\n\n\n\n\nDataPageRoutingModule\n\nDataPageRoutingModule\n\nDataPageModule -->\n\nDataPageRoutingModule->DataPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DataPage\n                        \n                        \n                            ModalCategoryComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DataPageRoutingModule } from './data-routing.module';\n\nimport { DataPage } from './data.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { ToastModule } from 'primeng/toast';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ModalCategoryComponent } from './modal-category/modal-category.component';\nimport { AccordionModule } from 'primeng/accordion';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    // Reactive form\n    ReactiveFormsModule,\n    IonicModule,\n    DataPageRoutingModule,\n    SharedModule,\n    MatTabsModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n    // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    SharedModule,\n    AccordionModule\n  ],\n  declarations: [\n    DataPage,\n    ModalCategoryComponent\n  ]\n})\nexport class DataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataPageRoutingModule.html":{"url":"modules/DataPageRoutingModule.html","title":"module - DataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/data/data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DataPage } from './data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:48\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deletes an item from a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to delete the item from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the deleted item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a single item from a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to retrieve the item from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the retrieved item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Creates a new item on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to create the item on.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData for creating the item.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the created item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Updates an existing item on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to update the item on.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData for updating the item.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the updated item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:15\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Executes a query operation on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to query.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nParameters for the query.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Observable emitting the paginated data resulting from the query.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PaginatedData } from '../interfaces/data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class DataService {\n  /**\n   * Executes a query operation on a resource.\n   * @param {string} resource - The resource to query.\n   * @param {any} params - Parameters for the query.\n   * @returns {Observable>} Observable emitting the paginated data resulting from the query.\n   */\n  public abstract query(\n    resource: string,\n    params: any\n  ): Observable>;\n\n  /**\n   * Retrieves a single item from a resource.\n   * @param {string} resource - The resource to retrieve the item from.\n   * @returns {Observable} Observable emitting the retrieved item.\n   */\n  public abstract get(resource: string): Observable;\n\n  /**\n   * Creates a new item on a resource.\n   * @param {string} resource - The resource to create the item on.\n   * @param {any} data - Data for creating the item.\n   * @returns {Observable} Observable emitting the created item.\n   */\n  public abstract post(resource: string, data: any): Observable;\n\n  /**\n   * Updates an existing item on a resource.\n   * @param {string} resource - The resource to update the item on.\n   * @param {any} data - Data for updating the item.\n   * @returns {Observable} Observable emitting the updated item.\n   */\n  public abstract put(resource: string, data: any): Observable;\n\n  /**\n   * Deletes an item from a resource.\n   * @param {string} resource - The resource to delete the item from.\n   * @returns {Observable} Observable emitting the deleted item.\n   */\n  public abstract delete(resource: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailValidation.html":{"url":"classes/EmailValidation.html","title":"class - EmailValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/email.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        email\n                        \n                    \n                \n            \n            \n                \n                        \n                    email(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/email.ts:14\n                        \n                    \n\n\n            \n                \n                        Validates an email control.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe name of the control to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for email validation.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbstractControl,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\n\nexport class EmailValidation {\n  /**\n   * Validates an email control.\n   * @param {string} controlName - The name of the control to validate.\n   * @returns {ValidatorFn} Validator function for email validation.\n   */\n  public static email(controlName: string = ''): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      let email = '';\n      if (control instanceof FormControl) email = control?.value;\n      else email = control.get(controlName)?.value;\n      if (\n        email &&\n        !email.match(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)\n      ) {\n        return { email: true };\n      } else {\n        return null;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/filter/filter.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n\n\n            \n                styleUrls\n                ./filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetFilters\n                            \n                            \n                                setFilters\n                            \n                            \n                                subscribeToFilterState\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChanged\n                            \n                            \n                                resetRequested\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/filter/filter.component.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of FilterComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FilterService for managing filter state.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter/filter.component.ts:24\n                            \n                        \n                \n                    \n                        Event emitter for signaling filter changes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resetRequested\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter/filter.component.ts:19\n                            \n                        \n                \n                    \n                        EventEmitter for emitting a signal to reset filters.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Initializes the form with the initial filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nInitializes the form and subscribes to changes in filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFilters\n                        \n                    \n                \n            \n            \n                \nresetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Resets the filter settings to their default values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilters\n                        \n                    \n                \n            \n            \n                \nsetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Applies the current filter settings.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToFilterState\n                        \n                    \n                \n            \n            \n                \nsubscribeToFilterState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Subscribes to changes in the filter state and updates the form accordingly.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/filter/filter.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\nimport { FilterService } from 'src/app/core/services/filter/filter.service';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent implements OnInit {\n  /**\n   * EventEmitter for emitting a signal to reset filters.\n   */\n  @Output() resetRequested = new EventEmitter();\n\n  /**\n   * Event emitter for signaling filter changes.\n   */\n  @Output() filterChanged = new EventEmitter();\n\n  form: FormGroup;\n\n  /**\n   * Creates an instance of FilterComponent.\n   *\n   * @param filterService - The FilterService for managing filter state.\n   */\n  constructor(private filterService: FilterService) {\n    this.form = new FormGroup({\n      categoryName: new FormControl(undefined),\n      userId: new FormControl(undefined),\n      checked: new FormControl(false),\n      resolved: new FormControl(false),\n    });\n    this.subscribeToFilterState();\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Initializes the form and subscribes to changes in filter state.\n   */\n  ngOnInit() {\n    this.initForm();\n    this.subscribeToFilterState();\n  }\n\n  /**\n   * Initializes the form with the initial filter state.\n   */\n  initForm() {\n    const initialFormState = this.filterService.getFilter().value;\n    if (initialFormState) {\n      this.form = new FormGroup({\n        categoryName: new FormControl(initialFormState?.get('categoryName')?.value),\n        userId: new FormControl(initialFormState.get('userId')?.value),\n        checked: new FormControl(initialFormState.get('checked')?.value),\n        resolved: new FormControl(initialFormState.get('resolved')?.value),\n      });\n    } else {\n      this.form = new FormGroup({\n        categoryName: new FormControl(undefined),\n        userId: new FormControl(undefined),\n        checked: new FormControl(false),\n        resolved: new FormControl(false),\n      });\n    }\n  }\n\n  /**\n   * Subscribes to changes in the filter state and updates the form accordingly.\n   */\n  subscribeToFilterState() {\n    this.filterService.getFilter().subscribe((formState) => {\n      if (formState && this.form !== formState) {\n        this.form.setValue(formState.value, { emitEvent: false });\n      }\n    });\n  }\n\n  /**\n   * Applies the current filter settings.\n   */\n  setFilters() {\n    console.log(this.form.value);\n    this.filterService.updateFilterState(this.form);\n  }\n\n  /**\n   * Resets the filter settings to their default values.\n   */\n  resetFilters() {\n    this.form.reset({\n      categoryName: undefined,\n      userId: undefined,\n      checked: false,\n      resolved: false,\n    });\n    this.filterService.updateFilterState(this.form);\n    this.resetRequested.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n\n      Vistos\n      Resueltos\n    \n    \n      {{'filter.reset' | translate}}\n      {{'filter.apply' | translate}}\n    \n  \n\n    \n\n    \n                \n                    ./filter.component.scss\n                \n                .filter {\n    flex-direction: column;\n    align-items: center;\n    padding: 10px;\n    width: 80%;\n    border-radius: 0.5rem;\n    margin: 2% auto;\n    box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n\n    .form-controls {\n        display: flex;\n        justify-content: space-between;\n        width: 100%;\n        margin-bottom: 20px;\n        gap: 20px;\n\n        app-category-selectable,\n        app-user-selectable {\n            flex: 2;\n            max-width: 100%\n        }\n\n        mat-checkbox {\n            flex: 1;\n            max-width: 100%;\n        }\n    }\n\n\n\n    .form-actions {\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n        width: 100%;\n        gap: 20px;\n        padding: 10px 0;\n\n        button {\n            margin-left: 10px;\n            border-radius: 20px;\n            padding: 8px 60px;\n            font-size: 16px;\n        }\n\n        .reset--button {\n            background-color: #BD1E1E;\n            color: #fff;\n            font-weight: bold;\n\n            &:disabled {\n                background-color: #cccccc;\n                color: #777777;\n                cursor: not-allowed;\n            }\n        }\n\n        .apply--button {\n            background-color: #0F212D;\n            color: #fff;\n            font-weight: bold;\n        }\n    }\n\n    @media (max-width: 850px) {\n        width: 95%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Vistos      Resueltos              {{\\'filter.reset\\' | translate}}      {{\\'filter.apply\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterMobileComponent.html":{"url":"components/FilterMobileComponent.html","title":"component - FilterMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/filter-mobile/filter-mobile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-mobile\n            \n\n\n\n            \n                styleUrls\n                ./filter-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                resetFilters\n                            \n                            \n                                setFilters\n                            \n                            \n                                subscribeToFilterState\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChanged\n                            \n                            \n                                resetRequested\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController, filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of FiltersComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FormBuilder service for building form instances.\n\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController - a service for managing modal dialogs.\n\n\n                                                        \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service for managing filter service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resetRequested\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:15\n                            \n                        \n                \n                    \n                        EventEmitter for emitting a signal to reset filters.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Initializes the form with the initial filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nInitializes the form and subscribes to changes in the filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Method executed when the cancel action is triggered.\nDismisses the modal without passing any data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFilters\n                        \n                    \n                \n            \n            \n                \nresetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Resets the filter settings to their default values and dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilters\n                        \n                    \n                \n            \n            \n                \nsetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Applies the current filter settings and dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToFilterState\n                        \n                    \n                \n            \n            \n                \nsubscribeToFilterState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Subscribes to changes in the filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { FilterService } from 'src/app/core/services/filter/filter.service';\n\n@Component({\n  selector: 'app-filter-mobile',\n  templateUrl: './filter-mobile.component.html',\n  styleUrls: ['./filter-mobile.component.scss'],\n})\nexport class FilterMobileComponent implements OnInit {\n  /**\n   * EventEmitter for emitting a signal to reset filters.\n   */\n  @Output() resetRequested = new EventEmitter();\n\n  @Output() filterChanged = new EventEmitter();\n\n  form: FormGroup;\n\n  /**\n   * Creates an instance of FiltersComponent.\n   *\n   * @param formBuilder - The FormBuilder service for building form instances.\n   * @param modal - The ModalController - a service for managing modal dialogs.\n   * @param filterService - A service for managing filter service.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private filterService: FilterService\n  ) {\n    this.form = this.formBuilder.group({\n      categoryName: [undefined],\n      userId: [undefined],\n      checked: [false],\n      resolved: [false],\n    });\n  }\n\n  /**\n   * Method executed when the cancel action is triggered.\n   * Dismisses the modal without passing any data.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Initializes the form and subscribes to changes in the filter state.\n   */\n  ngOnInit() {\n    this.initForm();\n    this.subscribeToFilterState();\n  }\n\n  /**\n   * Initializes the form with the initial filter state.\n   */\n  initForm() {\n    const initialFormState = this.filterService.getFilter().value;\n    if (initialFormState) {\n      this.form = new FormGroup({\n        categoryName: new FormControl(initialFormState?.get('categoryName')?.value),\n        userId: new FormControl(initialFormState.get('userId')?.value),\n        checked: new FormControl(initialFormState.get('checked')?.value),\n        resolved: new FormControl(initialFormState.get('resolved')?.value),\n      });\n    } else {\n      this.form = new FormGroup({\n        categoryName: new FormControl(undefined),\n        userId: new FormControl(undefined),\n        checked: new FormControl(false),\n        resolved: new FormControl(false),\n      });\n    }\n  }\n\n  /**\n   * Subscribes to changes in the filter state.\n   */\n  subscribeToFilterState() {\n    this.filterService.getFilter().subscribe((formState) => {\n      if (formState && this.form !== formState) {\n        this.form.setValue(formState.value);\n      }\n    });\n  }\n\n  /**\n   * Applies the current filter settings and dismisses the modal.\n   */\n  setFilters() {\n    console.log(this.form.value);\n    this.modal.dismiss(null);\n    this.filterService.updateFilterState(this.form);\n  }\n\n  /**\n   * Resets the filter settings to their default values and dismisses the modal.\n   */\n  resetFilters() {\n    this.form.reset({\n      categoryName: undefined,\n      userId: undefined,\n      checked: false,\n      resolved: false,\n    });\n    this.modal.dismiss('reset');\n    this.filterService.updateFilterState(this.form);\n    this.resetRequested.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n  \n\n\n\n  \n    \n      \n        \n        \n\n        Vistos\n        Resueltos\n      \n      \n        {{'filter.reset' | translate}}\n        {{'filter.apply' | translate}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./filter-mobile.component.scss\n                \n                .filter {\n    display: flex;\n    flex-direction: column;\n    padding: 3%;\n\n    .form-controls {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        width: 100%;\n        margin-bottom: 20px;\n        gap: 20px;\n\n        mat-checkbox {\n            flex: 1;\n            max-width: 100%;\n        }\n    }\n\n\n\n    .form-actions {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        width: 100%;\n        gap: 20px;\n\n        button {\n            border-radius: 20px;\n            padding: 8px 60px;\n            font-size: 16px;\n        }\n\n        .reset--button {\n            background-color: #BD1E1E;\n            color: #fff;\n            font-weight: bold;\n\n            &:disabled {\n                background-color: #cccccc;\n                color: #777777;\n                cursor: not-allowed;\n            }\n        }\n\n        .apply--button {\n            background-color: #0F212D;\n            color: #fff;\n            font-weight: bold;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      Vistos        Resueltos                    {{\\'filter.reset\\' | translate}}        {{\\'filter.apply\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/filter/filter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFilter\n                            \n                            \n                                initializeState\n                            \n                            \n                                updateFilterState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFilter\n                        \n                    \n                \n            \n            \n                \ngetFilter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/filter/filter.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Retrieves the current filter state as a BehaviorSubject.\n\n\n                        \n                            Returns :     BehaviorSubject\n\n                        \n                            \n                                A BehaviorSubject containing the current filter state.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/filter/filter.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Initializes the filter state with default values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilterState\n                        \n                    \n                \n            \n            \n                \nupdateFilterState(form: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/filter/filter.service.ts:16\n                        \n                    \n\n\n            \n                \n                        Updates the filter state with the provided form.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form containing the updated filter settings.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filterState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/filter/filter.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilterService {\n  private filterState = new BehaviorSubject(null);\n\n  /**\n   * Updates the filter state with the provided form.\n   *\n   * @param form - The form containing the updated filter settings.\n   */\n  updateFilterState(form: FormGroup) {\n    this.filterState.next(form);\n  }\n\n  /**\n   * Retrieves the current filter state as a BehaviorSubject.\n   *\n   * @returns A BehaviorSubject containing the current filter state.\n   */\n  getFilter(): BehaviorSubject {\n    return this.filterState;\n  }\n\n  /**\n   * Initializes the filter state with default values.\n   */\n  initializeState() {\n    const initialForm = new FormGroup({\n      categoryName: new FormControl(undefined),\n      userId: new FormControl(undefined),\n      checked: new FormControl(false),\n      resolved: new FormControl(false),\n    });\n    this.filterState.next(initialForm);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseAuthService.html":{"url":"classes/FirebaseAuthService.html","title":"class - FirebaseAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                me\n                            \n                            \n                                    Private\n                                postRegister\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseSvc: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseAuthService class. It subscribes to the isLogged$ observable from the FirebaseService to\nautomatically handle changes in the authentication state. If the user is logged in, it attempts to fetch the user's data.\nIf not logged in, it sets _logged and _user to false and null, respectively.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:44\n\n                        \n                    \n\n\n            \n                \n                        Logs in a user using their credentials. Attempts to connect the user through Firebase using email and password.\nIf authentication fails or if a valid UID for the user is not received, it emits an error. If successful, it retrieves\nthe user information and updates the _user and _logged observables.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe credentials of the user, including email and password.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that may emit the logged-in user or an error in case of failed authentication.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:178\n\n                        \n                    \n\n\n            \n                \n                        Logs out the current user by calling the signOut method from FirebaseService. The method returns an Observable\nthat resolves when the sign-out process is complete.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable indicating the completion of the logout process.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:153\n\n                        \n                    \n\n\n            \n                \n                        Fetches the current user's information from Firestore based on their UID. If the user is connected (UID exists),\nretrieves their detailed profile from the 'userInfo' collection. Throws an error if no user is currently connected.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Returns an Observable that emits the user's detailed information or throws an error if the user is not connected.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    postRegister(info: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/firebase/api/firebase-auth.service.ts:124\n                        \n                    \n\n\n            \n                \n                        The function postRegister takes a User object, capitalizes the first letter of the name\nproperty if needed, and then creates a document in Firebase with the user information.\ncontains the following properties:\nparameter, checks if the uuid property exists in the info object, and then modifies the name\nproperty by capitalizing the first letter if it is not already capitalized. Finally, it creates a\ndocument in the 'userInfo' collection in Firebase with the provided user information and the\nspecified\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The info parameter in the postRegister function is an object of type UserInfo that\ncontains the following properties:\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable is being returned. The function postRegister takes a User object as a\nparameter, checks if the uuid property exists in the info object, and then modifies the name\nproperty by capitalizing the first letter if it is not already capitalized. Finally, it creates a\ndocument in the 'userInfo' collection in Firebase with the provided user information and the\nspecified\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:83\n\n                        \n                    \n\n\n            \n                \n                        Registers a new user using registration info. Creates a user in Firebase and, if successful, stores additional\nuser information in the database. If the registration fails to create a user or if necessary user details (like UID) are\nmissing, it emits an error. Otherwise, it completes the registration, updates user-related observables to reflect\nthe unauthenticated state, and emits the new user information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe registration info of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that may emit null or detailed information of the newly registered user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:189\n\n                        \n                    \n\n\n            \n                \n                        Updates the current user's information in Firestore and refreshes the local user data by fetching updated info after the update.\nUses RxJS operators to chain these asynchronous tasks efficiently.\nuser data is refreshed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new user data to be updated in Firestore.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that emits the updated user data after both the Firestore document is updated and the local\nuser data is refreshed.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, from, map, switchMap, tap } from 'rxjs';\nimport {\n  UserInfo,\n  UserCredentials,\n  UserRegisterInfo,\n} from '../../../interfaces/user-info';\nimport { FirebaseService, FirebaseUserCredential } from '../firebase.service';\nimport { AuthService } from '../../auth.service';\n\nexport class FirebaseAuthService extends AuthService {\n  /**\n   * Constructs the FirebaseAuthService class. It subscribes to the `isLogged$` observable from the FirebaseService to\n   * automatically handle changes in the authentication state. If the user is logged in, it attempts to fetch the user's data.\n   * If not logged in, it sets `_logged` and `_user` to `false` and `null`, respectively.\n   */\n  constructor(private firebaseSvc: FirebaseService) {\n    super();\n\n    this.firebaseSvc.isLogged$.subscribe((logged) => {\n      if (logged) {\n        this.me().subscribe({\n          next: (data) => {\n            this._user.next(data);\n            this._logged.next(true);\n          },\n          error: (err) => {\n            console.log(err);\n          },\n        });\n      } else {\n        this._logged.next(false);\n        this._user.next(null);\n      }\n    });\n  }\n\n  /**\n   * Logs in a user using their credentials. Attempts to connect the user through Firebase using email and password.\n   * If authentication fails or if a valid UID for the user is not received, it emits an error. If successful, it retrieves\n   * the user information and updates the `_user` and `_logged` observables.\n   * @param {UserCredentials} credentials - The credentials of the user, including email and password.\n   * @returns Returns an Observable that may emit the logged-in user or an error in case of failed authentication.\n   */\n  public login(credentials: UserCredentials): Observable {\n    return new Observable((subscr) => {\n      this.firebaseSvc\n        .connectUserWithEmailAndPassword(\n          credentials.email,\n          credentials.password\n        )\n        .then((credentials: FirebaseUserCredential | null) => {\n          if (\n            !credentials ||\n            !credentials.user ||\n            !credentials.user.user ||\n            !credentials.user.user.uid\n          ) {\n            subscr.error('Cannot login');\n          }\n          if (credentials) {\n            this.me().subscribe((data) => {\n              this._user.next(data);\n              this._logged.next(true);\n              subscr.next(data);\n              subscr.complete();\n            });\n          }\n        })\n        .catch((err) => {\n          subscr.error(err);\n        });\n    });\n  }\n\n  /**\n   * Registers a new user using registration info. Creates a user in Firebase and, if successful, stores additional\n   * user information in the database. If the registration fails to create a user or if necessary user details (like UID) are\n   * missing, it emits an error. Otherwise, it completes the registration, updates user-related observables to reflect\n   * the unauthenticated state, and emits the new user information.\n   * @param {UserRegisterInfo} info - The registration info of the user.\n   * @returns Returns an Observable that may emit null or detailed information of the newly registered user.\n   */\n  public register(info: UserRegisterInfo): Observable {\n    return new Observable((subscr) => {\n      this.firebaseSvc\n        .createUserWithEmailAndPassword(info.email, info.password)\n        .then((credentials: FirebaseUserCredential | null) => {\n          if (\n            !credentials ||\n            !credentials.user ||\n            !credentials.user.user ||\n            !credentials.user.user.uid\n          )\n            subscr.error('Cannot register');\n          if (credentials) {\n            var _info: UserInfo = { ...info };\n            _info.uuid = this.firebaseSvc.user?.uid;\n            this.postRegister(_info).subscribe((data) => {\n              this._user.next(null);\n              this._logged.next(false);\n              subscr.next(_info);\n              subscr.complete();\n            });\n          }\n        })\n        .catch((err) => {\n          subscr.error(err);\n        });\n    });\n  }\n\n  /**\n   * The function `postRegister` takes a `User` object, capitalizes the first letter of the `name`\n   * property if needed, and then creates a document in Firebase with the user information.\n   *\n   * @param info The `info` parameter in the `postRegister` function is an object of type `UserInfo` that\n   * contains the following properties:\n   * @return An Observable is being returned. The function `postRegister` takes a `User` object as a\n   * parameter, checks if the `uuid` property exists in the `info` object, and then modifies the `name`\n   * property by capitalizing the first letter if it is not already capitalized. Finally, it creates a\n   * document in the 'userInfo' collection in Firebase with the provided user information and the\n   * specified\n   */\n  private postRegister(info: UserInfo): Observable {\n    if (info.uuid) {\n      let fixedName = info.name;\n      if (fixedName[0] !== fixedName[0].toUpperCase()) {\n        fixedName = fixedName.charAt(0).toUpperCase() + fixedName.slice(1);\n      }\n      return from(\n        this.firebaseSvc.createDocumentWithId(\n          'userInfo',\n          {\n            name: fixedName,\n            surname: info.surname,\n            role: info.role,\n            username: info.username,\n            email: info.email,\n            uuid: info.uuid,\n          },\n          info.uuid\n        )\n      );\n    }\n    throw new Error('Error inesperado');\n  }\n\n  /**\n   * Fetches the current user's information from Firestore based on their UID. If the user is connected (UID exists),\n   * retrieves their detailed profile from the 'userInfo' collection. Throws an error if no user is currently connected.\n   * @returns Returns an Observable that emits the user's detailed information or throws an error if the user is not connected.\n   */\n  public me(): Observable {\n    if (this.firebaseSvc.user?.uid)\n      return from(\n        this.firebaseSvc.getDocument('userInfo', this.firebaseSvc.user.uid)\n      ).pipe(\n        map((data) => {\n          return {\n            name: data.data['name'],\n            surname: data.data['surname'],\n            picture: data.data['picture'] ?? '',\n            email: data.data['email'],\n            role: data.data['role'],\n            username: data.data['username'],\n            uuid: data.id,\n          };\n        })\n      );\n    else throw new Error('User is not connected');\n  }\n\n  /**\n   * Logs out the current user by calling the `signOut` method from FirebaseService. The method returns an Observable\n   * that resolves when the sign-out process is complete.\n   * @returns Returns an Observable indicating the completion of the logout process.\n   */\n  public logout(): Observable {\n    return from(this.firebaseSvc.signOut(false));\n  }\n\n  /**\n   * Updates the current user's information in Firestore and refreshes the local user data by fetching updated info after the update.\n   * Uses RxJS operators to chain these asynchronous tasks efficiently.\n   * @param {UserInfo} user - The new user data to be updated in Firestore.\n   * @returns Returns an Observable that emits the updated user data after both the Firestore document is updated and the local\n   * user data is refreshed.\n   */\n  public updateUser(user: UserInfo): Observable {\n    return from(\n      this.firebaseSvc.updateDocument('userInfo', user!.uuid!, user)\n    ).pipe(\n      tap(() => {\n        if (user.uuid === this._user.value?.uuid) {\n          this._user.next(user);\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseDataService.html":{"url":"classes/FirebaseDataService.html","title":"class - FirebaseDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            DataService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-data.service.ts:6\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseDataService with a reference to FirebaseService.\nThis service handles all interactions with Firebase, providing methods to get, create, update,\nand delete documents in a Firestore database.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides methods for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:101\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deletes a document from Firebase and returns the document that was deleted.\nRetrieves the document first, then deletes it from Firestore, emitting the original document upon completion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, formatted as 'collectionName/documentId'.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the document that was deleted as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:52\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a single document from Firebase based on a resource path which includes collection name and document ID.\nMaps the Firestore document to a generic type T.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, formatted as 'collectionName/documentId'.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the requested document as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Creates a new document in a specified Firebase collection and retrieves the newly created document.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the Firestore collection where the document will be created.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be stored in the new document.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the newly created document as type T, after fetching it using its ID.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:85\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Updates an existing document in Firebase and retrieves the updated document.\nAssumes the resource string is formatted as 'collectionName/documentId'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, which is split to get collection name and document ID.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new data for the document.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the updated document as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:24\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Fetches a collection of documents from Firebase and maps them to a PaginatedData structure.\nThis method is generic and can be used for any type of collection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the Firestore collection to query.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nQuery parameters (currently not used in implementation but can be utilized for filtering/sorting).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \nAn observable that emits the paginated data of the specified type.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, from, map, switchMap } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { PaginatedData } from 'src/app/core/interfaces/data';\nimport { DataService } from '../../data.service';\n\nexport class FirebaseDataService extends DataService {\n  /**\n   * Constructs the FirebaseDataService with a reference to FirebaseService.\n   * This service handles all interactions with Firebase, providing methods to get, create, update,\n   * and delete documents in a Firestore database.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(protected firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Fetches a collection of documents from Firebase and maps them to a PaginatedData structure.\n   * This method is generic and can be used for any type of collection.\n   * @param {string} resource - The name of the Firestore collection to query.\n   * @param {any} params - Query parameters (currently not used in implementation but can be utilized for filtering/sorting).\n   * @returns {Observable>} - An observable that emits the paginated data of the specified type.\n   */\n  public query(resource: string, params: any): Observable> {\n    return from(this.firebase.getDocuments(resource)).pipe(\n      map((data) => {\n        return {\n          data: data.map((doc) => {\n            return {\n              id: 0,\n              uuid: doc.id,\n              ...doc.data,\n            } as T;\n          }),\n          pagination: {\n            page: 0,\n            pageSize: data.length,\n            pageCount: 1,\n            total: data.length,\n          },\n        };\n      })\n    );\n  }\n\n  /**\n   * Retrieves a single document from Firebase based on a resource path which includes collection name and document ID.\n   * Maps the Firestore document to a generic type T.\n   * @param {string} resource - The path to the document, formatted as 'collectionName/documentId'.\n   * @returns {Observable} - An observable that emits the requested document as type T.\n   */\n  public get(resource: string): Observable {\n    return from(\n      this.firebase.getDocument(resource.split('/')[0], resource.split('/')[1])\n    ).pipe(\n      map((doc) => {\n        return {\n          id: 0,\n          uuid: doc.id,\n          ...doc.data,\n        } as T;\n      })\n    );\n  }\n\n  /**\n   * Creates a new document in a specified Firebase collection and retrieves the newly created document.\n   * @param {string} resource - The name of the Firestore collection where the document will be created.\n   * @param {any} data - The data to be stored in the new document.\n   * @returns {Observable} - An observable that emits the newly created document as type T, after fetching it using its ID.\n   */\n  public post(resource: string, data: any): Observable {\n    return from(this.firebase.createDocument(resource, data)).pipe(\n      switchMap((doc) => this.get(resource + '/' + doc))\n    );\n  }\n\n  /**\n   * Updates an existing document in Firebase and retrieves the updated document.\n   * Assumes the resource string is formatted as 'collectionName/documentId'.\n   * @param {string} resource - The path to the document, which is split to get collection name and document ID.\n   * @param {any} data - The new data for the document.\n   * @returns {Observable} - An observable that emits the updated document as type T.\n   */\n  public put(resource: string, data: any): Observable {\n    return from(\n      this.firebase.updateDocument(\n        resource.split('/')[0],\n        resource.split('/')[1],\n        data\n      )\n    ).pipe(switchMap((doc) => this.get(resource)));\n  }\n\n  /**\n   * Deletes a document from Firebase and returns the document that was deleted.\n   * Retrieves the document first, then deletes it from Firestore, emitting the original document upon completion.\n   * @param {string} resource - The path to the document, formatted as 'collectionName/documentId'.\n   * @returns {Observable} - An observable that emits the document that was deleted as type T.\n   */\n  public delete(resource: string): Observable {\n    return this.get(resource).pipe(\n      switchMap((doc) => {\n        return from(\n          this.firebase.deleteDocument(\n            resource.split('/')[0],\n            resource.split('/')[1]\n          )\n        ).pipe(map((_) => doc));\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseDocument.html":{"url":"interfaces/FirebaseDocument.html","title":"interface - FirebaseDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     DocumentData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseMediaService.html":{"url":"classes/FirebaseMediaService.html","title":"class - FirebaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MediaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-media.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseMediaService with a reference to FirebaseService.\nThis service will be used to interact with Firebase's functionalities, particularly for uploading images.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides methods for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         MediaService:32\n\n                        \n                    \n\n\n            \n                \n                        Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\nThe method is designed to handle the upload process asynchronously and emit the result as an array of Media.\nEach Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\nIf an error occurs during upload, the observable will emit an error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file data to be uploaded, typically an image file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable that emits an array containing the uploaded media information.\nIf an error occurs during upload, the observable will emit an error.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { MediaService } from '../../media.service';\n\nexport interface Media {\n  id: number;\n  url_small: string;\n  url_medium: string;\n  url_large: string;\n  url_thumbnail: string;\n}\n\nexport class FirebaseMediaService extends MediaService {\n  /**\n   * Constructs the FirebaseMediaService with a reference to FirebaseService.\n   * This service will be used to interact with Firebase's functionalities, particularly for uploading images.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(private firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\n   * The method is designed to handle the upload process asynchronously and emit the result as an array of Media.\n   * Each Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\n   *\n   * @param {Blob} blob - The file data to be uploaded, typically an image file.\n   * @returns {Observable} - An observable that emits an array containing the uploaded media information.\n   * If an error occurs during upload, the observable will emit an error.\n   */\n  public upload(blob: Blob): Observable {\n    return new Observable((obs) => {\n      this.firebase\n        .imageUpload(blob)\n        .then((data) => {\n          var imgs = [];\n          var media: any = data.file;\n          imgs.push(media);\n          obs.next(imgs);\n        })\n        .catch((error) => obs.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseStorageFile.html":{"url":"interfaces/FirebaseStorageFile.html","title":"interface - FirebaseStorageFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseStorageFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseUserCredential.html":{"url":"interfaces/FirebaseUserCredential.html","title":"interface - FirebaseUserCredential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseUserCredential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     UserCredential\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserCredential\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredIncidents$\n                            \n                            \n                                    Public\n                                firebaseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                incidentInfo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilterChange\n                            \n                            \n                                    Async\n                                openFilterModal\n                            \n                            \n                                showAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService, router: Router, firebaseService: FirebaseService, myModal: ModalController, filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService - a service for handling authentication and user authorization.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router - an instance of the Angular Router service used for navigating between different components.\n\n                                                        \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController - a service for managing modal dialogs.\n\n\n                                                        \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service for managing filter service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        incidentInfo\n                        \n                    \n                \n            \n            \n                \nincidentInfo(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:43\n                        \n                    \n\n\n            \n                \n                        Navigates to the incident data page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the incident.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:72\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nInitializes the component by showing all incidents and subscribing to changes in the filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterChange\n                        \n                    \n                \n            \n            \n                \nonFilterChange(filterValues: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:95\n                        \n                    \n\n\n            \n                \n                        Applies the specified filter settings to the incidents.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filterValues\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe filter settings to apply.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFilterModal\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFilterModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:53\n                        \n                    \n\n\n            \n                \n                        Opens the filter modal and applies the selected filter settings.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAll\n                        \n                    \n                \n            \n            \n                \nshowAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:86\n                        \n                    \n\n\n            \n                \n                        Shows all incidents without applying any filters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredIncidents$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.firebaseService.incidents$\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebaseService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:33\n                        \n                    \n\n            \n                \n                    FirebaseService - a service for handling Firebase-related operations.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { Observable, map } from 'rxjs';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { ModalCategoryComponent } from '../data/modal-category/modal-category.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { FilterMobileComponent } from './filter-mobile/filter-mobile.component';\nimport { FilterService } from 'src/app/core/services/filter/filter.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  filteredIncidents$: Observable = this.firebaseService.incidents$;\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _auth AuthService - a service for handling authentication and user authorization.\n   * @param router Router - an instance of the Angular Router service used for navigating between different components.\n   * @param firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param myModal - The ModalController - a service for managing modal dialogs.\n   * @param filterService - A service for managing filter service.\n   */\n  constructor(\n    private _auth: AuthService,\n    private router: Router,\n    public firebaseService: FirebaseService,\n    private myModal: ModalController,\n    private filterService: FilterService\n  ) {}\n\n  /**\n   * Navigates to the incident data page.\n   *\n   * @param id string - the ID of the incident.\n   */\n  incidentInfo(id: string) {\n    if (id) {\n      console.log(id);\n      this.router.navigate(['/home/incident-data', id]);\n    }\n  }\n\n  /**\n   * Opens the filter modal and applies the selected filter settings.\n   */\n  async openFilterModal() {\n    const mod = await this.myModal.create({\n      component: FilterMobileComponent,\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results.data === 'reset') {\n        this.showAll();\n      } else if (results.data) {\n        this.onFilterChange(results.data);\n      }\n    }\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Initializes the component by showing all incidents and subscribing to changes in the filter state.\n   */\n  ngOnInit() {\n    this.showAll();\n    this.filterService.getFilter().subscribe((filterValues) => {\n      if (filterValues) {\n        this.onFilterChange(filterValues);\n      } else {\n        this.showAll();\n      }\n    });\n  }\n\n  /**\n   * Shows all incidents without applying any filters.\n   */\n  showAll() {\n    this.filteredIncidents$ = this.firebaseService.incidents$;\n  }\n\n  /**\n   * Applies the specified filter settings to the incidents.\n   *\n   * @param filterValues - The filter settings to apply.\n   */\n  onFilterChange(filterValues: any) {\n    console.log('filterValues:', filterValues.controls);\n    this.filteredIncidents$ = this.firebaseService.incidents$.pipe(\n      map((incidents) =>\n        incidents.filter((incident: incidentInfo) => {\n          const userIdValue = filterValues.controls.userId.value;\n          const categoryNameValue = filterValues.controls.categoryName.value;\n          const checkedValue = filterValues.controls.checked.value;\n          const resolvedValue = filterValues.controls.resolved.value;\n\n          if (userIdValue && !categoryNameValue) {\n            return (\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue &&\n              incident.userId == userIdValue\n            );\n          } else if (userIdValue) {\n            return (\n              incident.categoryName == categoryNameValue &&\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue &&\n              incident.userId == userIdValue\n            );\n          } else if (!userIdValue && categoryNameValue) {\n            return (\n              incident.categoryName == categoryNameValue &&\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue\n            );\n          } else if (!userIdValue && !categoryNameValue) {\n            return (\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue\n            );\n          } else {\n            return incident;\n          }\n        })\n      )\n    );\n  }\n}\n\n    \n\n    \n        \n    \n    \n        {{'filter.filter' | translate}}\n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    home.page.scss\n                \n                .incidents {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n  row-gap: 20px;\n  column-gap: 30px;\n  width: 100%;\n  padding: 20px;\n\n  app-incidents-info {\n    flex: 0 0 calc(33.333% - 40px);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n  }\n\n  @media (max-width: 850px) {\n    app-incidents-info {\n      flex: 0 0 100%;\n    }\n  }\n}\n\n.mobile {\n  display: none;\n}\n\n@media (max-width: 600px) {\n  .mobile {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 95%;\n    box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n    border-radius: 0.5rem;\n    margin: 2% auto;\n    background-color: #BD1E1E;\n\n    p {\n      font-weight: bold;\n      color: #fff;\n    }\n  }\n\n  .desktop {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{\\'filter.filter\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nCategorySelectableComponent\n\nCategorySelectableComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nCategorySelectableComponent->HomePageModule\n\n\n\n\n\nCategorySelectableMobileComponent\n\nCategorySelectableMobileComponent\n\nHomePageModule -->\n\nCategorySelectableMobileComponent->HomePageModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nHomePageModule -->\n\nFilterComponent->HomePageModule\n\n\n\n\n\nFilterMobileComponent\n\nFilterMobileComponent\n\nHomePageModule -->\n\nFilterMobileComponent->HomePageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nItemCategoryComponent\n\nItemCategoryComponent\n\nHomePageModule -->\n\nItemCategoryComponent->HomePageModule\n\n\n\n\n\nItemUserComponent\n\nItemUserComponent\n\nHomePageModule -->\n\nItemUserComponent->HomePageModule\n\n\n\n\n\nUserSelectableComponent\n\nUserSelectableComponent\n\nHomePageModule -->\n\nUserSelectableComponent->HomePageModule\n\n\n\n\n\nUserSelectableMobileComponent\n\nUserSelectableMobileComponent\n\nHomePageModule -->\n\nUserSelectableMobileComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategorySelectableComponent\n                        \n                        \n                            CategorySelectableMobileComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            FilterMobileComponent\n                        \n                        \n                            HomePage\n                        \n                        \n                            ItemCategoryComponent\n                        \n                        \n                            ItemUserComponent\n                        \n                        \n                            UserSelectableComponent\n                        \n                        \n                            UserSelectableMobileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CategorySelectableComponent } from './category-selectable/category-selectable.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { UserSelectableComponent } from './user-selectable/user-selectable.component';\nimport { ItemCategoryComponent } from './item-category/item-category.component';\nimport { ItemUserComponent } from './item-user/item-user.component';\nimport { FilterMobileComponent } from './filter-mobile/filter-mobile.component';\nimport { UserSelectableMobileComponent } from './user-selectable-mobile/user-selectable-mobile.component';\nimport { CategorySelectableMobileComponent } from './category-selectable-mobile/category-selectable-mobile.component';\n\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    SharedModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    MatCheckboxModule\n  ],\n  declarations: [\n    HomePage,\n    CategorySelectableComponent,\n    ItemCategoryComponent,\n    ItemUserComponent,\n    FilterComponent,\n    UserSelectableComponent,\n    FilterMobileComponent,\n    UserSelectableMobileComponent,\n    CategorySelectableMobileComponent\n  ]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientProvider.html":{"url":"injectables/HttpClientProvider.html","title":"injectable - HttpClientProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                getImage\n                            \n                            \n                                    Public\n                                    Abstract\n                                patch\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:84\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        delete\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        get\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:16\n                        \n                    \n\n\n            \n                \n                        getImage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:69\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        patch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:37\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        post\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:53\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        put\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:94\n                        \n                    \n\n\n            \n                \n                        Sets the trust mode for the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n// rxjs\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport abstract class HttpClientProvider {\n  /**\n   * getImage\n   *\n   * @param url http request url\n   * @param options http request options\n   * @returns observable with http response\n   */\n  public abstract getImage(url: string): Observable;\n\n  /**\n   * get\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public abstract get(url: string, params: any, headers: any): Observable;\n\n  /**\n   * post\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract post(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * put\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract put(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * patch\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract patch(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * delete\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public abstract delete(\n    url: string,\n    params: any,\n    headers: any\n  ): Observable;\n\n  /**\n   * Sets the trust mode for the server\n   * @param mode server trust mode\n   */\n  public abstract setServerTrustMode(\n    mode: 'default' | 'nocheck' | 'pinned' | 'legacy'\n  ): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientWebProvider.html":{"url":"injectables/HttpClientWebProvider.html","title":"injectable - HttpClientWebProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientWebProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client-web.provider.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            HttpClientProvider\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBody\n                            \n                            \n                                    Private\n                                createHeaders\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getImage\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/http/http-client-web.provider.ts:12\n                            \n                        \n\n                \n                    \n                            provider constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                angular http client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBody\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBody(body: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:170\n                        \n                    \n\n\n            \n                \n                        create http request body\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any | HttpParams\n\n                        \n                            \n                                http request body\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    createHeaders(headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:153\n                        \n                    \n\n\n            \n                \n                        create http headers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                angular http headers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:126\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        delete\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:43\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        get\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:29\n\n                        \n                    \n\n\n            \n                \n                        getImage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:103\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        patch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:63\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        post\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:83\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        put\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:142\n\n                        \n                    \n\n\n            \n                \n                        Sets the trust mode for the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// rxjs\nimport { Observable } from 'rxjs';\n\n// providers\nimport { HttpClientProvider } from './http-client.provider';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpClientWebProvider extends HttpClientProvider {\n  /**\n   * provider constructor\n   *\n   * @param httpClient angular http client\n   */\n  constructor(private readonly httpClient: HttpClient) {\n    super();\n  }\n\n  /**\n   * getImage\n   *\n   * @param url http request url\n   * @param options http request options\n   * @returns observable with http response\n   */\n  public getImage(url: string): Observable {\n    return this.httpClient.get(url, {\n      responseType: 'blob',\n    });\n  }\n\n  /**\n   * get\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public get(\n    url: string,\n    params: any = {},\n    headers: any = {}\n  ): Observable {\n    return this.httpClient.get(url, {\n      params: new HttpParams({ fromObject: params }),\n      headers: this.createHeaders(headers),\n    });\n  }\n\n  /**\n   * post\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public post(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    return this.httpClient.post(url, this.createBody(body, urlEncoded), {\n      headers: this.createHeaders(headers, urlEncoded),\n    });\n  }\n\n  /**\n   * put\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public put(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    return this.httpClient.put(url, this.createBody(body, urlEncoded), {\n      headers: this.createHeaders(headers, urlEncoded),\n    });\n  }\n\n  /**\n   * patch\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public patch(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    if (body instanceof FormData) {\n      return this.httpClient.patch(url, body, { headers: headers });\n    } else {\n      return this.httpClient.patch(url, this.createBody(body, urlEncoded), {\n        headers: this.createHeaders(headers, urlEncoded),\n      });\n    }\n  }\n\n  /**\n   * delete\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public delete(\n    url: string,\n    params: any = {},\n    headers: any = {}\n  ): Observable {\n    return this.httpClient.delete(url, {\n      params: new HttpParams({ fromObject: params }),\n      headers: this.createHeaders(headers),\n    });\n  }\n\n  /**\n   * Sets the trust mode for the server\n   *\n   * @param mode server trust mode\n   */\n  public setServerTrustMode(\n    mode: 'default' | 'nocheck' | 'pinned' | 'legacy'\n  ): void {}\n\n  /**\n   * create http headers\n   *\n   * @param headers http headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns angular http headers\n   */\n  private createHeaders(\n    headers: any,\n    urlEncoded: boolean = false\n  ): HttpHeaders {\n    var _headers = new HttpHeaders(headers);\n    if (urlEncoded)\n      _headers.set('Accept', ' application/x-www-form-urlencoded');\n    return _headers;\n  }\n\n  /**\n   * create http request body\n   *\n   * @param body http request body\n   * @param urlEncoded http request as url encoded content-type\n   * @returns http request body\n   */\n  private createBody(body: any, urlEncoded: boolean): any | HttpParams {\n    return urlEncoded ? new HttpParams({ fromObject: body }) : body;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentDataPage.html":{"url":"components/IncidentDataPage.html","title":"component - IncidentDataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentDataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/incident-data/incident-data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-incident-data\n            \n\n\n\n            \n                styleUrls\n                ./incident-data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./incident-data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                incident\n                            \n                            \n                                incidentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                setResolvedIncident\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, incidentsService: IncidentsService, translate: CustomTranslateService, messageService: MessageService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute - a service provided by Angular that gives access to information about a route associated with a component loaded in an outlet.\n\n                                                        \n                                                \n                                                \n                                                        incidentsService\n                                                  \n                                                        \n                                                                        IncidentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                IncidentsService - a service for managing incidents.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MessageService - a service for displaying messages or notifications to the user within the application.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog - a service for displaying dialog boxes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:40\n                        \n                    \n\n\n            \n                \n                        Initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setResolvedIncident\n                        \n                    \n                \n            \n            \n                \n                        \n                    setResolvedIncident(incident: incidentInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:64\n                        \n                    \n\n\n            \n                \n                        Sets an incident as resolved.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incident\n                                            \n                                                            incidentInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    incidentInfo - the incident to be marked as resolved.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:115\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:95\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:34\n                        \n                    \n\n            \n                \n                    MatDialog - a service for displaying dialog boxes.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incident\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incidentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { IncidentsService } from 'src/app/core/services/api/incidents.service';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\nimport { MessageService } from 'primeng/api';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-incident-data',\n  templateUrl: './incident-data.page.html',\n  styleUrls: ['./incident-data.page.scss'],\n  providers: [MessageService],\n})\nexport class IncidentDataPage implements OnInit {\n  incidentId: string | null = '';\n  incident: any | undefined;\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param route ActivatedRoute - a service provided by Angular that gives access to information about a route associated with a component loaded in an outlet.\n   * @param incidentsService IncidentsService - a service for managing incidents.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   * @param messageService MessageService - a service for displaying messages or notifications to the user within the application.\n   * @param dialog MatDialog - a service for displaying dialog boxes.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private incidentsService: IncidentsService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    public dialog: MatDialog,\n  ) {}\n\n  /**\n   * Initializes the component.\n   */\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.incidentId = params.get('id');\n      if (this.incidentId) {\n        this.incidentsService.getIncidentById(this.incidentId).subscribe({\n          next: (incident) => {\n            if (incident) {\n              this.incident = incident;\n              if (!incident.checked) {\n                incident.checked = true;\n                this.incidentsService.updateIncident(incident);\n              }\n            }\n          },\n        });\n      }\n    });\n  }\n\n  /**\n   * Sets an incident as resolved.\n   *\n   * @param incident incidentInfo - the incident to be marked as resolved.\n   */\n  async setResolvedIncident(incident: incidentInfo) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      data: { message: 'resolved' },\n    });\n\n    dialogRef.afterClosed().subscribe(async (result) => {\n      if (result) {\n        incident.resolved = true;\n        this.incident = incident;\n        this.incidentsService.updateIncident(incident).subscribe({\n          next: async _ => {\n            this.showSuccess('good');\n            await Haptics.impact({ style: ImpactStyle.Medium });\n          },\n          error: async error => {\n            this.incident.resolved = false;\n            this.showError('error');\n            await Haptics.impact({ style: ImpactStyle.Heavy });\n          }\n        });\n      }\n    });\n  }\n  \n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'success',\n          detail: text,\n        });\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n\n        {{incident.title}}\n\n        {{incident.categoryName}}\n\n        {{incident.userName}}\n\n        {{incident.description}}\n\n        {{\"incidents.resolved\" | translate}}\n       \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./incident-data.page.scss\n                \n                .user {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--username {\n        margin: 0;\n    }\n\n    &--role {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n    \n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{incident.title}}        {{incident.categoryName}}        {{incident.userName}}        {{incident.description}}        {{\"incidents.resolved\" | translate}}               '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentDataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IncidentDataPageModule.html":{"url":"modules/IncidentDataPageModule.html","title":"module - IncidentDataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    IncidentDataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IncidentDataPageModule\n\n\n\ncluster_IncidentDataPageModule_declarations\n\n\n\ncluster_IncidentDataPageModule_imports\n\n\n\n\nIncidentDataPage\n\nIncidentDataPage\n\n\n\nIncidentDataPageModule\n\nIncidentDataPageModule\n\nIncidentDataPageModule -->\n\nIncidentDataPage->IncidentDataPageModule\n\n\n\n\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageModule -->\n\nIncidentDataPageRoutingModule->IncidentDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/incident-data/incident-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IncidentDataPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IncidentDataPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IncidentDataPageRoutingModule } from './incident-data-routing.module';\n\nimport { IncidentDataPage } from './incident-data.page';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IncidentDataPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n  ],\n  declarations: [IncidentDataPage]\n})\nexport class IncidentDataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IncidentDataPageRoutingModule.html":{"url":"modules/IncidentDataPageRoutingModule.html","title":"module - IncidentDataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    IncidentDataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/incident-data/incident-data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IncidentDataPage } from './incident-data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IncidentDataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IncidentDataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentsCircleGraphicComponent.html":{"url":"components/IncidentsCircleGraphicComponent.html","title":"component - IncidentsCircleGraphicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentsCircleGraphicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-incidents-circle-graphic\n            \n\n\n\n            \n                styleUrls\n                ./incidents-circle-graphic.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./incidents-circle-graphic.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Initializes the component and fetches user data from Firebase to generate a chart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map, switchMap, forkJoin } from 'rxjs';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-incidents-circle-graphic',\n  templateUrl: './incidents-circle-graphic.component.html',\n  styleUrls: ['./incidents-circle-graphic.component.scss'],\n})\nexport class IncidentsCircleGraphicComponent implements OnInit {\n  data: any;\n  options: any;\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private translate: CustomTranslateService\n  ) {}\n\n  /**\n   * Initializes the component and fetches user data from Firebase to generate a chart.\n   */\n  ngOnInit() {\n    this._firebaseService.incidents$\n      .pipe(\n        map((incidents) => {\n          const categoryCounts = incidents.reduce((acc: any, incident: any) => {\n            const categoryName = incident.categoryName;\n            acc[categoryName] = (acc[categoryName] || 0) + 1;\n            return acc;\n          }, {});\n\n          return {\n            labels: Object.keys(categoryCounts),\n            datasets: [\n              {\n                data: Object.values(categoryCounts),\n                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n                hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n              },\n            ],\n          };\n        })\n      )\n      .subscribe((chartData) => {\n        this.data = chartData;\n        this.options = {\n          plugins: {\n            legend: {\n              labels: {\n                color: '#495057',\n              },\n            },\n          },\n        };\n      });\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./incidents-circle-graphic.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentsCircleGraphicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentsInfoComponent.html":{"url":"components/IncidentsInfoComponent.html","title":"component - IncidentsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/incidents-info/incidents-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-incidents-info\n            \n\n\n\n            \n                styleUrls\n                ./incidents-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./incidents-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formattedDay\n                            \n                            \n                                formattedTime\n                            \n                            \n                                isScreenSmall\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onIncidentClick\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                incident\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onIncidentClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\nInitializes the component by checking the initial screen size.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                UsersService - a service for managing user-related operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        incident\n                    \n                \n                \n                    \n                        Type :         incidentInfo | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onIncidentClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:20\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onIncidentClick\n                        \n                    \n                \n            \n            \n                \nonIncidentClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Handles the click event on the incident.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event - the click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formattedDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formattedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { UsersService } from 'src/app/core/services/api/users.service';\n\n@Component({\n  selector: 'app-incidents-info',\n  templateUrl: './incidents-info.component.html',\n  styleUrls: ['./incidents-info.component.scss'],\n})\nexport class IncidentsInfoComponent implements OnInit {\n  isScreenSmall: boolean = false;\n  @Input() incident: incidentInfo | undefined;\n  @Output() onIncidentClicked: EventEmitter =\n    new EventEmitter();\n  formattedTime: string | undefined;\n  formattedDay: string | undefined;\n  userName: string | undefined;\n\n  /**\n   * Constructs a component constructor function.\n   * Initializes the component by checking the initial screen size.\n   *\n   * @param userService UsersService - a service for managing user-related operations.\n   */\n\n  constructor(private userService: UsersService) {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  /**\n   * Initializes the component.\n   */\n\n  ngOnInit() {\n    if (this.incident) {\n      if (typeof this.incident.date === 'string') {\n        const timestamp = new Date(this.incident.date);\n        this.formattedDay = timestamp.toLocaleDateString();\n        this.formattedTime = timestamp.toLocaleTimeString();\n      } else {\n        const timestamp = this.incident.date;\n        const date = timestamp.toDate();\n        this.formattedDay = date.toLocaleDateString();\n        this.formattedTime = date.toLocaleTimeString();\n      }\n      this.userService.getUserById(this.incident.userId).subscribe((user) => {\n        this.userName = user ? user.name : '';\n      });\n    }\n  }\n\n  /**\n   * Handles the click event on the incident.\n   *\n   * @param event Event - the click event.\n   */\n  onIncidentClick(event: Event) {\n    this.onIncidentClicked.emit(this.incident?.uuid);\n    event.stopPropagation();\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{incident?.title}}\n    {{incident?.title | shortenText}}\n    \n      {{'incidents.unresolved' | translate}}\n    \n  \n\n  \n    \n      \n      \n        {{'incidents.day' |translate}}: {{formattedDay}}\n      \n    \n    \n      \n      \n        {{'incidents.hour' |translate}}: {{formattedTime}}\n      \n    \n    \n      \n      \n        {{'incidents.user' |translate}}: {{userName ? userName : ('incidents.anonymous' | translate)}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./incidents-info.component.scss\n                \n                  .card {\n    padding: 15px;\n    border-radius: 0.5rem;\n    box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n    width: calc((100vw / 3) - (30px * 2) + 10px);\n    height: 190px;\n\n    &--header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      &__title {\n        font-weight: bold;\n      }\n\n      &__status {\n        background-color: #bd1e1e;\n        padding: 2% 5%;\n        border-radius: 2em;\n\n        span {\n          color: #ffffff;\n          font-weight: bold;\n        }\n      }\n    }\n\n    ion-icon {\n      color: #bd1e1e;\n    }\n\n    &--info {\n      margin-top: 5%;\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n\n      span {\n        margin-left: 3%;\n        font-weight: bold;\n      }\n    }\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    @media (max-width: 850px) {\n      width: 100% !important;\n\n      &--header {\n        &__status {\n          margin-left: 1rem;\n        }\n      }\n\n      &--info {\n        margin-top: 0;\n      }\n    }\n  }\n\n  .noCheck {\n    background-color: #BBBBBB;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{incident?.title}}    {{incident?.title | shortenText}}          {{\\'incidents.unresolved\\' | translate}}                                {{\\'incidents.day\\' |translate}}: {{formattedDay}}                                  {{\\'incidents.hour\\' |translate}}: {{formattedTime}}                                  {{\\'incidents.user\\' |translate}}: {{userName ? userName : (\\'incidents.anonymous\\' | translate)}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IncidentsService.html":{"url":"injectables/IncidentsService.html","title":"injectable - IncidentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IncidentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/incidents.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIncidentById\n                            \n                            \n                                updateIncident\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/incidents.service.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor function initializes a private firebaseService property using dependency\ninjection.\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The firebaseService parameter is an instance of the FirebaseService\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIncidentById\n                        \n                    \n                \n            \n            \n                \ngetIncidentById(incidentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/incidents.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Retrieves an incident by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incidentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the incident to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the incident information if found, otherwise undefined.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIncident\n                        \n                    \n                \n            \n            \n                \nupdateIncident(incident: incidentInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/incidents.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Updates an incident.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incident\n                                            \n                                                            incidentInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    incidentInfo - the updated incident information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the incident is updated successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { incidentInfo } from '../../interfaces/incidents-info';\nimport { Observable, catchError, from, map, of, take, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IncidentsService {\n  /**\n   * The constructor function initializes a private firebaseService property using dependency\n   * injection.\n   *\n   * @param firebaseService The `firebaseService` parameter is an instance of the `FirebaseService`\n   * class that is being injected into the constructor using Angular's dependency injection mechanism.\n   * This allows the component or service to have access to the functionality provided by the\n   * `FirebaseService` class.\n   */\n  constructor(private firebaseService: FirebaseService) {}\n\n  /**\n   * Retrieves an incident by its ID.\n   *\n   * @param incidentId string - the ID of the incident to retrieve.\n   * @returns An Observable that emits the incident information if found, otherwise undefined.\n   */\n  getIncidentById(incidentId: string): Observable {\n    return this.firebaseService.incidents$.pipe(\n      take(1),\n      map((incident) =>\n        incident.find((incident) => incident.uuid === incidentId)\n      )\n    );\n  }\n\n  /**\n   * Updates an incident.\n   *\n   * @param incident incidentInfo - the updated incident information.\n   * @returns An Observable that emits a success message if the incident is updated successfully, otherwise emits an error message.\n   */\n  updateIncident(incident: incidentInfo): Observable {\n    return from(this.firebaseService.updateDocument('incidentsInfo', incident.uuid, incident)).pipe(\n      map(response => ({ success: true, data: response })),\n      catchError((err) =>\n        throwError(\n          () =>\n            new Error(\n              `Error: ${err.message}`\n            )\n        ))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemCategoryComponent.html":{"url":"components/ItemCategoryComponent.html","title":"component - ItemCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ItemCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/item-category/item-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-category\n            \n\n\n\n            \n                styleUrls\n                ./item-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    item\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/item-category/item-category.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:16\n                            \n                        \n                \n                    \n                        Setter method for setting the item data.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:23\n                            \n                        \n                \n                    \n                        Output property for emitting a click event.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-category/item-category.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-category/item-category.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Event handler for when the user clicks on the item.\nEmits a click event with the item data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/item-category/item-category.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n\n                \n                    \n                        getitem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:30\n                                \n                            \n                    \n                        \n                                Getter method for retrieving the item data.\n\n\n                                \n                                \n                                \n                                    Returns :     any | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setitem(_item: any | undefined)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:16\n                                \n                            \n                    \n                        \n                                Setter method for setting the item data.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _item\n                                                    \n                                                            \n                                                                        any | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe item data to be set.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-item-category',\n  templateUrl: './item-category.component.html',\n  styleUrls: ['./item-category.component.scss'],\n})\nexport class ItemCategoryComponent implements OnInit {\n  private _item: any | undefined;\n\n  /**\n   * Setter method for setting the item data.\n   *\n   * @param _item - The item data to be set.\n   */\n  @Input('item') set item(_item: any | undefined) {\n    this._item = _item;\n  }\n\n  /**\n   * Output property for emitting a click event.\n   */\n  @Output('clicked') clicked = new EventEmitter();\n\n  /**\n   * Getter method for retrieving the item data.\n   *\n   * @returns The item data.\n   */\n  get item(): any | undefined {\n    return this._item;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for when the user clicks on the item.\n   * Emits a click event with the item data.\n   */\n  onUserClicked() {\n    this.clicked.emit(this._item);\n  }\n}\n\n    \n\n    \n        \n  {{item?.name}}\n\n    \n\n    \n                \n                    ./item-category.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{item?.name}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemUserComponent.html":{"url":"components/ItemUserComponent.html","title":"component - ItemUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ItemUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/item-user/item-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-user\n            \n\n\n\n            \n                styleUrls\n                ./item-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    item\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/item-user/item-user.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:16\n                            \n                        \n                \n                    \n                        Input property to set the item data.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:23\n                            \n                        \n                \n                    \n                        Output property to emit a click event.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-user/item-user.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-user/item-user.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Event handler for when the user clicks on the item.\nEmits a click event with the item data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/item-user/item-user.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n\n                \n                    \n                        getitem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:30\n                                \n                            \n                    \n                        \n                                Getter method to retrieve the item data.\n\n\n                                \n                                \n                                \n                                    Returns :     any | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setitem(_item: any | undefined)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:16\n                                \n                            \n                    \n                        \n                                Input property to set the item data.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _item\n                                                    \n                                                            \n                                                                        any | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe item data to be set.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-item-user',\n  templateUrl: './item-user.component.html',\n  styleUrls: ['./item-user.component.scss'],\n})\nexport class ItemUserComponent implements OnInit {\n  private _item: any | undefined;\n\n  /**\n   * Input property to set the item data.\n   *\n   * @param _item - The item data to be set.\n   */\n  @Input('item') set item(_item: any | undefined) {\n    this._item = _item;\n  }\n\n  /**\n   * Output property to emit a click event.\n   */\n  @Output('clicked') clicked = new EventEmitter();\n\n  /**\n   * Getter method to retrieve the item data.\n   *\n   * @returns The item data.\n   */\n  get item(): any | undefined {\n    return this._item;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for when the user clicks on the item.\n   * Emits a click event with the item data.\n   */\n  onUserClicked() {\n    this.clicked.emit(this._item);\n  }\n}\n\n    \n\n    \n        \n  {{item?.name}}\n\n    \n\n    \n                \n                    ./item-user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{item?.name}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalService.html":{"url":"injectables/LocalService.html","title":"injectable - LocalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/translate/local.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browserLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lang: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/translate/local.service.ts:8\n                            \n                        \n\n                \n                    \n                            The constructor function sets the browser language based on the value returned by\nwindow.navigator.language.\nproperty of type CustomTranslateService. It is used to handle language translation within the\ncomponent or service where this constructor is defined.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe lang parameter in the constructor is a private\nproperty of type CustomTranslateService. It is used to handle language translation within the\ncomponent or service where this constructor is defined.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        browserLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/local.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { CustomTranslateService } from './translate.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalService {\n  browserLanguage: string = '';\n\n  /**\n   * The constructor function sets the browser language based on the value returned by\n   * window.navigator.language.\n   * @param {CustomTranslateService} lang - The `lang` parameter in the constructor is a private\n   * property of type `CustomTranslateService`. It is used to handle language translation within the\n   * component or service where this constructor is defined.\n   */\n  constructor(private lang: CustomTranslateService) {\n    // window.navigator.language returns 'es-ES', we only need 'es'\n    this.browserLanguage = window.navigator.language.split('-')[0];\n    this.lang.use(this.browserLanguage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/login-form/login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n\n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            Constructs the LoginFormComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder service for building the form.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/access/login-form/login-form.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/login-form/login-form.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/login-form/login-form.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Event handler for form submission.\nEmits the user credentials through the onsubmit event emitter.\nResets the form after submission.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/login-form/login-form.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserCredentials } from 'src/app/core/interfaces/user-info';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent implements OnInit {\n  form: FormGroup;\n  @Output() onsubmit = new EventEmitter();\n\n  /**\n   * Constructs the LoginFormComponent.\n   * @param {FormBuilder} formBuilder - FormBuilder service for building the form.\n   */\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for form submission.\n   * Emits the user credentials through the onsubmit event emitter.\n   * Resets the form after submission.\n   */\n  onSub() {\n    this.onsubmit.emit(this.form?.value);\n    this.form.reset();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{'forms.email' | translate}}\n      \n      {{'errors.valid' | translate}}\n    \n  \n    \n      {{'forms.password' | translate}}\n      \n      {{'errors.valid' | translate}}\n    \n  \n    {{\"forms.logIn\" | translate}}\n  \n  \n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                div {\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    \n    \n    .mat-form-field {\n      width: 350px;\n      margin-bottom: 2rem;\n    }\n\n    button {\n      padding: 1rem;\n      border: none;\n      border-radius: 4px;\n      background-color: #0F212D;\n      color: white;\n      font-weight: bold;\n      cursor: pointer;\n      \n      &:hover {\n        background-color: #1b3e56;\n      }\n    \n      &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{\\'forms.email\\' | translate}}            {{\\'errors.valid\\' | translate}}                {{\\'forms.password\\' | translate}}            {{\\'errors.valid\\' | translate}}          {{\"forms.logIn\" | translate}}    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url_large\n                                        \n                                \n                                \n                                        \n                                            url_medium\n                                        \n                                \n                                \n                                        \n                                            url_small\n                                        \n                                \n                                \n                                        \n                                            url_thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_large:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_medium:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_small:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { MediaService } from '../../media.service';\n\nexport interface Media {\n  id: number;\n  url_small: string;\n  url_medium: string;\n  url_large: string;\n  url_thumbnail: string;\n}\n\nexport class FirebaseMediaService extends MediaService {\n  /**\n   * Constructs the FirebaseMediaService with a reference to FirebaseService.\n   * This service will be used to interact with Firebase's functionalities, particularly for uploading images.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(private firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\n   * The method is designed to handle the upload process asynchronously and emit the result as an array of Media.\n   * Each Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\n   *\n   * @param {Blob} blob - The file data to be uploaded, typically an image file.\n   * @returns {Observable} - An observable that emits an array containing the uploaded media information.\n   * If an error occurs during upload, the observable will emit an error.\n   */\n  public upload(blob: Blob): Observable {\n    return new Observable((obs) => {\n      this.firebase\n        .imageUpload(blob)\n        .then((data) => {\n          var imgs = [];\n          var media: any = data.file;\n          imgs.push(media);\n          obs.next(imgs);\n        })\n        .catch((error) => obs.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/media.service.ts:13\n                        \n                    \n\n\n            \n                \n                        Uploads a media blob.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe blob representing the media to upload.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the upload process.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class MediaService {\n  /**\n   * Uploads a media blob.\n   * @param {Blob} blob - The blob representing the media to upload.\n   * @returns {Observable} Observable emitting the result of the upload process.\n   */\n  public abstract upload(blob: Blob): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalCategoryComponent.html":{"url":"components/ModalCategoryComponent.html","title":"component - ModalCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/data/modal-category/modal-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-category\n            \n\n\n\n            \n                styleUrls\n                ./modal-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                mod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryInfo\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    categoryInfo\n                                \n                                \n                                    mode\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:37\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder - a service for creating and managing Angular forms.\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ModalController - a service for managing modal dialogs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryInfo\n                    \n                \n                \n                    \n                        Type :         CategoryInfo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:20\n                            \n                        \n                \n                    \n                        Sets the category information for the form.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:33\n                            \n                        \n                \n                    \n                        Sets the mode for the component.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Handler for cancel action.\nDismisses the modal without passing any data to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Handler for form submission.\nDismisses the modal and passes the updated user information to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        categoryInfo\n                    \n                \n\n\n                \n                    \n                        setcategoryInfo(category: CategoryInfo)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:20\n                                \n                            \n                    \n                        \n                                Sets the category information for the form.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                            \n                                                                            CategoryInfo\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    CategoryInfo - the category information to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n\n\n                \n                    \n                        setmode(m: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:33\n                                \n                            \n                    \n                        \n                                Sets the mode for the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            m\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    string - the mode to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\n\n@Component({\n  selector: 'app-modal-category',\n  templateUrl: './modal-category.component.html',\n  styleUrls: ['./modal-category.component.scss'],\n})\nexport class ModalCategoryComponent implements OnInit {\n  form: FormGroup;\n  mod: string = '';\n  \n  /**\n   * Sets the category information for the form.\n   *\n   * @param category CategoryInfo - the category information to be set.\n   */\n  @Input() set categoryInfo(category: CategoryInfo) {\n    if (category) {\n      this.form.controls['name'].setValue(category.name);\n      this.form.controls['description'].setValue(category.description);\n      this.form.controls['uuid'].setValue(category.uuid);\n    }\n  }\n\n  /**\n   * Sets the mode for the component.\n   *\n   * @param m string - the mode to be set.\n   */\n  @Input() set mode(m: string) {\n    if (m) {\n      this.mod = m;\n    }\n  }\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param formBuilder FormBuilder - a service for creating and managing Angular forms.\n   * @param modal ModalController - a service for managing modal dialogs.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      uuid: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Handler for form submission.\n   * Dismisses the modal and passes the updated user information to the parent component.\n   */\n  onSub() {\n    this.modal.dismiss(this.form.value);\n  }\n\n  /**\n   * Handler for cancel action.\n   * Dismisses the modal without passing any data to the parent component.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n    \n      {{'forms.update' | translate}}\n    \n    \n      {{'data.create' | translate}}\n    \n  \n\n\n\n  \n\n    \n      \n        {{ 'forms.name' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n    \n      \n        {{ 'forms.description' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      {{'forms.update' | translate}}\n      {{'data.create' | translate}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./modal-category.component.scss\n                \n                ion-icon {\n    color: #0f212d;\n  }\n  .form {\n    display: flex;\n    flex-direction: column;\n    padding: 5%;\n  \n    button {\n      padding: 1rem;\n      border: none;\n      border-radius: 4px;\n      background-color: #0f212d;\n      color: white;\n      font-weight: bold;\n      cursor: pointer;\n  \n      &:hover {\n        background-color: #1b3e56;\n      }\n  \n      &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n      }\n    }\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\\'forms.update\\' | translate}}              {{\\'data.create\\' | translate}}                          {{ \\'forms.name\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                                {{ \\'forms.description\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                    {{\\'forms.update\\' | translate}}      {{\\'data.create\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedData.html":{"url":"interfaces/PaginatedData.html","title":"interface - PaginatedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         Pagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pagination\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pageCount\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                passwordMatch\n                            \n                            \n                                    Static\n                                passwordProto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordMatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordMatch(passwordControlName: string, confirmControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:35\n                        \n                    \n\n\n            \n                \n                        Validates if password and confirm password match.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                passwordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the password control.\n\n\n                                            \n                                        \n                                        \n                                                confirmControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the confirm password control.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for password match validation.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordProto\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordProto(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:13\n                        \n                    \n\n\n            \n                \n                        Validates password according to a specified pattern.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe name of the control to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for password validation.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbstractControl,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\nexport class PasswordValidation {\n  /**\n   * Validates password according to a specified pattern.\n   * @param {string} controlName - The name of the control to validate.\n   * @returns {ValidatorFn} Validator function for password validation.\n   */\n  public static passwordProto(controlName: string = ''): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      let password = '';\n      if (control instanceof FormControl) password = control?.value;\n      else password = control.get(controlName)?.value;\n      if (\n        password &&\n        !password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,}$/)\n      ) {\n        return { passwordProto: true };\n      } else {\n        return null;\n      }\n    };\n  }\n\n  /**\n   * Validates if password and confirm password match.\n   * @param {string} passwordControlName - The name of the password control.\n   * @param {string} confirmControlName - The name of the confirm password control.\n   * @returns {ValidatorFn} Validator function for password match validation.\n   */\n  public static passwordMatch(\n    passwordControlName: string,\n    confirmControlName: string\n  ): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const password = control.get(passwordControlName)?.value;\n      const confirmPassword = control.get(confirmControlName)?.value;\n\n      if (password != confirmPassword) {\n        let errors = control?.errors;\n        if (errors && typeof errors === 'object') {\n          Object.assign(errors, {\n            passwordMatch: true,\n          });\n        } else {\n          errors = {\n            passwordMatch: true,\n          };\n        }\n        return errors;\n      } else {\n        let errors = control?.errors;\n        if (errors && typeof errors === 'object') {\n          if (errors['passwordMatch']) delete errors['passwordMatch'];\n        }\n        return control.errors;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Photo.html":{"url":"interfaces/Photo.html","title":"interface - Photo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url_large\n                                        \n                                \n                                \n                                        \n                                            url_medium\n                                        \n                                \n                                \n                                        \n                                            url_small\n                                        \n                                \n                                \n                                        \n                                            url_thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_large:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_medium:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_small:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PictureSelectableComponent.html":{"url":"components/PictureSelectableComponent.html","title":"component - PictureSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PictureSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PICTURE_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-picture-selectable\n            \n\n\n\n            \n                styleUrls\n                ./picture-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./picture-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _picture\n                            \n                            \n                                hasValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                picture$\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePicture\n                            \n                            \n                                close\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePicture\n                            \n                            \n                                onDeletePicture\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pictureModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of PictureSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pictureModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for managing modal windows.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePicture\n                        \n                    \n                \n            \n            \n                \nchangePicture(picture: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Changes the selected picture.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new picture value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Closes the picture modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:35\n                        \n                    \n\n\n            \n                \n                        This method is called when the component is being destroyed. It ensures\nthat any subscriptions to the BehaviorSubject for the selected picture are properly\nterminated by completing the BehaviorSubject, preventing potential memory leaks.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangePicture\n                        \n                    \n                \n            \n            \n                \nonChangePicture(event: Event, fileLoader: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Event handler for changing the picture by uploading a file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event triggering the picture change.\n\n\n                                            \n                                        \n                                        \n                                                fileLoader\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HTML input element for file uploading.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeletePicture\n                        \n                    \n                \n            \n            \n                \nonDeletePicture(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Event handler for deleting the selected picture.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event triggering the picture deletion.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating if the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _picture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        picture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._picture.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:44\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const PICTURE_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-picture-selectable',\n  templateUrl: './picture-selectable.component.html',\n  styleUrls: ['./picture-selectable.component.scss'],\n  providers: [PICTURE_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class PictureSelectableComponent implements OnInit {\n  private _picture = new BehaviorSubject('');\n  public picture$ = this._picture.asObservable();\n  isDisabled: boolean = false;\n  hasValue: boolean = false;\n\n  /**\n   * Creates an instance of PictureSelectableComponent.\n   * @param pictureModal - The ModalController for managing modal windows.\n   */\n  constructor(private pictureModal: ModalController) {}\n\n  /**\n   * This method is called when the component is being destroyed. It ensures\n   * that any subscriptions to the BehaviorSubject for the selected picture are properly\n   * terminated by completing the BehaviorSubject, preventing potential memory leaks.\n   */\n  ngOnDestroy(): void {\n    this._picture.complete();\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Writes a new value to the component.\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.hasValue = true;\n      this._picture.next(obj);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   * @param isDisabled - Boolean value indicating if the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  /**\n   * Changes the selected picture.\n   * @param picture - The new picture value.\n   */\n  changePicture(picture: string) {\n    this.hasValue = picture != '';\n    this._picture.next(picture);\n    this.propagateChange(picture);\n  }\n\n  /**\n   * Event handler for changing the picture by uploading a file.\n   * @param event - The event triggering the picture change.\n   * @param fileLoader - The HTML input element for file uploading.\n   */\n  onChangePicture(event: Event, fileLoader: HTMLInputElement) {\n    event.stopPropagation();\n    fileLoader.onchange = () => {\n      if (fileLoader.files && fileLoader.files?.length > 0) {\n        var file = fileLoader.files[0];\n        var reader = new FileReader();\n        reader.onload = () => {\n          this.changePicture(reader.result as string);\n        };\n        reader.onerror = (error) => {\n          console.log(error);\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    fileLoader.click();\n  }\n\n  /**\n   * Event handler for deleting the selected picture.\n   * @param event - The event triggering the picture deletion.\n   */\n  onDeletePicture(event: Event) {\n    event.stopPropagation();\n    this.changePicture('');\n  }\n\n  /**\n   * Closes the picture modal.\n   */\n  close() {\n    this.pictureModal?.dismiss();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n        \n    \n    \n        \n    \n  \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./picture-selectable.component.scss\n                \n                div.user-picture {\n    height: 200px;\n    width: 300px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  \n    ion-img {\n      width: 100%;\n      height: 100%;\n      align-items: center;\n      cursor: pointer;\n    }\n  \n    ion-button.picture-button {\n      margin: 0;\n      --padding-start: 0;\n      --padding-end: 0;\n  \n      .button-native {\n        padding: 0 !important;\n      }\n    }\n  }\n  \n  ion-modal.auto-height {\n    &.bottom {\n      align-items: flex-end;\n    }\n  \n    --height: auto;\n  \n    .ion-page {\n      position: relative;\n      display: block;\n      contain: content;\n  \n      .inner-content {\n        max-height: 80vh;\n        overflow: auto;\n        padding: 10px;\n      }\n    }\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PictureSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterFormComponent.html":{"url":"components/RegisterFormComponent.html","title":"component - RegisterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/register-form/register-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-form\n            \n\n\n\n            \n                styleUrls\n                ./register-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                hide\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructs the RegisterFormComponent.\nInitializes the form with form controls and validators.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder service for building the form.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/access/register-form/register-form.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/register-form/register-form.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/register-form/register-form.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Event handler for form submission.\nEmits the user registration information through the onsubmit event emitter.\nResets the form after submission.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { UserRegisterInfo } from 'src/app/core/interfaces/user-info';\nimport { EmailValidation } from 'src/app/core/validators/email';\nimport { PasswordValidation } from 'src/app/core/validators/password';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss'],\n})\nexport class RegisterFormComponent implements OnInit {\n  form: FormGroup;\n  hide = true;\n\n  @Output() onsubmit = new EventEmitter();\n\n  /**\n   * Constructs the RegisterFormComponent.\n   * Initializes the form with form controls and validators.\n   * @param {FormBuilder} formBuilder - FormBuilder service for building the form.\n   */\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group(\n      {\n        name: ['', [Validators.required]],\n        surname: ['', [Validators.required]],\n        email: ['', [Validators.required, EmailValidation.email()]],\n        username: ['', [Validators.required]],\n        password: [\n          '',\n          [Validators.required, PasswordValidation.passwordProto()],\n        ],\n        repPassword: [\n          '',\n          [Validators.required, PasswordValidation.passwordProto()],\n        ],\n      },\n      {\n        validators: [\n          PasswordValidation.passwordMatch('password', 'repPassword'),\n        ],\n      }\n    );\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for form submission.\n   * Emits the user registration information through the onsubmit event emitter.\n   * Resets the form after submission.\n   */\n  onSub() {\n    this.onsubmit.emit(this.form?.value);\n    this.form.reset({\n      name: '',\n      surname: '',\n      email: '',\n      username: '',\n      password: '',\n      repPassword: '',\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'forms.name' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.surname' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.email' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n    \n      {{ 'errors.emailError' | translate }}\n    \n  \n\n  \n    {{ 'forms.username' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.password' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n  \n  \n    {{ 'forms.repPassword' | translate }}\n    \n    \n      {{ hide ? 'visibility_off' : 'visibility' }}\n    \n    \n      {{ 'errors.repeatError' | translate }}\n    \n  \n\n  {{ \"forms.register\" | translate }}\n\n    \n\n    \n                \n                    ./register-form.component.scss\n                \n                form {\n  margin-top: 8%;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  .register--button {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n  }\n}\n\n@media (max-width: 900px) {\n  div {\n    margin-top: 30%;\n  }\n  .access__image {\n      display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'forms.name\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.surname\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.email\\' | translate }}              {{ \\'errors.valid\\' | translate }}              {{ \\'errors.emailError\\' | translate }}            {{ \\'forms.username\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.password\\' | translate }}              {{ \\'errors.valid\\' | translate }}              {{ \\'forms.repPassword\\' | translate }}              {{ hide ? \\'visibility_off\\' : \\'visibility\\' }}              {{ \\'errors.repeatError\\' | translate }}        {{ \"forms.register\" | translate }}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/settings/settings.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLang\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLanguage\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, userService: UsersService, myModal: ModalController, media: MediaService, _router: Router, auth: AuthService, translate: CustomTranslateService, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/settings/settings.page.ts:21\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserDataPage.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for Firebase operations.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService for user-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for creating and managing modals.\n\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe MediaService for media-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Router for navigating between routes.\n\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe AuthService for authentication-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The translate parameter in the constructor is of type CustomTranslateService.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                                                        \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:54\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nRetrieves the user data for the currently logged-in user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLanguage\n                        \n                    \n                \n            \n            \n                \nsetLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:71\n                        \n                    \n\n\n            \n                \n                        Method for updating user profile information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.page.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { UpdateUserComponent } from '../user-data/update-user/update-user.component';\nimport { ModalController } from '@ionic/angular';\nimport { MediaService } from 'src/app/core/services/media.service';\nimport { Router } from '@angular/router';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\nimport { ThemeService } from 'src/app/core/services/theme/theme.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  user: any | undefined;\n  currentLang: string;\n\n  /**\n   * Creates an instance of UserDataPage.\n   *\n   * @param _firebaseService - The FirebaseService for Firebase operations.\n   * @param userService - The UsersService for user-related operations.\n   * @param myModal - The ModalController for creating and managing modals.\n   * @param media - The MediaService for media-related operations.\n   * @param _router - The Router for navigating between routes.\n   * @param auth - The AuthService for authentication-related operations.\n   * @param translate The `translate` parameter in the constructor is of type `CustomTranslateService`.\n   * It is used for handling translation services within the component or service where it is injected.\n   * This service likely provides methods for translating text or messages into different languages or\n   * for managing localization in the application.\n   */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private userService: UsersService,\n    private myModal: ModalController,\n    private media: MediaService,\n    private _router: Router,\n    protected auth: AuthService,\n    private translate: CustomTranslateService,\n    private themeService: ThemeService\n  ) {\n    this.currentLang = this.translate.getCurrentLang();\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Retrieves the user data for the currently logged-in user.\n   */\n  ngOnInit() {\n    this.userService\n      .getUserById(this._firebaseService.user!.uid)\n      .subscribe((user) => {\n        if (user) {\n          this.user = user;\n        } else {\n          console.log('User not found!');\n        }\n      });\n  }\n\n  /**\n   * Method for updating user profile information.\n   *\n   * @param user - The updated user information.\n   */\n  async updateUser(user: UserInfo) {\n    const mod = await this.myModal.create({\n      component: UpdateUserComponent,\n      componentProps: {\n        userInfo: user,\n      },\n      cssClass: 'modalDesign',\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      console.log(results.data);\n      if (results?.data?.picture) {\n        if (results?.data?.picture?.substring(0, 4) == 'data') {\n          dataURLtoBlob(results.data.picture, (blob: Blob) => {\n            this.media.upload(blob).subscribe((media: number[]) => {\n              results.data.picture = media[0];\n              this.userService.updateUser(results.data);\n            });\n          });\n        } else {\n          results.data.picture = user.picture;\n          this.userService.updateUser(results.data);\n        }\n      } else {\n        results.data.picture = '';\n        this.userService.updateUser(results.data);\n      }\n    }\n  }\n\n  setLanguage(lang: string) {\n    this.translate.use(lang);\n    this.currentLang = lang;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n\n        {{(auth.user$|async)?.name}} {{(auth.user$|async)?.surname}}\n\n        {{(auth.user$|async)?.username}}\n\n        {{'forms.admin' | translate}}\n\n        {{\"data.update\" | translate}}\n       \n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./settings.page.scss\n                \n                .content {\n    width: 70%;\n    margin: 3% auto;\n\n    .languages {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        padding: 2%;\n        gap: 50px;\n\n        div {\n            display: flex;\n            justify-content: center;\n\n            img {\n                width: 40%;\n            }\n        }\n\n        .selected {\n            outline: 2px solid #0F212D;\n            border-radius: 4px;\n        }\n\n    }\n}\n\n.user {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--username {\n        margin: 0;\n    }\n\n    &--role {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n\n    &:hover {\n        background-color: #1b3e56;\n    }\n\n    &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .content {\n        width: 80%;\n    }\n\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n\n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{(auth.user$|async)?.name}} {{(auth.user$|async)?.surname}}        {{(auth.user$|async)?.username}}        {{\\'forms.admin\\' | translate}}        {{\"data.update\" | translate}}                                                                                                                     '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageModule.html":{"url":"modules/SettingsPageModule.html","title":"module - SettingsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_imports\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nSettingsPageRoutingModule\n\nSettingsPageRoutingModule\n\nSettingsPageModule -->\n\nSettingsPageRoutingModule->SettingsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\nimport { AccordionModule } from 'primeng/accordion';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    AccordionModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageRoutingModule.html":{"url":"modules/SettingsPageRoutingModule.html","title":"module - SettingsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nCategoriesInfoComponent\n\nCategoriesInfoComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCategoriesInfoComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nIncidentsCircleGraphicComponent\n\nIncidentsCircleGraphicComponent\n\nSharedModule -->\n\nIncidentsCircleGraphicComponent->SharedModule\n\n\n\n\n\nIncidentsInfoComponent\n\nIncidentsInfoComponent\n\nSharedModule -->\n\nIncidentsInfoComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nUserCircleGraphicComponent\n\nUserCircleGraphicComponent\n\nSharedModule -->\n\nUserCircleGraphicComponent->SharedModule\n\n\n\n\n\nUsersInfoComponent\n\nUsersInfoComponent\n\nSharedModule -->\n\nUsersInfoComponent->SharedModule\n\n\n\n\n\nCategoriesInfoComponent \n\nCategoriesInfoComponent \n\nCategoriesInfoComponent  -->\n\nSharedModule->CategoriesInfoComponent \n\n\n\n\n\nConfirmDialogComponent \n\nConfirmDialogComponent \n\nConfirmDialogComponent  -->\n\nSharedModule->ConfirmDialogComponent \n\n\n\n\n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent  -->\n\nSharedModule->IncidentsCircleGraphicComponent \n\n\n\n\n\nIncidentsInfoComponent \n\nIncidentsInfoComponent \n\nIncidentsInfoComponent  -->\n\nSharedModule->IncidentsInfoComponent \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent  -->\n\nSharedModule->UserCircleGraphicComponent \n\n\n\n\n\nUsersInfoComponent \n\nUsersInfoComponent \n\nUsersInfoComponent  -->\n\nSharedModule->UsersInfoComponent \n\n\n\n\n\nShortenTextPipe\n\nShortenTextPipe\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategoriesInfoComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            IncidentsCircleGraphicComponent\n                        \n                        \n                            IncidentsInfoComponent\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            UserCircleGraphicComponent\n                        \n                        \n                            UsersInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ShortenTextPipe\n                        \n                        \n                            ShortenTextPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoriesInfoComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            IncidentsCircleGraphicComponent\n                        \n                        \n                            IncidentsInfoComponent\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            UserCircleGraphicComponent\n                        \n                        \n                            UsersInfoComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { IonicModule } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from '../core/translate/translate';\nimport { UsersInfoComponent } from './components/users-info/users-info.component';\nimport { ShortenTextPipe } from '../core/pipes/shorten-text.pipe';\nimport { PictureSelectableComponent } from './components/picture-selectable/picture-selectable.component';\nimport { IncidentsInfoComponent } from './components/incidents-info/incidents-info.component';\nimport { CategoriesInfoComponent } from './components/categories-info/categories-info.component';\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ChartModule } from 'primeng/chart';\nimport { UserCircleGraphicComponent } from './components/user-circle-graphic/user-circle-graphic.component';\nimport { IncidentsCircleGraphicComponent } from './components/incidents-circle-graphic/incidents-circle-graphic.component';\n\n\n@NgModule({\n  declarations: [\n    UsersInfoComponent,\n    PictureSelectableComponent,\n    IncidentsInfoComponent,\n    CategoriesInfoComponent,\n    ConfirmDialogComponent,\n    UserCircleGraphicComponent,\n    IncidentsCircleGraphicComponent\n  ],\n  imports: [\n    CommonModule,\n    ChartModule,\n    IonicModule.forRoot(), \n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ShortenTextPipe,\n    ShortenTextPipe,\n    MatDialogModule,\n    MatButtonModule\n  ],\n  exports: [\n    UsersInfoComponent,\n    PictureSelectableComponent,\n    IncidentsInfoComponent,\n    CategoriesInfoComponent,\n    ConfirmDialogComponent,\n    UserCircleGraphicComponent,\n    IncidentsCircleGraphicComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShortenTextPipe.html":{"url":"pipes/ShortenTextPipe.html","title":"pipe - ShortenTextPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ShortenTextPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/shorten-text.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        shortenText\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | undefined, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/shorten-text.pipe.ts:23\n                        \n                    \n\n\n            \n                \n                        The function \"transform\" takes a string value and limits its length to a specified number, adding\nellipsis if necessary.\ntransformed.\nreturned by the transform function. If the length of the value string is greater than the\nlimit, the function will truncate the string to the limit length and append a period ('.') at\nthe end\ndefault value of 15. It checks if the length of the value is greater than the limit. If it is,\nit returns a substring of the value up to the limit followed by a period. If the length of the\nvalue is not greater than the\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The value parameter is a string that represents the input value that will be\ntransformed.\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    6\n                                            \n\n                                            \n                                                    The limit parameter specifies the maximum length of the string that will be\nreturned by the transform function. If the length of the value string is greater than the\nlimit, the function will truncate the string to the limit length and append a period ('.') at\nthe end\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                The function transform takes a string value and an optional number limit with a\ndefault value of 15. It checks if the length of the value is greater than the limit. If it is,\nit returns a substring of the value up to the limit followed by a period. If the length of the\nvalue is not greater than the\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'shortenText',\n  standalone: true,\n})\nexport class ShortenTextPipe implements PipeTransform {\n  /**\n   * The function \"transform\" takes a string value and limits its length to a specified number, adding\n   * ellipsis if necessary.\n   *\n   * @param value The `value` parameter is a string that represents the input value that will be\n   * transformed.\n   * @param limit The `limit` parameter specifies the maximum length of the string that will be\n   * returned by the `transform` function. If the length of the `value` string is greater than the\n   * `limit`, the function will truncate the string to the `limit` length and append a period ('.') at\n   * the end\n   * @return The function `transform` takes a string `value` and an optional number `limit` with a\n   * default value of 15. It checks if the length of the `value` is greater than the `limit`. If it is,\n   * it returns a substring of the `value` up to the `limit` followed by a period. If the length of the\n   * `value` is not greater than the\n   */\n  transform(value: string | undefined, limit: number = 6): string | undefined {\n    return value!.length > limit ? value!.substring(0, limit) + '...' : value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/theme/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                renderer\n                            \n                            \n                                    Private\n                                themeLink\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                switchTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/theme/theme.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                    RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        switchTheme\n                        \n                    \n                \n            \n            \n                \nswitchTheme(theme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/theme/theme.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/theme/theme.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        themeLink\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLLinkElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/theme/theme.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private renderer: Renderer2;\n  private themeLink: HTMLLinkElement;\n\n  constructor(\n    private rendererFactory: RendererFactory2\n  ) {\n    this.renderer = this.rendererFactory.createRenderer(null, null);\n\n    const linkElement = document.getElementById('app-theme') as HTMLLinkElement;\n    if (linkElement) {\n      this.themeLink = linkElement;\n    } else {\n      this.themeLink = this.renderer.createElement('link');\n      this.themeLink.id = 'app-theme';\n      this.themeLink.rel = 'stylesheet';\n      this.themeLink.type = 'text/css';\n      this.renderer.appendChild(document.head, this.themeLink);\n      console.log(this.themeLink);\n    }\n  }\n\n  switchTheme(theme: string) {\n    this.themeLink.href = `${theme}.css`;\n    console.log(this.themeLink.href);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateUserComponent.html":{"url":"components/UpdateUserComponent.html","title":"component - UpdateUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-data/update-user/update-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-user\n            \n\n\n\n            \n                styleUrls\n                ./update-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                showRoleField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userInfo\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of UpdateUserComponent.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FormBuilder service for building form instances.\n\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for managing modal windows.\n\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userInfo\n                    \n                \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/user-data/update-user/update-user.component.ts:21\n                            \n                        \n                \n                    \n                        Setter method for setting user information to be edited.\nPopulates the form fields with the provided user information.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Handler for cancel action.\nDismisses the modal without passing any data to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Handler for form submission.\nDismisses the modal and passes the updated user information to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRoleField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userInfo\n                    \n                \n\n\n                \n                    \n                        setuserInfo(user: UserInfo)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/user-data/update-user/update-user.component.ts:21\n                                \n                            \n                    \n                        \n                                Setter method for setting user information to be edited.\nPopulates the form fields with the provided user information.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            user\n                                                    \n                                                            \n                                                                            UserInfo\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe user information to be edited.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.scss'],\n})\nexport class UpdateUserComponent implements OnInit {\n  form: FormGroup;\n  showRoleField: boolean = true;\n\n  /**\n   * Setter method for setting user information to be edited.\n   * Populates the form fields with the provided user information.\n   * @param user - The user information to be edited.\n   */\n  @Input() set userInfo(user: UserInfo) {\n    if (user) {\n      this.form.controls['picture'].setValue(user.picture);\n      this.form.controls['name'].setValue(user.name);\n      this.form.controls['surname'].setValue(user.surname);\n      this.form.controls['username'].setValue(user.username);\n      this.form.controls['uuid'].setValue(user.uuid);\n      this.form.controls['role'].setValue(user.role);\n\n      this.auth.user$.subscribe(currentUser => {\n        if (currentUser?.uuid === user.uuid) {\n          this.showRoleField = false;\n        }\n      });\n    }\n  }\n\n  /**\n   * Creates an instance of UpdateUserComponent.\n   * @param formBuilder - The FormBuilder service for building form instances.\n   * @param modal - The ModalController for managing modal windows.\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private auth: AuthService\n  ) {\n    this.form = this.formBuilder.group({\n      picture: ['', [Validators.required]],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      username: ['', [Validators.required]],\n      role: ['', [Validators.required]],\n      uuid: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Handler for form submission.\n   * Dismisses the modal and passes the updated user information to the parent component.\n   */\n  onSub() {\n    if (!this.showRoleField && this.form) {\n      this?.form?.get('role')?.setValue('admin');\n    }\n    this.modal.dismiss(this.form.value);\n  }\n\n  /**\n   * Handler for cancel action.\n   * Dismisses the modal without passing any data to the parent component.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n    \n      {{'forms.update' | translate}}\n    \n  \n\n\n\n  \n      \n\n    \n      \n        {{ 'forms.name' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n    \n      \n        {{ 'forms.surname' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      \n        {{ 'forms.username' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      \n        {{'forms.role' | translate}}\n        \n          {{'forms.admin' | translate}}\n          {{'forms.user' | translate}}\n        \n      \n\n      {{'forms.update' | translate}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./update-user.component.scss\n                \n                ion-icon {\n  color: #0F212D;\n}\n.form {\n  display: flex;\n  flex-direction: column;\n  padding: 2%;\n\n\n  button {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\\'forms.update\\' | translate}}                                {{ \\'forms.name\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                                {{ \\'forms.surname\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                            {{ \\'forms.username\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                            {{\\'forms.role\\' | translate}}                  {{\\'forms.admin\\' | translate}}          {{\\'forms.user\\' | translate}}                    {{\\'forms.update\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCircleGraphicComponent.html":{"url":"components/UserCircleGraphicComponent.html","title":"component - UserCircleGraphicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserCircleGraphicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-circle-graphic\n            \n\n\n\n            \n                styleUrls\n                ./user-circle-graphic.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-circle-graphic.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:14\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Initializes the component and fetches user data from Firebase to generate a chart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { forkJoin, map, switchMap } from 'rxjs';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-user-circle-graphic',\n  templateUrl: './user-circle-graphic.component.html',\n  styleUrls: ['./user-circle-graphic.component.scss'],\n})\nexport class UserCircleGraphicComponent  implements OnInit {\n\n  data: any;\n  options: any;\n\n  /**\n  * Constructs a component constructor function.\n  * \n  * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n  * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n  */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private translate: CustomTranslateService\n  ) { }\n\n  /**\n  * Initializes the component and fetches user data from Firebase to generate a chart.\n  */\n  ngOnInit() {\n    this._firebaseService.users$.pipe(\n      map(users => {\n        const rolesCount = users.reduce((acc: any, user: any) => {\n          acc[user.role] = (acc[user.role] || 0) + 1;\n          return acc;\n        }, {});\n        const roles = Object.keys(rolesCount);\n        return { roles, rolesCount };\n      }),\n      switchMap(({ roles, rolesCount }) => {\n        return forkJoin(\n          roles.map(role => this.translate.get(`forms.${role}`))\n        ).pipe(\n          map(translations => ({\n            labels: translations,\n            datasets: [{\n              data: roles.map(role => rolesCount[role]),\n              backgroundColor: ['#42A5F5', '#66BB6A'],\n              hoverBackgroundColor: ['#64B5F6', '#81C784']\n            }]\n          }))\n        );\n      })\n    ).subscribe(chartData => {\n      this.data = chartData;\n      this.options = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#495057'\n            }\n          }\n        }\n      };\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./user-circle-graphic.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserCircleGraphicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCredentials.html":{"url":"interfaces/UserCredentials.html","title":"interface - UserCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDataPage.html":{"url":"components/UserDataPage.html","title":"component - UserDataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserDataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-data/user-data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-data\n            \n\n\n\n            \n                styleUrls\n                ./user-data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, userService: UsersService, _router: Router, myModal: ModalController, media: MediaService, _firebaseSvc: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-data/user-data.page.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserDataPage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ActivatedRoute service to get URL parameters.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService to manage user data.\n\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Router service for page navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe modal controller to display and control modal windows.\n\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe MediaService for handling media operations.\n\n\n                                                        \n                                                \n                                                \n                                                        _firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/user-data.page.ts:44\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nSubscribes to changes in URL parameters to get the user ID\nand load corresponding user data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/user-data.page.ts:65\n                        \n                    \n\n\n            \n                \n                        Method to update user data.\nOpens a modal for editing user data and updates the data\non the server once the editing is confirmed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/user-data.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/user-data.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { User } from 'firebase/auth';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { MediaService } from 'src/app/core/services/media.service';\nimport { UpdateUserComponent } from './update-user/update-user.component';\n\n@Component({\n  selector: 'app-user-data',\n  templateUrl: './user-data.page.html',\n  styleUrls: ['./user-data.page.scss'],\n})\nexport class UserDataPage implements OnInit {\n  userId: string | null = '';\n  user: any | undefined;\n\n  /**\n   * Creates an instance of UserDataPage.\n   * @param route - The ActivatedRoute service to get URL parameters.\n   * @param userService - The UsersService to manage user data.\n   * @param _router - The Router service for page navigation.\n   * @param myModal - The modal controller to display and control modal windows.\n   * @param media - The MediaService for handling media operations.\n   * @param _firebaseSvc - The FirebaseService for interacting with Firebase.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UsersService,\n    private _router: Router,\n    private myModal: ModalController,\n    private media: MediaService,\n    private _firebaseSvc: FirebaseService\n  ) {}\n\n  /**\n   * Method executed when the component is initialized.\n   * Subscribes to changes in URL parameters to get the user ID\n   * and load corresponding user data.\n   */\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.userId = params.get('id');\n      if (this.userId) {\n        this.userService.getUserById(this.userId).subscribe((user) => {\n          if (user) {\n            this.user = user;\n          } else {\n            console.log('User not found!');\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Method to update user data.\n   * Opens a modal for editing user data and updates the data\n   * on the server once the editing is confirmed.\n   * @param user - The updated user information.\n   */\n  async updateUser(user: UserInfo) {\n    const mod = await this.myModal.create({\n      component: UpdateUserComponent,\n      componentProps: {\n        userInfo: user,\n      },\n      cssClass: 'modalDesign',\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      console.log(results.data);\n      if (results?.data?.picture) {\n        if (results?.data?.picture?.substring(0, 4) == 'data') {\n          dataURLtoBlob(results.data.picture, (blob: Blob) => {\n            this.media.upload(blob).subscribe((media: number[]) => {\n              results.data.picture = media[0];\n              this.userService.updateUser(results.data);\n            });\n          });\n          this._router.navigate(['/data']);\n        } else {\n          results.data.picture = user.picture;\n          this.userService.updateUser(results.data);\n          this._router.navigate(['/data']);\n        }\n      } else {\n        results.data.picture = '';\n        this.userService.updateUser(results.data);\n        this._router.navigate(['/data']);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n\n        {{user.name}} {{user.surname}}\n\n        {{user.username}}\n\n        {{'forms.user' | translate}}\n        {{'forms.admin' | translate}}\n\n        {{\"data.update\" | translate}}\n       \n    \n  \n\n    \n\n    \n                \n                    ./user-data.page.scss\n                \n                .user {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--username {\n        margin: 0;\n    }\n\n    &--role {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n    \n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{user.name}} {{user.surname}}        {{user.username}}        {{\\'forms.user\\' | translate}}        {{\\'forms.admin\\' | translate}}        {{\"data.update\" | translate}}             '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserDataPageModule.html":{"url":"modules/UserDataPageModule.html","title":"module - UserDataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    UserDataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserDataPageModule\n\n\n\ncluster_UserDataPageModule_imports\n\n\n\ncluster_UserDataPageModule_declarations\n\n\n\n\nUpdateUserComponent\n\nUpdateUserComponent\n\n\n\nUserDataPageModule\n\nUserDataPageModule\n\nUserDataPageModule -->\n\nUpdateUserComponent->UserDataPageModule\n\n\n\n\n\nUserDataPage\n\nUserDataPage\n\nUserDataPageModule -->\n\nUserDataPage->UserDataPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUserDataPageModule -->\n\nSharedModule->UserDataPageModule\n\n\n\n\n\nUserDataPageRoutingModule\n\nUserDataPageRoutingModule\n\nUserDataPageModule -->\n\nUserDataPageRoutingModule->UserDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/user-data/user-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UpdateUserComponent\n                        \n                        \n                            UserDataPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UserDataPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserDataPageRoutingModule } from './user-data-routing.module';\n\nimport { UserDataPage } from './user-data.page';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    // Reactive form\n    ReactiveFormsModule,\n    IonicModule,\n    UserDataPageRoutingModule, \n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    SharedModule\n  ],\n  declarations: [\n    UserDataPage,\n    UpdateUserComponent\n  ]\n})\nexport class UserDataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserDataPageRoutingModule.html":{"url":"modules/UserDataPageRoutingModule.html","title":"module - UserDataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserDataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/user-data/user-data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserDataPage } from './user-data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserDataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserDataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRegisterInfo.html":{"url":"interfaces/UserRegisterInfo.html","title":"interface - UserRegisterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRegisterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserSelectableComponent.html":{"url":"components/UserSelectableComponent.html","title":"component - UserSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/user-selectable/user-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                USER_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-user-selectable\n            \n\n\n\n            \n                styleUrls\n                ./user-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                            \n                                users\n                            \n                            \n                                userSelected\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                onUserClicked\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectUser\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                resetSignal\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:46\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService for fetching user data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:30\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:41\n                            \n                        \n                \n                    \n                        Setter method for setting the selected user.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:177\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Clears the selected user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Filters users based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter users.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Loads users from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked(popover: IonPopover, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a user from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectUser(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Selects a user by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the user to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:56\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:46\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:55\n                        \n                    \n\n            \n                \n                    - The UsersService for fetching user data.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n\n                \n                    \n                        setuser(_user: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:41\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected user.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _user\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected user.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  SimpleChanges,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const USER_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-user-selectable',\n  templateUrl: './user-selectable.component.html',\n  styleUrls: ['./user-selectable.component.scss'],\n  providers: [USER_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class UserSelectableComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  userSelected: any | undefined;\n  disabled: boolean = true;\n  users: any[] = [];\n\n  /**\n   * Setter method for setting the selected user.\n   *\n   * @param _user - The selected user.\n   */\n  @Input() set user(_user: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of UserSelectableComponent.\n   *\n   * @param userService - The UsersService for fetching user data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public userService: UsersService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads users from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.users$.subscribe({\n        next: (users) => {\n          this.users = users;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a user by its ID.\n   *\n   * @param id - The ID of the user to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectUser(id: string | undefined, propagate: boolean = false) {\n    if (id) {\n      await this.userService.getUserById(id).subscribe({\n        next: (user) => {\n          this.userSelected = user;\n        },\n      });\n    } else this.userSelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.userSelected.uuid);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectUser(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected user.\n   */\n  clearSelection() {\n    this.userSelected = undefined;\n  }\n\n  /**\n   * Filters users based on a search value.\n   *\n   * @param value - The search value to filter users.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering users.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a user from the list.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   * @param user - The selected user.\n   */\n  onUserClicked(popover: IonPopover, user: any) {\n    this.selectUser(user.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected user.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectUser(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n    {{userSelected.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./user-selectable.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}    {{userSelected.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserSelectableMobileComponent.html":{"url":"components/UserSelectableMobileComponent.html","title":"component - UserSelectableMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserSelectableMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                USER_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-user-selectable-mobile\n            \n\n\n\n            \n                styleUrls\n                ./user-selectable-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-selectable-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                            \n                                users\n                            \n                            \n                                userSelected\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                onUserClicked\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectUser\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                resetSignal\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService for fetching user data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:23\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:34\n                            \n                        \n                \n                    \n                        Setter method for setting the selected user.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Clears the selected user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:180\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Filters users based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter users.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Loads users from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked(popover: IonPopover, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a user from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectUser(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Selects a user by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the user to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:49\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:39\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:48\n                        \n                    \n\n            \n                \n                    - The UsersService for fetching user data.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n\n                \n                    \n                        setuser(_user: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:34\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected user.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _user\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected user.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const USER_SELECTABLE_MOBILE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableMobileComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-user-selectable-mobile',\n  templateUrl: './user-selectable-mobile.component.html',\n  styleUrls: ['./user-selectable-mobile.component.scss'],\n  providers: [USER_SELECTABLE_MOBILE_VALUE_ACCESSOR]\n})\nexport class UserSelectableMobileComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  userSelected: any | undefined;\n  disabled: boolean = true;\n  users: any[] = [];\n\n  /**\n   * Setter method for setting the selected user.\n   *\n   * @param _user - The selected user.\n   */\n  @Input() set user(_user: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of UserSelectableComponent.\n   *\n   * @param userService - The UsersService for fetching user data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public userService: UsersService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads users from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.users$.subscribe({\n        next: (users) => {\n          this.users = users;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a user by its ID.\n   *\n   * @param id - The ID of the user to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectUser(id: string | undefined, propagate: boolean = false) {\n    if (id) {\n      await this.userService.getUserById(id).subscribe({\n        next: (user) => {\n          this.userSelected = user;\n        },\n      });\n    } else this.userSelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.userSelected.uuid);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectUser(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected user.\n   */\n  clearSelection() {\n    this.userSelected = undefined;\n  }\n\n  /**\n   * Filters users based on a search value.\n   *\n   * @param value - The search value to filter users.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering users.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a user from the list.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   * @param user - The selected user.\n   */\n  onUserClicked(popover: IonPopover, user: any) {\n    this.selectUser(user.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected user.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectUser(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n    {{userSelected.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n\n    \n\n    \n                \n                    ./user-selectable-mobile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}    {{userSelected.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserSelectableMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersInfoComponent.html":{"url":"components/UsersInfoComponent.html","title":"component - UsersInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/users-info/users-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-info\n            \n\n\n\n            \n                styleUrls\n                ./users-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScreenSmall\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                dataUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, auth: AuthService, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:25\n                            \n                        \n\n                \n                    \n                            The constructor function takes a Router object as a parameter and assigns it to a private property\nin a TypeScript class.\ninjection that allows the class to navigate between different components in the Angular\napplication.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is of type Router. It is a dependency\ninjection that allows the class to navigate between different components in the Angular\napplication.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        users\n                    \n                \n                \n                    \n                        Type :         UserInfo[] | null | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/users-info/users-info.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onUserClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/users-info/users-info.component.ts:25\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataUser\n                        \n                    \n                \n            \n            \n                \ndataUser(userId: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Emits an event when a user is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string | undefined - the ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nRetrieves and filters user data from Firebase and the authentication service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\n@Component({\n  selector: 'app-users-info',\n  templateUrl: './users-info.component.html',\n  styleUrls: ['./users-info.component.scss'],\n})\nexport class UsersInfoComponent implements OnInit {\n  users$: Observable | null = null;\n  isScreenSmall: boolean = false;\n\n  @Input() users: UserInfo[] | null | undefined;\n  @Output() onUserClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * The constructor function takes a Router object as a parameter and assigns it to a private property\n   * in a TypeScript class.\n   *\n   * @param router The `router` parameter in the constructor is of type `Router`. It is a dependency\n   * injection that allows the class to navigate between different components in the Angular\n   * application.\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   * @param firebaseService - The FirebaseService for interacting with Firebase.\n   */\n  constructor(\n    private router: Router,\n    protected auth: AuthService,\n    protected firebaseService: FirebaseService\n\n  ) {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  /**\n * Method executed when the component is initialized.\n * Retrieves and filters user data from Firebase and the authentication service.\n */\n  ngOnInit() {\n    this.users$ = combineLatest([\n      this.firebaseService.users$,\n      this.auth.user$\n    ]).pipe(\n      map(([users, currentUser]) =>\n        users.filter(user => user.uuid !== currentUser?.uuid)\n      )\n    );\n  }\n\n  /**\n   * Emits an event when a user is clicked.\n   *\n   * @param userId string | undefined - the ID of the user.\n   */\n  dataUser(userId: string | undefined) {\n    this.onUserClicked.emit(userId);\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n  \n\n  \n    {{'forms.name' | translate }}\n    {{'forms.surname' | translate }}\n    {{'forms.username' | translate }}\n    {{'forms.role' | translate }}\n  \n\n  \n    {{ user.name | shortenText }}\n    {{ user.name }}\n\n    {{ user.surname | shortenText }}\n    {{ user.surname }}\n\n    {{ user.username | shortenText }}\n    {{ user.username }}\n\n    {{'forms.user' | translate}}\n    {{'forms.user' | translate | shortenText }}\n\n    {{'forms.admin' | translate}}\n    {{'forms.admin' | translate | shortenText }}\n\n  \n\n    \n\n    \n                \n                    ./users-info.component.scss\n                \n                ion-list {\n    width: 80%;\n    margin: 3% auto;\n\n    ion-list-header {\n        --background: #0F212D;\n        --color: #fff;\n    }\n\n    .subheader {\n        ion-label {\n          font-weight: bold;\n        }\n    }\n\n    .data {\n        cursor: pointer;\n        position: relative;\n        border-top: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n\n        &:hover {\n            border-color: #0F212D;\n        }\n    }\n}\n\n@media (max-width: 900px) {\n    .subheader {\n        ion-label {\n          margin-left: 0.2%;\n        }\n    }\n}\n\n@media (max-width: 700px) {\n    ion-list {\n        width: 100%;\n        margin-top: 5%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}        {{\\'forms.name\\' | translate }}    {{\\'forms.surname\\' | translate }}    {{\\'forms.username\\' | translate }}    {{\\'forms.role\\' | translate }}        {{ user.name | shortenText }}    {{ user.name }}    {{ user.surname | shortenText }}    {{ user.surname }}    {{ user.username | shortenText }}    {{ user.username }}    {{\\'forms.user\\' | translate}}    {{\\'forms.user\\' | translate | shortenText }}    {{\\'forms.admin\\' | translate}}    {{\\'forms.admin\\' | translate | shortenText }}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserById\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor function initializes a private firebaseService property using dependency\ninjection.\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The firebaseService parameter is an instance of the FirebaseService\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:32\n                        \n                    \n\n\n            \n                \n                        The function getUserById retrieves user information by user ID from a Firebase service and\nreturns it as an observable stream.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The userId parameter is a string that represents the unique identifier of a user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable of type UserInfo or undefined is being returned.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(data: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:46\n                        \n                    \n\n\n            \n                \n                        The updateUser function in TypeScript updates user information using an authentication service.\ncontains information about the user that needs to be updated, such as their name, email, or other\nprofile details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data parameter in the updateUser function is of type UserInfo. It likely\ncontains information about the user that needs to be updated, such as their name, email, or other\nprofile details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserInfo } from '../../interfaces/user-info';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { take, map, Observable } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  /**\n   * The constructor function initializes a private firebaseService property using dependency\n   * injection.\n   *\n   * @param firebaseService The `firebaseService` parameter is an instance of the `FirebaseService`\n   * class that is being injected into the constructor using Angular's dependency injection mechanism.\n   * This allows the component or service to have access to the functionality provided by the\n   * `FirebaseService` class.\n   */\n  constructor(\n    private firebaseService: FirebaseService,\n    private auth: AuthService\n  ) {}\n\n  /**\n   * The function `getUserById` retrieves user information by user ID from a Firebase service and\n   * returns it as an observable stream.\n   *\n   * @param userId The `userId` parameter is a string that represents the unique identifier of a user.\n   * @return An Observable of type UserInfo or undefined is being returned.\n   */\n  getUserById(userId: string): Observable {\n    return this.firebaseService.users$.pipe(\n      take(1),\n      map((users) => users.find((user) => user.uuid === userId))\n    );\n  }\n\n  /**\n   * The `updateUser` function in TypeScript updates user information using an authentication service.\n   *\n   * @param data The `data` parameter in the `updateUser` function is of type `UserInfo`. It likely\n   * contains information about the user that needs to be updated, such as their name, email, or other\n   * profile details.\n   */\n  updateUser(data: UserInfo) {\n    this.auth.updateUser(data).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            AuthServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            httpProviderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            MediaServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/helpers/blob.ts\n            \n            function\n            dataURLtoBlob\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/category-info.ts\n            \n            interface\n            CategoryInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            PaginatedData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            Photo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/incidents-info.ts\n            \n            interface\n            incidentInfo\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserCredentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserRegisterInfo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/pipes/capitalize-initial.pipe.ts\n            \n            pipe\n            CapitalizeInitialPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/shorten-text.pipe.ts\n            \n            pipe\n            ShortenTextPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/core/services/api/incidents.service.ts\n            \n            injectable\n            IncidentsService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/services/api/users.service.ts\n            \n            injectable\n            UsersService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/core/services/filter/filter.service.ts\n            \n            injectable\n            FilterService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-auth.service.ts\n            \n            class\n            FirebaseAuthService\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-data.service.ts\n            \n            class\n            FirebaseDataService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-media.service.ts\n            \n            class\n            FirebaseMediaService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-media.service.ts\n            \n            interface\n            Media\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            injectable\n            FirebaseService\n            \n                59 %\n                (22/37)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseDocument\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseStorageFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseUserCredential\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client-web.provider.ts\n            \n            injectable\n            HttpClientWebProvider\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client.provider.ts\n            \n            injectable\n            HttpClientProvider\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/services/media.service.ts\n            \n            injectable\n            MediaService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/services/theme/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/translate/local.service.ts\n            \n            injectable\n            LocalService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/services/translate/translate.service.ts\n            \n            injectable\n            CustomTranslateService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/core/translate/translate.ts\n            \n            function\n            createTranslateLoader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/email.ts\n            \n            class\n            EmailValidation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/password.ts\n            \n            class\n            PasswordValidation\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/access/access.page.ts\n            \n            component\n            AccessPage\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/pages/access/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/pages/access/register-form/register-form.component.ts\n            \n            component\n            RegisterFormComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/pages/data/data.page.ts\n            \n            component\n            DataPage\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/pages/data/modal-category/modal-category.component.ts\n            \n            component\n            ModalCategoryComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n            \n            component\n            CategorySelectableMobileComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n            \n            variable\n            CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable/category-selectable.component.ts\n            \n            component\n            CategorySelectableComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable/category-selectable.component.ts\n            \n            variable\n            CATEGORY_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/filter-mobile/filter-mobile.component.ts\n            \n            component\n            FilterMobileComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/pages/home/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/pages/home/item-category/item-category.component.ts\n            \n            component\n            ItemCategoryComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/pages/home/item-user/item-user.component.ts\n            \n            component\n            ItemUserComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n            \n            component\n            UserSelectableMobileComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n            \n            variable\n            USER_SELECTABLE_MOBILE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable/user-selectable.component.ts\n            \n            component\n            UserSelectableComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable/user-selectable.component.ts\n            \n            variable\n            USER_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/incident-data/incident-data.page.ts\n            \n            component\n            IncidentDataPage\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/pages/settings/settings.page.ts\n            \n            component\n            SettingsPage\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/pages/user-data/update-user/update-user.component.ts\n            \n            component\n            UpdateUserComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/pages/user-data/user-data.page.ts\n            \n            component\n            UserDataPage\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/categories-info/categories-info.component.ts\n            \n            component\n            CategoriesInfoComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts\n            \n            component\n            IncidentsCircleGraphicComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/incidents-info/incidents-info.component.ts\n            \n            component\n            IncidentsInfoComponent\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            component\n            PictureSelectableComponent\n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            variable\n            PICTURE_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts\n            \n            component\n            UserCircleGraphicComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/users-info/users-info.component.ts\n            \n            component\n            UsersInfoComponent\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.2\n        \n            @angular/cdk : ^17.3.3\n        \n            @angular/common : ^17.0.2\n        \n            @angular/compiler : ^17.0.2\n        \n            @angular/core : ^17.0.2\n        \n            @angular/forms : ^17.0.2\n        \n            @angular/material : ^17.3.3\n        \n            @angular/platform-browser : ^17.0.2\n        \n            @angular/platform-browser-dynamic : ^17.0.2\n        \n            @angular/router : ^17.0.2\n        \n            @capacitor/android : 5.7.4\n        \n            @capacitor/app : 5.0.7\n        \n            @capacitor/core : 5.7.4\n        \n            @capacitor/haptics : ^5.0.7\n        \n            @capacitor/keyboard : 5.0.8\n        \n            @capacitor/status-bar : 5.0.7\n        \n            @fortawesome/fontawesome-svg-core : ^6.5.2\n        \n            @fortawesome/free-solid-svg-icons : ^6.5.2\n        \n            @ionic/angular : ^7.0.0\n        \n            @lottiefiles/lottie-player : ^2.0.4\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            chart.js : ^4.4.3\n        \n            firebase : ^10.10.0\n        \n            ionicons : ^7.0.0\n        \n            lottie-web : ^5.12.2\n        \n            ngx-lottie : ^11.0.2\n        \n            papaparse : ^5.4.1\n        \n            primeng : ^17.13.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../translate.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../blob.ts)\n                        \n                        \n                            httpProviderFactory   (src/.../app.module.ts)\n                        \n                        \n                            MediaServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthServiceFactory\n                        \n                    \n                \n            \n            \n                \nAuthServiceFactory(backend: string, firebase: FirebaseService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpProviderFactory\n                        \n                    \n                \n            \n            \n                \nhttpProviderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MediaServiceFactory\n                        \n                    \n                \n            \n            \n                \nMediaServiceFactory(backend: string, firebase: FirebaseService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/translate/translate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n                        Function to create a loader for translation files.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nHttpClient instance used for loading translation files.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/helpers/blob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataUrl: string, callback)\n                \n            \n\n\n\n\n            \n                \n                        The function dataURLtoBlob converts a data URL to a Blob object and provides the Blob through a\ncallback function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The dataUrl parameter in the dataURLtoBlob function is a string that represents a\ndata URL. Data URLs are URLs that contain data, such as base64 encoded images or other resources,\ndirectly within the URL string.\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The callback parameter is a function that will be called once the operation is\ncompleted. It takes a Blob object as its argument. You can pass a function to the dataURLtoBlob\nfunction as the callback parameter to handle the Blob object once it is created\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/incidentInfo.html":{"url":"interfaces/incidentInfo.html","title":"interface - incidentInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  incidentInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/incidents-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categoryName\n                                        \n                                \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            resolved\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoryName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         Photo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resolved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\nimport { Photo } from \"./data\";\n\nexport interface incidentInfo {\n    checked: boolean,\n    date: Timestamp,\n    description: string,\n    image: Photo,\n    resolved: boolean,\n    title: string,\n    userId: string,\n    uuid: string,\n    categoryName: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\ncluster_AccessPageModule\n\n\n\ncluster_AccessPageModule_declarations\n\n\n\ncluster_AccessPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DataPageModule\n\n\n\ncluster_DataPageModule_declarations\n\n\n\ncluster_DataPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_IncidentDataPageModule\n\n\n\ncluster_IncidentDataPageModule_declarations\n\n\n\ncluster_IncidentDataPageModule_imports\n\n\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\ncluster_SettingsPageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_UserDataPageModule\n\n\n\ncluster_UserDataPageModule_declarations\n\n\n\ncluster_UserDataPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nAccessPage\n\nAccessPage\n\n\n\nAccessPageModule\n\nAccessPageModule\n\nAccessPageModule -->\n\nAccessPage->AccessPageModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAccessPageModule -->\n\nLoginFormComponent->AccessPageModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAccessPageModule -->\n\nRegisterFormComponent->AccessPageModule\n\n\n\n\n\nAccessPageRoutingModule\n\nAccessPageRoutingModule\n\nAccessPageModule -->\n\nAccessPageRoutingModule->AccessPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAccessPageModule -->\n\nSharedModule->AccessPageModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDataPageModule\n\nDataPageModule\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\nCategoriesInfoComponent \n\nCategoriesInfoComponent \n\nCategoriesInfoComponent  -->\n\nSharedModule->CategoriesInfoComponent \n\n\n\n\n\nConfirmDialogComponent \n\nConfirmDialogComponent \n\nConfirmDialogComponent  -->\n\nSharedModule->ConfirmDialogComponent \n\n\n\n\n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent  -->\n\nSharedModule->IncidentsCircleGraphicComponent \n\n\n\n\n\nIncidentsInfoComponent \n\nIncidentsInfoComponent \n\nIncidentsInfoComponent  -->\n\nSharedModule->IncidentsInfoComponent \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent  -->\n\nSharedModule->UserCircleGraphicComponent \n\n\n\n\n\nUsersInfoComponent \n\nUsersInfoComponent \n\nUsersInfoComponent  -->\n\nSharedModule->UsersInfoComponent \n\n\n\n\n\nUserDataPageModule\n\nUserDataPageModule\n\nUserDataPageModule -->\n\nSharedModule->UserDataPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCapitalizeInitialPipe\n\nCapitalizeInitialPipe\n\nAppModule -->\n\nCapitalizeInitialPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDataPage\n\nDataPage\n\nDataPageModule -->\n\nDataPage->DataPageModule\n\n\n\n\n\nModalCategoryComponent\n\nModalCategoryComponent\n\nDataPageModule -->\n\nModalCategoryComponent->DataPageModule\n\n\n\n\n\nDataPageRoutingModule\n\nDataPageRoutingModule\n\nDataPageModule -->\n\nDataPageRoutingModule->DataPageModule\n\n\n\n\n\nCategorySelectableComponent\n\nCategorySelectableComponent\n\nHomePageModule -->\n\nCategorySelectableComponent->HomePageModule\n\n\n\n\n\nCategorySelectableMobileComponent\n\nCategorySelectableMobileComponent\n\nHomePageModule -->\n\nCategorySelectableMobileComponent->HomePageModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nHomePageModule -->\n\nFilterComponent->HomePageModule\n\n\n\n\n\nFilterMobileComponent\n\nFilterMobileComponent\n\nHomePageModule -->\n\nFilterMobileComponent->HomePageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nItemCategoryComponent\n\nItemCategoryComponent\n\nHomePageModule -->\n\nItemCategoryComponent->HomePageModule\n\n\n\n\n\nItemUserComponent\n\nItemUserComponent\n\nHomePageModule -->\n\nItemUserComponent->HomePageModule\n\n\n\n\n\nUserSelectableComponent\n\nUserSelectableComponent\n\nHomePageModule -->\n\nUserSelectableComponent->HomePageModule\n\n\n\n\n\nUserSelectableMobileComponent\n\nUserSelectableMobileComponent\n\nHomePageModule -->\n\nUserSelectableMobileComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nIncidentDataPage\n\nIncidentDataPage\n\n\n\nIncidentDataPageModule\n\nIncidentDataPageModule\n\nIncidentDataPageModule -->\n\nIncidentDataPage->IncidentDataPageModule\n\n\n\n\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageModule -->\n\nIncidentDataPageRoutingModule->IncidentDataPageModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nSettingsPageRoutingModule\n\nSettingsPageRoutingModule\n\nSettingsPageModule -->\n\nSettingsPageRoutingModule->SettingsPageModule\n\n\n\n\n\nCategoriesInfoComponent\n\nCategoriesInfoComponent\n\nSharedModule -->\n\nCategoriesInfoComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nIncidentsCircleGraphicComponent\n\nIncidentsCircleGraphicComponent\n\nSharedModule -->\n\nIncidentsCircleGraphicComponent->SharedModule\n\n\n\n\n\nIncidentsInfoComponent\n\nIncidentsInfoComponent\n\nSharedModule -->\n\nIncidentsInfoComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nUserCircleGraphicComponent\n\nUserCircleGraphicComponent\n\nSharedModule -->\n\nUserCircleGraphicComponent->SharedModule\n\n\n\n\n\nUsersInfoComponent\n\nUsersInfoComponent\n\nSharedModule -->\n\nUsersInfoComponent->SharedModule\n\n\n\n\n\nShortenTextPipe\n\nShortenTextPipe\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\n\n\nUpdateUserComponent\n\nUpdateUserComponent\n\nUserDataPageModule -->\n\nUpdateUserComponent->UserDataPageModule\n\n\n\n\n\nUserDataPage\n\nUserDataPage\n\nUserDataPageModule -->\n\nUserDataPage->UserDataPageModule\n\n\n\n\n\nUserDataPageRoutingModule\n\nUserDataPageRoutingModule\n\nUserDataPageModule -->\n\nUserDataPageRoutingModule->UserDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    27 Components\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        24 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccessPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccessPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IncidentDataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IncidentDataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserDataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserDataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR   (src/.../category-selectable-mobile.component.ts)\n                        \n                        \n                            CATEGORY_SELECTABLE_VALUE_ACCESSOR   (src/.../category-selectable.component.ts)\n                        \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PICTURE_SELECTABLE_VALUE_ACCESSOR   (src/.../picture-selectable.component.ts)\n                        \n                        \n                            USER_SELECTABLE_MOBILE_VALUE_ACCESSOR   (src/.../user-selectable-mobile.component.ts)\n                        \n                        \n                            USER_SELECTABLE_VALUE_ACCESSOR   (src/.../user-selectable.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableMobileComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/category-selectable/category-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'TFCChato',\n  webDir: 'www',\n  server: {\n    androidScheme: 'https'\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDOnguE6cpcz6VKkf-RnI3RcpqS7Xmtbh4\",\n    authDomain: \"chato-a4ef9.firebaseapp.com\",\n    projectId: \"chato-a4ef9\",\n    storageBucket: \"chato-a4ef9.appspot.com\",\n    messagingSenderId: \"770666336001\",\n    appId: \"1:770666336001:web:96e7751d6f04cea0b39500\",\n    measurementId: \"G-Z70NCW6NLN\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDOnguE6cpcz6VKkf-RnI3RcpqS7Xmtbh4\",\n    authDomain: \"chato-a4ef9.firebaseapp.com\",\n    projectId: \"chato-a4ef9\",\n    storageBucket: \"chato-a4ef9.appspot.com\",\n    messagingSenderId: \"770666336001\",\n    appId: \"1:770666336001:web:96e7751d6f04cea0b39500\",\n    measurementId: \"G-Z70NCW6NLN\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PICTURE_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableMobileComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/user-selectable/user-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
