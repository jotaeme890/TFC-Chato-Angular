var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.248,1,0.971]],["body/components/AboutPage.html",[0,0.419,1,1.738,2,1.623,3,0.162,4,0.124,5,1.329,6,1.329,7,1.329,8,1.287,9,0.109,10,4.153,11,1.572,12,1.925,13,1.132,14,2.41,15,2.334,16,1.731,17,6.888,18,1.731,19,6.193,20,0.4,21,0.893,22,2.04,23,1.351,24,0.893,25,4.754,26,4.754,27,0.59,28,0.013,29,1.028,30,0.187,31,0.343,32,0.124,33,0.155,34,5.41,35,6.193,36,1.428,37,6.193,38,2.515,39,2.797,40,2.167,41,2.167,42,2.257,43,1.861,44,3.46,45,2.356,46,3.724,47,3.46,48,3.944,49,4.754,50,2.797,51,2.602,52,5.41,53,4.754,54,4.2,55,2.859,56,2.356,57,2.257,58,2.859,59,2.463,60,6.193,61,3.073,62,3.465,63,4.754,64,2.512,65,3.017,66,1.93,67,4.754,68,6.193,69,3.46,70,3.362,71,2.712,72,4.754,73,4.153,74,4.754,75,3.46,76,2.356,77,2.257,78,2.581,79,4.153,80,2.515,81,2.713,82,4.153,83,1.619,84,2.004,85,4.153,86,4.754,87,2.463,88,0.964,89,1.731,90,1.731,91,1.329,92,1.63,93,1.329,94,0.654,95,1.329,96,1.132,97,1.329,98,1.169,99,1.329,100,1.169,101,1.207,102,1.731,103,1.132,104,1.623,105,1.925,106,1.132,107,1.572,108,1.925,109,1.169,110,1.287,111,1.329,112,1.132,113,1.925,114,1.169,115,1.329,116,1.169,117,1.246,118,1.096,119,1.329,120,1.132,121,1.028,122,1.169,123,1.572,124,1.623,125,1.731,126,1.169,127,1.169,128,1.623,129,1.731,130,1.169,131,1.731,132,1.169,133,1.207,134,1.731,135,1.169,136,1.287,137,1.132,138,1.169,139,1.169,140,1.207,141,1.132,142,1.329,143,1.169,144,1.028,145,1.169,146,1.432,147,1.132,148,1.132,149,1.132,150,1.169,151,1.207,152,1.329,153,1.329,154,0.009,155,0.009]],["title/modules/AboutPageModule.html",[156,1.139,157,2.967]],["body/modules/AboutPageModule.html",[1,1.952,3,0.154,4,0.154,9,0.135,28,0.013,30,0.331,31,0.427,32,0.154,33,0.193,36,1.364,88,1.199,154,0.01,155,0.01,156,1.654,157,6.084,158,2.084,159,2.809,160,3.942,161,3.065,162,2.157,163,2.235,164,5.168,165,5.168,166,5.168,167,5.559,168,3.679,169,2.696,170,2.402,171,5.916,172,2.78,173,2.78,174,4.051,175,3.211,176,4.271,177,1.948,178,3.855,179,1.884,180,3.374,181,5.168,182,3.519,183,3.065,184,3.211,185,3.855,186,2.931,187,2.931,188,3.519,189,3.558,190,3.374,191,2.931,192,2.494,193,3.211,194,3.211]],["title/modules/AboutPageRoutingModule.html",[156,1.139,167,2.764]],["body/modules/AboutPageRoutingModule.html",[0,0.39,1,1.773,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,154,0.011,155,0.011,158,2.257,163,2.42,167,5.048,172,2.508,173,2.914,181,5.596,195,6.407,196,3.654,197,3.317,198,4.246,199,2.182,200,1.679,201,3.042,202,3.853]],["title/components/AccessPage.html",[0,0.248,96,0.971]],["body/components/AccessPage.html",[0,0.425,1,0.618,2,1.568,3,0.144,4,0.068,5,0.725,6,0.725,7,0.725,8,0.702,9,0.059,11,1.019,12,1.373,13,0.618,14,2.291,15,2.24,16,1.122,18,1.122,20,0.218,21,0.862,22,1.546,23,1.45,24,1.049,27,0.785,28,0.013,29,1.368,30,0.26,31,0.187,32,0.068,33,0.085,36,1.649,38,2.429,39,2.679,40,2.239,41,1.83,42,1.232,43,1.572,45,2.434,46,1.56,48,1.652,50,1.63,55,4.675,56,1.285,57,2.333,58,2.415,62,1.232,64,0.946,71,2.29,75,1.888,77,1.232,80,2.679,81,2.423,83,0.883,84,1.093,88,0.526,89,1.122,90,1.122,91,0.725,92,1.235,93,0.725,94,0.697,95,0.725,96,1.317,97,0.725,98,0.638,99,0.725,100,0.638,101,0.659,102,1.122,103,0.618,104,1.053,105,1.373,106,0.618,107,1.019,108,1.373,109,0.638,110,0.702,111,0.725,112,0.618,113,1.373,114,0.638,115,0.725,116,0.638,117,0.68,118,0.598,119,0.725,120,0.618,121,0.561,122,0.638,123,1.019,124,1.053,125,1.122,126,0.638,127,0.638,128,1.053,129,1.122,130,0.638,131,1.122,132,0.638,133,1.815,134,1.122,135,0.638,136,0.702,137,0.618,138,0.638,139,0.638,140,1.247,141,0.618,142,0.725,143,0.638,144,0.561,145,0.638,146,1.562,147,0.618,148,0.618,149,0.618,150,0.638,151,0.659,152,0.725,153,0.725,154,0.006,155,0.006,162,1.464,197,2.071,199,0.883,203,2.266,204,6.041,205,3.88,206,4.912,207,4.015,208,0.6,209,5.53,210,5.53,211,6.326,212,4.998,213,4.998,214,1.888,215,2.667,216,3.134,217,4.869,218,4.998,219,3.661,220,4.015,221,1.639,222,1.989,223,3.809,224,0.965,225,4.998,226,3.043,227,4.055,228,2.872,229,4.291,230,2.643,231,2.037,232,3.247,233,3.128,234,3.004,235,2.334,236,2.802,237,3.128,238,4.354,239,3.804,240,3.107,241,3.881,242,2.434,243,3.881,244,3.322,245,3.597,246,3.881,247,2.964,248,2.575,249,4.291,250,2.396,251,4.291,252,4.291,253,4.291,254,3.331,255,2.239,256,2.434,257,2.954,258,2.152,259,0.6,260,0.831,261,0.771,262,2.434,263,1.83,264,3.507,265,1.237,266,2.594,267,4.015,268,1.17,269,1.63,270,4.015,271,3.581,272,2.594,273,2.179,274,2.415,275,2.923,276,4.37,277,3.507,278,2.923,279,2.923,280,3.237,281,1.146,282,1.759,283,1.83,284,3.809,285,3.099,286,2.594,287,4.015,288,3.763,289,2.594,290,2.29,291,2.179,292,2.923,293,2.557,294,4.025,295,2.179,296,2.545,297,2.434,298,4.291,299,4.912,300,3.881,301,1.907,302,3.173,303,1.184,304,2.594,305,1.907,306,4.605,307,2.331,308,3.173,309,2.594,310,3.412,311,1.367,312,3.881,313,3.881,314,0.598,315,2.017,316,2.05,317,1.285,318,1.652,319,1.56,320,1.888,321,1.888,322,1.759,323,0.902,324,1.294,325,2.594,326,2.594,327,2.594,328,5.53,329,4.015,330,2.594,331,2.594,332,3.002,333,2.423,334,4.015,335,4.015,336,2.594,337,2.62,338,4.354,339,4.354,340,3.173,341,4.291,342,4.912,343,1.759,344,2.557,345,1.888,346,1.759,347,1.759,348,2.594,349,3.576,350,2.923,351,1.759,352,2.594,353,2.594,354,2.594,355,2.594,356,1.888,357,2.594,358,3.173,359,2.923,360,3.173,361,2.415,362,3.173,363,3.173,364,2.723,365,2.05,366,2.05,367,4.015,368,4.015,369,2.08,370,4.291,371,2.05,372,4.015,373,1.285,374,1.693,375,1.232,376,4.015,377,3.507,378,2.434,379,2.423,380,2.266,381,4.015,382,2.594,383,2.429,384,4.015,385,2.594,386,1.344,387,2.594,388,2.594,389,1.182,390,1.888,391,1.888,392,1.053,393,1.053,394,1.136,395,1.759,396,1.344]],["title/modules/AccessPageModule.html",[156,1.139,397,2.967]],["body/modules/AccessPageModule.html",[3,0.141,4,0.141,9,0.124,28,0.013,30,0.337,31,0.39,32,0.141,33,0.177,36,1.247,88,1.096,96,1.91,132,1.972,133,1.372,139,1.972,140,1.372,154,0.01,155,0.01,156,1.511,158,1.904,159,2.566,160,3.788,161,2.8,162,1.971,163,2.041,168,3.481,169,2.463,170,2.195,172,2.631,173,2.631,174,3.833,175,2.934,176,4.041,177,1.779,178,3.648,179,1.721,180,3.083,182,3.33,183,2.8,184,2.934,185,3.648,186,2.678,187,2.678,188,3.33,189,3.25,190,3.083,191,2.678,192,2.278,193,2.934,194,2.934,205,2.934,248,2.041,397,6.181,398,4.721,399,4.721,400,4.721,401,5.44,402,4.354,403,5.405,404,4.892,405,4.721,406,4.271,407,6.72,408,4.271,409,5.31,410,4.271,411,2.678,412,5.31,413,4.271,414,4.557,415,3.665,416,5.31,417,4.271,418,3.934,419,4.557,420,3.665,421,4.271,422,5.405]],["title/modules/AccessPageRoutingModule.html",[156,1.139,401,2.764]],["body/modules/AccessPageRoutingModule.html",[0,0.39,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,96,1.773,154,0.011,155,0.011,158,2.257,163,2.42,172,2.508,173,2.914,196,3.654,197,3.317,198,4.246,199,2.182,200,1.679,201,3.042,202,3.853,401,5.048,405,5.596,423,6.407]],["title/guards/AdminGuard.html",[424,3.221,425,2.967]],["body/guards/AdminGuard.html",[2,1.704,3,0.11,4,0.11,9,0.097,11,1.074,20,0.356,21,0.826,23,1.275,24,0.826,27,0.953,28,0.013,30,0.287,31,0.306,32,0.11,33,0.212,45,3.22,94,0.605,146,1.623,154,0.008,155,0.008,170,2.327,199,1.44,205,3.11,214,3.079,215,3.291,217,5.244,219,4.171,221,1.459,224,0.99,226,2.544,227,2.968,228,2.847,229,3.694,230,2.631,231,2.213,235,1.709,240,2.962,244,3.564,248,2.75,250,2.471,255,3.421,256,3.719,257,3.908,259,0.584,260,0.796,261,0.739,262,3.607,263,2.962,265,2.147,268,1.548,274,4.378,281,1.042,291,3.528,296,3.367,301,2.721,307,3.069,315,2.737,323,0.898,324,0.915,425,4.171,426,3.342,427,3.694,428,6.47,429,4.23,430,4.139,431,6.499,432,6.499,433,3.719,434,3.694,435,6.359,436,3.43,437,6.82,438,4.23,439,3.607,440,7.107,441,5.005,442,3.446,443,6.556,444,5.09,445,4.731,446,5.135,447,4.139,448,6.499,449,4.937,450,4.407,451,3.022,452,7.053,453,2.36,454,4.407,455,4.514,456,2.397,457,3.886,458,2.164,459,1.551,460,1.221,461,2.096,462,4.23,463,3.694,464,1.717,465,1.656,466,1.853,467,1.817,468,4.23,469,4.23,470,4.23,471,4.23,472,3.694,473,4.23,474,1.49]],["title/components/AppComponent.html",[0,0.248,98,1.002]],["body/components/AppComponent.html",[0,0.316,1,0.675,2,1.127,3,0.112,4,0.074,5,0.793,6,0.793,7,0.793,8,0.768,9,0.065,11,1.092,12,1.451,13,0.675,14,2.313,15,2.249,16,1.202,18,1.202,20,0.239,21,0.62,22,1.62,23,1.46,24,1.055,27,0.891,28,0.013,29,1.472,30,0.268,31,0.205,32,0.074,33,0.214,36,1.689,42,1.347,43,1.11,45,2.573,46,1.706,48,1.806,50,2.765,51,1.624,54,2.916,55,1.706,56,2.13,57,2.042,61,2.529,62,2.466,64,2.39,65,1.883,66,1.746,70,1.54,71,2.452,76,2.573,77,3.623,78,2.334,79,2.477,80,2.108,81,1.242,82,2.477,83,0.966,84,1.196,88,0.575,89,1.202,90,1.202,91,0.793,92,1.464,93,0.793,94,0.657,95,0.793,96,0.675,97,0.793,98,1.425,99,0.793,100,0.697,101,0.72,102,1.202,103,0.675,104,1.127,105,1.451,106,0.675,107,1.092,108,1.451,109,0.697,110,0.768,111,0.793,112,0.675,113,1.451,114,0.697,115,0.793,116,0.697,117,1.127,118,0.654,119,0.793,120,0.675,121,0.613,122,0.697,123,1.092,124,1.127,125,1.202,126,0.697,127,0.697,128,1.361,129,1.202,130,0.697,131,1.202,132,0.697,133,0.72,134,1.202,135,0.697,136,0.768,137,0.675,138,0.697,139,0.697,140,0.72,141,0.675,142,0.793,143,0.697,144,0.613,145,0.697,146,1.336,147,0.675,148,0.675,149,0.675,150,0.697,151,0.72,152,0.793,153,0.793,154,0.006,155,0.006,179,0.903,197,2.189,199,0.966,205,2.818,208,0.642,214,2.064,215,2.763,217,4.466,219,4.012,221,1.641,222,2.573,224,0.67,228,2.713,230,2.911,231,2.12,234,2.466,235,2.142,240,2.367,243,4.103,244,3.41,247,2.573,248,2.882,255,2.987,256,3.373,257,3.123,258,2.275,259,0.587,260,0.722,261,0.67,262,3.373,263,2.838,265,1.325,268,1.71,269,2.661,273,2.334,281,0.689,282,1.883,296,2.227,297,2.13,301,2.042,303,1.174,305,3.112,314,0.992,315,1.034,320,2.064,321,2.064,322,1.923,323,0.803,324,1.347,337,1.883,338,2.064,339,2.064,349,2.064,369,2.227,374,1.196,375,1.347,377,3.756,378,2.13,383,2.108,389,1.96,390,3.13,392,1.746,393,1.746,394,1.883,395,1.923,396,1.469,430,4.173,433,3.957,439,2.13,447,2.738,451,2.81,453,1.282,455,3.484,456,2.158,458,1.961,460,0.819,465,1.683,467,1.202,472,2.477,474,2.041,475,2.477,476,5.193,477,4.3,478,5.193,479,5.193,480,6.554,481,5.541,482,5.794,483,6.554,484,6.554,485,6.554,486,6.554,487,5.227,488,4.3,489,1.683,490,3.756,491,2.916,492,4.103,493,2.962,494,2.957,495,3.226,496,4.318,497,4.536,498,3.475,499,3.78,500,4.3,501,2.836,502,5.193,503,5.193,504,2.227,505,2.836,506,3.756,507,2.836,508,4.3,509,5.794,510,2.836,511,3.756,512,7.321,513,2.836,514,2.836,515,3.397,516,3.756,517,2.738,518,2.836,519,2.042,520,2.836,521,2.836,522,2.836,523,2.477,524,2.836,525,1.806,526,2.836,527,4.3,528,2.836,529,3.756,530,2.836,531,2.836,532,2.477,533,2.836,534,2.836,535,2.836,536,2.241,537,2.836,538,2.836,539,5.794,540,4.3,541,4.3,542,3.756,543,4.3,544,4.3,545,4.3,546,4.3,547,4.3,548,4.536,549,2.241,550,2.916,551,4.3,552,2.836,553,4.3,554,4.3,555,4.3,556,1.923,557,1.923,558,3.756,559,2.836,560,2.836,561,2.836,562,1.923,563,2.836,564,3.756,565,1.347,566,1.812,567,2.836,568,2.836,569,2.836,570,2.836,571,1.923,572,2.241,573,2.477]],["title/modules/AppModule.html",[156,1.139,574,2.967]],["body/modules/AppModule.html",[3,0.121,4,0.121,9,0.106,15,1.257,28,0.013,30,0.339,31,0.336,32,0.189,33,0.152,88,0.941,98,2.03,154,0.009,155,0.009,156,1.298,158,1.636,159,2.205,160,3.528,161,3.528,162,2.224,163,1.754,168,3.16,169,2.117,170,1.886,172,2.388,173,2.388,178,2.521,179,1.479,180,2.649,182,3.375,183,2.406,184,2.521,185,3.311,186,3.022,187,2.301,188,3.022,191,2.301,192,3.312,193,3.926,194,3.926,199,1.581,215,2.571,221,1.426,314,1.407,344,3.884,402,4.185,414,3.15,415,3.15,419,4.137,420,3.15,467,1.904,523,4.057,574,6.041,575,4.057,576,4.057,577,4.057,578,4.057,579,5.228,580,5.228,581,3.67,582,6.1,583,5.949,584,3.381,585,6.1,586,6.1,587,4.645,588,6.1,589,6.1,590,4.645,591,4.057,592,4.645,593,4.645,594,3.381,595,6.1,596,3.67,597,2.099,598,4.645,599,6.1,600,3.15,601,3.67,602,3.381,603,6.1,604,3.67,605,4.645,606,3.479,607,4.645,608,3.67,609,4.645,610,3.15,611,4.645,612,4.137,613,4.057,614,4.645,615,6.1,616,5.328,617,5.949,618,4.057,619,4.645,620,4.645,621,6.1,622,4.645,623,4.057,624,3.15,625,6.1,626,4.645,627,4.82,628,6.1,629,6.1,630,6.1,631,2.169,632,1.847,633,4.645,634,4.137,635,6.1,636,6.1,637,4.82,638,4.645,639,4.645,640,4.82,641,4.645,642,4.057,643,4.645,644,2.958,645,4.645,646,4.645,647,4.337,648,4.645,649,4.645,650,4.645]],["title/modules/AppRoutingModule.html",[156,1.139,580,2.764]],["body/modules/AppRoutingModule.html",[3,0.144,4,0.144,9,0.126,28,0.013,30,0.312,31,0.398,32,0.144,33,0.18,121,1.192,154,0.01,155,0.01,158,1.942,163,2.082,172,2.158,173,2.663,196,3.144,197,3.11,198,3.88,199,1.877,200,1.445,201,3.974,205,3.693,281,0.884,425,5.946,428,6.369,517,3.51,519,2.618,580,4.614,651,5.513,652,6.803,653,5.946,654,5.513,655,5.513,656,3.739,657,5.513,658,4.614,659,5.513,660,6.803,661,8.169,662,5.513,663,6.913,664,5.513,665,5.513,666,5.513,667,3.739,668,5.513,669,5.513,670,5.513,671,5.513,672,5.513,673,5.513,674,5.513,675,5.513,676,5.513,677,5.513,678,5.513,679,5.513,680,5.513,681,5.513,682,5.513,683,5.513,684,5.513,685,5.513,686,5.513]],["title/guards/AuthGuard.html",[424,3.221,653,2.967]],["body/guards/AuthGuard.html",[3,0.137,4,0.137,8,1.785,9,0.12,11,1.331,20,0.442,21,0.95,23,1.294,24,0.95,27,0.818,28,0.013,30,0.298,31,0.379,32,0.137,33,0.171,94,0.696,146,1.294,154,0.01,155,0.01,199,1.785,205,2.846,208,0.783,214,3.816,215,3.356,217,4.966,219,4.16,224,0.85,259,0.529,260,0.916,261,0.85,262,3.574,263,3.005,265,2.032,303,1.057,323,0.976,324,1.722,426,4.143,428,6.385,433,3.267,434,4.58,435,6.611,436,3.356,437,6.611,439,3.267,441,5.759,443,5.759,444,5.133,446,5.21,449,5.133,451,2.859,452,6.3,455,4.338,456,2.568,459,1.785,460,1.514,461,2.598,463,4.58,464,2.129,465,2.052,467,2.016,517,3.339,653,5.509,687,4.58,688,6.594,689,6.594,690,5.243,691,2.49,692,5.21,693,4.199,694,4.799,695,5.243,696,4.199,697,3.131,698,3.416,699,4.199,700,4.143,701,5.243,702,5.243,703,5.243,704,5.243]],["title/injectables/AuthService.html",[215,1.718,459,1.103]],["body/injectables/AuthService.html",[3,0.19,4,0.124,9,0.108,20,0.399,21,0.891,24,1.167,27,1.005,28,0.013,30,0.271,31,0.342,32,0.124,33,0.155,94,0.726,133,1.968,140,1.569,144,1.336,146,1.679,154,0.009,155,0.009,170,2.509,208,0.923,215,2.605,224,0.887,250,2.689,256,3.841,259,0.551,260,0.956,261,0.887,268,1.735,271,2.571,274,3.716,275,5.305,282,3.507,290,3.524,294,5.305,295,3.956,314,1.681,323,0.887,456,2.817,459,1.672,460,1.368,464,1.923,465,1.854,481,5.758,493,3.922,525,4.936,632,1.906,693,3.935,698,3.775,705,2.249,706,4.138,707,6.006,708,4.135,709,2.627,710,6.13,711,4.19,712,5.397,713,4.737,714,6.179,715,3.649,716,6.179,717,4.737,718,4.737,719,2.707,720,5.397,721,4.737,722,4.497,723,3.069,724,4.737,725,2.419,726,2.605,727,5.397,728,4.737,729,4.882,730,4.737,731,5.397,732,4.737,733,5.397,734,4.737,735,2.849,736,3.016]],["title/pipes/CapitalizeInitialPipe.html",[579,2.764,737,2.02]],["body/pipes/CapitalizeInitialPipe.html",[3,0.141,4,0.141,9,0.124,11,1.372,13,1.287,21,0.779,24,0.779,27,0.95,28,0.013,30,0.213,31,0.39,32,0.141,33,0.177,94,0.772,154,0.01,155,0.01,221,1.703,224,0.697,228,2.451,259,0.433,260,0.751,261,0.697,268,2.015,297,3.33,301,3.191,303,1.379,311,2.288,323,0.697,454,5.516,457,4.96,467,2.044,504,3.481,542,5.87,579,4.557,737,3.33,738,4.271,739,5.87,740,4.721,741,4.96,742,5.87,743,2.799,744,5.405,745,6.874,746,5.87,747,6.72,748,7.181,749,5.728,750,7.869,751,5.728,752,5.728,753,7.869,754,7.314,755,5.323,756,6.388,757,6.388,758,6.388,759,5.87,760,5.405]],["title/components/CategoriesInfoComponent.html",[0,0.248,100,1.002]],["body/components/CategoriesInfoComponent.html",[0,0.459,1,0.817,2,1.297,3,0.176,4,0.089,5,0.958,6,0.958,7,0.958,8,0.928,9,0.078,11,1.256,12,1.623,13,0.817,14,2.354,15,2.279,16,1.383,18,1.383,20,0.289,21,0.713,22,1.776,23,1.322,24,1.119,27,0.836,28,0.013,29,1.457,30,0.195,31,0.248,32,0.089,33,0.112,36,1.709,38,1.392,39,1.392,46,2.062,47,2.496,50,2.357,54,2.325,59,1.776,61,1.392,62,3.436,64,1.804,65,2.167,66,1.392,70,1.861,71,1.956,77,3.2,78,4.022,80,3.065,81,1.502,83,1.685,84,2.086,88,0.695,89,1.383,90,1.383,91,0.958,92,1.419,93,0.958,94,0.764,95,0.958,96,0.817,97,0.958,98,0.843,99,0.958,100,1.563,101,1.97,102,1.383,103,0.817,104,2.157,105,1.623,106,0.817,107,1.256,108,1.623,109,0.843,110,0.928,111,0.958,112,0.817,113,1.623,114,0.843,115,0.958,116,0.843,117,0.899,118,0.791,119,0.958,120,0.817,121,0.742,122,0.843,123,1.256,124,1.297,125,1.383,126,0.843,127,0.843,128,1.297,129,1.383,130,0.843,131,1.383,132,0.843,133,0.87,134,1.383,135,0.843,136,0.928,137,0.817,138,0.843,139,0.843,140,0.87,141,0.817,142,0.958,143,0.843,144,0.742,145,0.843,146,1.247,147,0.817,148,0.817,149,0.817,150,0.843,151,0.87,152,0.958,153,0.958,154,0.007,155,0.007,208,0.739,221,1.036,224,0.869,250,1.629,259,0.594,260,0.937,261,0.869,268,0.817,269,2.851,281,0.55,307,2.96,311,2.164,314,0.791,323,0.82,324,1.255,369,2.563,375,1.628,383,1.392,390,3.601,392,2.357,393,1.392,394,1.502,395,2.325,396,1.776,439,2.451,451,2.4,458,2.4,474,1.743,489,1.937,491,4.908,550,2.325,562,3.355,565,1.628,566,1.445,632,1.217,692,3.909,696,4.291,715,2.896,725,2.272,743,1.685,761,6.85,762,6.197,763,2.496,764,4.586,765,3.909,766,4.586,767,3.909,768,3.909,769,4.322,770,3.909,771,2.451,772,2.686,773,5.805,774,5.805,775,3.909,776,3.909,777,3.429,778,2.009,779,3.601,780,5.719,781,4.099,782,2.086,783,2.995,784,3.151,785,3.299,786,2.995,787,3.928,788,6.355,789,5.025,790,2.995,791,4.948,792,2.709,793,3.607,794,2.709,795,4.948,796,4.586,797,5.324,798,5.547,799,3.909,800,2.952,801,3.429,802,1.804,803,3.151,804,4.322,805,3.429,806,2.563,807,2.822,808,4.948,809,3.429,810,3.909,811,3.429,812,3.909,813,2.496,814,3.909,815,3.429,816,2.709,817,2.325,818,2.709,819,3.429,820,3.429,821,2.709,822,2.709,823,3.909,824,3.355,825,4.322,826,4.948,827,4.322,828,4.948,829,3.696,830,2.062,831,2.183,832,2.325,833,4.322,834,4.322,835,3.151,836,2.709,837,2.183,838,2.995]],["title/injectables/CategoriesService.html",[459,1.103,839,2.596]],["body/injectables/CategoriesService.html",[0,0.333,3,0.143,4,0.103,9,0.09,20,0.333,21,0.789,23,1.231,24,1.025,27,0.936,28,0.013,30,0.28,31,0.286,32,0.103,33,0.129,94,0.796,104,2.232,121,1.183,154,0.008,155,0.008,200,1.645,221,1.146,224,0.917,226,3.091,227,4.168,231,1.863,235,1.631,250,2.421,255,2.493,259,0.57,260,0.988,261,0.873,303,1.232,310,4.194,323,0.917,454,4.592,456,2.668,458,3.039,459,1.481,460,1.141,461,2.711,464,1.605,465,1.547,466,1.731,467,2.265,597,2.404,631,1.742,632,1.889,691,2.066,705,1.877,725,2.142,726,2.854,737,2.711,752,5.352,768,4.323,778,2.221,781,4.286,804,4.779,807,3.862,827,4.779,839,3.484,840,3.453,841,4.779,842,5.471,843,6.274,844,3.123,845,3.953,846,2.598,847,5.471,848,3.953,849,4.072,850,4.987,851,3.953,852,3.29,853,5.471,854,3.953,855,5.471,856,3.953,857,7.109,858,3.953,859,5.48,860,2.517,861,3.953,862,3.453,863,2.681,864,6.585,865,3.123,866,3.953,867,3.953,868,3.953,869,3.953,870,3.953,871,3.953,872,3.953,873,7.801,874,4.567,875,3.953,876,5.471,877,3.953,878,3.953,879,3.953,880,3.953,881,3.953,882,3.953,883,3.953,884,3.953,885,3.953,886,3.953,887,3.507,888,2.877,889,3.953,890,3.953,891,3.953,892,5.471,893,6.274,894,5.48,895,3.453,896,6.274,897,2.877,898,7.109,899,5.48,900,4.323,901,5.471,902,5.471,903,5.471,904,3.982,905,3.982,906,5.471,907,5.471,908,5.471,909,5.471,910,5.471,911,5.471,912,3.953,913,3.953,914,5.471,915,3.953,916,3.953,917,5.471,918,3.982,919,3.953,920,3.953,921,3.953,922,3.953]],["title/interfaces/CategoryInfo.html",[781,2.111,923,1.177]],["body/interfaces/CategoryInfo.html",[3,0.164,4,0.164,9,0.144,20,0.53,28,0.012,32,0.164,94,0.85,154,0.011,155,0.011,208,1.101,259,0.658,261,1.039,303,1.386,440,7.034,781,3.816,817,4.267,887,4.172,923,1.816,924,2.868,925,4.007,926,8.053]],["title/components/CategorySelectableComponent.html",[0,0.248,103,0.971]],["body/components/CategorySelectableComponent.html",[0,0.481,1,0.633,2,1.072,3,0.107,4,0.069,5,0.743,6,0.743,7,0.743,8,0.719,9,0.061,11,1.038,12,1.394,13,0.633,14,2.297,15,2.224,16,1.143,18,1.143,20,0.224,21,0.59,22,1.566,23,0.802,24,1.162,27,0.944,28,0.013,29,1.661,30,0.238,31,0.192,32,0.107,33,0.087,36,0.943,88,0.539,89,1.143,90,1.143,91,0.743,92,1.251,93,0.743,94,0.803,95,0.743,96,0.633,97,0.743,98,0.653,99,0.743,100,0.653,101,1.95,102,1.143,103,1.44,104,2.205,105,1.394,106,0.633,107,1.422,108,1.394,109,0.653,110,0.719,111,0.743,112,0.633,113,1.394,114,0.653,115,0.743,116,0.653,117,1.744,118,0.613,119,0.743,120,0.633,121,0.575,122,0.653,123,1.038,124,1.072,125,1.143,126,0.653,127,0.653,128,1.072,129,1.143,130,0.653,131,1.143,132,0.653,133,0.675,134,1.143,135,0.653,136,0.719,137,0.633,138,0.653,139,0.653,140,1.535,141,0.633,142,0.743,143,0.653,144,0.575,145,0.653,146,1.099,147,0.633,148,0.633,149,0.633,150,0.653,151,0.675,152,0.743,153,0.743,154,0.006,155,0.006,162,1.492,177,0.875,179,0.846,192,1.12,200,0.696,208,0.611,221,1.438,224,0.958,226,1.601,231,1.698,245,3.368,248,1.545,258,1.792,259,0.634,260,1.057,261,0.958,265,1.26,268,1.912,281,0.799,283,1.864,290,3.195,303,1.024,311,2.399,314,1.473,315,2.205,323,0.991,324,1.381,332,1.442,333,3.087,337,1.164,411,2.775,436,1.724,451,2.807,453,1.985,474,1.441,494,2.66,495,2.901,597,2.117,631,2.244,632,1.571,647,2.605,691,1.545,697,1.942,709,1.968,743,2.266,771,2.027,782,2.971,785,3.033,793,2.911,802,1.492,823,3.232,829,4.068,839,4.375,846,2.368,927,5.89,928,5.89,929,1.802,930,3.94,931,3.94,932,3.232,933,4.356,934,5.283,935,2.805,936,3.382,937,2.977,938,4.077,939,2.977,940,3.573,941,2.977,942,4.077,943,2.774,944,2.774,945,4.356,946,2.774,947,2.774,948,3.63,949,2.333,950,2.321,951,3.573,952,3.573,953,2.707,954,3.573,955,3.176,956,2.583,957,4.403,958,2.321,959,2.22,960,2.605,961,2.977,962,4.077,963,2.977,964,4.649,965,2.657,966,4.077,967,4.131,968,2.657,969,2.977,970,5.33,971,2.657,972,2.977,973,2.119,974,4.402,975,2.977,976,2.657,977,2.333,978,2.657,979,3.165,980,2.119,981,3.573,982,2.657,983,2.775,984,2.977,985,2.977,986,2.657,987,2.977,988,2.977,989,2.321,990,2.977,991,2.774,992,2.657,993,4.375,994,2.553,995,4.102,996,2.774,997,2.657,998,2.774,999,2.321,1000,4.844,1001,2.321,1002,2.977,1003,2.505,1004,2.977,1005,2.774,1006,1.802,1007,2.657,1008,3.382,1009,2.774,1010,2.657,1011,2.774,1012,3.799,1013,2.774,1014,2.321,1015,2.321,1016,2.321,1017,2.321,1018,2.321,1019,2.774,1020,2.605,1021,2.774,1022,2.321,1023,3.573,1024,2.321,1025,2.605,1026,2.605,1027,2.099,1028,1.316,1029,1.692,1030,1.692,1031,1.262,1032,2.321,1033,1.598,1034,2.321,1035,2.321,1036,1.598,1037,1.598,1038,1.802,1039,2.321,1040,4.356,1041,2.321,1042,2.321,1043,1.802,1044,1.802,1045,1.934,1046,1.934,1047,1.934,1048,1.934,1049,2.321,1050,2.977,1051,1.934,1052,1.934,1053,2.321,1054,3.573]],["title/components/CategorySelectableMobileComponent.html",[0,0.248,106,0.971]],["body/components/CategorySelectableMobileComponent.html",[0,0.479,1,0.616,2,1.05,3,0.105,4,0.067,5,0.723,6,0.723,7,0.723,8,0.7,9,0.059,11,1.017,12,1.371,13,0.616,14,2.29,15,2.218,16,1.12,18,1.12,20,0.218,21,0.577,22,1.543,23,0.786,24,1.158,27,0.939,28,0.013,29,1.653,30,0.235,31,0.187,32,0.105,33,0.084,36,0.924,88,0.524,89,1.12,90,1.12,91,0.723,92,1.233,93,0.723,94,0.799,95,0.723,96,0.616,97,0.723,98,0.636,99,0.723,100,0.636,101,1.94,102,1.12,103,0.616,104,2.201,105,1.371,106,1.423,107,2.162,108,1.371,109,0.636,110,0.7,111,0.723,112,0.616,113,1.371,114,0.636,115,0.723,116,0.636,117,1.727,118,0.596,119,0.723,120,0.616,121,0.559,122,0.636,123,1.017,124,1.05,125,1.12,126,0.636,127,0.636,128,1.05,129,1.12,130,0.636,131,1.12,132,0.636,133,0.657,134,1.12,135,0.636,136,0.7,137,0.616,138,0.636,139,0.636,140,1.517,141,0.616,142,0.723,143,0.636,144,0.559,145,0.636,146,1.083,147,0.616,148,0.616,149,0.616,150,0.636,151,0.657,152,0.723,153,0.723,154,0.006,155,0.006,162,1.461,177,0.851,179,0.824,192,1.09,200,0.678,208,0.599,221,1.426,224,0.952,226,1.568,231,1.669,245,3.32,248,1.513,258,1.755,259,0.631,260,1.052,261,0.952,265,1.234,268,1.904,281,0.786,283,1.826,290,3.149,303,1.013,311,2.38,314,1.457,315,2.178,323,0.986,324,1.366,332,1.404,333,3.062,337,1.133,411,2.736,436,1.689,451,2.789,453,1.965,474,1.411,494,2.622,495,2.86,597,2.098,631,2.226,632,1.554,647,2.551,691,1.513,697,1.902,709,1.947,743,2.244,771,1.985,782,2.947,785,3.003,793,2.88,802,1.461,823,3.165,829,4.024,839,4.336,846,2.328,927,5.87,933,4.283,934,5.218,935,2.778,936,3.325,937,2.916,938,4.019,939,2.916,940,3.499,941,2.916,942,4.019,943,2.717,944,2.717,945,4.283,946,2.717,947,2.717,948,3.569,949,2.285,950,2.259,952,3.499,953,2.661,955,3.122,956,2.54,957,4.373,959,2.174,960,2.551,961,2.916,962,4.019,963,2.916,964,4.599,966,4.019,967,4.095,969,2.916,970,5.293,972,2.916,973,2.075,974,4.348,975,2.916,977,2.285,979,3.131,980,2.075,981,3.499,983,2.736,984,2.916,985,2.916,987,2.916,988,2.916,990,2.916,991,2.717,993,4.336,994,2.517,995,4.051,996,2.717,998,2.717,999,2.259,1000,4.797,1002,2.916,1003,2.483,1004,2.916,1005,2.717,1006,1.754,1008,3.325,1009,2.717,1011,2.717,1012,3.745,1013,2.717,1019,2.717,1020,2.551,1021,2.717,1022,2.259,1023,3.499,1025,2.551,1026,2.551,1027,2.043,1028,1.281,1029,1.647,1030,1.647,1031,1.228,1032,2.259,1033,1.555,1034,2.259,1035,2.259,1036,1.555,1037,1.555,1038,1.754,1039,2.259,1040,4.283,1041,2.259,1042,2.259,1043,1.754,1044,1.754,1045,1.882,1046,1.882,1047,1.882,1048,1.882,1049,2.259,1050,2.916,1051,1.882,1052,1.882,1053,2.259,1054,3.499,1055,5.87,1056,1.754,1057,3.874,1058,2.717,1059,3.874,1060,3.165,1061,3.499,1062,3.499,1063,2.259,1064,2.586,1065,2.586,1066,2.586,1067,2.586,1068,2.586,1069,2.586,1070,2.586,1071,2.259,1072,2.259,1073,2.586,1074,2.259,1075,2.586,1076,2.586,1077,2.259,1078,2.259,1079,2.259,1080,2.259,1081,2.259]],["title/components/ConfirmDialogComponent.html",[0,0.248,109,1.002]],["body/components/ConfirmDialogComponent.html",[0,0.482,1,1.077,2,1.571,3,0.156,4,0.118,5,1.264,6,1.264,7,1.264,8,1.224,9,0.103,11,1.521,12,1.879,13,1.077,14,2.403,15,2.327,16,1.675,18,1.675,20,0.381,21,0.864,22,2,23,1.404,24,1.073,27,0.744,28,0.013,29,1.296,30,0.265,31,0.327,32,0.118,33,0.148,36,1.8,55,3.603,88,0.916,89,1.675,90,1.675,91,1.264,92,1.598,93,1.264,94,0.71,95,1.264,96,1.077,97,1.264,98,1.112,99,1.264,100,1.112,101,1.148,102,1.675,103,1.077,104,1.571,105,1.879,106,1.077,107,1.521,108,1.879,109,1.76,110,2.145,111,1.264,112,1.077,113,1.879,114,1.112,115,1.264,116,1.112,117,1.185,118,1.043,119,1.264,120,1.077,121,0.978,122,1.112,123,1.521,124,1.571,125,1.675,126,1.112,127,1.112,128,1.571,129,1.675,130,1.112,131,1.675,132,1.112,133,1.148,134,1.675,135,1.112,136,1.224,137,1.077,138,1.112,139,1.112,140,1.148,141,1.077,142,1.264,143,1.112,144,0.978,145,1.112,146,1.404,147,1.077,148,1.077,149,1.077,150,1.112,151,1.148,152,1.264,153,1.264,154,0.009,155,0.009,208,0.895,216,3.546,221,1.255,224,0.583,227,4.258,259,0.539,260,0.628,261,0.583,303,1.147,306,4.892,319,2.719,323,0.773,324,0.978,332,2.454,359,3.291,624,3.066,709,2.358,778,2.433,813,3.291,1082,5.569,1083,5.189,1084,3.949,1085,6.4,1086,6.721,1087,5.992,1088,5.883,1089,5.209,1090,4.521,1091,7.926,1092,4.521,1093,4.892,1094,4.521,1095,5.234,1096,4.521,1097,4.521,1098,5.992,1099,4.521,1100,3.291,1101,4.521,1102,4.521,1103,4.521,1104,4.521,1105,4.521,1106,5.992,1107,5.992]],["title/injectables/CustomTranslateService.html",[216,2.02,459,1.103]],["body/injectables/CustomTranslateService.html",[3,0.12,4,0.12,9,0.105,20,0.387,21,0.873,23,1.329,24,1.13,27,0.973,28,0.013,29,0.994,30,0.267,31,0.332,32,0.12,33,0.235,36,1.726,94,0.715,154,0.009,155,0.009,186,2.277,187,2.277,208,0.905,216,3.001,221,1.666,224,0.874,228,2.803,230,3.005,231,2.307,232,4.444,235,2.021,241,4.786,244,3.217,258,2.654,259,0.616,260,0.942,261,0.874,265,1.867,268,1.783,273,3.288,297,3.001,301,2.876,303,1.354,307,2.553,314,1.661,323,0.874,324,1.662,333,2.968,347,5.213,361,4.783,453,1.806,456,2.58,459,1.64,460,1.327,464,1.866,465,1.799,466,2.013,467,1.693,489,2.82,499,6.146,504,3.138,506,5.291,519,2.876,529,4.015,632,1.489,696,3.857,697,3.217,700,3.631,705,2.182,709,2.088,719,2.654,725,2.371,735,4.502,802,2.209,956,3.138,1108,4.015,1109,6.776,1110,7.203,1111,5.79,1112,4.596,1113,8.124,1114,6.058,1115,5.918,1116,6.058,1117,4.596,1118,6.058,1119,6.058,1120,3.643,1121,4.596,1122,4.596,1123,5.291,1124,6.058,1125,4.596,1126,4.409,1127,5.291,1128,4.596,1129,6.058,1130,4.596,1131,4.596,1132,4.596,1133,4.596,1134,4.596,1135,4.596,1136,4.596,1137,4.596,1138,3.117,1139,4.596,1140,4.596]],["title/components/DataPage.html",[0,0.248,112,0.971]],["body/components/DataPage.html",[0,0.404,1,0.525,2,1.324,3,0.168,4,0.058,5,0.616,6,0.616,7,0.616,8,0.596,9,0.142,11,0.896,12,1.235,13,0.525,14,2.248,15,2.19,16,0.987,18,0.987,20,0.186,21,0.509,22,1.412,23,0.991,24,1.038,27,0.88,28,0.013,29,1.506,30,0.284,31,0.159,32,0.115,33,0.072,36,1.635,38,2.396,39,1.434,42,1.676,43,2.426,45,1.749,46,1.325,48,3.218,50,2.517,51,2.229,55,4.443,56,1.092,57,2.098,59,2.617,61,1.794,62,1.046,64,2.586,65,1.935,66,1.434,69,1.604,70,1.916,71,1.257,75,2.57,76,1.749,77,1.046,78,1.196,80,2.245,83,0.75,84,1.862,87,1.829,88,0.447,89,0.987,90,0.987,91,0.616,92,1.129,93,0.616,94,0.76,95,0.616,96,0.525,97,0.616,98,0.542,99,0.616,100,0.542,101,1.122,102,0.987,103,0.525,104,2.046,105,1.235,106,0.525,107,0.896,108,1.235,109,0.868,110,0.596,111,0.616,112,1.203,113,1.235,114,0.542,115,0.616,116,0.542,117,0.578,118,0.508,119,0.616,120,0.525,121,0.477,122,0.542,123,1.122,124,1.324,125,0.987,126,0.542,127,0.542,128,0.926,129,0.987,130,0.542,131,0.987,132,0.542,133,0.559,134,0.987,135,1.242,136,1.743,137,0.525,138,0.542,139,0.542,140,0.559,141,0.525,142,0.616,143,0.542,144,0.764,145,0.542,146,1.366,147,0.525,148,0.525,149,0.525,150,0.542,151,0.559,152,0.616,153,0.616,154,0.009,155,0.005,162,1.288,179,0.702,199,0.75,200,1.937,204,5.603,208,0.528,212,4.662,213,4.662,215,0.929,216,2.924,219,3.513,221,1.427,224,0.857,225,3.992,226,2.601,227,3.827,228,1.843,230,1.334,231,1.72,232,2.743,233,2.248,234,2.399,235,2.315,236,2.014,238,2.57,239,2.123,240,1.609,242,2.504,244,1.676,245,3.325,246,2.79,248,1.334,250,1.943,255,1.609,257,2.123,259,0.585,260,0.923,261,0.857,265,1.088,268,1.052,281,1.184,282,2.213,283,1.609,302,2.79,303,1.285,305,2.399,306,4.295,307,2.13,308,2.79,310,3.365,311,1.202,312,3.491,313,3.491,316,1.741,318,1.403,319,1.325,320,1.604,321,1.604,322,1.494,323,0.963,324,1.196,332,3.001,333,2.986,337,2.986,338,3.678,339,3.678,340,2.79,349,2.57,358,2.79,359,2.57,360,2.79,361,3.873,362,2.79,363,2.79,364,2.394,365,1.741,366,1.741,369,2.289,374,1.862,378,2.74,383,2.517,389,2.303,392,2.245,393,2.245,394,1.935,395,1.494,433,1.749,442,2.123,453,1.507,467,0.987,496,2.123,525,1.403,536,4.662,548,3.084,549,3.491,556,1.494,557,1.494,565,2.098,566,1.488,597,1.985,624,1.494,631,1.879,632,1.086,698,1.141,709,2.047,719,1.547,723,1.434,768,2.79,769,3.084,778,1.434,781,3.938,782,1.488,806,2.289,807,2.014,810,2.79,817,1.494,831,1.403,839,3.758,841,4.413,846,1.676,852,2.123,935,1.488,1003,1.288,1027,1.741,1028,1.092,1058,2.394,1082,1.604,1083,1.494,1085,5.838,1088,1.741,1141,1.925,1142,3.531,1143,3.531,1144,3.491,1145,2.79,1146,3.531,1147,5.053,1148,3.531,1149,3.531,1150,1.604,1151,5.053,1152,5.626,1153,3.678,1154,3.365,1155,2.203,1156,3.216,1157,3.859,1158,2.57,1159,2.203,1160,4.662,1161,2.394,1162,3.531,1163,2.203,1164,3.531,1165,5.53,1166,2.203,1167,5.901,1168,4.295,1169,7.848,1170,5.053,1171,3.531,1172,3.531,1173,2.203,1174,3.084,1175,2.203,1176,4.688,1177,2.014,1178,5.154,1179,3.531,1180,2.394,1181,3.218,1182,5.053,1183,3.531,1184,4.418,1185,2.203,1186,5.053,1187,4.418,1188,3.531,1189,2.203,1190,3.531,1191,2.203,1192,3.531,1193,2.394,1194,2.203,1195,2.203,1196,3.531,1197,2.203,1198,2.014,1199,2.203,1200,2.203,1201,1.741,1202,1.494,1203,1.604,1204,1.604,1205,2.203,1206,1.604,1207,2.203,1208,5.053,1209,2.203,1210,2.203,1211,3.531,1212,2.203,1213,2.203,1214,1.741,1215,2.203,1216,1.494,1217,2.203,1218,2.203,1219,2.79,1220,2.203,1221,2.203,1222,2.203,1223,2.203,1224,2.203,1225,2.203,1226,2.203,1227,2.203,1228,2.203,1229,1.494,1230,1.092,1231,2.203,1232,2.203,1233,1.494,1234,2.203,1235,2.203,1236,2.203,1237,2.203,1238,2.203,1239,2.203,1240,2.203,1241,2.203,1242,2.203,1243,2.203,1244,1.925,1245,1.925,1246,2.203,1247,2.203,1248,2.203,1249,2.394,1250,2.57,1251,2.79,1252,2.57,1253,2.57,1254,2.57,1255,2.57,1256,3.531,1257,2.203,1258,2.203,1259,1.925,1260,1.604,1261,3.859,1262,4.418,1263,1.196,1264,2.203,1265,2.203,1266,3.531,1267,3.531,1268,3.084,1269,3.531,1270,2.79,1271,2.098,1272,2.52,1273,2.52,1274,2.014,1275,1.829,1276,1.829,1277,1.609,1278,2.203,1279,2.79,1280,2.394,1281,2.203,1282,1.925,1283,2.203,1284,1.925,1285,1.604,1286,2.203,1287,2.203,1288,2.203]],["title/modules/DataPageModule.html",[156,1.139,1289,2.967]],["body/modules/DataPageModule.html",[3,0.14,4,0.14,9,0.122,28,0.013,30,0.338,31,0.386,32,0.14,33,0.175,36,1.234,88,1.084,112,1.905,135,1.967,136,1.448,154,0.01,155,0.01,156,1.495,158,1.885,159,2.54,160,3.771,161,2.771,162,1.951,163,2.021,168,3.459,169,2.438,170,2.172,172,2.614,173,2.614,174,3.808,175,2.904,176,4.016,177,1.761,178,3.625,179,1.704,180,3.051,182,3.309,183,2.771,184,2.904,185,3.625,186,2.651,187,2.651,188,3.309,189,3.217,190,3.051,191,2.651,192,2.255,193,2.904,194,2.904,248,2.021,281,0.858,379,2.344,402,4.492,404,4.86,409,5.276,410,4.227,411,2.651,412,5.276,413,4.227,414,4.529,415,3.628,416,5.276,417,4.227,418,3.894,419,4.529,420,3.628,421,4.227,1202,3.628,1203,3.894,1289,6.174,1290,4.673,1291,4.673,1292,4.673,1293,5.426,1294,5.35,1295,3.407,1296,6.678,1297,5.35,1298,5.833,1299,4.673,1300,5.833,1301,4.673,1302,4.673]],["title/modules/DataPageRoutingModule.html",[156,1.139,1293,2.764]],["body/modules/DataPageRoutingModule.html",[0,0.39,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,112,1.773,154,0.011,155,0.011,158,2.257,163,2.42,172,2.508,173,2.914,196,3.654,197,3.317,198,4.246,199,2.182,200,1.679,201,3.042,202,3.853,1293,5.048,1295,4.08,1303,6.407]],["title/injectables/DataService.html",[459,1.103,610,2.764]],["body/injectables/DataService.html",[3,0.119,4,0.119,9,0.104,20,0.384,21,0.868,24,1.076,27,1.007,28,0.013,30,0.266,31,0.329,32,0.119,33,0.149,94,0.788,128,2.252,144,1.303,154,0.009,155,0.009,223,5.207,224,1.062,259,0.65,260,1.037,261,0.963,281,1.333,303,1.359,323,1.024,351,4.084,456,2.821,459,1.63,460,1.315,464,1.85,465,1.784,610,4.084,632,1.481,691,2.275,699,3.835,705,2.163,709,2.574,710,6.103,715,3.697,719,2.638,725,2.358,726,2.539,806,3.718,807,3.435,849,3.622,852,3.622,1120,3.622,1161,4.084,1263,3.269,1304,3.98,1305,4.384,1306,5.261,1307,4.556,1308,5.062,1309,7.527,1310,5.261,1311,4.556,1312,5.261,1313,6.023,1314,5.261,1315,4.556,1316,5.261,1317,4.556,1318,5.261,1319,5.261,1320,3.98,1321,5.225,1322,4.556,1323,6.023,1324,5.261,1325,6.023,1326,2.74,1327,4.556]],["title/classes/EmailValidation.html",[33,0.133,1328,2.967]],["body/classes/EmailValidation.html",[3,0.152,4,0.152,9,0.133,20,0.49,21,1.013,24,0.839,27,0.873,28,0.013,30,0.229,32,0.152,33,0.19,94,0.798,154,0.01,155,0.01,177,1.915,221,1.472,224,0.75,259,0.466,260,0.809,261,0.75,268,1.385,280,4.025,303,1.258,314,1.342,315,2.122,323,0.75,467,2.112,709,1.793,782,2.964,1328,5.117,1329,3.705,1330,5.082,1331,6.6,1332,7.031,1333,5.818,1334,6.141,1335,6.452,1336,6.141,1337,6.141,1338,6.855,1339,6.141,1340,6.141,1341,6.141,1342,4.228,1343,6.141,1344,4.597,1345,5.082,1346,5.082,1347,5.818,1348,6.6,1349,7.031,1350,5.818,1351,5.818,1352,5.818]],["title/components/FilterComponent.html",[0,0.248,114,1.002]],["body/components/FilterComponent.html",[0,0.415,1,0.844,2,1.328,3,0.132,4,0.093,5,0.991,6,0.991,7,0.991,8,0.959,9,0.081,11,1.286,12,1.653,13,0.844,14,2.36,15,2.293,16,1.416,18,1.416,20,0.299,21,0.73,22,1.804,23,0.695,24,1.097,27,0.847,28,0.013,29,1.476,30,0.233,31,0.256,32,0.093,33,0.116,36,1.488,38,2.057,39,2.883,40,1.615,41,1.615,42,2.406,43,1.984,44,2.58,45,1.756,50,2.401,51,1.339,56,2.511,57,2.406,58,2.131,59,1.836,61,2.401,62,1.683,64,2.589,65,1.553,66,2.057,70,1.924,71,3.68,76,2.93,80,2.968,81,2.827,83,1.207,84,2.493,88,0.718,89,1.416,90,1.416,91,0.991,92,1.441,93,0.991,94,0.624,95,0.991,96,0.844,97,0.991,98,0.872,99,0.991,100,0.872,101,0.9,102,1.416,103,0.844,104,1.55,105,1.653,106,0.844,107,1.638,108,1.653,109,0.872,110,0.959,111,0.991,112,0.844,113,1.653,114,1.746,115,0.991,116,0.872,117,2.148,118,0.817,119,0.991,120,0.844,121,0.767,122,0.872,123,1.286,124,1.328,125,1.416,126,0.872,127,0.872,128,1.328,129,1.416,130,0.872,131,1.416,132,0.872,133,0.9,134,1.416,135,0.872,136,0.959,137,0.844,138,0.872,139,0.872,140,0.9,141,0.844,142,0.991,143,0.872,144,0.767,145,0.872,146,1.339,147,0.844,148,0.844,149,0.844,150,0.872,151,0.9,152,0.991,153,0.991,154,0.007,155,0.007,169,2.695,177,1.167,200,0.929,208,0.757,222,3.197,224,0.457,242,2.511,256,2.511,259,0.517,260,0.493,261,0.457,265,1.561,314,1.169,323,0.457,373,2.511,374,2.493,375,2.406,379,3.422,383,2.401,389,2.695,391,2.58,392,2.057,393,1.439,436,3.151,453,1.511,466,1.553,474,2.083,489,2.526,519,3.064,550,2.404,556,2.404,557,2.404,566,2.136,572,2.801,632,2.006,691,1.914,696,3.227,715,2.309,725,1.984,743,1.725,749,2.58,772,2.75,779,3.688,785,3.331,787,3.21,793,2.309,830,2.131,832,3.436,835,3.227,836,2.801,935,1.494,960,3.227,977,2.89,979,2.511,980,2.625,994,3.236,1198,3.68,1270,2.801,1271,2.406,1275,1.836,1276,1.836,1277,1.615,1285,2.58,1342,2.131,1353,3.096,1354,5.914,1355,5.067,1356,5.636,1357,5.636,1358,5.636,1359,5.636,1360,5.165,1361,5.165,1362,3.545,1363,4.845,1364,5.067,1365,3.545,1366,4.004,1367,5.067,1368,3.545,1369,3.545,1370,3.545,1371,3.545,1372,3.688,1373,3.227,1374,3.545,1375,4.004,1376,3.545,1377,4.27,1378,2.257,1379,2.404,1380,2.801,1381,4.109,1382,4.376,1383,5.098,1384,4.697,1385,5.098,1386,4.376,1387,4.426,1388,3.096,1389,4.426,1390,3.096,1391,3.096,1392,3.096,1393,3.096,1394,3.096,1395,3.096,1396,4.426,1397,3.096,1398,3.545,1399,3.096,1400,4.426,1401,2.58,1402,3.096,1403,4.426,1404,4.426,1405,4.426,1406,4.426,1407,2.89,1408,2.801,1409,2.801,1410,4.004,1411,2.801,1412,2.801,1413,2.801,1414,3.096,1415,3.096,1416,2.58,1417,2.257,1418,2.801,1419,3.096]],["title/components/FilterMobileComponent.html",[0,0.248,116,1.002]],["body/components/FilterMobileComponent.html",[0,0.41,1,0.818,2,1.298,3,0.129,4,0.09,5,0.96,6,0.96,7,0.96,8,0.929,9,0.079,11,1.257,12,1.624,13,0.818,14,2.354,15,2.279,16,1.384,18,1.384,20,0.289,21,0.714,22,1.777,23,0.972,24,1.105,27,0.872,28,0.013,29,1.519,30,0.251,31,0.248,32,0.09,33,0.112,36,1.467,38,2.359,39,2.94,40,2.647,41,2.647,42,2.351,43,1.939,50,1.394,57,2.351,58,2.065,61,2.359,62,1.63,64,2.561,65,1.504,66,2.011,70,1.864,71,3.627,80,2.359,81,2.545,84,1.447,88,0.696,89,1.384,90,1.384,91,0.96,92,1.42,93,0.96,94,0.613,95,0.96,96,0.818,97,0.96,98,0.844,99,0.96,100,0.844,101,0.872,102,1.384,103,0.818,104,1.298,105,1.624,106,0.818,107,1.257,108,1.624,109,0.844,110,0.929,111,0.96,112,0.818,113,1.624,114,0.844,115,0.96,116,1.564,117,2.165,118,0.792,119,0.96,120,0.818,121,0.743,122,0.844,123,1.257,124,1.298,125,1.384,126,0.844,127,0.844,128,1.298,129,1.384,130,0.844,131,1.384,132,0.844,133,0.872,134,1.384,135,0.844,136,2.143,137,0.818,138,0.844,139,0.844,140,0.872,141,0.818,142,0.96,143,0.844,144,0.743,145,0.844,146,1.247,147,0.818,148,0.818,149,0.818,150,0.844,151,0.872,152,0.96,153,0.96,154,0.007,155,0.007,169,2.647,177,1.13,179,1.093,200,0.9,208,0.74,222,3.151,224,0.443,235,2.21,242,3.151,256,2.454,259,0.51,260,0.477,261,0.443,265,1.526,281,0.794,311,1.169,314,1.142,323,0.749,324,1.256,374,2.088,375,2.351,379,3.4,383,2.359,389,2.647,392,1.394,393,1.394,436,2.961,453,1.896,474,2.24,489,2.489,519,3.019,566,2.088,572,2.713,632,1.929,691,1.871,715,2.257,743,2.165,772,2.688,779,3.605,784,3.154,785,3.3,787,3.153,831,2.186,832,3.359,836,2.713,935,1.447,960,3.154,977,2.825,979,3.151,980,2.565,994,2.898,1056,2.328,1058,3.359,1059,4.59,1060,3.913,1072,2.999,1089,3.605,1154,4.006,1158,3.605,1198,3.627,1270,2.713,1271,1.63,1275,1.778,1276,1.778,1277,1.565,1342,2.065,1356,5.554,1357,5.554,1358,5.554,1359,5.554,1360,5.074,1361,5.074,1363,4.72,1372,3.605,1373,3.154,1375,3.913,1377,4.054,1378,4.808,1380,2.713,1381,4.049,1382,4.312,1383,3.913,1384,4.629,1385,3.913,1386,4.312,1387,2.999,1388,2.999,1389,4.326,1390,2.999,1391,2.999,1392,2.999,1393,2.999,1394,2.999,1395,2.999,1396,4.326,1397,2.999,1399,2.999,1400,4.326,1401,2.499,1402,2.999,1403,4.326,1404,4.326,1405,4.326,1406,4.326,1412,2.713,1413,2.713,1414,2.999,1415,2.999,1416,2.499,1417,2.186,1420,6.78,1421,5.65,1422,5.024,1423,2.328,1424,4.952,1425,4.952,1426,3.605,1427,4.326,1428,3.433,1429,3.433,1430,3.433,1431,3.433,1432,3.433,1433,3.913,1434,4.952,1435,5.55,1436,3.605,1437,3.433,1438,3.433,1439,2.328,1440,3.913,1441,3.433]],["title/injectables/FilterService.html",[459,1.103,1363,2.596]],["body/injectables/FilterService.html",[3,0.143,4,0.143,9,0.125,20,0.461,21,0.977,24,1.108,27,0.954,28,0.013,29,1.466,30,0.29,31,0.396,32,0.143,33,0.179,94,0.578,117,2.192,154,0.01,155,0.01,177,1.804,200,1.436,208,1.012,224,0.707,247,3.358,256,3.809,259,0.439,260,0.761,261,0.707,268,1.305,283,3.504,314,1.697,323,0.707,324,1.591,379,3.526,436,3.474,459,1.834,460,1.582,464,2.224,465,2.145,467,1.531,489,2.653,519,3.218,632,2.006,705,2.601,719,2.969,725,2.653,726,2.857,729,5.354,735,4.906,1198,3.124,1342,3.294,1363,4.315,1373,4.315,1377,4.751,1382,3.715,1383,5.354,1384,3.987,1385,5.354,1386,3.715,1442,4.785,1443,7.358,1444,7.688,1445,7.688,1446,6.777,1447,5.478,1448,5.478,1449,6.777,1450,5.478,1451,5.478,1452,5.478,1453,5.478,1454,5.478,1455,5.478]],["title/classes/FirebaseAuthService.html",[33,0.133,594,2.967]],["body/classes/FirebaseAuthService.html",[3,0.207,4,0.073,9,0.064,20,0.235,21,0.612,23,0.547,24,1.068,27,1.007,28,0.013,30,0.226,32,0.073,33,0.168,92,0.623,94,0.793,133,1.305,138,0.686,140,1.305,144,0.918,146,1.684,154,0.006,155,0.006,170,2.333,208,0.924,215,3.168,221,1.363,222,2.104,224,0.797,226,2.901,228,2.254,247,2.547,250,2.623,255,1.935,256,3.226,258,1.86,259,0.543,260,0.859,261,0.741,263,2.968,268,1.368,269,2.833,271,3.355,274,3.455,275,5.306,280,3.092,281,1.205,282,3.131,285,2.976,288,3.526,290,2.422,291,2.305,294,5.078,295,3.118,296,2.663,297,2.104,298,3.708,300,3.355,301,2.728,305,3.092,314,1.325,323,0.741,324,1.112,332,1.514,341,2.437,344,2.704,346,3.486,436,2.422,439,2.547,450,2.879,453,1.713,454,4.192,455,4.071,456,2.719,458,2.753,460,1.484,461,1.382,466,1.222,467,1.95,474,1.496,481,5.145,493,3.277,494,2.016,498,2.547,504,2.199,515,3.355,525,3.658,594,4.182,596,2.204,597,2.15,631,2.276,632,1.848,634,2.879,691,2.557,693,4.443,700,3.355,707,5.688,708,3.916,709,2.455,711,2.879,712,3.708,719,2.517,720,3.708,722,3.09,723,3.196,725,2.549,726,2.941,727,2.437,729,2.204,731,2.437,733,2.437,736,1.776,737,2.104,745,3.708,746,5.4,752,3.09,757,4.49,778,1.724,782,2.745,802,1.548,863,1.892,887,3.202,895,2.437,953,2.305,959,3.118,973,2.199,994,1.935,1138,2.879,1177,2.422,1216,2.879,1259,2.437,1263,2.305,1329,1.776,1456,3.486,1457,2.437,1458,2.879,1459,6.977,1460,2.79,1461,2.79,1462,4.246,1463,2.879,1464,4.182,1465,4.246,1466,4.246,1467,5.202,1468,2.79,1469,2.79,1470,2.79,1471,2.79,1472,2.79,1473,4.246,1474,3.09,1475,4.182,1476,3.09,1477,6.977,1478,4.246,1479,4.182,1480,5.745,1481,3.09,1482,4.246,1483,2.79,1484,3.09,1485,3.09,1486,3.09,1487,4.246,1488,3.708,1489,2.79,1490,4.732,1491,4.928,1492,4.5,1493,6.512,1494,3.355,1495,4.192,1496,4.182,1497,4.246,1498,2.79,1499,3.09,1500,4.591,1501,5.14,1502,5.14,1503,5.14,1504,5.14,1505,2.79,1506,3.09,1507,3.09,1508,2.879,1509,3.708,1510,4.246,1511,4.246,1512,4.246,1513,4.246,1514,2.879,1515,2.79,1516,4.246,1517,5.745,1518,4.246,1519,4.246,1520,4.246,1521,4.246,1522,4.246,1523,5.14,1524,4.246,1525,3.273,1526,2.79,1527,1.892,1528,2.79,1529,2.79,1530,4.246,1531,4.246,1532,2.79,1533,4.246,1534,4.246,1535,4.246,1536,4.246,1537,2.03,1538,2.79,1539,2.79,1540,4.246,1541,4.246,1542,4.246,1543,4.246,1544,4.246,1545,2.79,1546,2.79,1547,4.246,1548,4.246,1549,2.79,1550,2.79,1551,2.79,1552,2.79,1553,4.246,1554,2.79,1555,2.79,1556,5.14,1557,5.14,1558,2.79,1559,2.79,1560,2.79,1561,2.79,1562,2.79,1563,2.704,1564,2.79,1565,2.79,1566,2.305,1567,2.79,1568,2.79,1569,2.79,1570,2.79,1571,2.79,1572,2.437,1573,2.79,1574,2.79,1575,2.79,1576,2.79,1577,2.79,1578,2.79,1579,2.79,1580,2.79,1581,2.79,1582,2.79,1583,2.79,1584,2.03,1585,2.79,1586,2.79]],["title/classes/FirebaseDataService.html",[33,0.133,1587,3.221]],["body/classes/FirebaseDataService.html",[3,0.093,4,0.093,9,0.081,20,0.299,21,1.024,23,0.696,24,1.024,27,0.98,28,0.013,30,0.254,32,0.093,33,0.116,51,2.235,58,2.134,94,0.847,144,1.097,154,0.007,155,0.007,201,3.55,223,4.523,224,1.027,230,2.439,235,1.926,237,3.23,258,2.222,259,0.672,260,0.987,261,0.916,276,4.007,281,1.302,303,1.333,305,2.408,323,0.982,351,3.44,442,2.134,447,3.23,453,1.513,454,3.44,456,2.764,458,2.917,460,1.025,461,1.759,467,2.127,498,3.199,597,2.253,610,5.071,631,2.599,632,1.747,691,1.916,709,2.488,715,2.312,719,3.276,725,1.985,726,2.722,737,1.759,778,2.059,806,3.345,807,3.683,849,4.271,852,3.883,859,4.43,860,2.26,863,2.407,887,2.627,953,2.753,973,2.627,1003,2.727,1093,3.692,1177,2.893,1263,2.753,1305,3.692,1306,4.43,1308,5.534,1309,7.006,1310,4.43,1312,4.43,1314,4.43,1316,4.43,1318,4.43,1320,4.43,1321,4.7,1324,4.43,1326,3.559,1329,2.26,1456,3.44,1458,3.44,1467,4.971,1488,4.43,1490,5.237,1495,5.44,1500,5.825,1508,3.44,1514,4.379,1527,2.407,1572,3.1,1587,5.102,1588,3.1,1589,3.1,1590,3.549,1591,5.072,1592,5.072,1593,4.7,1594,3.44,1595,3.549,1596,5.072,1597,7.103,1598,7.103,1599,3.549,1600,6.457,1601,6.457,1602,5.072,1603,3.549,1604,3.692,1605,3.549,1606,5.072,1607,5.072,1608,3.549,1609,3.692,1610,5.072,1611,5.072,1612,5.072,1613,3.549,1614,3.549,1615,3.549,1616,3.549,1617,3.549,1618,3.692,1619,3.692,1620,2.26,1621,3.1,1622,5.072,1623,3.1,1624,3.1,1625,3.549,1626,5.918,1627,3.549,1628,3.549,1629,3.549,1630,5.072,1631,5.072,1632,3.692,1633,3.549,1634,5.072,1635,3.549,1636,3.549,1637,3.549,1638,3.549]],["title/interfaces/FirebaseDocument.html",[923,1.177,1639,2.764]],["body/interfaces/FirebaseDocument.html",[3,0.064,4,0.037,9,0.161,13,0.769,20,0.12,27,0.987,28,0.013,29,0.698,30,0.2,31,0.103,32,0.1,33,0.046,43,0.556,51,0.537,83,0.484,92,0.317,94,0.726,101,0.361,121,0.307,123,0.361,144,1.024,146,1.497,151,0.361,154,0.004,155,0.004,170,1.311,200,1.937,201,2.765,208,0.647,221,1.728,222,1.6,223,2.759,224,0.416,226,2.893,227,0.736,228,2.871,230,2.2,231,0.484,234,2.854,239,0.854,240,0.647,244,0.675,247,2.347,250,1.264,256,0.704,258,1.682,259,0.527,262,1.214,263,2.159,265,0.438,268,1.637,269,1.923,273,2.571,274,0.854,278,4.239,279,1.034,280,3.265,281,1.286,282,3.082,283,1.974,284,3.016,285,3.408,292,1.034,293,2.759,295,1.753,296,2.244,297,2.779,301,1.163,303,1.338,305,0.675,307,3.094,310,2.19,311,0.834,314,0.328,315,1.178,323,1.013,324,1.213,333,2.223,337,3.048,343,0.963,344,3.231,345,1.034,346,2.604,347,2.19,350,3.153,356,1.034,361,0.854,373,0.704,379,0.622,386,2.244,411,2.979,433,1.903,436,0.599,439,0.704,444,2.19,445,1.034,447,0.905,449,5.429,450,4.663,451,2.119,453,0.963,456,1.426,457,2.19,458,0.925,459,0.663,460,0.707,464,0.577,465,0.556,467,2.102,474,1.138,489,0.556,493,0.81,494,1.823,495,1.989,498,3.637,504,2.453,519,1.163,597,0.438,631,2.161,632,1.849,634,1.661,644,1.56,691,1.22,693,2.445,694,1.034,697,2.249,698,0.736,699,1.56,708,0.854,709,2.291,715,0.647,719,1.898,723,0.995,725,1.696,726,1.033,735,3.956,736,0.905,741,1.661,743,0.834,751,1.034,755,1.034,781,1.269,782,2.773,800,1.073,802,0.518,803,0.905,806,1.673,807,0.81,849,0.854,850,0.963,852,1.473,874,1.783,888,2.35,897,1.034,905,1.034,918,1.034,923,0.932,924,0.647,953,0.771,956,0.736,967,0.854,973,0.736,994,1.116,1003,2.565,1031,2.057,1033,3.224,1036,3.224,1037,1.473,1100,1.034,1111,1.034,1120,2.605,1126,4.083,1138,2.19,1168,1.034,1176,2.35,1177,0.81,1180,0.963,1181,2.445,1193,0.963,1204,1.034,1206,1.034,1216,1.661,1229,0.963,1230,3.2,1260,1.034,1263,2.084,1277,0.647,1373,0.905,1417,0.905,1464,1.034,1475,1.034,1476,1.034,1479,2.35,1481,1.034,1484,1.034,1485,1.783,1486,3.447,1490,4.904,1491,5.005,1492,2.35,1495,5.354,1496,1.034,1499,1.034,1500,5.546,1506,1.034,1507,1.034,1508,5.1,1514,0.963,1525,2.445,1537,2.795,1593,4.605,1604,2.35,1609,1.034,1618,2.795,1619,3.153,1632,1.034,1639,3.949,1640,1.034,1641,4.237,1642,1.123,1643,1.123,1644,1.936,1645,1.123,1646,1.123,1647,1.123,1648,1.123,1649,2.551,1650,1.123,1651,1.123,1652,2.551,1653,3.423,1654,1.123,1655,1.936,1656,1.936,1657,1.123,1658,1.123,1659,1.034,1660,1.123,1661,1.123,1662,1.123,1663,1.123,1664,1.936,1665,1.123,1666,3.742,1667,3.034,1668,1.123,1669,1.936,1670,1.123,1671,1.936,1672,1.936,1673,1.034,1674,1.661,1675,1.123,1676,1.123,1677,1.783,1678,1.123,1679,1.123,1680,1.123,1681,1.123,1682,1.123,1683,1.123,1684,1.123,1685,1.123,1686,1.123,1687,1.123,1688,1.123,1689,2.35,1690,3.423,1691,1.783,1692,1.123,1693,1.936,1694,2.19,1695,1.034,1696,1.034,1697,1.034,1698,1.034,1699,1.034,1700,1.034,1701,1.034,1702,3.447,1703,1.123,1704,1.123,1705,1.123,1706,4.881,1707,1.123,1708,1.936,1709,1.123,1710,4.75,1711,1.123,1712,1.123,1713,1.123,1714,2.551,1715,1.123,1716,1.123,1717,1.123,1718,1.123,1719,1.123,1720,4.601,1721,1.936,1722,1.123,1723,1.936,1724,1.123,1725,1.123,1726,1.936,1727,1.936,1728,6.238,1729,2.551,1730,3.742,1731,1.123,1732,2.551,1733,1.123,1734,1.123,1735,1.123,1736,4.432,1737,1.56,1738,3.212,1739,3.212,1740,1.123,1741,1.123,1742,1.936,1743,2.445,1744,1.936,1745,3.034,1746,3.742,1747,3.153,1748,2.551,1749,1.123,1750,1.123,1751,1.936,1752,0.963,1753,1.123,1754,5.942,1755,2.056,1756,1.123,1757,1.123,1758,1.936,1759,3.423,1760,1.123,1761,0.963,1762,3.742,1763,1.936,1764,1.123,1765,2.551,1766,1.123,1767,1.936,1768,1.123,1769,1.123,1770,4.999,1771,5.972,1772,5.909,1773,4.601,1774,1.123,1775,3.423,1776,1.123,1777,1.123,1778,4.601,1779,1.123,1780,1.123,1781,1.123,1782,1.123,1783,1.123,1784,1.936,1785,1.123,1786,1.936,1787,2.551,1788,1.936,1789,2.551,1790,0.963,1791,1.123,1792,2.551,1793,1.936,1794,1.123,1795,1.034,1796,1.123,1797,1.123,1798,2.551,1799,1.936,1800,1.123,1801,1.936,1802,1.123,1803,2.551,1804,3.034,1805,1.123,1806,1.123,1807,4.237,1808,2.445,1809,1.123,1810,1.936,1811,3.423,1812,1.123,1813,2.551,1814,1.936,1815,2.19,1816,1.123,1817,3.441,1818,2.938,1819,1.123,1820,3.694,1821,2.35,1822,2.551,1823,1.936,1824,2.551,1825,1.123,1826,1.936,1827,1.123,1828,1.123,1829,1.936,1830,1.123,1831,1.123,1832,1.123,1833,1.123,1834,1.123,1835,1.123,1836,1.123,1837,1.123,1838,1.123,1839,1.123,1840,1.123,1841,2.551,1842,3.034,1843,1.123,1844,1.123,1845,1.123,1846,1.123,1847,1.123,1848,1.123,1849,1.123,1850,3.034,1851,1.123,1852,1.123,1853,1.123,1854,1.123,1855,1.123,1856,1.123,1857,1.123,1858,1.123,1859,3.034,1860,1.123,1861,1.034,1862,1.123,1863,1.123,1864,1.123,1865,3.034,1866,1.936,1867,1.123,1868,3.742,1869,1.123,1870,1.123,1871,1.123,1872,3.034,1873,3.034,1874,1.123,1875,1.936,1876,1.936,1877,1.123,1878,2.551,1879,1.123,1880,1.123,1881,1.936,1882,1.123,1883,3.423,1884,1.123,1885,2.551,1886,1.123,1887,1.123,1888,1.936,1889,3.034,1890,1.661,1891,1.123,1892,1.123,1893,1.123,1894,2.551,1895,3.016,1896,1.936,1897,1.123,1898,1.936,1899,1.123,1900,1.123,1901,1.123,1902,1.123,1903,1.936,1904,1.123,1905,0.963,1906,3.034,1907,2.551,1908,1.123,1909,1.123,1910,1.123,1911,1.123,1912,1.123,1913,1.123,1914,1.123,1915,1.123,1916,1.123,1917,1.034,1918,0.963,1919,1.936,1920,1.123,1921,1.936,1922,1.123,1923,1.123,1924,1.123,1925,1.123,1926,1.123,1927,1.123,1928,1.936,1929,1.123,1930,1.123,1931,1.123,1932,1.123,1933,1.123,1934,3.742,1935,1.123,1936,1.123,1937,1.123,1938,3.742,1939,1.034,1940,1.123,1941,3.034,1942,1.123,1943,1.936,1944,1.123,1945,1.123,1946,1.123,1947,1.123]],["title/classes/FirebaseMediaService.html",[33,0.133,600,2.764]],["body/classes/FirebaseMediaService.html",[3,0.128,4,0.128,9,0.186,20,0.414,21,1.065,23,0.964,24,0.912,27,0.917,28,0.013,30,0.276,32,0.165,33,0.16,83,2.798,92,1.413,94,0.668,154,0.009,155,0.009,224,0.816,226,3.065,230,2.39,235,2.204,237,4.029,240,2.884,250,2.083,259,0.507,260,0.879,261,0.816,281,1.185,282,2.772,283,2.884,293,4.457,295,3.435,296,3.278,303,1.185,323,0.816,386,3.278,430,4.029,453,1.887,456,2.724,458,2.791,460,1.419,466,2.153,467,1.374,597,2.454,600,5.012,601,3.883,606,4.215,631,2.536,632,1.208,697,3.004,698,3.278,709,2.156,778,2.569,800,2.153,860,3.129,923,1.419,959,4.151,1003,1.792,1093,4.606,1181,4.029,1214,3.883,1230,3.997,1329,3.129,1456,4.291,1458,4.291,1463,4.291,1467,3.577,1527,3.333,1589,4.292,1594,4.291,1694,4.291,1737,4.029,1738,4.291,1739,5.012,1743,4.029,1755,5.071,1790,3.333,1817,5.309,1818,4.291,1905,4.291,1948,3.883,1949,4.914,1950,5.527,1951,5.527,1952,5.527,1953,5,1954,5,1955,4.914,1956,5.527,1957,5.527,1958,5,1959,5.527,1960,5.527,1961,5.527,1962,5.527,1963,6.113,1964,3.333,1965,3.333,1966,3.333,1967,3.333,1968,4.292,1969,4.292,1970,4.292,1971,4.292,1972,4.292,1973,4.292,1974,4.292,1975,4.292]],["title/interfaces/FirebaseStorageFile.html",[923,1.177,1674,2.764]],["body/interfaces/FirebaseStorageFile.html",[3,0.064,4,0.037,9,0.165,13,0.769,20,0.12,27,0.987,28,0.013,29,0.698,30,0.2,31,0.103,32,0.1,33,0.046,43,0.556,51,0.537,83,0.484,92,0.317,94,0.726,101,0.361,121,0.307,123,0.361,144,1.024,146,1.497,151,0.361,154,0.004,155,0.004,170,1.311,200,1.937,201,3.004,208,0.647,221,1.728,222,1.6,223,2.759,224,0.416,226,2.893,227,0.736,228,2.871,230,2.2,231,0.484,234,2.854,239,0.854,240,0.647,244,0.675,247,2.347,250,1.264,256,0.704,258,1.682,259,0.527,262,1.214,263,2.159,265,0.438,268,1.637,269,1.923,273,2.571,274,0.854,278,4.239,279,1.034,280,3.265,281,1.278,282,3.082,283,1.974,284,3.016,285,3.408,292,1.034,293,2.759,295,1.753,296,2.244,297,2.779,301,1.163,303,1.34,305,0.675,307,3.094,310,2.19,311,0.834,314,0.328,315,1.178,323,1.013,324,1.213,333,2.223,337,3.048,343,0.963,344,3.231,345,1.034,346,2.604,347,2.19,350,3.153,356,1.034,361,0.854,373,0.704,379,0.622,386,2.244,411,2.979,433,1.903,436,0.599,439,0.704,444,2.19,445,1.034,447,0.905,449,5.429,450,4.663,451,2.119,453,0.963,456,1.426,457,2.19,458,0.925,459,0.663,460,0.707,464,0.577,465,0.556,467,2.102,474,1.138,489,0.556,493,0.81,494,1.823,495,1.989,498,3.637,504,2.453,519,1.163,597,0.438,631,2.161,632,1.849,634,1.661,644,1.56,691,1.22,693,2.445,694,1.034,697,2.249,698,0.736,699,1.56,708,0.854,709,2.291,715,0.647,719,1.898,723,0.995,725,1.696,726,1.033,735,3.956,736,0.905,741,1.661,743,0.834,751,1.034,755,1.034,781,1.269,782,2.773,800,1.073,802,0.518,803,0.905,806,1.673,807,0.81,849,0.854,850,0.963,852,1.473,874,1.783,888,2.35,897,1.034,905,1.034,918,1.034,923,0.932,924,0.647,953,0.771,956,0.736,967,0.854,973,0.736,994,1.116,1003,2.475,1031,2.057,1033,3.224,1036,3.224,1037,1.473,1100,1.034,1111,1.034,1120,2.605,1126,4.083,1138,2.19,1168,1.034,1176,2.35,1177,0.81,1180,0.963,1181,2.445,1193,0.963,1204,1.034,1206,1.034,1216,1.661,1229,0.963,1230,3.2,1260,1.034,1263,2.084,1277,0.647,1373,0.905,1417,0.905,1464,1.034,1475,1.034,1476,1.034,1479,2.35,1481,1.034,1484,1.034,1485,1.783,1486,3.447,1490,4.904,1491,5.005,1492,2.35,1495,5.354,1496,1.034,1499,1.034,1500,5.546,1506,1.034,1507,1.034,1508,5.1,1514,0.963,1525,2.445,1537,2.795,1593,4.605,1604,2.35,1609,1.034,1618,2.795,1619,3.153,1632,1.034,1639,3.804,1640,1.034,1641,3.742,1642,1.123,1643,1.123,1644,1.936,1645,1.123,1646,1.123,1647,1.123,1648,1.123,1649,2.551,1650,1.123,1651,1.123,1652,2.551,1653,3.423,1654,1.123,1655,1.936,1656,1.936,1657,1.123,1658,1.123,1659,1.034,1660,1.123,1661,1.123,1662,1.123,1663,1.123,1664,1.936,1665,1.123,1666,3.742,1667,3.034,1668,1.123,1669,1.936,1670,1.123,1671,1.936,1672,1.936,1673,1.034,1674,2.19,1675,1.123,1676,1.123,1677,1.783,1678,1.123,1679,1.123,1680,1.123,1681,1.123,1682,1.123,1683,1.123,1684,1.123,1685,1.123,1686,1.123,1687,1.123,1688,1.123,1689,2.35,1690,3.423,1691,1.783,1692,1.123,1693,1.936,1694,2.19,1695,1.034,1696,1.034,1697,1.034,1698,1.034,1699,1.034,1700,1.034,1701,1.034,1702,3.447,1703,1.123,1704,1.123,1705,1.123,1706,4.881,1707,1.123,1708,1.936,1709,1.123,1710,4.75,1711,1.123,1712,1.123,1713,1.123,1714,2.551,1715,1.123,1716,1.123,1717,1.123,1718,1.123,1719,1.123,1720,4.601,1721,1.936,1722,1.123,1723,1.936,1724,1.123,1725,1.123,1726,1.936,1727,1.936,1728,6.238,1729,2.551,1730,3.742,1731,1.123,1732,2.551,1733,1.123,1734,1.123,1735,1.123,1736,4.432,1737,1.56,1738,3.212,1739,3.212,1740,1.123,1741,1.123,1742,1.936,1743,2.445,1744,1.936,1745,3.034,1746,3.742,1747,3.153,1748,2.551,1749,1.123,1750,1.123,1751,1.936,1752,0.963,1753,1.123,1754,5.942,1755,2.056,1756,1.123,1757,1.123,1758,1.936,1759,3.423,1760,1.123,1761,0.963,1762,3.742,1763,1.936,1764,1.123,1765,2.551,1766,1.123,1767,1.936,1768,1.123,1769,1.123,1770,4.999,1771,5.972,1772,5.909,1773,4.601,1774,1.123,1775,3.423,1776,1.123,1777,1.123,1778,4.601,1779,1.123,1780,1.123,1781,1.123,1782,1.123,1783,1.123,1784,1.936,1785,1.123,1786,1.936,1787,2.551,1788,1.936,1789,2.551,1790,0.963,1791,1.123,1792,2.551,1793,1.936,1794,1.123,1795,1.034,1796,1.123,1797,1.123,1798,2.551,1799,1.936,1800,1.123,1801,1.936,1802,1.123,1803,2.551,1804,3.034,1805,1.123,1806,1.123,1807,4.237,1808,2.445,1809,1.123,1810,1.936,1811,3.423,1812,1.123,1813,2.551,1814,1.936,1815,2.19,1816,1.123,1817,3.441,1818,2.938,1819,1.123,1820,3.694,1821,2.35,1822,2.551,1823,1.936,1824,2.551,1825,1.123,1826,1.936,1827,1.123,1828,1.123,1829,1.936,1830,1.123,1831,1.123,1832,1.123,1833,1.123,1834,1.123,1835,1.123,1836,1.123,1837,1.123,1838,1.123,1839,1.123,1840,1.123,1841,2.551,1842,3.034,1843,1.123,1844,1.123,1845,1.123,1846,1.123,1847,1.123,1848,1.123,1849,1.123,1850,3.034,1851,1.123,1852,1.123,1853,1.123,1854,1.123,1855,1.123,1856,1.123,1857,1.123,1858,1.123,1859,3.034,1860,1.123,1861,1.034,1862,1.123,1863,1.123,1864,1.123,1865,3.034,1866,1.936,1867,1.123,1868,3.742,1869,1.123,1870,1.123,1871,1.123,1872,3.034,1873,3.034,1874,1.123,1875,1.936,1876,1.936,1877,1.123,1878,2.551,1879,1.123,1880,1.123,1881,1.936,1882,1.123,1883,3.423,1884,1.123,1885,2.551,1886,1.123,1887,1.123,1888,1.936,1889,3.034,1890,1.661,1891,1.123,1892,1.123,1893,1.123,1894,2.551,1895,3.016,1896,1.936,1897,1.123,1898,1.936,1899,1.123,1900,1.123,1901,1.123,1902,1.123,1903,1.936,1904,1.123,1905,0.963,1906,3.034,1907,2.551,1908,1.123,1909,1.123,1910,1.123,1911,1.123,1912,1.123,1913,1.123,1914,1.123,1915,1.123,1916,1.123,1917,1.034,1918,0.963,1919,1.936,1920,1.123,1921,1.936,1922,1.123,1923,1.123,1924,1.123,1925,1.123,1926,1.123,1927,1.123,1928,1.936,1929,1.123,1930,1.123,1931,1.123,1932,1.123,1933,1.123,1934,3.742,1935,1.123,1936,1.123,1937,1.123,1938,3.742,1939,1.034,1940,1.123,1941,3.034,1942,1.123,1943,1.936,1944,1.123,1945,1.123,1946,1.123,1947,1.123]],["title/interfaces/FirebaseUserCredential.html",[923,1.177,1525,2.596]],["body/interfaces/FirebaseUserCredential.html",[3,0.064,4,0.037,9,0.161,13,0.77,20,0.12,27,0.987,28,0.013,29,0.699,30,0.2,31,0.103,32,0.1,33,0.046,43,0.557,51,0.538,83,0.485,92,0.318,94,0.726,101,0.361,121,0.308,123,0.361,144,1.025,146,1.516,151,0.361,154,0.004,155,0.004,170,1.313,200,1.938,201,2.767,208,0.648,221,1.728,222,1.602,223,2.762,224,0.417,226,2.894,227,0.737,228,2.872,230,2.201,231,0.485,234,2.857,239,0.856,240,0.649,244,0.676,247,2.349,250,1.266,256,0.705,258,1.684,259,0.518,262,1.216,263,2.161,265,0.439,268,1.638,269,1.925,273,2.574,274,0.856,278,4.242,279,1.036,280,3.266,281,1.278,282,3.083,283,1.977,284,3.019,285,3.41,292,1.036,293,2.762,295,1.755,296,2.247,297,2.781,301,1.165,303,1.336,305,0.676,307,3.095,310,2.193,311,0.835,314,0.328,315,1.179,323,1.013,324,1.214,333,2.225,337,3.05,343,0.965,344,3.235,345,1.036,346,2.608,347,2.193,350,3.157,356,1.036,361,0.856,373,0.705,379,0.624,386,2.247,411,2.981,433,1.905,436,0.6,439,0.705,444,2.193,445,1.036,447,0.906,449,5.431,450,4.665,451,2.12,453,0.964,456,1.428,457,2.193,458,0.927,459,0.664,460,0.708,464,0.578,465,0.557,467,2.103,474,1.139,489,0.557,493,0.812,494,1.826,495,1.992,498,3.638,504,2.456,519,1.165,597,0.439,631,2.162,632,1.85,634,1.664,644,1.562,691,1.221,693,2.448,694,1.036,697,2.251,698,0.737,699,1.562,708,0.856,709,2.292,715,0.649,719,1.9,723,0.996,725,1.698,726,1.034,735,3.958,736,0.906,741,1.664,743,0.835,751,1.036,755,1.036,781,1.271,782,2.775,800,1.075,802,0.519,803,0.906,806,1.675,807,0.812,849,0.856,850,0.965,852,1.475,874,1.786,888,2.354,897,1.036,905,1.036,918,1.036,923,0.934,924,0.649,953,0.773,956,0.737,967,0.856,973,0.737,994,1.118,1003,2.476,1031,2.059,1033,3.227,1036,3.227,1037,1.475,1100,1.036,1111,1.036,1120,2.608,1126,4.086,1138,2.193,1168,1.036,1176,2.354,1177,0.812,1180,0.965,1181,2.448,1193,0.965,1204,1.036,1206,1.036,1216,1.664,1229,0.965,1230,3.202,1260,1.036,1263,2.087,1277,0.649,1373,0.906,1417,0.906,1464,1.036,1475,1.036,1476,1.036,1479,2.354,1481,1.036,1484,1.036,1485,1.786,1486,3.451,1490,4.906,1491,5.007,1492,2.354,1495,5.355,1496,1.036,1499,1.036,1500,5.547,1506,1.036,1507,1.036,1508,5.102,1514,0.965,1525,2.762,1537,2.799,1593,4.608,1604,2.354,1609,1.036,1618,2.799,1619,3.157,1632,1.036,1639,3.807,1640,1.036,1641,3.746,1642,1.125,1643,1.125,1644,1.939,1645,1.125,1646,1.125,1647,1.125,1648,1.125,1649,2.555,1650,1.125,1651,1.125,1652,2.555,1653,3.427,1654,1.125,1655,1.939,1656,1.939,1657,1.125,1658,1.125,1659,1.036,1660,1.125,1661,1.125,1662,1.125,1663,1.125,1664,1.939,1665,1.125,1666,3.746,1667,3.038,1668,1.125,1669,1.939,1670,1.125,1671,1.939,1672,3.038,1673,1.036,1674,1.664,1675,1.125,1676,1.125,1677,1.786,1678,1.125,1679,1.125,1680,1.125,1681,1.125,1682,1.125,1683,1.125,1684,1.125,1685,1.125,1686,1.125,1687,1.125,1688,1.125,1689,2.354,1690,3.427,1691,1.786,1692,1.125,1693,1.939,1694,2.193,1695,1.036,1696,1.036,1697,1.036,1698,1.036,1699,1.036,1700,1.036,1701,1.036,1702,3.451,1703,1.125,1704,1.125,1705,1.125,1706,4.885,1707,1.125,1708,1.939,1709,1.125,1710,4.753,1711,1.125,1712,1.125,1713,1.125,1714,2.555,1715,1.125,1716,1.125,1717,1.125,1718,1.125,1719,1.125,1720,4.605,1721,1.939,1722,1.125,1723,1.939,1724,1.125,1725,1.125,1726,1.939,1727,1.939,1728,6.239,1729,2.555,1730,3.746,1731,1.125,1732,2.555,1733,1.125,1734,1.125,1735,1.125,1736,4.435,1737,1.562,1738,3.215,1739,3.215,1740,1.125,1741,1.125,1742,1.939,1743,2.448,1744,1.939,1745,3.038,1746,3.746,1747,3.157,1748,2.555,1749,1.125,1750,1.125,1751,1.939,1752,0.965,1753,1.125,1754,5.944,1755,2.059,1756,1.125,1757,1.125,1758,1.939,1759,3.427,1760,1.125,1761,0.965,1762,3.746,1763,1.939,1764,1.125,1765,2.555,1766,1.125,1767,1.939,1768,1.125,1769,1.125,1770,5.002,1771,5.974,1772,5.912,1773,4.605,1774,1.125,1775,3.427,1776,1.125,1777,1.125,1778,4.605,1779,1.125,1780,1.125,1781,1.125,1782,1.125,1783,1.125,1784,1.939,1785,1.125,1786,1.939,1787,2.555,1788,1.939,1789,2.555,1790,0.965,1791,1.125,1792,2.555,1793,1.939,1794,1.125,1795,1.036,1796,1.125,1797,1.125,1798,2.555,1799,1.939,1800,1.125,1801,1.939,1802,1.125,1803,2.555,1804,3.038,1805,1.125,1806,1.125,1807,4.24,1808,2.448,1809,1.125,1810,1.939,1811,3.427,1812,1.125,1813,2.555,1814,1.939,1815,2.193,1816,1.125,1817,3.445,1818,2.941,1819,1.125,1820,3.697,1821,2.354,1822,2.555,1823,1.939,1824,2.555,1825,1.125,1826,1.939,1827,1.125,1828,1.125,1829,1.939,1830,1.125,1831,1.125,1832,1.125,1833,1.125,1834,1.125,1835,1.125,1836,1.125,1837,1.125,1838,1.125,1839,1.125,1840,1.125,1841,2.555,1842,3.038,1843,1.125,1844,1.125,1845,1.125,1846,1.125,1847,1.125,1848,1.125,1849,1.125,1850,3.038,1851,1.125,1852,1.125,1853,1.125,1854,1.125,1855,1.125,1856,1.125,1857,1.125,1858,1.125,1859,3.038,1860,1.125,1861,1.036,1862,1.125,1863,1.125,1864,1.125,1865,3.038,1866,1.939,1867,1.125,1868,3.746,1869,1.125,1870,1.125,1871,1.125,1872,3.038,1873,3.038,1874,1.125,1875,1.939,1876,1.939,1877,1.125,1878,2.555,1879,1.125,1880,1.125,1881,1.939,1882,1.125,1883,3.427,1884,1.125,1885,2.555,1886,1.125,1887,1.125,1888,1.939,1889,3.038,1890,1.664,1891,1.125,1892,1.125,1893,1.125,1894,2.555,1895,3.019,1896,1.939,1897,1.125,1898,1.939,1899,1.125,1900,1.125,1901,1.125,1902,1.125,1903,1.939,1904,1.125,1905,0.965,1906,3.038,1907,2.555,1908,1.125,1909,1.125,1910,1.125,1911,1.125,1912,1.125,1913,1.125,1914,1.125,1915,1.125,1916,1.125,1917,1.036,1918,0.965,1919,1.939,1920,1.125,1921,1.939,1922,1.125,1923,1.125,1924,1.125,1925,1.125,1926,1.125,1927,1.125,1928,1.939,1929,1.125,1930,1.125,1931,1.125,1932,1.125,1933,1.125,1934,3.746,1935,1.125,1936,1.125,1937,1.125,1938,3.746,1939,1.036,1940,1.125,1941,3.038,1942,1.125,1943,1.939,1944,1.125,1945,1.125,1946,1.125,1947,1.125]],["title/components/HomePage.html",[0,0.248,118,0.94]],["body/components/HomePage.html",[0,0.457,1,0.754,2,1.605,3,0.17,4,0.083,5,0.886,6,0.886,7,0.886,8,0.858,9,0.072,13,0.754,14,2.337,15,2.272,16,1.305,18,1.305,20,0.267,21,0.673,22,1.711,23,1.201,24,1.045,27,0.81,28,0.013,29,1.324,30,0.301,31,0.229,32,0.083,33,0.103,36,1.077,38,2.65,39,3.055,40,1.444,41,2.129,42,2.634,43,2.172,45,2.314,50,1.286,51,2.312,56,2.748,57,2.634,59,1.641,61,1.286,64,1.703,66,1.286,69,2.306,71,2.664,80,2.486,81,2.046,83,1.59,84,1.969,85,2.767,88,0.642,89,1.305,90,1.305,91,0.886,92,1.367,93,0.886,94,0.689,95,0.886,96,0.754,97,0.886,98,0.779,99,0.886,100,0.779,101,0.804,102,1.305,103,0.754,104,1.224,105,1.551,106,0.754,107,1.186,108,1.551,109,0.779,110,0.858,111,0.886,112,0.754,113,1.551,114,1.148,115,0.886,116,1.364,117,2.062,118,1.412,119,0.886,120,0.754,121,1.477,122,0.779,123,1.937,124,1.224,125,1.305,126,0.779,127,0.779,128,1.224,129,1.305,130,0.779,131,1.305,132,0.779,133,0.804,134,1.305,135,1.148,136,1.767,137,0.754,138,0.779,139,0.779,140,0.804,141,0.754,142,0.886,143,0.779,144,0.685,145,0.779,146,1.34,147,0.754,148,0.754,149,0.754,150,0.779,151,0.804,152,0.886,153,0.886,154,0.009,155,0.007,169,1.444,179,1.009,199,1.079,200,1.79,208,0.698,215,2.879,219,3.826,221,0.978,224,0.715,230,1.764,231,2.223,235,2.326,240,2.129,242,3.033,248,1.764,255,2.528,257,2.809,259,0.523,260,0.771,261,0.715,263,2.129,264,4.079,265,1.439,268,0.754,281,0.889,303,1.046,314,0.731,318,2.017,323,0.911,324,1.324,333,2.43,337,2.43,371,2.503,373,2.748,374,1.336,375,2.218,378,2.314,383,1.286,391,2.306,392,1.286,436,1.969,442,2.809,453,1.393,456,1.826,460,0.915,461,1.57,467,1.825,489,1.828,496,2.809,498,2.314,517,2.974,519,3.243,556,2.149,557,2.149,558,2.767,564,2.767,566,1.336,597,2.424,631,1.767,709,1.709,778,1.896,832,2.149,835,2.974,846,2.634,900,2.503,904,3.4,957,2.809,977,2.664,979,2.314,980,2.419,994,2.129,1003,2.49,1028,1.57,1058,3.167,1153,4.456,1154,3.895,1158,3.4,1160,3.69,1202,2.149,1203,2.306,1249,2.149,1250,2.306,1253,2.306,1254,2.306,1255,4.038,1271,1.504,1285,2.306,1363,4.615,1375,4.837,1380,2.503,1407,1.807,1408,2.503,1409,2.503,1410,3.69,1411,2.503,1416,2.306,1417,2.974,1418,2.503,1419,2.767,1421,2.306,1436,3.4,1677,4.038,1976,2.767,1977,5.547,1978,4.67,1979,5.547,1980,3.681,1981,4.67,1982,6.122,1983,6.122,1984,3.168,1985,4.67,1986,4.67,1987,3.168,1988,3.168,1989,4.67,1990,4.67,1991,4.67,1992,3.168,1993,5.547,1994,3.168,1995,3.168,1996,4.67,1997,4.67,1998,5.547,1999,3.168,2000,2.149,2001,3.168,2002,2.767,2003,2.767,2004,3.168,2005,3.168,2006,5.547,2007,3.168,2008,3.168,2009,3.168,2010,4.67,2011,3.168,2012,3.168,2013,2.767,2014,3.168,2015,7.062,2016,3.168,2017,6.829,2018,3.168,2019,6.527,2020,3.168,2021,6.527,2022,3.168,2023,5.347,2024,5.347,2025,4.67,2026,4.67,2027,3.4,2028,4.845,2029,3.168,2030,3.168]],["title/modules/HomePageModule.html",[156,1.139,2031,2.967]],["body/modules/HomePageModule.html",[3,0.133,4,0.133,9,0.116,28,0.013,30,0.337,31,0.368,32,0.133,33,0.166,36,1.174,88,1.032,103,1.882,104,1.696,106,1.882,107,1.901,114,1.943,116,1.943,117,1.334,118,1.822,127,1.943,128,1.696,130,1.943,146,1.27,148,1.882,149,1.882,154,0.009,155,0.009,156,1.423,158,1.793,159,2.417,160,3.686,161,2.637,162,1.856,163,1.923,168,3.352,169,2.32,170,2.067,172,2.534,173,2.534,174,3.691,175,2.763,176,3.892,177,1.676,178,3.513,179,1.621,180,2.903,182,3.207,183,2.637,184,2.763,185,3.513,186,2.522,187,2.522,188,3.207,189,3.061,190,2.903,191,2.522,192,2.146,193,2.763,194,2.763,402,4.289,404,4.711,418,3.705,517,3.242,928,3.705,1055,3.705,1203,3.705,1421,3.705,2002,4.446,2003,6.215,2031,6.285,2032,4.446,2033,4.446,2034,4.446,2035,5.358,2036,5.091,2037,4.446,2038,5.653,2039,6.472,2040,5.091,2041,3.705,2042,4.022,2043,4.022,2044,3.705,2045,3.705]],["title/modules/HomePageRoutingModule.html",[156,1.139,2035,2.764]],["body/modules/HomePageRoutingModule.html",[0,0.39,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,118,1.717,154,0.011,155,0.011,158,2.257,163,2.42,172,2.508,173,2.914,196,3.654,197,3.317,198,4.246,199,2.182,200,1.679,201,3.042,202,3.853,2035,5.048,2037,5.596,2046,6.407]],["title/injectables/HttpClientProvider.html",[459,1.103,612,2.764]],["body/injectables/HttpClientProvider.html",[3,0.099,4,0.099,9,0.086,20,0.318,21,0.764,24,1.073,27,0.999,28,0.013,29,1.147,30,0.209,31,0.273,32,0.099,33,0.123,43,2.838,94,0.786,154,0.008,155,0.008,224,1.03,259,0.662,260,1.035,261,0.96,303,1.324,314,1.413,323,1.076,351,4.743,433,4.233,451,2.917,456,2.774,459,1.435,460,1.531,464,1.535,465,1.479,612,3.596,705,1.794,709,2.571,710,6.091,802,1.934,806,3.623,1219,6.716,1252,5.42,1305,5.09,1308,4.743,1321,5.811,1895,5.084,2047,6.004,2048,3.301,2049,5.8,2050,6.108,2051,5.35,2052,3.301,2053,3.779,2054,6.837,2055,7.498,2056,4.631,2057,3.779,2058,4.631,2059,3.779,2060,3.301,2061,7.217,2062,6.973,2063,3.779,2064,6.125,2065,5.729,2066,3.301,2067,3.779,2068,3.301,2069,3.779,2070,3.301,2071,4.84,2072,5.35,2073,5.35,2074,3.779,2075,5.8,2076,4.833,2077,3.859]],["title/injectables/HttpClientWebProvider.html",[459,1.103,602,2.967]],["body/injectables/HttpClientWebProvider.html",[3,0.079,4,0.079,9,0.069,20,0.254,21,0.649,23,1.057,24,1.072,27,0.989,28,0.013,29,0.973,30,0.235,31,0.218,32,0.079,33,0.098,43,2.91,92,0.673,94,0.785,154,0.007,155,0.007,162,1.099,182,3.443,183,1.561,224,1.014,248,2.256,259,0.661,260,1.033,261,0.959,268,1.597,303,1.285,314,1.684,323,1.066,324,1.45,351,4.335,379,1.32,433,4.191,451,2.969,456,2.713,459,1.218,460,1.299,464,1.224,465,1.18,466,1.32,467,2.041,474,2.516,602,3.276,604,5.298,612,5.042,613,2.632,632,1.469,705,1.431,709,2.505,802,1.641,806,3.311,1219,6.733,1230,1.493,1252,5.058,1263,3.243,1305,4.653,1308,4.335,1321,5.763,1344,2.381,1458,3.052,1467,5.058,1527,2.044,1895,4.866,2047,4.72,2049,5.218,2050,5.584,2051,4.705,2052,2.632,2054,6.828,2055,7.461,2056,2.632,2058,3.931,2060,2.632,2061,7.285,2062,7.27,2065,5.874,2066,2.632,2068,2.632,2070,2.632,2071,4.256,2072,4.705,2073,4.705,2075,5.218,2076,4.348,2077,3.276,2078,2.632,2079,4.5,2080,5.386,2081,3.014,2082,3.014,2083,4.5,2084,4.5,2085,3.014,2086,6.706,2087,3.014,2088,3.014,2089,5.386,2090,3.014,2091,3.014,2092,3.014,2093,3.014,2094,3.014,2095,3.014,2096,3.014,2097,3.014,2098,4.5,2099,3.014,2100,5.386,2101,6.392,2102,3.014,2103,5.386,2104,3.014,2105,3.014,2106,4.5,2107,3.014,2108,4.5,2109,3.014,2110,3.014,2111,3.014,2112,2.632]],["title/components/IncidentDataPage.html",[0,0.248,120,0.971]],["body/components/IncidentDataPage.html",[0,0.451,1,0.664,2,1.113,3,0.161,4,0.073,5,0.78,6,0.78,7,0.78,8,0.755,9,0.064,11,1.078,12,1.437,13,0.664,14,2.309,15,2.236,16,1.187,18,1.187,20,0.235,21,0.612,22,1.606,23,1.328,24,1.051,27,0.767,28,0.013,29,1.242,30,0.282,31,0.201,32,0.073,33,0.091,36,1.502,38,2.087,39,2.51,40,1.271,41,1.271,42,2.016,43,1.662,45,2.847,50,2.749,51,1.941,55,4.662,56,1.382,57,2.441,59,2.663,61,2.333,62,2.016,64,2.254,65,1.222,66,1.724,76,1.382,77,1.325,78,1.514,80,3.088,81,2.252,83,0.95,84,1.176,87,1.445,88,0.565,89,1.187,90,1.187,91,0.78,92,1.283,93,0.78,94,0.737,95,0.78,96,0.664,97,0.78,98,0.686,99,0.78,100,0.686,101,0.708,102,1.187,103,0.664,104,1.113,105,1.437,106,0.664,107,1.078,108,1.437,109,1.044,110,0.755,111,0.78,112,0.664,113,1.437,114,0.686,115,0.78,116,0.686,117,0.731,118,0.643,119,0.78,120,1.368,121,1.747,122,0.686,123,1.459,124,1.113,125,1.187,126,0.686,127,0.686,128,1.113,129,1.187,130,0.686,131,1.187,132,0.686,133,0.708,134,1.187,135,0.686,136,0.755,137,0.664,138,0.686,139,0.686,140,0.708,141,0.664,142,0.78,143,0.686,144,0.603,145,0.686,146,1.328,147,0.664,148,0.664,149,0.664,150,0.686,151,0.708,152,0.78,153,0.78,154,0.006,155,0.006,162,1.548,197,2.422,199,0.95,200,0.731,204,5.937,205,2.305,208,0.634,212,5.145,213,5.145,216,3.226,217,4.311,218,5.145,219,3.947,221,1.573,224,0.741,225,4.539,226,2.65,227,4.016,228,2.469,230,2.17,231,1.446,232,3.118,233,2.704,234,2.728,235,2.399,236,2.422,238,3.09,239,2.553,240,2.618,242,2.104,244,3.092,245,3.717,246,3.355,247,2.104,248,2.799,249,3.708,250,1.398,251,3.708,252,3.708,253,3.708,257,3.455,258,2.517,259,0.559,260,0.798,261,0.797,265,1.584,268,0.664,281,0.824,302,3.355,303,1.232,305,2.728,306,4.74,307,2.422,308,3.355,310,3.714,311,1.446,312,4.061,313,4.061,314,0.643,315,1.548,316,2.204,319,1.678,320,2.03,321,2.03,322,1.892,323,0.922,324,1.242,332,3.118,333,2.708,337,1.86,338,3.09,339,3.09,340,2.204,349,2.03,358,3.355,359,3.09,360,3.355,361,2.553,362,3.355,363,3.355,364,3.896,365,2.204,366,2.204,369,1.445,373,1.382,374,1.176,375,2.016,378,1.382,383,2.087,386,2.199,389,1.271,392,1.724,393,2.087,394,1.86,396,1.445,474,0.983,489,1.662,496,2.553,497,5.018,498,2.847,517,2.704,532,2.437,536,2.204,565,1.325,566,1.79,571,1.892,624,1.892,667,5.026,698,2.199,709,2.006,743,1.446,778,1.724,782,1.79,802,1.548,830,2.553,837,1.776,904,3.09,935,1.176,1082,2.03,1083,1.892,1085,5.647,1088,2.204,1144,4.061,1145,3.355,1152,6.094,1157,4.49,1201,2.204,1233,1.892,1244,2.437,1245,2.437,1261,2.437,1271,1.325,1272,1.591,1273,1.591,1274,1.591,1275,1.445,1276,1.445,1277,1.271,1280,2.879,1386,4.192,1407,2.932,1980,3.916,2000,1.892,2023,3.708,2024,2.437,2027,3.09,2113,5.394,2114,2.204,2115,4.49,2116,5.688,2117,4.246,2118,2.437,2119,5.306,2120,3.708,2121,2.79,2122,2.437,2123,4.246,2124,2.79,2125,4.246,2126,2.79,2127,2.79,2128,2.79,2129,2.437,2130,2.79,2131,2.79,2132,2.437,2133,4.246,2134,2.437,2135,2.79,2136,3.708,2137,2.79,2138,2.79,2139,2.79,2140,2.79,2141,2.79,2142,4.246,2143,4.246,2144,4.246,2145,4.246,2146,2.437,2147,2.204,2148,3.355,2149,3.09,2150,2.03,2151,2.204]],["title/modules/IncidentDataPageModule.html",[156,1.139,2152,2.967]],["body/modules/IncidentDataPageModule.html",[3,0.153,4,0.153,9,0.134,28,0.013,30,0.333,31,0.422,32,0.153,33,0.191,36,1.348,88,1.185,120,1.946,121,1.525,154,0.01,155,0.01,156,1.633,158,2.059,159,2.775,160,3.921,161,3.027,162,2.131,163,2.207,168,3.652,169,2.663,170,2.373,172,2.76,173,2.76,174,4.021,175,3.172,176,4.239,177,1.924,178,3.826,179,1.861,180,3.333,182,3.493,183,3.027,184,3.172,185,3.826,186,2.895,187,2.895,188,3.493,189,3.514,190,3.333,191,2.895,192,2.463,193,3.172,194,3.172,281,0.937,419,4.781,420,3.963,667,3.963,1295,3.721,2113,4.254,2152,6.07,2153,5.104,2154,5.104,2155,5.104,2156,5.543,2157,5.104]],["title/modules/IncidentDataPageRoutingModule.html",[156,1.139,2156,2.764]],["body/modules/IncidentDataPageRoutingModule.html",[0,0.388,3,0.167,4,0.167,9,0.146,28,0.013,30,0.31,31,0.461,32,0.167,33,0.208,120,1.769,121,1.381,154,0.011,155,0.011,158,2.249,163,2.411,172,2.499,173,2.908,196,3.641,197,3.312,198,4.237,199,2.174,200,1.673,201,3.031,202,3.839,281,1.023,667,4.329,1295,4.065,2113,4.647,2156,5.038]],["title/components/IncidentsCircleGraphicComponent.html",[0,0.248,122,1.002]],["body/components/IncidentsCircleGraphicComponent.html",[0,0.483,1,1.026,2,1.521,3,0.151,4,0.112,5,1.205,6,1.205,7,1.205,8,1.166,9,0.099,11,1.473,12,1.834,13,1.026,14,2.395,15,2.319,16,1.622,18,1.622,20,0.363,21,0.836,22,1.962,23,1.377,24,1.012,27,0.535,28,0.013,29,0.932,30,0.277,31,0.311,32,0.112,33,0.141,36,1.619,51,1.628,58,2.591,64,1.572,88,1.176,89,1.622,90,1.622,91,1.205,92,1.568,93,1.205,94,0.693,95,1.205,96,1.026,97,1.205,98,1.06,99,1.205,100,1.06,101,1.094,102,1.622,103,1.026,104,1.521,105,1.834,106,1.026,107,1.473,108,1.834,109,1.06,110,1.166,111,1.205,112,1.026,113,1.834,114,1.06,115,1.205,116,1.06,117,1.13,118,0.994,119,1.205,120,1.026,121,1.255,122,1.726,123,2.017,124,2.205,125,1.622,126,1.06,127,1.06,128,1.521,129,1.622,130,1.06,131,1.622,132,1.06,133,1.094,134,1.622,135,1.06,136,1.166,137,1.026,138,1.06,139,1.06,140,1.094,141,1.026,142,1.205,143,1.06,144,0.932,145,1.06,146,1.481,147,1.026,148,1.026,149,1.026,150,1.06,151,1.094,152,1.205,153,1.205,154,0.008,155,0.008,200,1.521,208,0.867,216,3.739,221,1.215,224,0.556,231,2.39,232,3.15,233,3.695,234,2.755,235,2.251,236,3.31,255,2.645,259,0.526,260,0.599,261,0.556,281,1.21,319,2.591,323,0.748,324,1.255,460,1.244,461,2.135,467,1.622,489,2.272,597,2.326,631,2.235,737,2.135,778,2.356,846,2.755,863,2.923,904,3.137,1028,2.135,1150,3.137,1156,4.776,1177,3.31,1279,4.585,1382,2.923,2013,3.764,2077,4.776,2158,5.789,2159,5.789,2160,3.405,2161,5.731,2162,5.069,2163,5.069,2164,4.309,2165,5.069,2166,5.069,2167,4.309,2168,3.764,2169,4.309,2170,4.309,2171,4.309,2172,5.803,2173,3.764,2174,5.069,2175,4.309,2176,3.764,2177,4.309,2178,3.764,2179,5.803,2180,5.803,2181,5.803,2182,3.764,2183,4.309,2184,3.764,2185,3.764,2186,3.764,2187,3.764,2188,3.764]],["title/components/IncidentsInfoComponent.html",[0,0.248,126,1.002]],["body/components/IncidentsInfoComponent.html",[0,0.466,1,0.771,2,1.244,3,0.186,4,0.084,5,0.905,6,0.905,7,0.905,8,0.876,9,0.074,11,1.204,12,1.57,13,0.771,14,2.342,15,2.268,16,1.326,18,1.326,20,0.273,21,0.684,22,1.729,23,1.102,24,1.118,27,0.768,28,0.013,29,1.338,30,0.221,31,0.234,32,0.084,33,0.106,36,1.744,38,1.926,39,2.281,40,1.475,41,1.475,42,1.537,43,1.267,44,2.356,45,1.604,48,2.061,50,2.511,51,1.222,54,3.217,56,1.604,57,1.537,61,2.281,62,3.376,64,2.255,66,2.281,69,2.356,76,1.604,77,1.537,78,1.757,80,2.961,81,1.418,83,1.102,84,1.364,87,1.677,88,0.656,89,1.326,90,1.326,91,0.905,92,1.381,93,0.905,94,0.751,95,0.905,96,0.771,97,0.905,98,0.796,99,0.905,100,0.796,101,0.822,102,1.326,103,0.771,104,1.244,105,1.57,106,0.771,107,1.204,108,1.57,109,0.796,110,0.876,111,0.905,112,0.771,113,1.57,114,0.796,115,0.905,116,0.796,117,0.848,118,0.746,119,0.905,120,0.771,121,1.636,122,0.796,123,1.889,124,1.244,125,1.326,126,1.521,127,0.796,128,1.244,129,1.326,130,0.796,131,1.326,132,0.796,133,0.822,134,1.326,135,0.796,136,0.876,137,0.771,138,0.796,139,0.796,140,0.822,141,0.771,142,0.905,143,0.796,144,0.7,145,0.796,146,1.395,147,0.771,148,0.771,149,0.771,150,0.796,151,0.822,152,0.905,153,0.905,154,0.007,155,0.007,200,1.472,208,0.709,221,0.993,224,0.849,235,1.415,242,2.351,250,1.562,255,2.162,259,0.606,260,0.915,261,0.849,268,0.771,269,2.511,276,3.749,303,1.14,307,2.607,311,2.106,314,0.746,323,0.798,324,1.215,369,2.458,373,1.604,374,2,375,1.537,383,1.926,391,2.356,392,1.926,393,1.314,394,1.418,396,2.458,439,2.351,451,2.336,466,1.418,474,1.671,489,2.421,491,4.466,550,3.217,556,2.195,557,2.195,565,1.537,566,2.368,573,4.144,632,1.167,692,3.749,696,4.193,715,2.162,725,2.199,743,2.483,763,2.356,764,4.438,765,3.749,766,4.438,767,3.749,770,3.749,771,2.351,772,2.575,775,3.749,776,3.749,778,1.926,779,3.453,780,5.618,784,3.021,785,2.819,786,4.144,787,3.357,789,3.217,792,2.557,793,3.723,794,2.557,796,4.438,797,5.203,798,5.437,799,3.749,800,2.884,802,1.73,803,3.021,812,3.749,813,2.356,814,3.749,816,2.557,818,2.557,821,2.557,822,2.557,831,3.021,835,3.021,846,2.253,1271,2.253,1285,2.356,1407,2.706,1408,4.438,1409,2.557,1410,3.749,1411,2.557,1416,3.453,1418,2.557,1566,3.859,1752,2.195,1761,3.217,1980,3.377,2000,2.195,2071,2.557,2136,2.827,2158,6.188,2189,6.188,2190,6.585,2191,6.585,2192,4.744,2193,5.616,2194,2.557,2195,3.925,2196,3.809,2197,3.237,2198,3.237,2199,4.744,2200,3.237,2201,3.237,2202,4.744,2203,3.237,2204,4.887,2205,2.827,2206,3.237,2207,3.237,2208,2.195,2209,2.827,2210,4.744,2211,3.237,2212,4.744,2213,3.237,2214,4.744,2215,3.237,2216,2.827,2217,3.237,2218,3.237,2219,3.237,2220,3.237,2221,3.237,2222,2.557,2223,3.237,2224,2.827,2225,6.185,2226,3.749,2227,4.744,2228,4.744,2229,4.744,2230,4.744,2231,4.744,2232,3.237,2233,3.237,2234,3.237,2235,3.237,2236,4.744,2237,3.237,2238,3.237,2239,3.237]],["title/injectables/IncidentsService.html",[459,1.103,2119,2.967]],["body/injectables/IncidentsService.html",[0,0.423,3,0.164,4,0.127,9,0.111,20,0.409,21,0.904,23,1.53,24,1.003,27,0.913,28,0.013,30,0.29,31,0.35,32,0.127,33,0.259,94,0.734,121,1.813,154,0.009,155,0.009,205,3.775,221,1.314,224,0.897,226,2.879,227,3.809,228,2.288,235,2.074,236,3.967,247,3.446,250,2.421,254,4.717,259,0.558,260,0.967,261,0.897,265,1.933,269,2.548,281,0.778,297,3.446,303,1.221,305,3.616,310,3.967,315,1.769,323,0.897,324,1.357,456,2.677,458,2.947,459,1.698,460,1.4,461,2.403,464,1.97,465,1.899,466,2.125,467,1.754,489,2.456,597,2.602,632,1.193,705,2.303,719,2.749,725,2.456,726,3.1,743,2.136,752,5.353,844,3.833,850,4.255,860,3.089,862,4.237,864,5.481,865,3.833,894,4.237,899,4.237,900,3.833,1003,2.682,1120,3.773,1895,3.089,1980,4.691,2115,6.075,2119,4.567,2240,4.237,2241,6.275,2242,6.275,2243,4.851,2244,6.018,2245,6.018,2246,6.075,2247,6.075,2248,6.075,2249,6.275,2250,4.851,2251,4.958,2252,6.275,2253,4.851,2254,4.851,2255,4.237,2256,4.851,2257,4.851,2258,6.275,2259,4.851,2260,4.851,2261,4.851]],["title/components/ItemCategoryComponent.html",[0,0.248,127,1.002]],["body/components/ItemCategoryComponent.html",[0,0.402,1,1.04,2,1.535,3,0.153,4,0.114,5,1.221,6,1.221,7,1.221,8,1.182,9,0.1,11,1.486,12,1.846,13,1.04,14,2.397,15,2.321,16,1.637,18,1.637,20,0.368,21,0.844,22,1.973,23,1.296,24,1.134,27,0.913,28,0.013,29,1.429,30,0.172,31,0.315,32,0.114,33,0.143,88,0.885,89,1.637,90,1.637,91,1.221,92,1.576,93,1.221,94,0.697,95,1.221,96,1.04,97,1.221,98,1.074,99,1.221,100,1.074,101,1.109,102,1.637,103,1.04,104,1.85,105,1.846,106,1.04,107,1.486,108,1.846,109,1.074,110,1.182,111,1.221,112,1.04,113,1.846,114,1.074,115,1.221,116,1.074,117,1.145,118,1.007,119,1.221,120,1.04,121,0.944,122,1.074,123,1.486,124,1.535,125,1.637,126,1.074,127,1.735,128,2.239,129,1.637,130,1.074,131,1.637,132,1.074,133,1.109,134,1.637,135,1.074,136,1.182,137,1.04,138,1.074,139,1.074,140,1.109,141,1.04,142,1.221,143,1.074,144,0.944,145,1.074,146,1.486,147,1.04,148,1.04,149,1.04,150,1.074,151,1.109,152,1.221,153,1.221,154,0.009,155,0.009,208,0.875,224,0.563,259,0.566,260,0.607,261,0.563,269,2.377,281,1.29,311,1.487,323,0.563,324,1.429,453,2.195,458,2.211,467,1.221,632,1.074,715,2.668,743,2.678,771,2.901,772,3.178,785,3.01,787,3.585,789,4.48,793,3.453,949,3.339,955,4.206,956,3.422,983,2.901,1031,3.136,2042,6.295,2204,5.576,2262,6.295,2263,3.45,2264,5.77,2265,5.114,2266,6.618,2267,4.786,2268,4.367,2269,5.855,2270,4.367,2271,4.367,2272,4.367,2273,5.114,2274,4.367,2275,3.814,2276,4.367,2277,5.114,2278,5.855,2279,3.814,2280,3.814,2281,3.814,2282,5.114,2283,3.814,2284,3.814,2285,5.114]],["title/components/ItemUserComponent.html",[0,0.248,130,1.002]],["body/components/ItemUserComponent.html",[0,0.402,1,1.04,2,1.535,3,0.153,4,0.114,5,1.221,6,1.221,7,1.221,8,1.182,9,0.1,11,1.486,12,1.846,13,1.04,14,2.397,15,2.321,16,1.637,18,1.637,20,0.368,21,0.844,22,1.973,23,1.296,24,1.134,27,0.913,28,0.013,29,1.429,30,0.172,31,0.315,32,0.114,33,0.143,88,0.885,89,1.637,90,1.637,91,1.221,92,1.576,93,1.221,94,0.697,95,1.221,96,1.04,97,1.221,98,1.074,99,1.221,100,1.074,101,1.109,102,1.637,103,1.04,104,1.535,105,1.846,106,1.04,107,1.486,108,1.846,109,1.074,110,1.182,111,1.221,112,1.04,113,1.846,114,1.074,115,1.221,116,1.074,117,1.145,118,1.007,119,1.221,120,1.04,121,0.944,122,1.074,123,1.486,124,1.535,125,1.637,126,1.074,127,1.074,128,2.239,129,1.637,130,1.735,131,1.637,132,1.074,133,1.109,134,1.637,135,1.074,136,1.182,137,1.04,138,1.074,139,1.074,140,1.109,141,1.04,142,1.221,143,1.074,144,0.944,145,1.074,146,1.543,147,1.04,148,1.04,149,1.04,150,1.074,151,1.109,152,1.221,153,1.221,154,0.009,155,0.009,208,0.875,224,0.563,259,0.566,260,0.607,261,0.563,269,2.988,281,1.29,311,2.403,323,0.563,324,1.429,453,1.746,458,2.211,467,1.221,632,1.074,743,2.678,771,2.901,772,3.178,785,3.01,787,3.585,789,4.48,793,3.453,949,3.339,959,3.178,983,2.901,1031,3.597,1120,3.521,2043,6.295,2204,5.576,2262,6.295,2266,6.618,2267,4.786,2273,5.114,2275,3.814,2277,5.114,2279,3.814,2280,3.814,2281,3.814,2282,5.114,2283,3.814,2284,3.814,2285,5.114,2286,3.45,2287,5.77,2288,5.114,2289,4.367,2290,5.855,2291,4.367,2292,3.814,2293,4.367,2294,4.367,2295,4.367]],["title/injectables/LocalService.html",[459,1.103,487,2.967]],["body/injectables/LocalService.html",[0,0.455,3,0.149,4,0.149,9,0.131,12,1.594,20,0.48,23,1.629,24,1.152,27,0.708,28,0.013,30,0.274,31,0.412,32,0.149,33,0.186,51,2.155,94,0.602,154,0.01,155,0.01,208,1.038,216,4.114,221,1.455,224,0.736,228,2.533,230,2.829,232,4.066,234,3.557,235,2.234,258,3.043,259,0.641,260,0.793,261,0.736,268,1.784,269,3.042,303,1.114,314,1.316,323,0.736,324,1.502,459,1.88,464,2.316,465,2.233,466,2.499,487,5.056,499,5.817,504,3.599,584,5.056,705,2.708,802,2.533,1127,6.543,1463,5.08,2296,4.982,2297,7.491,2298,5.704,2299,6.947,2300,7.491,2301,6.98,2302,5.704,2303,5.704,2304,5.704,2305,5.704,2306,5.704]],["title/components/LoginFormComponent.html",[0,0.248,132,1.002]],["body/components/LoginFormComponent.html",[0,0.396,1,1.013,2,1.508,3,0.17,4,0.111,5,1.189,6,1.189,7,1.189,8,1.151,9,0.097,11,1.46,12,1.822,13,1.013,14,2.393,15,2.317,16,1.608,18,1.608,20,0.358,21,0.829,22,1.952,23,0.834,24,1.051,27,0.714,28,0.013,29,1.244,30,0.275,31,0.307,32,0.111,33,0.139,36,1.847,38,1.727,39,2.336,40,1.939,41,1.939,50,1.727,61,1.727,64,2.66,65,1.863,66,1.727,70,2.309,76,2.108,80,1.727,87,2.203,88,0.862,89,1.608,90,1.608,91,1.189,92,1.56,93,1.189,94,0.688,95,1.189,96,1.013,97,1.189,98,1.046,99,1.189,100,1.046,101,1.08,102,1.608,103,1.013,104,1.508,105,1.822,106,1.013,107,1.46,108,1.822,109,1.046,110,1.151,111,1.189,112,1.013,113,1.822,114,1.046,115,1.189,116,1.046,117,1.115,118,0.981,119,1.189,120,1.013,121,0.92,122,1.046,123,1.46,124,1.508,125,1.608,126,1.046,127,1.046,128,1.508,129,1.608,130,1.046,131,1.608,132,1.849,133,1.985,134,1.608,135,1.046,136,1.151,137,1.013,138,1.046,139,1.046,140,1.08,141,1.013,142,1.189,143,1.046,144,0.92,145,1.046,146,1.475,147,1.013,148,1.013,149,1.013,150,1.046,151,1.08,152,1.189,153,1.189,154,0.008,155,0.008,177,1.4,199,1.448,208,0.859,219,2.108,224,0.549,235,1.715,259,0.522,260,0.591,261,0.549,271,2.309,275,4.187,280,2.02,285,2.203,317,2.108,323,0.549,374,1.793,375,2.02,378,2.108,379,3.59,383,2.647,389,1.939,392,2.336,393,2.336,394,1.863,406,5.94,411,2.108,458,2.173,466,1.863,565,2.02,566,1.793,632,1.046,772,3.122,778,2.336,785,2.971,787,3.122,793,3.182,935,1.793,983,2.85,1271,2.02,1272,2.426,1273,2.426,1274,2.426,1275,2.203,1276,2.203,1277,1.939,1342,2.558,1366,4.545,1372,4.187,1377,3.919,1378,5.101,1379,2.885,1381,2.709,1401,3.096,1413,3.361,1423,2.885,1426,4.187,1439,2.885,1474,4.187,2150,3.096,2307,6.567,2308,3.361,2309,5.693,2310,5.025,2311,5.082,2312,6.371,2313,5.025,2314,4.254,2315,4.254,2316,5.082,2317,4.254,2318,4.187,2319,3.715,2320,5.025,2321,5.082,2322,5.025,2323,5.752,2324,3.361,2325,4.254]],["title/interfaces/Media.html",[83,1.388,923,1.177]],["body/interfaces/Media.html",[3,0.139,4,0.139,9,0.179,20,0.448,21,0.766,27,0.826,28,0.013,30,0.286,32,0.174,33,0.174,83,2.76,92,1.486,154,0.01,155,0.01,208,0.994,226,2.604,230,2.008,235,1.984,237,3.386,240,2.423,250,1.751,259,0.628,281,1.066,282,2.329,283,2.423,293,3.386,295,2.886,296,2.754,303,1.348,323,0.858,386,2.754,430,3.386,453,1.586,456,2.63,458,2.513,460,1.535,466,2.329,467,1.486,597,2.344,600,4.511,601,4.201,606,3.794,631,2.422,632,1.307,697,2.525,698,2.754,709,1.638,778,2.159,800,3.18,860,3.386,923,1.535,924,2.423,959,3.611,1003,2.774,1093,3.87,1181,3.386,1214,4.201,1230,3.769,1456,3.606,1458,3.606,1463,3.606,1527,3.606,1594,3.606,1694,3.606,1737,3.386,1738,3.606,1739,4.511,1743,3.386,1755,4.236,1790,3.606,1817,4.923,1818,3.606,1905,3.606,1948,4.201,1950,4.645,1951,4.645,1952,4.645,1953,4.201,1954,4.201,1956,4.645,1957,4.645,1958,4.201,1959,4.645,1960,4.645,1961,4.645,1962,4.645,1963,4.645,1964,5.159,1965,5.159,1966,5.159,1967,5.159,1968,4.645,1969,4.645,1970,4.645,1971,4.645,1972,4.645,1973,4.645,1974,4.645,1975,4.645]],["title/injectables/MediaService.html",[459,1.103,606,2.325]],["body/injectables/MediaService.html",[3,0.159,4,0.159,9,0.139,20,0.512,21,1.041,24,0.876,27,0.896,28,0.013,30,0.284,31,0.439,32,0.159,33,0.199,83,2.712,94,0.642,154,0.011,155,0.011,224,0.784,259,0.487,260,0.845,261,0.784,295,3.918,323,0.784,456,2.716,459,1.954,460,1.755,464,2.469,465,2.38,606,4.117,697,3.428,698,3.739,705,2.887,709,2.372,710,5.797,715,3.29,1230,4.207,1737,4.597,1755,5.253,1954,5.704,2326,5.311,2327,6.081]],["title/components/ModalCategoryComponent.html",[0,0.248,135,1.002]],["body/components/ModalCategoryComponent.html",[0,0.481,1,0.859,2,1.345,3,0.156,4,0.094,5,1.008,6,1.008,7,1.008,8,0.977,9,0.083,11,1.303,12,1.669,13,0.859,14,2.363,15,2.289,16,1.434,18,1.434,20,0.304,21,0.74,22,1.818,23,1.276,24,1.117,27,0.853,28,0.013,29,1.486,30,0.256,31,0.261,32,0.094,33,0.118,36,1.877,38,1.465,39,2.084,40,1.644,41,1.644,61,1.465,64,2.604,65,2.248,66,1.465,77,1.713,78,1.958,87,1.869,88,0.731,89,1.434,90,1.434,91,1.008,92,1.453,93,1.008,94,0.754,95,1.008,96,0.859,97,1.008,98,0.887,99,1.008,100,0.887,101,0.916,102,1.434,103,0.859,104,2.075,105,1.669,106,0.859,107,1.303,108,1.669,109,0.887,110,0.977,111,1.008,112,0.859,113,1.669,114,0.887,115,1.008,116,0.887,117,0.946,118,0.832,119,1.008,120,0.859,121,0.78,122,0.887,123,1.303,124,1.345,125,1.434,126,0.887,127,0.887,128,1.345,129,1.434,130,0.887,131,1.434,132,0.887,133,0.916,134,1.434,135,1.599,136,2.223,137,0.859,138,0.887,139,0.887,140,0.916,141,0.859,142,1.008,143,0.887,144,0.78,145,0.887,146,1.401,147,0.859,148,0.859,149,0.859,150,0.887,151,0.916,152,1.008,153,1.008,154,0.007,155,0.007,177,1.188,179,1.149,208,0.767,221,1.074,224,0.77,235,1.94,242,3.223,248,1.938,250,2.419,259,0.589,260,0.83,261,0.839,268,0.859,281,0.823,303,1.204,311,2.033,314,0.832,323,0.839,324,1.11,374,2.163,378,1.788,379,3.347,383,2.425,389,1.644,392,2.084,393,2.084,394,1.58,396,1.869,565,1.713,566,1.521,663,5.682,726,2.163,771,2.542,778,2.084,781,4.061,784,3.268,802,2.604,817,2.447,824,3.48,825,4.482,887,1.869,935,1.521,949,2.927,983,3.223,1020,3.268,1031,3.391,1089,3.735,1154,4.073,1158,3.735,1161,3.48,1202,5.317,1249,4.05,1252,5.562,1268,5.682,1271,1.713,1272,2.058,1273,2.058,1274,2.058,1275,1.869,1276,1.869,1277,1.644,1377,3.591,1378,4.866,1379,2.447,1381,2.297,1422,5.14,1423,2.447,1433,4.054,1435,5.14,1436,3.735,1439,2.447,1440,2.851,2263,2.851,2264,5.216,2265,4.482,2311,4.735,2316,3.735,2318,3.735,2321,4.735,2328,6.848,2329,3.608,2330,5.131,2331,5.131,2332,3.608,2333,3.608,2334,5.14,2335,3.608,2336,4.482,2337,3.608,2338,3.608,2339,3.608,2340,3.608,2341,3.608,2342,3.608,2343,3.608,2344,3.608,2345,3.608,2346,3.608,2347,3.151,2348,5.682]],["title/interfaces/PaginatedData.html",[923,1.177,1326,2.451]],["body/interfaces/PaginatedData.html",[3,0.166,4,0.166,9,0.145,20,0.535,28,0.012,32,0.205,154,0.011,155,0.011,208,1.107,259,0.594,281,1.257,303,1.295,800,2.783,923,2.264,924,2.895,1003,2.317,1308,5.023,1326,4.454,1620,5.304,1964,4.308,1965,4.308,1966,4.308,1967,4.308,2349,4.624,2350,5.02,2351,5.02,2352,5.02,2353,5.02,2354,5.02,2355,5.02,2356,3.448]],["title/interfaces/Pagination.html",[923,1.177,1620,2.596]],["body/interfaces/Pagination.html",[3,0.163,4,0.163,9,0.143,20,0.526,28,0.012,32,0.203,154,0.011,155,0.011,208,1.096,259,0.644,303,1.288,442,4.683,800,3.717,923,2.248,924,2.847,1003,2.278,1326,3.757,1620,4.671,1621,6.802,1623,6.802,1624,6.802,1964,4.237,1965,4.237,1966,4.237,1967,4.237,2349,4.547,2350,4.936,2351,4.936,2352,4.936,2353,4.936,2354,4.936,2355,4.936,2356,3.391]],["title/classes/PasswordValidation.html",[33,0.133,2357,2.967]],["body/classes/PasswordValidation.html",[3,0.13,4,0.13,9,0.114,20,0.421,21,0.922,24,0.922,27,0.923,28,0.013,30,0.197,32,0.13,33,0.163,94,0.855,110,2.013,154,0.009,155,0.009,177,1.646,200,1.677,221,1.557,224,0.825,259,0.513,260,0.889,261,0.825,268,1.19,277,7.071,282,2.802,285,4.429,303,1.337,314,1.153,315,2.573,323,0.91,467,2.198,498,3.169,709,1.971,782,2.974,806,2.589,1329,3.183,1331,6.869,1334,6.496,1335,6.46,1336,5.588,1337,5.588,1338,6.983,1339,6.496,1340,6.496,1341,6.162,1342,3.847,1343,6.162,1344,3.949,1345,4.366,1346,4.366,1348,4.366,1821,5.413,2209,5.588,2357,4.656,2358,4.366,2359,7.687,2360,7.055,2361,4.998,2362,7.437,2363,4.998,2364,7.055,2365,6.397,2366,4.998,2367,6.397,2368,6.397,2369,4.998,2370,4.998,2371,4.998,2372,4.998,2373,4.998,2374,6.397,2375,4.998,2376,6.397,2377,4.998,2378,6.397,2379,4.998]],["title/interfaces/Photo.html",[923,1.177,2356,2.212]],["body/interfaces/Photo.html",[3,0.162,4,0.162,9,0.142,20,0.522,28,0.012,32,0.203,154,0.011,155,0.011,208,1.091,259,0.655,303,1.374,800,3.399,923,2.24,924,2.824,1003,2.922,1326,3.726,1620,3.945,1964,5.434,1965,5.434,1966,5.434,1967,5.434,2349,4.51,2350,4.895,2351,4.895,2352,4.895,2353,4.895,2354,4.895,2355,4.895,2356,3.962]],["title/components/PictureSelectableComponent.html",[0,0.248,137,0.971]],["body/components/PictureSelectableComponent.html",[0,0.47,1,0.721,2,1.183,3,0.118,4,0.079,5,0.846,6,0.846,7,0.846,8,0.819,9,0.154,11,1.146,12,1.509,13,0.721,14,2.327,15,2.254,16,1.262,18,1.262,20,0.255,21,0.651,22,1.673,23,0.594,24,1.142,27,0.924,28,0.013,29,1.701,30,0.236,31,0.219,32,0.118,33,0.099,38,1.833,39,1.833,42,1.437,43,2.114,46,1.82,47,2.202,48,4.078,50,1.229,51,2.419,52,2.643,56,2.675,57,2.564,59,2.338,70,1.642,75,2.202,76,1.499,77,2.842,80,1.833,81,1.977,84,1.275,88,0.613,89,1.673,90,1.673,91,0.846,92,1.5,93,0.846,94,0.786,95,0.846,96,0.721,97,0.846,98,0.744,99,0.846,100,0.744,101,0.768,102,1.262,103,0.721,104,1.183,105,1.509,106,0.721,107,1.52,108,1.509,109,0.744,110,0.819,111,0.846,112,0.721,113,1.509,114,0.744,115,0.846,116,0.744,117,0.793,118,0.698,119,0.846,120,0.721,121,0.654,122,0.744,123,1.146,124,1.183,125,1.262,126,0.744,127,0.744,128,1.183,129,1.262,130,0.744,131,1.262,132,0.744,133,0.768,134,1.262,135,0.744,136,1.733,137,1.657,138,2.056,139,0.744,140,1.626,141,0.721,142,0.846,143,0.744,144,0.654,145,0.744,146,1.174,147,0.721,148,0.721,149,0.721,150,0.744,151,0.768,152,0.846,153,0.846,154,0.007,155,0.007,162,1.646,177,0.996,179,0.964,192,1.275,200,0.793,208,0.674,221,1.497,224,0.922,226,1.185,242,2.237,248,1.705,259,0.597,260,1.034,261,0.922,265,1.391,268,1.873,290,3.414,297,2.237,303,0.96,311,1.537,314,1.477,315,1.646,323,0.943,324,1.168,373,2.675,374,2.523,389,2.057,393,1.229,394,1.325,436,1.903,442,1.82,451,2.761,453,1.785,460,0.874,466,1.325,474,2.109,490,3.943,494,2.143,511,5.228,571,2.052,632,1.797,691,1.705,709,1.664,735,4.184,749,3.286,793,3.655,802,1.646,929,2.052,931,4.266,932,3.567,935,2.523,936,3.661,943,3.061,944,3.061,946,3.061,947,3.061,957,4.038,979,2.966,983,2.966,991,3.061,993,4.554,994,3.061,995,4.343,996,3.061,998,3.061,1005,3.061,1006,2.052,1008,4.554,1009,3.061,1011,3.061,1012,4.059,1013,3.061,1019,3.061,1020,2.874,1021,3.061,1025,2.874,1026,2.874,1029,1.927,1030,1.927,1043,2.052,1044,2.052,1095,3.943,1154,3.83,1193,3.061,1280,2.052,1752,2.052,1815,2.052,1890,3.061,1953,4.729,2028,2.643,2224,3.943,2380,6.3,2381,5.804,2382,4.266,2383,5.399,2384,5.399,2385,4.514,2386,5.986,2387,4.514,2388,4.514,2389,3.026,2390,4.514,2391,5.399,2392,3.567,2393,4.514,2394,3.026,2395,3.026,2396,3.026,2397,4.514,2398,4.514,2399,4.514,2400,4.514,2401,4.514,2402,4.514,2403,4.514,2404,4.514,2405,4.514,2406,3.026,2407,4.514,2408,5.986,2409,5.399,2410,3.026,2411,4.514,2412,5.986,2413,4.514,2414,3.026,2415,4.514,2416,3.026,2417,3.026,2418,3.026,2419,3.026,2420,3.026,2421,3.026,2422,4.514,2423,3.026,2424,3.026,2425,3.026,2426,3.026,2427,4.514,2428,3.026,2429,3.026,2430,3.026,2431,3.026,2432,3.026,2433,3.026,2434,3.026,2435,3.026,2436,3.026,2437,3.026,2438,3.026,2439,3.026,2440,3.026,2441,3.026,2442,3.026,2443,3.026,2444,3.026,2445,3.026,2446,3.026,2447,3.026,2448,3.026,2449,3.026,2450,3.026,2451,3.026,2452,3.026]],["title/components/RegisterFormComponent.html",[0,0.248,139,1.002]],["body/components/RegisterFormComponent.html",[0,0.418,1,0.86,2,1.346,3,0.156,4,0.094,5,1.009,6,1.009,7,1.009,8,0.977,9,0.083,11,1.303,12,1.67,13,0.86,14,2.364,15,2.289,16,1.435,18,1.435,20,0.304,21,0.74,22,1.819,23,0.708,24,1.03,27,0.637,28,0.013,29,1.11,30,0.271,31,0.261,32,0.094,33,0.118,36,1.947,38,2.085,39,2.085,40,1.645,41,1.645,50,2.085,61,1.466,64,2.507,65,1.582,66,1.466,76,1.789,80,1.466,83,1.229,84,1.522,87,1.87,88,0.732,89,1.435,90,1.435,91,1.009,92,1.453,93,1.009,94,0.726,95,1.009,96,0.86,97,1.009,98,0.888,99,1.009,100,0.888,101,0.917,102,1.435,103,0.86,104,1.346,105,1.67,106,0.86,107,1.303,108,1.67,109,0.888,110,0.977,111,1.009,112,0.86,113,1.67,114,0.888,115,1.009,116,0.888,117,0.946,118,0.833,119,1.009,120,0.86,121,0.781,122,0.888,123,1.303,124,1.346,125,1.435,126,0.888,127,0.888,128,1.346,129,1.435,130,0.888,131,1.435,132,0.888,133,0.917,134,1.435,135,0.888,136,0.977,137,0.86,138,0.888,139,1.807,140,1.94,141,0.86,142,1.009,143,0.888,144,0.781,145,0.888,146,1.401,147,0.86,148,0.86,149,0.86,150,0.888,151,0.917,152,1.009,153,1.009,154,0.008,155,0.008,177,1.189,208,0.767,224,0.466,235,1.531,250,1.69,254,2.448,259,0.522,260,0.502,261,0.466,268,0.86,269,2.085,280,2.438,281,0.579,283,1.645,285,2.659,288,2.928,294,3.737,314,0.833,315,1.872,317,1.789,323,0.466,369,2.659,370,3.154,374,1.522,375,1.714,378,2.544,379,3.583,383,2.426,389,1.645,392,2.085,393,2.085,394,1.582,408,5.807,458,1.939,466,1.582,489,2.01,491,2.448,515,2.853,565,1.714,566,1.522,632,1.262,772,2.787,778,2.085,785,3.133,787,3.731,793,2.965,824,3.482,837,2.299,935,1.522,959,1.96,983,2.544,1161,2.448,1233,2.448,1271,1.714,1272,2.059,1273,2.059,1274,2.059,1275,1.87,1276,1.87,1277,1.645,1284,3.154,1328,2.628,1342,2.171,1366,4.056,1372,3.737,1377,3.593,1378,4.935,1379,4.413,1381,2.299,1401,2.628,1412,4.056,1423,2.448,1426,3.737,1439,2.448,1474,3.737,1563,3.269,1566,2.787,1918,2.448,2308,2.853,2309,5.218,2310,4.484,2311,4.736,2312,6.419,2313,3.154,2316,4.736,2318,5.2,2319,3.154,2320,4.484,2321,5.641,2322,4.484,2324,2.853,2334,2.853,2357,2.628,2453,6.419,2454,5.974,2455,5.134,2456,3.61,2457,3.61,2458,3.61,2459,3.61,2460,3.61,2461,3.61,2462,3.61,2463,3.61,2464,5.134,2465,5.974,2466,3.61,2467,4.056,2468,5.134,2469,4.056,2470,5.134,2471,5.134,2472,5.134,2473,3.61]],["title/components/SettingsPage.html",[0,0.248,141,0.971]],["body/components/SettingsPage.html",[0,0.443,1,0.71,2,1.17,3,0.166,4,0.078,5,0.833,6,0.833,7,0.833,8,0.806,9,0.068,11,1.133,12,1.495,13,0.71,14,2.324,15,2.25,16,1.247,18,1.247,20,0.251,21,0.917,22,1.66,23,1.165,24,0.962,27,0.664,28,0.013,29,0.965,30,0.297,31,0.215,32,0.078,33,0.097,36,1.71,38,2.583,39,2.891,40,2.034,41,1.358,42,2.82,43,2.614,44,2.169,45,2.211,50,2.811,51,2.021,55,3.217,56,1.476,57,2.82,59,2.771,61,2.412,62,2.119,64,2.32,65,1.955,66,1.812,76,1.476,80,3.159,81,2.343,83,2.357,84,1.256,87,1.543,88,0.604,89,1.247,90,1.247,91,0.833,92,1.327,93,0.833,94,0.731,95,0.833,96,0.71,97,0.833,98,0.733,99,0.833,100,0.733,101,0.756,102,1.247,103,0.71,104,1.17,105,1.495,106,0.71,107,1.133,108,1.495,109,0.733,110,0.806,111,0.833,112,0.71,113,1.495,114,0.733,115,0.833,116,0.733,117,0.781,118,0.687,119,0.833,120,0.71,121,0.644,122,0.733,123,1.133,124,1.17,125,1.247,126,0.733,127,0.733,128,1.17,129,1.247,130,0.733,131,1.247,132,0.733,133,0.756,134,1.247,135,0.733,136,0.806,137,0.71,138,0.733,139,0.733,140,0.756,141,1.415,142,0.833,143,1.315,144,0.644,145,0.733,146,1.614,147,1.274,148,0.71,149,0.71,150,0.733,151,0.756,152,0.833,153,0.833,154,0.009,155,0.007,179,0.949,197,1.881,199,1.014,200,1.17,208,0.667,215,2.815,216,3.308,219,3.308,221,1.244,224,0.69,228,2.524,230,2.522,231,1.821,232,3.453,233,3.406,234,2.54,235,1.991,236,3.051,237,3.406,238,3.894,239,3.217,240,2.438,241,4.693,242,3.152,243,4.227,244,3.38,250,1.956,255,3.043,257,2.683,259,0.594,260,0.743,261,0.69,262,2.943,263,2.034,265,1.375,273,2.422,281,0.858,291,1.617,303,1.188,307,1.881,317,1.476,318,1.897,319,1.792,323,0.939,324,1.444,333,2.343,337,2.343,343,3.628,364,3.026,369,1.543,371,2.354,373,1.476,374,1.881,375,2.54,378,1.476,380,2.603,383,2.172,386,2.311,389,1.358,392,2.172,393,1.812,394,1.305,396,1.543,453,1.771,455,2.683,498,2.65,499,5.663,519,2.119,525,1.897,549,2.354,562,2.021,565,1.415,566,1.881,571,3.026,597,2.057,606,3.808,631,1.421,691,1.685,711,3.026,719,1.955,722,3.248,723,2.583,726,1.881,743,1.519,800,1.305,802,1.627,830,3.217,831,1.897,835,1.897,837,1.897,846,3.38,935,1.256,957,1.792,973,2.311,979,2.211,980,2.311,1028,1.476,1031,2.54,1150,2.169,1153,4.324,1154,3.808,1156,3.894,1161,3.026,1230,2.211,1233,2.021,1249,2.021,1250,2.169,1251,2.354,1253,2.169,1254,2.169,1255,2.169,1271,2.119,1272,2.545,1273,1.699,1274,1.699,1275,1.543,1276,1.543,1277,1.358,1280,3.026,1319,3.898,1407,3.051,1494,3.526,1566,1.617,1808,3.406,1918,3.628,2027,3.248,2044,2.169,2147,2.354,2148,3.526,2149,3.894,2150,2.169,2151,2.354,2195,3.808,2196,4.028,2208,2.021,2251,2.354,2301,6.218,2324,2.354,2474,2.603,2475,5.349,2476,4.462,2477,5.349,2478,6.677,2479,5.188,2480,4.462,2481,4.462,2482,2.979,2483,4.462,2484,2.979,2485,2.979,2486,2.979,2487,2.169,2488,2.603,2489,2.354,2490,2.021,2491,2.603,2492,4.462,2493,2.979,2494,2.979,2495,2.979,2496,2.979,2497,2.603,2498,2.603,2499,2.603,2500,2.603,2501,2.603,2502,2.603,2503,2.603,2504,2.603,2505,2.603,2506,2.603,2507,4.673,2508,2.603,2509,4.673,2510,2.603,2511,2.979,2512,4.462,2513,4.462,2514,4.462,2515,3.248,2516,3.898,2517,2.979,2518,2.979]],["title/modules/SettingsPageModule.html",[156,1.139,2519,2.967]],["body/modules/SettingsPageModule.html",[3,0.153,4,0.153,9,0.134,28,0.013,30,0.333,31,0.424,32,0.153,33,0.191,36,1.352,88,1.188,141,1.948,154,0.01,155,0.01,156,1.639,158,2.066,159,2.784,160,3.927,161,3.037,162,2.138,163,2.215,168,3.659,169,2.672,170,2.381,172,2.765,173,2.765,174,4.029,175,3.183,176,4.559,177,1.93,178,3.834,179,1.867,180,3.344,182,3.5,183,3.037,184,3.183,185,3.834,186,2.905,187,2.905,188,3.5,189,3.526,190,3.344,191,2.905,192,2.472,193,3.183,194,3.183,519,2.784,1300,6.17,1301,5.122,2519,6.074,2520,5.122,2521,5.122,2522,5.122,2523,5.547,2524,5.863,2525,5.122]],["title/modules/SettingsPageRoutingModule.html",[156,1.139,2523,2.764]],["body/modules/SettingsPageRoutingModule.html",[0,0.39,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,141,1.773,154,0.011,155,0.011,158,2.257,163,2.42,172,2.508,173,2.914,196,3.654,197,3.317,198,4.246,199,2.182,200,1.679,201,3.042,202,3.853,2523,5.048,2525,5.596,2526,6.407]],["title/modules/SharedModule.html",[156,1.139,402,2.212]],["body/modules/SharedModule.html",[3,0.128,4,0.128,9,0.112,28,0.013,30,0.335,31,0.354,32,0.128,33,0.16,36,1.13,88,0.993,100,2.045,109,2.045,122,2.045,124,1.935,126,2.045,137,1.981,145,2.045,150,2.045,154,0.009,155,0.009,156,1.37,158,1.726,159,2.327,160,3.62,161,2.539,162,1.787,163,2.64,168,3.272,169,2.233,170,1.99,172,2.473,173,2.473,174,3.602,175,2.66,178,2.66,179,1.561,182,3.129,183,2.539,184,2.66,185,3.428,186,2.428,187,2.428,188,3.129,190,2.795,191,2.428,192,2.066,193,2.66,194,2.66,402,4.69,414,4.283,415,3.323,419,3.323,420,3.323,591,4.28,623,5.517,624,3.323,642,4.28,762,3.872,1083,3.323,1201,3.872,2038,4.28,2159,3.872,2189,3.872,2381,3.567,2527,4.28,2528,4.28,2529,4.28,2530,4.28,2531,5.525,2532,4.901,2533,4.901,2534,3.872,2535,6.989,2536,4.901,2537,4.901,2538,4.901,2539,6.316,2540,4.901,2541,4.901,2542,6.316,2543,4.901,2544,4.901,2545,3.872,2546,6.316]],["title/pipes/ShortenTextPipe.html",[737,2.02,2531,2.764]],["body/pipes/ShortenTextPipe.html",[3,0.13,4,0.13,9,0.114,11,1.267,13,1.188,21,0.719,24,0.719,27,0.922,28,0.013,30,0.197,31,0.36,32,0.13,33,0.163,94,0.744,154,0.009,155,0.009,221,1.725,224,0.643,228,2.71,259,0.4,260,0.98,261,0.643,268,2.056,301,3.529,303,1.368,307,2.693,311,2.175,314,1.714,315,2.33,323,0.824,439,3.492,467,1.786,498,3.166,504,3.651,737,3.166,738,3.942,741,5.488,742,5.581,743,2.616,748,6.865,749,5.13,756,6.157,758,6.157,759,5.581,800,3.501,1123,5.581,1509,5.581,1689,5.13,1747,4.651,1820,5.13,1917,6.164,2226,5.048,2531,4.333,2547,5.581,2548,4.358,2549,6.389,2550,8.578,2551,4.989,2552,6.389,2553,6.389,2554,8.173,2555,7.049,2556,7.049,2557,7.049,2558,6.389,2559,6.389,2560,4.989,2561,4.989]],["title/components/UpdateUserComponent.html",[0,0.248,143,1.002]],["body/components/UpdateUserComponent.html",[0,0.438,1,0.801,2,1.279,3,0.15,4,0.088,5,0.941,6,0.941,7,0.941,8,0.911,9,0.077,11,1.239,12,1.605,13,0.801,14,2.35,15,2.275,16,1.364,18,1.364,20,0.283,21,0.704,22,1.761,23,1.312,24,1.062,27,0.782,28,0.013,29,1.362,30,0.264,31,0.243,32,0.088,33,0.11,36,1.906,38,1.366,39,1.982,40,1.534,41,1.534,61,1.366,64,2.544,65,2.138,66,1.366,77,1.598,78,1.827,87,1.743,88,0.682,89,1.364,90,1.364,91,0.941,92,1.407,93,0.941,94,0.706,95,0.941,96,0.801,97,0.941,98,0.827,99,0.941,100,0.827,101,0.854,102,1.364,103,0.801,104,1.279,105,1.605,106,0.801,107,1.239,108,1.605,109,0.827,110,0.911,111,0.941,112,0.801,113,1.605,114,0.827,115,0.941,116,0.827,117,0.882,118,0.776,119,0.941,120,0.801,121,0.728,122,0.827,123,1.239,124,1.279,125,1.364,126,0.827,127,0.827,128,1.279,129,1.364,130,0.827,131,1.364,132,0.827,133,0.854,134,1.364,135,0.827,136,2.092,137,0.801,138,1.2,139,0.827,140,0.854,141,0.801,142,0.941,143,1.715,144,1.594,145,0.827,146,1.622,147,0.801,148,0.801,149,0.801,150,0.827,151,0.854,152,0.941,153,0.941,154,0.007,155,0.007,177,1.108,179,1.072,208,0.729,215,2.941,222,2.846,224,0.629,228,1.78,230,1.844,231,1.662,235,1.456,242,2.418,244,2.727,247,2.846,250,2.512,255,2.618,259,0.577,260,0.678,261,0.629,262,3.456,263,2.618,265,1.504,268,1.5,269,2.332,281,0.782,291,1.827,311,1.662,314,0.776,315,1.78,317,1.667,318,2.143,323,0.812,324,1.242,374,2.057,378,1.667,379,3.386,383,2.332,389,1.534,392,1.982,393,1.982,394,1.474,430,3.657,451,2.526,453,1.713,455,3.454,456,2.297,458,2.169,474,1.185,492,4.538,493,3.276,494,2.727,495,2.975,496,3.454,565,1.598,566,1.419,691,1.844,723,3.051,726,2.057,771,2.418,784,3.108,810,5.285,824,3.31,887,1.743,935,1.419,949,2.784,955,3.657,956,2.975,983,3.121,1031,1.598,1089,3.553,1154,3.979,1271,1.598,1272,1.919,1273,1.919,1274,1.919,1275,1.743,1276,1.743,1277,1.534,1377,3.454,1378,4.784,1379,2.282,1381,3.108,1407,1.919,1422,4.978,1423,2.282,1426,3.553,1427,4.263,1433,3.857,1435,4.978,1436,3.553,1439,2.282,1440,2.659,1563,2.143,1566,1.827,1584,2.449,1939,4.18,2286,2.659,2287,5.017,2288,4.263,2292,2.939,2311,4.586,2316,3.553,2318,4.869,2321,5.078,2334,4.978,2336,4.263,2347,2.939,2348,5.503,2392,3.857,2467,3.857,2469,3.857,2489,5.936,2490,5.095,2515,3.553,2562,5.095,2563,5.743,2564,4.881,2565,5.743,2566,3.365,2567,3.365,2568,3.365,2569,3.365,2570,3.365,2571,3.365,2572,3.365,2573,3.365,2574,3.365,2575,3.365,2576,3.365,2577,3.365,2578,3.365,2579,3.365,2580,2.939,2581,4.881,2582,3.365,2583,4.263,2584,3.857]],["title/components/UserCircleGraphicComponent.html",[0,0.248,145,1.002]],["body/components/UserCircleGraphicComponent.html",[0,0.482,1,1.012,2,1.507,3,0.15,4,0.111,5,1.188,6,1.188,7,1.188,8,1.15,9,0.097,11,1.46,12,1.821,13,1.012,14,2.393,15,2.317,16,1.607,18,1.607,20,0.358,21,0.829,22,1.951,23,1.369,24,1.006,27,0.528,28,0.013,29,0.919,30,0.275,31,0.307,32,0.111,33,0.139,36,1.61,51,1.605,58,2.556,64,1.55,88,1.165,89,1.607,90,1.607,91,1.188,92,1.559,93,1.188,94,0.688,95,1.188,96,1.012,97,1.188,98,1.045,99,1.188,100,1.045,101,1.079,102,1.607,103,1.012,104,1.507,105,1.821,106,1.012,107,1.46,108,1.821,109,1.045,110,1.15,111,1.188,112,1.012,113,1.821,114,1.045,115,1.188,116,1.045,117,1.114,118,0.98,119,1.188,120,1.012,121,0.919,122,1.045,123,1.46,124,2.202,125,1.607,126,1.045,127,1.045,128,1.507,129,1.607,130,1.045,131,1.607,132,1.045,133,1.079,134,1.607,135,1.045,136,1.15,137,1.012,138,1.045,139,1.045,140,1.079,141,1.012,142,1.188,143,1.045,144,0.919,145,1.716,146,1.617,147,1.012,148,1.012,149,1.012,150,1.045,151,1.079,152,1.188,153,1.188,154,0.008,155,0.008,200,1.507,208,0.859,216,3.724,221,1.204,224,0.548,231,2.377,232,3.121,233,3.661,234,2.73,235,2.242,236,3.279,255,2.62,259,0.522,260,0.591,261,0.548,281,1.205,319,2.556,323,0.741,324,1.243,460,1.227,461,2.106,467,1.821,489,2.251,597,2.316,631,2.223,737,2.106,778,2.334,846,2.73,863,3.899,1028,2.106,1115,3.712,1150,3.094,1156,4.742,1177,3.279,1279,4.543,2077,4.742,2160,3.358,2161,5.691,2162,5.022,2163,3.712,2165,5.022,2166,5.022,2168,5.022,2173,3.712,2174,5.022,2176,3.712,2178,3.712,2182,3.712,2184,3.712,2185,3.712,2186,3.712,2187,3.712,2188,3.712,2545,5.762,2585,6.37,2586,5.749,2587,4.25,2588,4.25,2589,4.25,2590,6.515,2591,4.25,2592,5.749,2593,6.515,2594,4.25,2595,5.749,2596,4.25,2597,4.25,2598,4.25,2599,4.25,2600,4.25,2601,4.25,2602,4.25,2603,4.25]],["title/interfaces/UserCredentials.html",[271,2.212,923,1.177]],["body/interfaces/UserCredentials.html",[3,0.162,4,0.162,9,0.142,20,0.524,28,0.012,30,0.245,32,0.203,94,0.773,138,1.531,154,0.011,155,0.011,208,1.094,259,0.587,271,3.973,280,3.886,281,0.998,285,4.028,288,3.55,291,3.973,303,1.387,317,3.084,723,2.528,887,3.224,923,2.245,924,2.837,925,3.964,1563,4.661,1566,3.973,2356,3.379,2604,4.918,2605,5.783]],["title/components/UserDataPage.html",[0,0.248,147,0.971]],["body/components/UserDataPage.html",[0,0.417,1,0.762,2,1.234,3,0.171,4,0.084,5,0.895,6,0.895,7,0.895,8,0.866,9,0.073,11,1.195,12,1.56,13,0.762,14,2.339,15,2.265,16,1.315,18,1.315,20,0.27,21,0.678,22,1.72,23,0.923,24,0.988,27,0.693,28,0.013,29,1.018,30,0.297,31,0.231,32,0.084,33,0.105,36,1.581,38,2.662,39,2.662,40,1.459,41,1.459,42,2.234,43,1.842,50,2.877,51,2.108,56,1.586,57,2.65,59,2.891,61,2.498,62,2.234,64,2.39,65,1.402,66,1.911,76,1.586,77,1.52,78,1.738,80,3.142,81,2.445,83,2.412,84,1.349,87,1.658,88,0.649,89,1.315,90,1.315,91,0.895,92,1.374,93,0.895,94,0.724,95,0.895,96,0.762,97,0.895,98,0.787,99,0.895,100,0.787,101,0.813,102,1.315,103,0.762,104,1.234,105,1.56,106,0.762,107,1.195,108,1.56,109,0.787,110,0.866,111,0.895,112,0.762,113,1.56,114,0.787,115,0.895,116,0.787,117,0.839,118,0.738,119,0.895,120,0.762,121,0.692,122,0.787,123,1.195,124,1.234,125,1.315,126,0.787,127,0.787,128,1.234,129,1.315,130,0.787,131,1.315,132,0.787,133,0.813,134,1.315,135,0.787,136,1.918,137,0.762,138,0.787,139,0.787,140,0.813,141,0.762,142,0.895,143,1.372,144,1.331,145,0.787,146,1.656,147,1.632,148,0.762,149,0.762,150,0.787,151,0.813,152,0.895,153,0.895,154,0.009,155,0.007,179,1.019,199,1.09,200,1.234,208,0.703,217,4.174,218,5.416,219,3.602,221,0.985,222,2.332,224,0.884,231,1.602,235,1.835,248,1.778,250,1.549,259,0.493,260,0.654,261,0.607,265,1.45,268,0.762,281,1.273,291,1.738,303,0.754,305,2.234,314,0.738,317,1.586,323,0.914,324,1.482,333,2.445,337,2.445,364,3.191,369,1.658,373,1.586,374,1.349,375,2.234,378,1.586,383,2.266,386,2.438,389,1.459,392,1.911,393,2.266,394,2.061,396,1.658,433,3.048,442,2.83,446,3.718,453,1.835,496,2.83,565,1.52,566,1.984,571,2.171,597,2.112,606,3.909,631,1.499,658,4.805,691,1.778,711,3.191,722,3.425,723,2.662,725,1.842,726,1.984,743,1.602,782,1.984,800,1.402,830,2.83,837,2.038,846,2.234,935,1.349,979,2.332,980,2.438,994,2.145,1003,1.716,1028,1.586,1144,4.409,1145,3.718,1153,4.478,1154,3.509,1160,3.718,1174,5.374,1198,3.183,1230,2.332,1233,2.171,1249,2.171,1250,2.33,1251,2.529,1253,2.33,1254,2.33,1255,2.33,1271,1.52,1272,1.826,1273,1.826,1274,1.826,1275,1.658,1276,1.658,1277,1.459,1280,3.191,1335,3.718,1407,3.183,1566,1.738,1594,3.191,1673,2.33,2027,3.425,2044,2.33,2076,3.425,2114,2.529,2116,5.987,2118,2.796,2120,4.111,2122,2.796,2129,2.796,2132,2.796,2134,2.796,2146,2.796,2147,2.529,2148,3.718,2149,3.425,2150,2.33,2151,2.529,2195,3.909,2196,4.172,2208,2.171,2222,3.718,2251,2.529,2392,3.718,2479,5.374,2487,2.33,2488,2.796,2490,2.171,2491,2.796,2497,2.796,2498,2.796,2499,2.796,2500,2.796,2501,2.796,2502,2.796,2503,2.796,2504,2.796,2505,2.796,2506,2.796,2507,4.874,2508,2.796,2509,4.874,2510,2.796,2515,3.425,2516,4.111,2562,4.805,2584,3.718,2606,6.152,2607,4.706,2608,4.706,2609,3.201,2610,4.706,2611,4.706,2612,3.201,2613,4.111,2614,4.706,2615,4.706,2616,3.201,2617,6.152,2618,4.111,2619,4.111]],["title/modules/UserDataPageModule.html",[156,1.139,656,2.764]],["body/modules/UserDataPageModule.html",[3,0.143,4,0.143,9,0.125,28,0.013,30,0.337,31,0.395,32,0.143,33,0.179,36,1.262,88,1.109,143,1.978,144,1.184,146,1.329,147,1.916,154,0.01,155,0.01,156,1.53,158,1.928,159,2.598,160,3.81,161,2.835,162,1.996,163,2.067,168,3.508,169,2.494,170,2.222,172,2.651,173,2.651,174,3.863,175,2.97,176,4.072,177,1.802,178,3.676,179,1.743,180,3.121,182,3.355,183,2.835,184,2.97,185,3.676,186,2.711,187,2.711,188,3.355,189,3.291,190,3.121,191,2.711,192,2.307,193,2.97,194,2.97,248,2.067,281,0.877,379,2.397,402,4.367,404,4.929,409,5.351,410,4.324,411,2.711,412,5.351,413,4.324,414,4.593,415,3.711,416,5.351,417,4.324,418,3.983,421,4.324,656,5.726,658,3.711,1295,3.485,1298,5.915,1299,4.78,1302,4.78,2044,3.983,2157,4.78,2490,3.711,2562,3.711,2620,4.78,2621,4.78,2622,4.78,2623,5.457]],["title/modules/UserDataPageRoutingModule.html",[156,1.139,2623,2.764]],["body/modules/UserDataPageRoutingModule.html",[0,0.388,3,0.167,4,0.167,9,0.146,28,0.013,30,0.31,31,0.461,32,0.167,33,0.208,146,1.252,147,1.769,154,0.011,155,0.011,158,2.249,163,2.411,172,2.499,173,2.908,196,3.641,197,3.312,198,4.237,199,2.174,200,1.673,201,3.031,202,3.839,281,1.023,658,4.329,1295,4.065,2562,4.329,2623,5.038]],["title/interfaces/UserInfo.html",[723,1.655,923,1.177]],["body/interfaces/UserInfo.html",[3,0.155,4,0.155,9,0.136,20,0.501,28,0.013,30,0.234,32,0.199,94,0.854,138,1.944,154,0.01,155,0.01,208,1.065,259,0.665,260,1.099,271,3.23,280,3.839,281,0.954,288,3.393,291,4.388,303,1.397,317,2.948,723,2.893,887,4.096,923,2.202,924,2.712,925,3.789,1563,5.148,1566,4.388,2356,3.23,2604,4.701,2605,5.63]],["title/interfaces/UserRegisterInfo.html",[288,2.325,923,1.177]],["body/interfaces/UserRegisterInfo.html",[3,0.157,4,0.157,9,0.138,20,0.507,28,0.013,30,0.237,32,0.2,94,0.857,138,1.481,154,0.01,155,0.01,208,1.073,259,0.66,271,3.27,280,3.852,281,0.966,285,3.973,288,4.095,291,4.403,303,1.396,317,2.985,723,2.446,887,3.121,923,2.214,924,2.746,925,3.837,1563,5.166,1566,4.403,2356,3.27,2604,4.76,2605,5.673]],["title/components/UserSelectableComponent.html",[0,0.248,148,0.971]],["body/components/UserSelectableComponent.html",[0,0.481,1,0.632,2,1.072,3,0.107,4,0.069,5,0.742,6,0.742,7,0.742,8,0.719,9,0.061,11,1.038,12,1.394,13,0.632,14,2.297,15,2.224,16,1.143,18,1.143,20,0.224,21,0.589,22,1.565,23,0.802,24,1.162,27,0.944,28,0.013,29,1.661,30,0.238,31,0.192,32,0.107,33,0.087,36,0.943,88,0.538,89,1.143,90,1.143,91,0.742,92,1.251,93,0.742,94,0.803,95,0.742,96,0.632,97,0.742,98,0.653,99,0.742,100,0.653,101,1.038,102,1.143,103,0.632,104,1.072,105,1.394,106,0.632,107,1.422,108,1.394,109,0.653,110,0.719,111,0.742,112,0.632,113,1.394,114,0.653,115,0.742,116,0.653,117,1.744,118,0.612,119,0.742,120,0.632,121,0.574,122,0.653,123,1.038,124,1.072,125,1.143,126,0.653,127,0.653,128,1.072,129,1.143,130,0.653,131,1.143,132,0.653,133,0.674,134,1.143,135,0.653,136,0.719,137,0.632,138,0.653,139,0.653,140,1.535,141,0.632,142,0.742,143,0.653,144,0.574,145,0.653,146,1.656,147,0.632,148,1.584,149,0.632,150,0.653,151,1.931,152,0.742,153,0.742,154,0.006,155,0.006,162,1.491,177,0.874,179,0.846,192,1.119,200,0.696,208,0.611,221,1.438,224,0.958,226,1.601,231,1.697,245,3.367,248,1.544,258,1.791,259,0.634,260,1.057,261,0.958,265,1.26,268,1.911,281,0.799,283,1.863,290,3.194,303,1.024,311,2.399,314,1.473,315,2.205,323,0.991,324,1.381,332,2.219,333,3.087,337,1.163,411,2.774,436,1.724,451,2.806,453,1.984,474,1.44,494,2.659,495,2.901,597,2.116,631,2.244,632,1.57,647,2.604,691,1.544,697,1.941,708,2.459,709,1.968,743,2.265,771,2.026,782,2.97,785,3.032,793,2.911,802,1.491,829,4.067,846,2.367,929,1.801,931,3.939,932,3.231,935,2.805,936,3.381,937,2.976,938,4.076,939,2.976,941,2.976,942,4.076,943,2.773,944,2.773,946,2.773,947,2.773,948,3.629,949,2.332,951,3.571,953,2.706,954,3.571,955,3.175,956,2.583,957,4.403,958,2.32,959,2.219,960,2.604,961,2.976,962,4.076,963,2.976,964,4.648,966,4.076,967,4.131,969,2.976,970,5.329,972,2.976,973,2.118,974,4.401,975,2.976,977,2.332,979,3.164,980,2.118,983,2.774,984,2.976,985,2.976,987,2.976,988,2.976,989,2.32,990,2.976,991,2.773,993,4.374,994,2.552,995,4.101,996,2.773,998,2.773,1000,4.843,1001,2.32,1002,2.976,1003,2.426,1004,2.976,1005,2.773,1006,1.801,1008,3.381,1009,2.773,1011,2.773,1012,3.798,1013,2.773,1014,2.32,1015,2.32,1016,2.32,1017,2.32,1018,2.32,1019,2.773,1020,2.604,1021,2.773,1024,2.32,1025,2.604,1026,2.604,1028,1.316,1029,1.691,1030,1.691,1031,1.261,1033,1.597,1036,1.597,1037,1.597,1038,1.801,1043,1.801,1044,1.801,1045,1.933,1046,1.933,1047,1.933,1048,1.933,1050,2.976,1051,1.933,1052,1.933,2041,5.89,2194,2.098,2195,3.918,2196,4.101,2208,1.801,2267,2.773,2624,5.89,2625,3.939,2626,4.355,2627,3.571,2628,2.656,2629,2.656,2630,2.656,2631,2.656,2632,2.656,2633,2.656,2634,3.571,2635,2.656,2636,2.656,2637,2.656,2638,3.571,2639,2.656,2640,2.656,2641,2.32,2642,2.32,2643,2.32,2644,2.098,2645,2.32,2646,4.355,2647,2.32,2648,2.32,2649,2.32,2650,2.32,2651,3.231,2652,3.571]],["title/components/UserSelectableMobileComponent.html",[0,0.248,149,0.971]],["body/components/UserSelectableMobileComponent.html",[0,0.479,1,0.616,2,1.05,3,0.105,4,0.067,5,0.723,6,0.723,7,0.723,8,0.7,9,0.059,11,1.017,12,1.37,13,0.616,14,2.29,15,2.218,16,1.119,18,1.119,20,0.218,21,0.577,22,1.543,23,0.786,24,1.158,27,0.939,28,0.013,29,1.653,30,0.235,31,0.187,32,0.105,33,0.084,36,0.924,88,0.524,89,1.119,90,1.119,91,0.723,92,1.233,93,0.723,94,0.799,95,0.723,96,0.616,97,0.723,98,0.636,99,0.723,100,0.636,101,1.017,102,1.119,103,0.616,104,1.05,105,1.37,106,0.616,107,2.162,108,1.37,109,0.636,110,0.7,111,0.723,112,0.616,113,1.37,114,0.636,115,0.723,116,0.636,117,1.727,118,0.596,119,0.723,120,0.616,121,0.559,122,0.636,123,1.017,124,1.05,125,1.119,126,0.636,127,0.636,128,1.05,129,1.119,130,0.636,131,1.119,132,0.636,133,0.656,134,1.119,135,0.636,136,0.7,137,0.616,138,0.636,139,0.636,140,1.516,141,0.616,142,0.723,143,0.636,144,0.559,145,0.636,146,1.653,147,0.616,148,1.167,149,1.422,150,0.636,151,1.921,152,0.723,153,0.723,154,0.006,155,0.006,162,1.46,177,0.851,179,0.823,192,1.09,200,0.678,208,0.598,221,1.426,224,0.952,226,1.568,231,1.669,245,3.32,248,1.513,258,1.754,259,0.631,260,1.051,261,0.952,265,1.234,268,1.904,281,0.786,283,1.825,290,3.148,303,1.013,311,2.38,314,1.457,315,2.178,323,0.985,324,1.366,332,2.174,333,3.062,337,1.132,411,2.735,436,1.688,451,2.789,453,1.965,474,1.411,494,2.621,495,2.859,597,2.098,631,2.226,632,1.553,647,2.55,691,1.513,697,1.901,708,2.408,709,1.947,743,2.243,771,1.984,782,2.947,785,3.003,793,2.879,802,1.46,829,4.023,846,2.327,935,2.777,936,3.324,937,2.915,938,4.018,939,2.915,941,2.915,942,4.018,943,2.716,944,2.716,946,2.716,947,2.716,948,3.568,949,2.284,953,2.661,955,3.121,956,2.539,957,4.373,959,2.174,960,2.55,961,2.915,962,4.018,963,2.915,964,4.598,966,4.018,967,4.094,969,2.915,970,5.293,972,2.915,973,2.074,974,4.347,975,2.915,977,2.284,979,3.13,980,2.074,983,2.735,984,2.915,985,2.915,987,2.915,988,2.915,990,2.915,991,2.716,993,4.336,994,2.516,995,4.05,996,2.716,998,2.716,1000,4.796,1002,2.915,1003,2.403,1004,2.915,1005,2.716,1006,1.753,1008,3.324,1009,2.716,1011,2.716,1012,3.744,1013,2.716,1019,2.716,1020,2.55,1021,2.716,1025,2.55,1026,2.55,1028,1.281,1029,1.646,1030,1.646,1031,1.227,1033,1.554,1036,1.554,1037,1.554,1038,1.753,1043,1.753,1044,1.753,1045,1.882,1046,1.882,1047,1.882,1048,1.882,1050,2.915,1051,1.882,1052,1.882,1056,1.753,1058,2.716,1059,3.873,1060,3.164,1061,3.498,1062,3.498,1063,2.258,1071,2.258,1074,2.258,1077,2.258,1078,2.258,1079,2.258,1080,2.258,1081,2.258,2045,5.869,2194,2.042,2195,3.883,2196,4.05,2208,1.753,2267,2.716,2624,5.869,2626,4.282,2627,3.498,2634,3.498,2638,3.498,2641,2.258,2642,2.258,2643,2.258,2644,2.042,2645,2.258,2646,4.282,2647,2.258,2648,2.258,2649,2.258,2650,2.258,2651,3.164,2652,3.498,2653,3.873,2654,2.585,2655,2.585,2656,2.585,2657,2.585,2658,2.585,2659,2.585,2660,2.585,2661,2.585,2662,2.585,2663,2.585,2664,2.585]],["title/components/UsersInfoComponent.html",[0,0.248,150,1.002]],["body/components/UsersInfoComponent.html",[0,0.42,1,0.705,2,1.663,3,0.166,4,0.077,5,0.828,6,0.828,7,0.828,8,0.801,9,0.068,11,1.128,12,1.49,13,0.705,14,2.322,15,2.249,16,1.241,18,1.241,20,0.249,21,0.64,22,1.655,23,1.426,24,1.067,27,0.735,28,0.013,29,1.281,30,0.262,31,0.214,32,0.077,33,0.218,36,1.844,45,2.641,46,1.781,47,2.155,50,2.164,54,2.008,59,1.534,61,1.202,62,3.012,64,1.62,65,1.946,66,1.202,70,1.607,77,3.012,80,2.951,81,1.297,83,1.512,84,1.872,88,0.6,89,1.241,90,1.241,91,0.828,92,1.323,93,0.828,94,0.729,95,0.828,96,0.705,97,0.828,98,0.728,99,0.828,100,0.728,101,0.752,102,1.241,103,0.705,104,1.164,105,1.49,106,0.705,107,1.128,108,1.49,109,0.728,110,0.801,111,0.828,112,0.705,113,1.49,114,0.728,115,0.828,116,0.728,117,0.776,118,0.683,119,0.828,120,0.705,121,0.64,122,0.728,123,1.128,124,1.164,125,1.241,126,0.728,127,0.728,128,1.164,129,1.241,130,0.728,131,1.241,132,0.728,133,0.752,134,1.241,135,0.728,136,0.801,137,0.705,138,0.728,139,0.728,140,0.752,141,0.705,142,0.828,143,0.728,144,0.64,145,0.728,146,1.559,147,0.705,148,0.705,149,0.705,150,1.456,151,1.973,152,0.828,153,0.828,154,0.006,155,0.006,199,1.008,208,0.664,215,2.808,219,3.814,221,0.93,222,2.641,224,0.818,228,2.429,230,1.678,231,1.512,235,1.325,240,2.429,244,3.163,248,2.013,250,1.462,254,3.614,255,2.429,259,0.61,260,0.882,261,0.818,262,3.301,263,2.892,268,1.511,269,2.951,273,2.411,281,0.854,282,1.946,301,2.109,303,1.017,307,2.496,311,2.016,314,1.024,317,1.467,318,1.886,323,0.859,324,1.441,369,2.301,383,1.202,390,3.233,392,2.164,393,1.202,394,1.297,395,2.008,396,1.534,430,3.394,439,2.201,451,2.609,453,1.325,455,3.205,456,2.393,458,2.396,460,0.855,461,1.467,474,1.565,491,4.303,492,4.211,493,3.04,494,2.531,495,2.761,496,3.205,516,4.655,525,2.828,550,2.008,562,3.012,565,1.406,566,1.248,597,2.281,631,1.886,632,0.728,696,4.04,715,2.024,719,1.946,723,2.164,725,2.086,737,1.467,743,2.352,763,2.155,764,4.211,765,3.509,766,4.211,767,3.509,770,3.509,771,2.201,772,2.411,775,3.509,776,3.509,780,5.013,782,2.808,783,2.586,784,2.828,785,2.699,787,3.214,789,4.016,790,2.586,792,2.34,793,3.425,794,2.34,796,4.211,797,5.013,798,5.264,799,3.509,800,2.779,802,1.62,803,2.828,812,3.509,813,2.155,814,3.509,816,2.34,818,2.34,821,2.34,822,2.34,824,3.012,829,3.394,830,1.781,831,1.886,832,2.008,833,3.879,834,3.879,835,2.828,837,1.886,838,2.586,977,2.533,979,2.201,980,2.301,1003,1.62,1028,1.467,1198,2.533,1584,2.155,1594,3.012,2205,3.879,2222,4.679,2226,5.848,2244,3.509,2245,4.211,2267,3.614,2467,3.509,2469,3.509,2515,4.31,2534,5.938,2580,2.586,2583,3.879,2584,4.679,2618,5.172,2619,5.172,2644,2.34,2651,3.509,2665,6.565,2666,4.441,2667,2.961,2668,4.441,2669,4.441,2670,2.961,2671,4.441,2672,2.961,2673,2.961,2674,2.961,2675,4.441,2676,2.961,2677,2.961,2678,2.961,2679,2.961,2680,2.961,2681,2.961]],["title/injectables/UsersService.html",[459,1.103,2195,2.325]],["body/injectables/UsersService.html",[0,0.416,3,0.16,4,0.123,9,0.107,20,0.395,21,0.885,23,1.545,24,0.987,27,0.901,28,0.013,29,1.015,30,0.297,31,0.339,32,0.123,33,0.257,94,0.816,146,1.612,154,0.009,155,0.009,205,3.716,215,3.061,221,1.673,224,0.883,228,2.82,235,2.349,236,3.905,247,3.392,250,2.594,254,4.643,259,0.631,260,0.952,261,0.883,262,3.392,263,2.799,265,1.893,269,2.494,273,3.334,280,3.251,281,1.164,284,4.36,296,3.546,297,3.735,300,5.41,303,1.208,305,3.741,307,2.589,323,0.883,324,1.571,456,2.594,459,1.663,460,1.355,461,2.326,464,1.906,465,1.838,467,1.717,489,2.405,504,3.182,596,3.709,597,2.592,631,1.956,705,2.229,711,5.244,719,2.691,723,3.245,725,2.405,726,2.886,736,2.99,743,2.091,844,3.709,860,2.99,865,3.709,1003,2.24,1198,4.299,1494,5.41,1584,3.417,1702,4.471,1808,3.912,1861,4.983,2195,3.503,2244,5.955,2245,5.955,2246,5.98,2247,5.98,2248,5.98,2255,4.101,2682,4.101,2683,7.262,2684,4.695,2685,6.143,2686,4.695,2687,6.143,2688,6.143,2689,4.695,2690,4.695,2691,4.695,2692,4.695,2693,4.695]],["title/coverage.html",[2694,4.881]],["body/coverage.html",[0,0.517,1,0.963,9,0.093,10,3.532,28,0.013,33,0.234,51,3.207,81,2.435,83,1.377,96,0.963,98,0.994,100,0.994,103,0.963,106,0.963,107,1.962,109,0.994,112,0.963,114,0.994,116,0.994,118,0.933,120,0.963,122,0.994,124,1.792,126,0.994,127,0.994,130,0.994,132,0.994,135,0.994,137,0.963,139,0.994,141,0.963,143,0.994,145,0.994,147,0.963,148,0.963,149,0.963,150,0.994,154,0.008,155,0.008,188,2.004,203,3.532,215,1.705,216,2.004,221,1.501,259,0.324,271,2.195,288,2.306,317,3.146,406,3.195,408,3.195,424,4.391,425,2.944,427,3.532,459,2.186,475,3.532,487,2.944,579,2.743,581,5.017,594,2.944,597,1.246,600,2.743,602,2.944,604,3.195,606,2.306,608,4.391,610,2.743,612,2.743,627,3.195,632,0.994,637,3.195,640,3.195,644,2.575,653,2.944,658,2.743,667,2.743,687,3.532,706,3.532,723,1.642,737,2.754,739,3.532,740,3.532,761,3.532,762,3.195,763,4.622,781,2.095,817,2.743,830,2.432,839,2.575,840,3.532,923,2.332,925,4.564,927,4.977,928,4.045,929,5.022,930,3.195,1055,4.045,1056,4.86,1057,3.195,1082,2.944,1083,2.743,1084,3.532,1108,3.532,1141,3.532,1202,2.743,1282,6.26,1304,3.532,1326,2.432,1328,2.944,1330,3.532,1353,3.532,1363,2.575,1420,3.532,1421,2.944,1442,3.532,1456,4.637,1457,3.532,1525,2.575,1587,3.195,1588,3.532,1620,2.575,1639,2.743,1640,4.977,1674,2.743,1808,2.575,1948,4.391,1976,3.532,1980,2.432,2000,2.743,2041,4.045,2042,3.195,2043,3.195,2045,4.045,2047,4.391,2048,3.532,2078,3.532,2113,2.944,2114,4.391,2119,2.944,2149,4.622,2158,4.391,2159,3.195,2160,4.391,2189,3.195,2195,2.306,2240,3.532,2262,4.391,2263,4.391,2286,4.391,2296,3.532,2307,3.532,2308,4.391,2326,3.532,2328,3.532,2349,4.622,2356,2.195,2357,2.944,2358,3.532,2380,4.391,2381,4.045,2382,3.195,2453,3.532,2474,3.532,2487,2.944,2489,3.195,2490,2.743,2531,2.743,2534,3.195,2545,3.195,2547,3.532,2548,3.532,2562,3.769,2585,3.532,2624,4.977,2625,3.195,2653,3.195,2665,3.532,2682,3.532,2694,3.532,2695,4.044,2696,4.044,2697,3.532,2698,7.726,2699,8.133,2700,4.044,2701,4.044,2702,7.405,2703,6.35,2704,6.35,2705,3.532,2706,5.558,2707,6.35,2708,7.167,2709,4.044,2710,4.044,2711,4.044,2712,4.044,2713,5.558,2714,6.35,2715,5.558,2716,4.044,2717,4.044,2718,4.044,2719,4.044,2720,4.044,2721,4.044,2722,4.044,2723,5.558,2724,4.044,2725,4.044,2726,4.044,2727,4.044,2728,4.044,2729,4.044,2730,4.044,2731,4.044,2732,5.558,2733,5.558,2734,4.044,2735,5.558,2736,3.532,2737,4.044,2738,4.044,2739,4.044,2740,4.044,2741,4.044,2742,4.044,2743,4.044,2744,6.837,2745,6.837,2746,6.35,2747,6.35,2748,4.044,2749,4.044,2750,4.044,2751,5.558,2752,5.558,2753,5.558,2754,5.558,2755,4.044,2756,4.044,2757,4.044,2758,4.044,2759,4.044,2760,3.532,2761,3.532,2762,4.044,2763,4.044]],["title/dependencies.html",[159,2.331,2764,2.963]],["body/dependencies.html",[28,0.013,31,0.428,73,5.174,154,0.01,155,0.01,159,2.812,175,3.215,177,1.95,179,1.886,186,3.772,187,2.935,191,2.935,199,2.017,322,4.017,460,1.71,562,4.017,583,6.208,584,5.173,616,6.208,617,5.174,618,5.174,631,1.886,2765,5.923,2766,8.36,2767,5.923,2768,7.107,2769,5.923,2770,5.923,2771,5.923,2772,5.923,2773,7.107,2774,5.923,2775,7.614,2776,5.923,2777,5.923,2778,5.923,2779,5.923,2780,5.923,2781,5.923,2782,6.208,2783,5.923,2784,7.107,2785,5.923,2786,7.107,2787,5.923,2788,5.923,2789,5.923,2790,5.923,2791,5.923,2792,5.923,2793,5.923,2794,5.923,2795,5.923,2796,5.923,2797,5.923,2798,5.923,2799,5.923,2800,5.923,2801,5.923,2802,5.923,2803,5.923,2804,5.923,2805,5.923,2806,5.923]],["title/miscellaneous/functions.html",[2807,2.469,2808,4.288]],["body/miscellaneous/functions.html",[20,0.481,28,0.012,94,0.844,154,0.01,155,0.01,182,3.961,188,3.444,191,2.829,221,1.723,224,1.031,228,2.733,230,2.157,232,3.773,234,2.711,237,3.636,259,0.641,260,1.111,261,0.897,265,1.76,281,1.25,282,3.283,284,3.636,301,2.711,303,1.331,307,2.407,433,3.713,581,4.512,597,2.403,627,5.493,631,2.484,637,5.493,640,5.493,647,4.427,699,3.636,849,3.434,993,5.09,1038,3.873,1178,4.988,1180,4.714,1230,3.864,1263,3.1,1463,3.873,1474,4.157,1743,3.636,1795,4.157,1815,3.873,1890,3.873,1958,5.493,2054,5.493,2065,4.512,2487,5.819,2613,6.072,2705,4.988,2736,4.988,2807,4.157,2808,4.988,2809,7.494,2810,5.71,2811,5.71,2812,5.71,2813,5.71,2814,5.71,2815,5.71,2816,5.71,2817,6.952,2818,5.71,2819,5.71,2820,5.71,2821,5.71,2822,5.71]],["title/interfaces/incidentInfo.html",[923,1.177,1980,2.451]],["body/interfaces/incidentInfo.html",[3,0.156,4,0.156,9,0.136,20,0.502,28,0.013,30,0.281,32,0.156,154,0.01,155,0.01,208,1.066,259,0.675,261,1.021,281,0.956,303,1.379,386,4.099,451,3.102,887,4.099,923,1.722,924,2.718,925,3.797,1198,4.513,1382,5.367,1384,5.76,1386,5.367,1659,4.341,1761,5.367,1980,4.291,2000,4.044,2216,6.912,2356,4.295,2823,7.914]],["title/index.html",[20,0.343,2824,3.56]],["body/index.html",[1,1.61,2,1.2,28,0.013,88,0.928,96,1.61,98,1.925,100,1.925,103,1.61,106,1.61,109,1.925,112,1.61,114,1.662,116,1.662,118,1.559,120,1.61,122,1.925,126,1.925,127,1.662,130,1.662,132,1.662,135,1.662,137,1.864,139,1.662,141,1.61,143,1.662,145,1.925,147,1.61,148,1.61,149,1.61,150,1.925,154,0.009,155,0.009,156,1.279,157,5.588,158,1.612,159,2.173,160,2.37,161,2.37,162,1.669,163,1.728,164,3.997,165,3.997,166,3.997,167,4.585,168,3.129,169,2.086,170,1.858,197,1.929,396,2.37,397,5.995,398,3.997,399,3.997,400,3.997,401,4.585,402,4.687,426,3.616,574,5.955,575,3.997,576,3.997,577,3.997,578,3.997,579,4.585,580,4.585,656,5.505,705,2.173,738,3.616,924,2.086,1289,5.995,1290,3.997,1291,3.997,1292,3.997,1293,4.585,1329,2.914,1407,3.445,2031,6.221,2032,3.997,2033,3.997,2034,3.997,2035,4.585,2152,5.588,2153,3.997,2154,3.997,2155,3.997,2156,4.585,2519,5.588,2520,3.997,2521,3.997,2522,3.997,2523,4.585,2527,3.997,2528,3.997,2529,3.997,2530,3.997,2531,4.876,2620,3.997,2621,3.997,2622,3.997,2623,4.585,2824,3.997,2825,4.576,2826,4.576,2827,6.04,2828,4.576]],["title/modules.html",[158,1.968]],["body/modules.html",[28,0.011,154,0.011,155,0.011,157,4.483,158,2.17,167,4.177,397,4.483,401,4.177,402,3.343,574,4.483,580,4.177,584,6.162,656,4.177,1229,5.708,1289,4.483,1293,4.177,2031,4.483,2035,4.177,2152,4.483,2156,4.177,2519,4.483,2523,4.177,2623,4.177,2782,7.395,2829,8.466,2830,8.657,2831,8.417]],["title/properties.html",[208,0.733,2764,2.963]],["body/properties.html",[28,0.012,118,1.534,154,0.011,155,0.011,208,0.994,261,0.858,2832,6.65,2833,6.65,2834,7.606,2835,6.65,2836,6.65,2837,6.65,2838,6.65]],["title/routes.html",[197,2.355]],["body/routes.html",[28,0.011,154,0.011,155,0.011,197,2.854]],["title/miscellaneous/variables.html",[2807,2.469,2839,4.288]],["body/miscellaneous/variables.html",[20,0.447,28,0.013,34,6.977,103,1.265,106,1.265,107,2.028,137,1.265,148,1.265,149,1.265,154,0.01,155,0.01,192,3.3,259,0.657,268,1.951,282,2.912,314,1.89,315,2.913,474,1.871,608,6.008,644,4.233,927,4.839,928,3.866,929,5.417,930,5.253,1025,4.986,1026,4.986,1029,4.986,1030,4.986,1055,3.866,1056,5.157,1057,5.253,1691,4.839,1695,4.839,1696,4.839,1697,4.839,1698,4.839,1699,4.839,1700,5.282,1701,4.839,2041,3.866,2045,3.866,2076,3.866,2112,4.64,2380,4.197,2381,3.866,2382,5.253,2624,4.839,2625,5.253,2653,5.253,2697,5.807,2760,4.64,2761,4.64,2807,3.866,2839,4.64,2840,6.648,2841,5.312,2842,5.312,2843,5.312,2844,6.648,2845,5.312,2846,5.312,2847,5.312,2848,5.312,2849,5.312,2850,5.312,2851,5.312,2852,6.648,2853,6.648,2854,6.648,2855,6.648,2856,6.648,2857,6.648,2858,6.648,2859,6.648,2860,6.648,2861,6.648]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":51,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2833,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":2806,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":838,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["0.24",{"_index":1411,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["0.25",{"_index":1287,"title":{},"body":{"components/DataPage.html":{}}}],["0.5rem",{"_index":391,"title":{},"body":{"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["0.8em",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2699,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2710,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2727,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2708,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2709,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2707,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2712,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2711,"title":{},"body":{"coverage.html":{}}}],["0f212d",{"_index":65,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["0px",{"_index":1285,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["1",{"_index":58,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["1.6rem",{"_index":2151,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["1/1",{"_index":2706,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2732,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2734,"title":{},"body":{"coverage.html":{}}}],["10.10.0",{"_index":2794,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":2729,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":81,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["100px",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":76,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["11.0.2",{"_index":2797,"title":{},"body":{"dependencies.html":{}}}],["11/17",{"_index":2759,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2827,"title":{},"body":{"index.html":{}}}],["12/14",{"_index":2741,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2557,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["15.0.0",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1408,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["16px",{"_index":1415,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["17",{"_index":2825,"title":{},"body":{"index.html":{}}}],["17.0.2",{"_index":2766,"title":{},"body":{"dependencies.html":{}}}],["17.13.0",{"_index":2801,"title":{},"body":{"dependencies.html":{}}}],["17.3.3",{"_index":2768,"title":{},"body":{"dependencies.html":{}}}],["19/23",{"_index":2745,"title":{},"body":{"coverage.html":{}}}],["190px",{"_index":2234,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["1:770666336001:web:96e7751d6f04cea0b39500",{"_index":2859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b3e56",{"_index":1274,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["1px",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["2",{"_index":1407,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"index.html":{}}}],["2.0.4",{"_index":2788,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2804,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":2703,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2704,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2738,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2740,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":2447,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["20px",{"_index":71,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{}}}],["22/37",{"_index":2726,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":2828,"title":{},"body":{"index.html":{}}}],["24px",{"_index":1283,"title":{},"body":{"components/DataPage.html":{}}}],["250px",{"_index":1245,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["27",{"_index":2826,"title":{},"body":{"index.html":{}}}],["28",{"_index":2739,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":2237,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["2px",{"_index":835,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["2rem",{"_index":2150,"title":{},"body":{"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["3",{"_index":831,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["3/4",{"_index":2715,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2720,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2752,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":370,"title":{},"body":{"components/AccessPage.html":{},"components/RegisterFormComponent.html":{}}}],["300px",{"_index":1280,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["30px",{"_index":69,"title":{},"body":{"components/AboutPage.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["33",{"_index":2733,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":2325,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["36a2eb",{"_index":2180,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["4",{"_index":2504,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["4.4.3",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":2713,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2754,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":2735,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2149,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["40px",{"_index":558,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["42",{"_index":2751,"title":{},"body":{"coverage.html":{}}}],["42a5f5",{"_index":2599,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["49",{"_index":2147,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["495057",{"_index":2188,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["4px",{"_index":1272,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["5",{"_index":396,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["5.0.7",{"_index":2775,"title":{},"body":{"dependencies.html":{}}}],["5.0.8",{"_index":2778,"title":{},"body":{"dependencies.html":{}}}],["5.12.2",{"_index":2796,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":2799,"title":{},"body":{"dependencies.html":{}}}],["5.7.4",{"_index":2773,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":2716,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2718,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2743,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1282,"title":{},"body":{"components/DataPage.html":{},"coverage.html":{}}}],["50px",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/SettingsPage.html":{}}}],["55",{"_index":2742,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":2753,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":2721,"title":{},"body":{"coverage.html":{}}}],["59",{"_index":2725,"title":{},"body":{"coverage.html":{}}}],["5rem",{"_index":86,"title":{},"body":{"components/AboutPage.html":{}}}],["6",{"_index":2558,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["6.5.2",{"_index":2784,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":2724,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":2737,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2719,"title":{},"body":{"coverage.html":{}}}],["6000",{"_index":366,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["600px",{"_index":85,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["60px",{"_index":572,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["61",{"_index":2756,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":2700,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":2758,"title":{},"body":{"coverage.html":{}}}],["64b5f6",{"_index":2601,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["66",{"_index":2702,"title":{},"body":{"coverage.html":{}}}],["66bb6a",{"_index":2600,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["7.0.0",{"_index":2786,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2802,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":2701,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":2722,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2731,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2750,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":380,"title":{},"body":{"components/AccessPage.html":{},"components/SettingsPage.html":{}}}],["700px",{"_index":395,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/UsersInfoComponent.html":{}}}],["71",{"_index":1410,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["72",{"_index":2746,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2714,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2749,"title":{},"body":{"coverage.html":{}}}],["770666336001",{"_index":2858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["777777",{"_index":1276,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["8",{"_index":1233,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["8.0.0",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":2748,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":2747,"title":{},"body":{"coverage.html":{}}}],["8/13",{"_index":2757,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":830,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["80px",{"_index":1288,"title":{},"body":{"components/DataPage.html":{}}}],["80vh",{"_index":2452,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["81c784",{"_index":2602,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["82",{"_index":2744,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2717,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2723,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":1418,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["86.3vh",{"_index":49,"title":{},"body":{"components/AboutPage.html":{}}}],["87",{"_index":2730,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":1270,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["9",{"_index":1351,"title":{},"body":{"classes/EmailValidation.html":{}}}],["9._",{"_index":1350,"title":{},"body":{"classes/EmailValidation.html":{}}}],["9/12",{"_index":2755,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2728,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["900px",{"_index":837,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentDataPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["90px",{"_index":63,"title":{},"body":{"components/AboutPage.html":{}}}],["95",{"_index":1419,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{}}}],["_",{"_index":536,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["__forms",{"_index":372,"title":{},"body":{"components/AccessPage.html":{}}}],["__image",{"_index":381,"title":{},"body":{"components/AccessPage.html":{}}}],["__status",{"_index":2236,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["__title",{"_index":2235,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["_app",{"_index":1675,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_auth",{"_index":1677,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{}}}],["_categories",{"_index":1685,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_category",{"_index":1023,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["_categoryservice",{"_index":1151,"title":{},"body":{"components/DataPage.html":{}}}],["_data",{"_index":329,"title":{},"body":{"components/AccessPage.html":{}}}],["_data.role",{"_index":330,"title":{},"body":{"components/AccessPage.html":{}}}],["_db",{"_index":1676,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_firebaseservice",{"_index":1156,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["_firebasesvc",{"_index":2606,"title":{},"body":{"components/UserDataPage.html":{}}}],["_headers",{"_index":2108,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["_headers.set('accept",{"_index":2110,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["_incidents",{"_index":1683,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_info",{"_index":1551,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["_info.uuid",{"_index":1552,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["_islogged",{"_index":1679,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_item",{"_index":2266,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["_language",{"_index":1109,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["_logged",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["_picture",{"_index":2383,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["_router",{"_index":2479,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["_user",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["_users",{"_index":1681,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_webstorage",{"_index":1678,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["a4ef9",{"_index":2856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a4ef9.appspot.com",{"_index":2857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a4ef9.firebaseapp.com",{"_index":2855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["about'},{'name",{"_index":95,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["about.about",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{}}}],["about.page.html",{"_index":19,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":157,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["aboutpageroutingmodule",{"_index":167,"title":{"modules/AboutPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["absolute",{"_index":82,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["abstract",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/MediaService.html":{}}}],["abstractcontrol",{"_index":1341,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["acc",{"_index":2173,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["acc[categoryname",{"_index":2172,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["acc[user.role",{"_index":2592,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["access",{"_index":205,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["access'},{'name",{"_index":97,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["access.page",{"_index":405,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{}}}],["access.page.html",{"_index":207,"title":{},"body":{"components/AccessPage.html":{}}}],["access.page.scss",{"_index":206,"title":{},"body":{"components/AccessPage.html":{}}}],["access.tologin",{"_index":368,"title":{},"body":{"components/AccessPage.html":{}}}],["access.toregister",{"_index":367,"title":{},"body":{"components/AccessPage.html":{}}}],["access.webp",{"_index":388,"title":{},"body":{"components/AccessPage.html":{}}}],["access__forms",{"_index":376,"title":{},"body":{"components/AccessPage.html":{}}}],["access__image",{"_index":2473,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["accessors",{"_index":949,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["accesspage",{"_index":96,"title":{"components/AccessPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["accesspagemodule",{"_index":397,"title":{"modules/AccessPageModule.html":{}},"body":{"modules/AccessPageModule.html":{},"index.html":{},"modules.html":{}}}],["accesspageroutingmodule",{"_index":401,"title":{"modules/AccessPageRoutingModule.html":{}},"body":{"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["according",{"_index":2367,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["accordingly",{"_index":696,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["accordionmodule",{"_index":1300,"title":{},"body":{"modules/DataPageModule.html":{},"modules/SettingsPageModule.html":{}}}],["account",{"_index":1907,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["action",{"_index":1433,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["actions",{"_index":836,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["activated",{"_index":443,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":218,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["activatedroutesnapshot",{"_index":435,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["actual_component",{"_index":153,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["actualizada",{"_index":892,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["actualizar",{"_index":918,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["add",{"_index":1793,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adddoc",{"_index":1647,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adddoc(collectionref",{"_index":1800,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adding",{"_index":1123,"title":{},"body":{"injectables/CustomTranslateService.html":{},"pipes/ShortenTextPipe.html":{}}}],["additional",{"_index":1507,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["address",{"_index":1906,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adds",{"_index":747,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["admin",{"_index":440,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/CategoryInfo.html":{}}}],["adminguard",{"_index":425,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminid",{"_index":926,"title":{},"body":{"interfaces/CategoryInfo.html":{}}}],["against",{"_index":1851,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["age",{"_index":1940,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["aizasydongue6cpcz6vkkf",{"_index":2853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":896,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["align",{"_index":56,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["alldata",{"_index":1727,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldata[collectionname",{"_index":1731,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldocs",{"_index":1827,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldocs.docs.filter((doc",{"_index":1830,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["allowed",{"_index":1277,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["allowing",{"_index":1794,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["allows",{"_index":254,"title":{},"body":{"components/AccessPage.html":{},"injectables/IncidentsService.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["already",{"_index":346,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["androidscheme",{"_index":2850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":248,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["angular's",{"_index":2246,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["angular/animations",{"_index":2765,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2767,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":175,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":183,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/compiler",{"_index":2769,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":177,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"modules/DataPageModule.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"modules/SettingsPageModule.html":{},"components/UpdateUserComponent.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2770,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":415,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/checkbox",{"_index":2040,"title":{},"body":{"modules/HomePageModule.html":{}}}],["angular/material/dialog",{"_index":624,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":410,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/icon",{"_index":417,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/input",{"_index":413,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/select",{"_index":1299,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/tabs",{"_index":1297,"title":{},"body":{"modules/DataPageModule.html":{}}}],["angular/platform",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":199,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UsersInfoComponent.html":{},"dependencies.html":{}}}],["anonymously",{"_index":1883,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["api",{"_index":1021,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["apikey",{"_index":1695,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["app.component",{"_index":590,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":477,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":98,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["append",{"_index":2556,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["appends",{"_index":754,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["appid",{"_index":1700,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":244,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["application/pdf",{"_index":1750,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["application/x",{"_index":2111,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["applies",{"_index":1375,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{}}}],["apply",{"_index":1417,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{}}}],["applying",{"_index":1997,"title":{},"body":{"components/HomePage.html":{}}}],["appmodule",{"_index":574,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appname",{"_index":2847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":580,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["argument",{"_index":2822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arguments",{"_index":792,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["around",{"_index":2517,"title":{},"body":{"components/SettingsPage.html":{}}}],["array",{"_index":1817,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["arrays",{"_index":1726,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["asociadas",{"_index":911,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["assigns",{"_index":2668,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["associated",{"_index":251,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["assumes",{"_index":1606,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["async",{"_index":333,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["async)?.name",{"_index":540,"title":{},"body":{"components/AppComponent.html":{}}}],["async)?.surname",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["asynchronous",{"_index":1520,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["asynchronously",{"_index":1957,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["attempts",{"_index":1464,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth",{"_index":262,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["auth.service",{"_index":596,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["auth.service.ts",{"_index":1457,"title":{},"body":{"classes/FirebaseAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:10",{"_index":1461,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["auth.service.ts:124",{"_index":1498,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["auth.user",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["auth.user$|async)?.name",{"_index":2512,"title":{},"body":{"components/SettingsPage.html":{}}}],["auth.user$|async)?.surname",{"_index":2513,"title":{},"body":{"components/SettingsPage.html":{}}}],["auth.user$|async)?.username",{"_index":2514,"title":{},"body":{"components/SettingsPage.html":{}}}],["auth/email",{"_index":345,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/invalid",{"_index":356,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/operation",{"_index":1922,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/weak",{"_index":1924,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["authdomain",{"_index":1696,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":1910,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["authenticated",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":263,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["authguard",{"_index":653,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":2837,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":264,"title":{},"body":{"components/AccessPage.html":{},"components/HomePage.html":{}}}],["authservice",{"_index":215,"title":{"injectables/AuthService.html":{}},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["authservice:10",{"_index":1470,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:11",{"_index":1469,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:12",{"_index":1471,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:153",{"_index":1489,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:178",{"_index":1483,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:189",{"_index":1515,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:44",{"_index":1472,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:83",{"_index":1505,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:9",{"_index":1468,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservicefactory",{"_index":640,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authservicefactory(backend",{"_index":2812,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auto",{"_index":59,"title":{},"body":{"components/AboutPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["automatically",{"_index":1462,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["available",{"_index":1229,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules.html":{}}}],["avatar",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["await",{"_index":337,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["back",{"_index":2146,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["backend",{"_index":647,"title":{},"body":{"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/functions.html":{}}}],["backend:string",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["background",{"_index":383,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["backgroundcolor",{"_index":2178,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["bar",{"_index":2780,"title":{},"body":{"dependencies.html":{}}}],["base64",{"_index":2818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":258,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/LocalService.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["bbbbbb",{"_index":2239,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["bd1e1e",{"_index":1416,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["before",{"_index":755,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["behaviorsubject",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["behaviorsubject(false",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["behaviorsubject(null",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{}}}],["being",{"_index":297,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/PictureSelectableComponent.html":{},"injectables/UsersService.html":{}}}],["between",{"_index":45,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["binary",{"_index":1744,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["blob",{"_index":1230,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["blob([csvcontent",{"_index":1231,"title":{},"body":{"components/DataPage.html":{}}}],["blobs",{"_index":1740,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["block",{"_index":75,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/DataPage.html":{},"components/PictureSelectableComponent.html":{}}}],["body",{"_index":2061,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["bold",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["boolean",{"_index":451,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["bootstrap",{"_index":161,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["border",{"_index":392,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["borrada",{"_index":915,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["borrar",{"_index":907,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["both",{"_index":1524,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["bottom",{"_index":70,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["box",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["boxes",{"_index":1157,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["break",{"_index":350,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["browse",{"_index":2830,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":584,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":432,"title":{},"body":{"guards/AdminGuard.html":{}}}],["browser/animations",{"_index":587,"title":{},"body":{"modules/AppModule.html":{}}}],["browser/animations/async",{"_index":593,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":586,"title":{},"body":{"modules/AppModule.html":{}}}],["browserlanguage",{"_index":2297,"title":{},"body":{"injectables/LocalService.html":{}}}],["browsermodule",{"_index":582,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":1757,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["building",{"_index":1426,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["button",{"_index":389,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["button.picture",{"_index":2448,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["búsqueda",{"_index":1840,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["c.name",{"_index":871,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["calc((100vw",{"_index":2233,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["calc(33.333",{"_index":2029,"title":{},"body":{"components/HomePage.html":{}}}],["callback",{"_index":993,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":1890,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["calling",{"_index":1484,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["calls",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{}}}],["campo",{"_index":1946,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["canactivate",{"_index":428,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":434,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["cancel",{"_index":1089,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["capacitor.config.ts",{"_index":2697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":2772,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":2774,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":2776,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":322,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"dependencies.html":{}}}],["capacitor/keyboard",{"_index":2777,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":2779,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":2845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalized",{"_index":757,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["capitalizeinitial",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{}}}],["capitalizeinitialpipe",{"_index":579,"title":{"pipes/CapitalizeInitialPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{},"index.html":{}}}],["capitalizes",{"_index":745,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["capitalizing",{"_index":1503,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["card",{"_index":2232,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["case",{"_index":344,"title":{},"body":{"components/AccessPage.html":{},"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["cases",{"_index":292,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch",{"_index":1036,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["catch((err",{"_index":1138,"title":{},"body":{"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch((error",{"_index":1214,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["catch(async",{"_index":1788,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catcherror",{"_index":862,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["catcherror((err",{"_index":894,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["categories",{"_index":101,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["categoriesinfocomponent",{"_index":100,"title":{"components/CategoriesInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["categoriesselectorcomponent",{"_index":952,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoriesservice",{"_index":839,"title":{"injectables/CategoriesService.html":{}},"body":{"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"coverage.html":{}}}],["category",{"_index":104,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["category'},{'name",{"_index":129,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["category(_category",{"_index":1032,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["category.admin",{"_index":882,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.adminid",{"_index":880,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.component",{"_index":1203,"title":{},"body":{"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["category.component.html",{"_index":2265,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["category.component.scss",{"_index":2264,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["category.component.ts",{"_index":2263,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:12",{"_index":2337,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:13",{"_index":2338,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:16",{"_index":2269,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:20",{"_index":2330,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:23",{"_index":2270,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:30",{"_index":2276,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:32",{"_index":2268,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:33",{"_index":2331,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:36",{"_index":2271,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:37",{"_index":2329,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:42",{"_index":2272,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:56",{"_index":2332,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:62",{"_index":2335,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:70",{"_index":2333,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:9",{"_index":2274,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.description",{"_index":828,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["category.name",{"_index":827,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{}}}],["category.uuid",{"_index":914,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category/item",{"_index":2042,"title":{},"body":{"modules/HomePageModule.html":{},"components/ItemCategoryComponent.html":{},"coverage.html":{}}}],["category/modal",{"_index":1202,"title":{},"body":{"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["category_selectable_mobile_value_accessor",{"_index":1057,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category_selectable_value_accessor",{"_index":930,"title":{},"body":{"components/CategorySelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorycounts",{"_index":2170,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["categoryid",{"_index":855,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryinfo",{"_index":781,"title":{"interfaces/CategoryInfo.html":{}},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["categoryinfo(category",{"_index":2341,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["categoryname",{"_index":1382,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"interfaces/incidentInfo.html":{}}}],["categorynamevalue",{"_index":2017,"title":{},"body":{"components/HomePage.html":{}}}],["categoryselectablecomponent",{"_index":103,"title":{"components/CategorySelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categoryselectablemobilecomponent",{"_index":106,"title":{"components/CategorySelectableMobileComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categoryselected",{"_index":933,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoryselected.data.name",{"_index":1054,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoryservice",{"_index":934,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoría",{"_index":873,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["cccccc",{"_index":1275,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["center",{"_index":57,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["certain",{"_index":1913,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["chain",{"_index":1519,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["change",{"_index":1005,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["changeform",{"_index":209,"title":{},"body":{"components/AccessPage.html":{}}}],["changepicture",{"_index":2385,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture",{"_index":2393,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changes",{"_index":994,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["changing",{"_index":2411,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["character",{"_index":753,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["characters",{"_index":1928,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["chart",{"_index":2166,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["chart.js",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}],["chartdata",{"_index":2185,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["chartmodule",{"_index":2542,"title":{},"body":{"modules/SharedModule.html":{}}}],["chato",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["checkbox",{"_index":1414,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["checked",{"_index":1384,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/incidentInfo.html":{}}}],["checkedvalue",{"_index":2019,"title":{},"body":{"components/HomePage.html":{}}}],["checking",{"_index":692,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["checks",{"_index":439,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{}}}],["checkscreensize",{"_index":767,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["checkscreensize(width",{"_index":799,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["children",{"_index":660,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["circle",{"_index":124,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["class",{"_index":33,"title":{"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"classes/PasswordValidation.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":1329,"title":{},"body":{"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"classes/PasswordValidation.html":{},"index.html":{}}}],["clears",{"_index":966,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["clearsearch",{"_index":937,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["clearsearch(input",{"_index":963,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["clearselection",{"_index":938,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["click",{"_index":2204,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["clicked",{"_index":789,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["clicks",{"_index":2273,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["client",{"_index":604,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["client.provider",{"_index":613,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{}}}],["client.provider.ts",{"_index":2048,"title":{},"body":{"injectables/HttpClientProvider.html":{},"coverage.html":{}}}],["client.provider.ts:16",{"_index":2059,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:26",{"_index":2057,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:37",{"_index":2067,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:53",{"_index":2069,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:69",{"_index":2063,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:84",{"_index":2053,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:94",{"_index":2074,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["close",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["closes",{"_index":1095,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":164,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":165,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_imports",{"_index":166,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule",{"_index":398,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule_declarations",{"_index":400,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule_imports",{"_index":399,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":575,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":576,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":577,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_datapagemodule",{"_index":1290,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_datapagemodule_declarations",{"_index":1291,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_datapagemodule_imports",{"_index":1292,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":2032,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":2034,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_imports",{"_index":2033,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule",{"_index":2153,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule_declarations",{"_index":2154,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule_imports",{"_index":2155,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule",{"_index":2520,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule_declarations",{"_index":2522,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule_imports",{"_index":2521,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_sharedmodule",{"_index":2527,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2530,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_exports",{"_index":2528,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_imports",{"_index":2529,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule",{"_index":2620,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule_declarations",{"_index":2622,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule_imports",{"_index":2621,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["code",{"_index":1918,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["coincidan",{"_index":1837,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection",{"_index":1495,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection's",{"_index":1823,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection(this._db",{"_index":1730,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionname",{"_index":1728,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionname/documentid",{"_index":1598,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["collectionref",{"_index":1799,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionreference",{"_index":1658,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collections",{"_index":1690,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["color",{"_index":64,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["column",{"_index":41,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["combinelatest",{"_index":2675,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["commonmodule",{"_index":174,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["complete",{"_index":1487,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["completed",{"_index":2821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["completes",{"_index":1511,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["completing",{"_index":2401,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["completion",{"_index":1488,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["component_template",{"_index":93,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["componentprops",{"_index":1251,"title":{},"body":{"components/DataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["components/categories",{"_index":2540,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/confirm",{"_index":2541,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/incidents",{"_index":2539,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/picture",{"_index":2538,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/user",{"_index":2544,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/users",{"_index":2533,"title":{},"body":{"modules/SharedModule.html":{}}}],["con",{"_index":874,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["concatenated",{"_index":1760,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["condition",{"_index":1854,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["config",{"_index":644,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":1692,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["confirm",{"_index":110,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["confirmation",{"_index":1192,"title":{},"body":{"components/DataPage.html":{}}}],["confirmcontrolname",{"_index":2362,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["confirmdialogcomponent",{"_index":109,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["confirmed",{"_index":2614,"title":{},"body":{"components/UserDataPage.html":{}}}],["confirmpassword",{"_index":2374,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["connect",{"_index":1473,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["connectanonymously",{"_index":1889,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connected",{"_index":1491,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connects",{"_index":1901,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connectuserwithemailandpassword",{"_index":1537,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.error('error",{"_index":1037,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["console.error('failed",{"_index":1215,"title":{},"body":{"components/DataPage.html":{}}}],["console.error('no",{"_index":1228,"title":{},"body":{"components/DataPage.html":{}}}],["console.error(err",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{}}}],["console.log",{"_index":1925,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log('all",{"_index":334,"title":{},"body":{"components/AccessPage.html":{}}}],["console.log('bad",{"_index":355,"title":{},"body":{"components/AccessPage.html":{}}}],["console.log('filtervalues",{"_index":2011,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('object",{"_index":884,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["console.log('user",{"_index":2498,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["console.log(`email",{"_index":1921,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(`error",{"_index":1923,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(err",{"_index":1532,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["console.log(error",{"_index":2441,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["console.log(error.message",{"_index":1931,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(id",{"_index":2004,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(results.data",{"_index":2501,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["console.log(this.form.value",{"_index":1399,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["console.log(this.message.message",{"_index":1102,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["const",{"_index":200,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["construct",{"_index":1769,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject('firebase",{"_index":1687,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["constructor(_auth",{"_index":1984,"title":{},"body":{"components/HomePage.html":{}}}],["constructor(_firebaseservice",{"_index":1150,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["constructor(auth",{"_index":214,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["constructor(categoryservice",{"_index":950,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["constructor(dialogref",{"_index":1090,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["constructor(filterservice",{"_index":1362,"title":{},"body":{"components/FilterComponent.html":{}}}],["constructor(firebase",{"_index":1589,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{}}}],["constructor(firebaseservice",{"_index":844,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["constructor(firebasesvc",{"_index":1460,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["constructor(formbuilder",{"_index":1423,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["constructor(httpclient",{"_index":2081,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["constructor(lang",{"_index":2298,"title":{},"body":{"injectables/LocalService.html":{}}}],["constructor(picturemodal",{"_index":2389,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["constructor(private",{"_index":466,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{}}}],["constructor(protected",{"_index":1615,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["constructor(route",{"_index":2118,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["constructor(router",{"_index":2667,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["constructor(translate",{"_index":1112,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["constructor(userservice",{"_index":2194,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["constructs",{"_index":778,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["contain",{"_index":1815,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["container",{"_index":37,"title":{},"body":{"components/AboutPage.html":{}}}],["containing",{"_index":283,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["contains",{"_index":296,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/UsersService.html":{}}}],["content",{"_index":43,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["contenttype",{"_index":1782,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["contrast",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":1335,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"components/UserDataPage.html":{}}}],["control.errors",{"_index":2379,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(confirmcontrolname)?.value",{"_index":2375,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(controlname)?.value",{"_index":1346,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["control.get(passwordcontrolname)?.value",{"_index":2373,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control?.errors",{"_index":2376,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control?.value",{"_index":1345,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["controller",{"_index":2608,"title":{},"body":{"components/UserDataPage.html":{}}}],["controlname",{"_index":1336,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["controls",{"_index":1412,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/RegisterFormComponent.html":{}}}],["controlvalueaccessor",{"_index":2425,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["converted",{"_index":1188,"title":{},"body":{"components/DataPage.html":{}}}],["converts",{"_index":1178,"title":{},"body":{"components/DataPage.html":{},"miscellaneous/functions.html":{}}}],["core",{"_index":2783,"title":{},"body":{"dependencies.html":{}}}],["core/guards/admin.guard",{"_index":655,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/auth.guard",{"_index":654,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/pipes/capitalize",{"_index":619,"title":{},"body":{"modules/AppModule.html":{}}}],["core/pipes/shorten",{"_index":2536,"title":{},"body":{"modules/SharedModule.html":{}}}],["core/services/auth.service",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["core/services/data.service",{"_index":611,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/firebase/api/firebase",{"_index":595,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/firebase/firebase.service",{"_index":598,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/http/http",{"_index":603,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/media.service",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/translate/local.service",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["core/translate/translate",{"_index":591,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["corresponding",{"_index":2611,"title":{},"body":{"components/UserDataPage.html":{}}}],["cover",{"_index":385,"title":{},"body":{"components/AccessPage.html":{}}}],["coverage",{"_index":2694,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creada",{"_index":890,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["crear",{"_index":897,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["create",{"_index":1263,"title":{},"body":{"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["createbody",{"_index":2079,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createbody(body",{"_index":2084,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createcategory",{"_index":841,"title":{},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{}}}],["createcategory(category",{"_index":847,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["created",{"_index":849,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["createdocument",{"_index":1792,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdocument(collectionname",{"_index":1797,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdocumentwithid",{"_index":1804,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createheaders",{"_index":2080,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createheaders(headers",{"_index":2087,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["creates",{"_index":691,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["createtranslateloader",{"_index":188,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":2815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createuserwithemailandpassword",{"_index":1666,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createuserwithemailandpassword(info.email",{"_index":1549,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["creating",{"_index":1161,"title":{},"body":{"components/DataPage.html":{},"injectables/DataService.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["credentials",{"_index":275,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{}}}],["credentials.email",{"_index":1538,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.password",{"_index":1539,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user",{"_index":1541,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user.user",{"_index":1542,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user.user.uid",{"_index":1543,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["criteria",{"_index":1826,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["criterio",{"_index":1838,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["cssclass",{"_index":2499,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["csv",{"_index":1169,"title":{},"body":{"components/DataPage.html":{}}}],["csvcontent",{"_index":1170,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles",{"_index":1208,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles.hasownproperty(key",{"_index":1210,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles[key",{"_index":1211,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows",{"_index":1221,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows.join('\\r\\n",{"_index":1227,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows.unshift(headers.join",{"_index":1226,"title":{},"body":{"components/DataPage.html":{}}}],["current",{"_index":256,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["currentlang",{"_index":2477,"title":{},"body":{"components/SettingsPage.html":{}}}],["currently",{"_index":973,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["currentuser",{"_index":2679,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["currentuser?.uuid",{"_index":2580,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["cursor",{"_index":393,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["customtranslateservice",{"_index":216,"title":{"injectables/CustomTranslateService.html":{}},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["data",{"_index":281,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"injectables/DataService.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{}}}],["data'},{'name",{"_index":113,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["data)).pipe",{"_index":1629,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.categories",{"_index":823,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["data.create",{"_index":1268,"title":{},"body":{"components/DataPage.html":{},"components/ModalCategoryComponent.html":{}}}],["data.data",{"_index":1266,"title":{},"body":{"components/DataPage.html":{}}}],["data.data['email",{"_index":1576,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['name",{"_index":1573,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['picture",{"_index":1575,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['role",{"_index":1577,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['surname",{"_index":1574,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['username",{"_index":1578,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.download",{"_index":1267,"title":{},"body":{"components/DataPage.html":{}}}],["data.file",{"_index":1972,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["data.graphic",{"_index":1269,"title":{},"body":{"components/DataPage.html":{}}}],["data.id",{"_index":1579,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.length",{"_index":1622,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.map((doc",{"_index":1617,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.module",{"_index":659,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module').then",{"_index":668,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module').then(m",{"_index":681,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module.ts",{"_index":2157,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["data.page",{"_index":1295,"title":{},"body":{"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["data.page.html",{"_index":1145,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.scss",{"_index":1144,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts",{"_index":2114,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["data.page.ts:102",{"_index":2609,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.page.ts:119",{"_index":2126,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:136",{"_index":2121,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:18",{"_index":2129,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts:19",{"_index":2120,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts:37",{"_index":2128,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:38",{"_index":2130,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:44",{"_index":2122,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts:65",{"_index":2612,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.page.ts:68",{"_index":2124,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:99",{"_index":2127,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.service",{"_index":1614,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.service.ts",{"_index":1588,"title":{},"body":{"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["data.service.ts:6",{"_index":1590,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.update",{"_index":2516,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["data.users",{"_index":2651,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["data/:id",{"_index":665,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data/incident",{"_index":667,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"coverage.html":{}}}],["data/modal",{"_index":2001,"title":{},"body":{"components/HomePage.html":{}}}],["data/update",{"_index":2489,"title":{},"body":{"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"coverage.html":{}}}],["data/user",{"_index":658,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"coverage.html":{}}}],["data:t",{"_index":2354,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["database",{"_index":1508,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dataobject",{"_index":1187,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject.hasownproperty(key",{"_index":1217,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject[key].length",{"_index":1218,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject[key].map((row",{"_index":1222,"title":{},"body":{"components/DataPage.html":{}}}],["datapage",{"_index":112,"title":{"components/DataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["datapagemodule",{"_index":1289,"title":{"modules/DataPageModule.html":{}},"body":{"modules/DataPageModule.html":{},"index.html":{},"modules.html":{}}}],["datapageroutingmodule",{"_index":1293,"title":{"modules/DataPageRoutingModule.html":{}},"body":{"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["dataservice",{"_index":610,"title":{"injectables/DataService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["dataservice:101",{"_index":1595,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:24",{"_index":1608,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:52",{"_index":1599,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:72",{"_index":1603,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:85",{"_index":1605,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataset",{"_index":1182,"title":{},"body":{"components/DataPage.html":{}}}],["datasets",{"_index":2176,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["dataurl",{"_index":2817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob",{"_index":2487,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":2816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob(results.data.picture",{"_index":2505,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["datauser",{"_index":2666,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["datauser(userid",{"_index":2671,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["date",{"_index":2216,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["date(this.incident.date",{"_index":2211,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["date.now",{"_index":1779,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["date.tolocaledatestring",{"_index":2218,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["date.tolocaletimestring",{"_index":2219,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["de",{"_index":1839,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["declarations",{"_index":160,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["decorators",{"_index":813,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["default",{"_index":314,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":806,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{}}}],["delete(resource",{"_index":1306,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["delete(url",{"_index":2052,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["deletecategory",{"_index":768,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{}}}],["deletecategory(category",{"_index":804,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{}}}],["deletecategory(info",{"_index":1162,"title":{},"body":{"components/DataPage.html":{}}}],["deleted",{"_index":807,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedoc",{"_index":1654,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedoc(docref",{"_index":1864,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedocument",{"_index":1859,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedocument('categoryinfo",{"_index":913,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["deletes",{"_index":852,"title":{},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deleteuser",{"_index":1667,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deleting",{"_index":1193,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["deletion",{"_index":2415,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["dependencies",{"_index":159,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":2244,"title":{},"body":{"injectables/IncidentsService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["depending",{"_index":1768,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deps",{"_index":194,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["description",{"_index":261,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"properties.html":{}}}],["deselect",{"_index":939,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["deselect(popover",{"_index":969,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["deselects",{"_index":972,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["designed",{"_index":1956,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["desired",{"_index":1869,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["desktop",{"_index":2030,"title":{},"body":{"components/HomePage.html":{}}}],["destroyed",{"_index":2397,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["detail",{"_index":364,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["detailed",{"_index":1493,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["details",{"_index":300,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["dialog",{"_index":1085,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["dialog'},{'name",{"_index":111,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["dialog.${this.message.message",{"_index":1103,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component",{"_index":1201,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"modules/SharedModule.html":{}}}],["dialog.component.html",{"_index":1087,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1086,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1084,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":1092,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1097,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1099,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":1096,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":1094,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.no",{"_index":1106,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.yes",{"_index":1107,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog/confirm",{"_index":1083,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":1088,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":1246,"title":{},"body":{"components/DataPage.html":{}}}],["dialogref.afterclosed().subscribe(async",{"_index":2138,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["dialogs",{"_index":1158,"title":{},"body":{"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{}}}],["different",{"_index":240,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["direction",{"_index":40,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["directive",{"_index":91,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["directives",{"_index":152,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["directly",{"_index":2820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["directory",{"_index":1756,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["disabled",{"_index":935,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["dismisses",{"_index":1435,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["display",{"_index":38,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["display:flex",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["displayed",{"_index":306,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["displaying",{"_index":245,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["displays",{"_index":225,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["div",{"_index":2324,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["div.user",{"_index":2446,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["dividermodule",{"_index":621,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":1632,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc(this._db",{"_index":1811,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.data",{"_index":1619,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.id",{"_index":1618,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.id.includes(substring",{"_index":1831,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docid",{"_index":1807,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docref",{"_index":888,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap",{"_index":1844,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.data",{"_index":1848,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.exists",{"_index":1846,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.id",{"_index":1847,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["document",{"_index":1500,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["document.body.appendchild(link",{"_index":1240,"title":{},"body":{"components/DataPage.html":{}}}],["document.body.removechild(link",{"_index":1242,"title":{},"body":{"components/DataPage.html":{}}}],["document.createelement('a",{"_index":1236,"title":{},"body":{"components/DataPage.html":{}}}],["documentation",{"_index":2695,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":1641,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentos",{"_index":1835,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentpath",{"_index":1873,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentref",{"_index":1878,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentreference",{"_index":1655,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documents",{"_index":1593,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentsnapshot",{"_index":1656,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["download",{"_index":1168,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["downloadcsv",{"_index":1146,"title":{},"body":{"components/DataPage.html":{}}}],["downloadcsv(csvcontent",{"_index":1164,"title":{},"body":{"components/DataPage.html":{}}}],["downloaded",{"_index":1171,"title":{},"body":{"components/DataPage.html":{}}}],["downloads",{"_index":1179,"title":{},"body":{"components/DataPage.html":{}}}],["downloadurl",{"_index":1786,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dropdownmodule",{"_index":625,"title":{},"body":{"modules/AppModule.html":{}}}],["during",{"_index":293,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["dynamic",{"_index":2771,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":1908,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["each",{"_index":1181,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["edit",{"_index":788,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["editcategory",{"_index":769,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{}}}],["editcategory(category",{"_index":808,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["editcategory(info",{"_index":1172,"title":{},"body":{"components/DataPage.html":{}}}],["edited",{"_index":810,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/UpdateUserComponent.html":{}}}],["editing",{"_index":1174,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{}}}],["efficiently",{"_index":1522,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["el",{"_index":1720,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["element",{"_index":90,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["ellipsis",{"_index":2553,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["email",{"_index":280,"title":{},"body":{"components/AccessPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UsersService.html":{}}}],["email(controlname",{"_index":1332,"title":{},"body":{"classes/EmailValidation.html":{}}}],["email.match(/^[a",{"_index":1347,"title":{},"body":{"classes/EmailValidation.html":{}}}],["email:string",{"_index":2604,"title":{},"body":{"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["emailvalidation",{"_index":1328,"title":{"classes/EmailValidation.html":{}},"body":{"classes/EmailValidation.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["emailvalidation.email",{"_index":2463,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["emit",{"_index":959,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["emitevent",{"_index":1398,"title":{},"body":{"components/FilterComponent.html":{}}}],["emits",{"_index":458,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["emitted",{"_index":1875,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["emitter",{"_index":1366,"title":{},"body":{"components/FilterComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["emitting",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"injectables/MediaService.html":{},"components/UsersInfoComponent.html":{}}}],["empty",{"_index":751,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["en",{"_index":1133,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["encapsulation",{"_index":1142,"title":{},"body":{"components/DataPage.html":{}}}],["encoded",{"_index":2065,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["encontraron",{"_index":1834,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["end",{"_index":749,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"components/FilterComponent.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{}}}],["enough",{"_index":1927,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ensures",{"_index":2398,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["environment",{"_index":608,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebaseconfig",{"_index":646,"title":{},"body":{"modules/AppModule.html":{}}}],["equality",{"_index":1853,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["err",{"_index":341,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{}}}],["err.code",{"_index":342,"title":{},"body":{"components/AccessPage.html":{}}}],["err.message",{"_index":899,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["error",{"_index":226,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["error(\"not",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["error('database",{"_index":1863,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error('error",{"_index":895,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{}}}],["error('una",{"_index":872,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["error('user",{"_index":1580,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["error(`error",{"_index":916,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["error(`failed",{"_index":1733,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error.code",{"_index":1920,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error.message",{"_index":1734,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["errors",{"_index":277,"title":{},"body":{"components/AccessPage.html":{},"classes/PasswordValidation.html":{}}}],["errors.emailerror",{"_index":2468,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["errors.repeaterror",{"_index":2471,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["errors.valid",{"_index":2321,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["errors['passwordmatch",{"_index":2378,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["es",{"_index":1127,"title":{},"body":{"injectables/CustomTranslateService.html":{},"injectables/LocalService.html":{}}}],["este",{"_index":875,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["etc",{"_index":1767,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["event",{"_index":793,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["event.stoppropagation",{"_index":2224,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["eventemitter",{"_index":785,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["events",{"_index":491,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["evt",{"_index":988,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["example",{"_index":1758,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["example@example.com",{"_index":1909,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["executed",{"_index":979,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["executes",{"_index":1323,"title":{},"body":{"injectables/DataService.html":{}}}],["exist",{"_index":1843,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["existe",{"_index":878,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["existing",{"_index":1318,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["existingcategories.some((c",{"_index":870,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["exists",{"_index":1492,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["exitosamente",{"_index":893,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["exportdata",{"_index":1147,"title":{},"body":{"components/DataPage.html":{}}}],["exports",{"_index":163,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{}}}],["extends",{"_index":1458,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{}}}],["extension",{"_index":1762,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["factories",{"_index":650,"title":{},"body":{"modules/AppModule.html":{}}}],["failed",{"_index":1482,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fails",{"_index":1475,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["false",{"_index":474,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["falsy",{"_index":750,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["fetch",{"_index":1216,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fetches",{"_index":1177,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["fetching",{"_index":953,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["ff6384",{"_index":2179,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["ffce56",{"_index":2181,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["fff",{"_index":832,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/UsersInfoComponent.html":{}}}],["ffffff",{"_index":2238,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["field",{"_index":411,"title":{},"body":{"modules/AccessPageModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"modules/DataPageModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["fieldname",{"_index":1938,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldpath",{"_index":1657,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fields",{"_index":1939,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{}}}],["fieldupdate",{"_index":1943,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldvalue",{"_index":1941,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["fileloader",{"_index":2408,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.click",{"_index":2443,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files",{"_index":2433,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files?.length",{"_index":2434,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files[0",{"_index":2435,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.onchange",{"_index":2432,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["filename",{"_index":1165,"title":{},"body":{"components/DataPage.html":{}}}],["filereader",{"_index":2437,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["files",{"_index":1180,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["fileupload",{"_index":1736,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filter",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["filter'},{'name",{"_index":115,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["filter(value",{"_index":975,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["filter.apply",{"_index":1406,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["filter.component.html",{"_index":1355,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.scss",{"_index":1354,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.filter",{"_index":2026,"title":{},"body":{"components/HomePage.html":{}}}],["filter.reset",{"_index":1405,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["filter/filter.component",{"_index":2002,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["filterchanged",{"_index":1360,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["filtercomponent",{"_index":114,"title":{"components/FilterComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["filtereddocs",{"_index":1829,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtereddocs.length",{"_index":1832,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtereddocs.map((doc",{"_index":1833,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filteredincidents",{"_index":1979,"title":{},"body":{"components/HomePage.html":{}}}],["filtering",{"_index":987,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["filtering/sorting",{"_index":1612,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["filtermobilecomponent",{"_index":116,"title":{"components/FilterMobileComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["filters",{"_index":977,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["filterscomponent",{"_index":1425,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["filterservice",{"_index":1363,"title":{"injectables/FilterService.html":{}},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/HomePage.html":{},"coverage.html":{}}}],["filterstate",{"_index":1443,"title":{},"body":{"injectables/FilterService.html":{}}}],["filtervalues",{"_index":1993,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls",{"_index":2012,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.categoryname.value",{"_index":2018,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.checked.value",{"_index":2020,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.resolved.value",{"_index":2022,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.userid.value",{"_index":2016,"title":{},"body":{"components/HomePage.html":{}}}],["final",{"_index":1763,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["finally",{"_index":1504,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebase",{"_index":631,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["firebase's",{"_index":1951,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["firebase.service",{"_index":1526,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebase/app",{"_index":1645,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase/auth",{"_index":1673,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserDataPage.html":{}}}],["firebase/firebase.service",{"_index":860,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/UsersService.html":{}}}],["firebase/firestore",{"_index":1659,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/incidentInfo.html":{}}}],["firebase/storage",{"_index":1665,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase:firebaseservice",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseapp",{"_index":1644,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebaseauthservice",{"_index":594,"title":{"classes/FirebaseAuthService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"coverage.html":{}}}],["firebaseauthservice(firebase",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseconfig",{"_index":1691,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["firebasedataservice",{"_index":1587,"title":{"classes/FirebaseDataService.html":{}},"body":{"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["firebasedocument",{"_index":1639,"title":{"interfaces/FirebaseDocument.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebasemediaservice",{"_index":600,"title":{"classes/FirebaseMediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["firebasemediaservice(firebase",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseservice",{"_index":597,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["firebasestorage",{"_index":1664,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebasestoragefile",{"_index":1674,"title":{"interfaces/FirebaseStorageFile.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebasesvc",{"_index":1466,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebaseusercredential",{"_index":1525,"title":{"interfaces/FirebaseUserCredential.html":{}},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firestorage",{"_index":1774,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firestore",{"_index":1490,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["first",{"_index":454,"title":{},"body":{"guards/AdminGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["fixed",{"_index":1281,"title":{},"body":{"components/DataPage.html":{}}}],["fixedname",{"_index":1557,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname.charat(0).touppercase",{"_index":1560,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname.slice(1",{"_index":1561,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname[0",{"_index":1558,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname[0].touppercase",{"_index":1559,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["flag",{"_index":803,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["flex",{"_index":39,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["fn",{"_index":995,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["followed",{"_index":758,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["following",{"_index":1501,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["font",{"_index":61,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["footer",{"_index":79,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["forkjoin",{"_index":2168,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["form",{"_index":379,"title":{},"body":{"components/AccessPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"modules/UserDataPageModule.html":{}}}],["form'},{'name",{"_index":134,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["form.component",{"_index":407,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["form.component.html",{"_index":2310,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.scss",{"_index":2309,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts",{"_index":2308,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:17",{"_index":2317,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:18",{"_index":2313,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:19",{"_index":2458,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:25",{"_index":2455,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:31",{"_index":2314,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:38",{"_index":2315,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:56",{"_index":2456,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:63",{"_index":2457,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form/login",{"_index":406,"title":{},"body":{"modules/AccessPageModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form/register",{"_index":408,"title":{},"body":{"modules/AccessPageModule.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["format",{"_index":1176,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["formatted",{"_index":1597,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["formattedday",{"_index":2190,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["formattedtime",{"_index":2191,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["formbuilder",{"_index":1378,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["formcontrol",{"_index":1342,"title":{},"body":{"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{}}}],["formcontrol(false",{"_index":1385,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{}}}],["formcontrol(initialformstate.get('checked')?.value",{"_index":1393,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(initialformstate.get('resolved')?.value",{"_index":1394,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(initialformstate.get('userid')?.value",{"_index":1392,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(initialformstate?.get('categoryname')?.value",{"_index":1391,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(undefined",{"_index":1383,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{}}}],["formdata",{"_index":2105,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["formgroup",{"_index":1377,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["forms",{"_index":1020,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["forms.actions",{"_index":826,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["forms.admin",{"_index":2515,"title":{},"body":{"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["forms.description",{"_index":825,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["forms.email",{"_index":2320,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["forms.login",{"_index":2323,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["forms.name",{"_index":824,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.password",{"_index":2322,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["forms.register",{"_index":2472,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["forms.reppassword",{"_index":2470,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["forms.role",{"_index":2583,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.surname",{"_index":2467,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.update",{"_index":2348,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["forms.user",{"_index":2584,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["forms.username",{"_index":2469,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["formsmodule",{"_index":176,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["formstate",{"_index":1396,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["fortawesome/fontawesome",{"_index":2781,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":2785,"title":{},"body":{"dependencies.html":{}}}],["forwardref",{"_index":1025,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":2251,"title":{},"body":{"injectables/IncidentsService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["framework",{"_index":2838,"title":{},"body":{"properties.html":{}}}],["freeconnection",{"_index":1775,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["from(this.firebase.createdocument(resource",{"_index":1628,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["from(this.firebase.getdocuments(resource)).pipe",{"_index":1616,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["from(this.firebaseservice.updatedocument('incidentsinfo",{"_index":2259,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["from(this.firebasesvc.signout(false",{"_index":1581,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fromobject",{"_index":2100,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["full",{"_index":672,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":221,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionalities",{"_index":430,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["functionality",{"_index":2248,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["functions",{"_index":2808,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":375,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["generate",{"_index":2165,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["generic",{"_index":1601,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["get(key",{"_index":1116,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["get(resource",{"_index":1310,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["get(url",{"_index":2056,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getalldata",{"_index":1206,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getapp",{"_index":1643,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getcategory",{"_index":842,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategory(categoryid",{"_index":853,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcurrentlang",{"_index":1110,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["getdoc",{"_index":1650,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdoc(docref",{"_index":1845,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs",{"_index":1652,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(collection(this._db",{"_index":1828,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(q",{"_index":1858,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocument",{"_index":1841,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocuments(collectionname",{"_index":1819,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsby",{"_index":1850,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsbysubstring",{"_index":1824,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl",{"_index":1662,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl(storageref",{"_index":1785,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfilter",{"_index":1444,"title":{},"body":{"injectables/FilterService.html":{}}}],["getfirestore",{"_index":1646,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfirestore(this._app",{"_index":1707,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getimage",{"_index":2049,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getimage(url",{"_index":2058,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getincidentbyid",{"_index":2241,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["getincidentbyid(incidentid",{"_index":2249,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["getitem",{"_index":2275,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["getstorage",{"_index":1660,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getstorage(this._app",{"_index":1709,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getter",{"_index":2277,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["getuser",{"_index":1735,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getuserbyid",{"_index":2683,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid(this._firebaseservice.user!.uid",{"_index":2495,"title":{},"body":{"components/SettingsPage.html":{}}}],["getuserbyid(userid",{"_index":2685,"title":{},"body":{"injectables/UsersService.html":{}}}],["given",{"_index":1119,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["gives",{"_index":249,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["goback",{"_index":2116,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["good",{"_index":335,"title":{},"body":{"components/AccessPage.html":{}}}],["graph",{"_index":2831,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":1279,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic'},{'name",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["graphic.component",{"_index":2546,"title":{},"body":{"modules/SharedModule.html":{}}}],["graphic.component.html",{"_index":2162,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.scss",{"_index":2161,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts",{"_index":2160,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["graphic.component.ts:12",{"_index":2167,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["graphic.component.ts:13",{"_index":2163,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts:14",{"_index":2586,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts:29",{"_index":2164,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["graphic.component.ts:30",{"_index":2587,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["graphic/incidents",{"_index":2159,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["graphic/user",{"_index":2545,"title":{},"body":{"modules/SharedModule.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["graphics",{"_index":1278,"title":{},"body":{"components/DataPage.html":{}}}],["gray",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["greater",{"_index":2554,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["guard",{"_index":424,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":426,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"index.html":{}}}],["h1",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["handle",{"_index":1463,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["handler",{"_index":983,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["handles",{"_index":276,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsInfoComponent.html":{}}}],["handling",{"_index":231,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["haptics",{"_index":320,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["haptics.impact",{"_index":338,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["hasincident",{"_index":902,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["hasincidentwithoriginalname",{"_index":917,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["hasvalue",{"_index":2384,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["having",{"_index":1915,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["header",{"_index":54,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["header__toolbar",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["headers",{"_index":1219,"title":{},"body":{"components/DataPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["height",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["hidden",{"_index":53,"title":{},"body":{"components/AboutPage.html":{}}}],["hide",{"_index":2454,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["home",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{}}}],["home'},{'name",{"_index":119,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["home.page",{"_index":2037,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":1978,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1977,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":118,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["homepagemodule",{"_index":2031,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["homepageroutingmodule",{"_index":2035,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["homeurl",{"_index":688,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hostlistener",{"_index":816,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hostlistener('window:resize",{"_index":814,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hostlisteners",{"_index":775,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hover",{"_index":565,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["hoverbackgroundcolor",{"_index":2182,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["html",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["htmlinputelement",{"_index":2409,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["http",{"_index":2054,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["http:httpclient",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":599,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientprovider",{"_index":612,"title":{"injectables/HttpClientProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientprovider:103",{"_index":2093,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:126",{"_index":2090,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:142",{"_index":2096,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:29",{"_index":2092,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:43",{"_index":2091,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:63",{"_index":2094,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:83",{"_index":2095,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientwebprovider",{"_index":602,"title":{"injectables/HttpClientWebProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientwebprovider(http",{"_index":639,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":2089,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpheaders(headers",{"_index":2109,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpparams",{"_index":2086,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpproviderfactory",{"_index":637,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httpproviderfactory(http",{"_index":2813,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https",{"_index":2851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://ionicframework.com",{"_index":2836,"title":{},"body":{"properties.html":{}}}],["icon",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["icons",{"_index":73,"title":{},"body":{"components/AboutPage.html":{},"dependencies.html":{}}}],["id",{"_index":1003,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["identified",{"_index":1814,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["identifier",{"_index":1808,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["identifies",{"_index":1936,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["identify",{"_index":1810,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ids",{"_index":1822,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["image",{"_index":386,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"interfaces/incidentInfo.html":{}}}],["image/jpeg",{"_index":1748,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["images",{"_index":1743,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["imageupload",{"_index":1789,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["imageupload(blob",{"_index":1790,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["img",{"_index":571,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["imgs",{"_index":1971,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["imgs.push(media",{"_index":1973,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["immediately",{"_index":1877,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["impactstyle",{"_index":321,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["impactstyle.heavy",{"_index":349,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["impactstyle.medium",{"_index":340,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["implementation",{"_index":1610,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["implemented",{"_index":636,"title":{},"body":{"modules/AppModule.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["import('./pages/about/about.module').then",{"_index":683,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/access/access.module').then",{"_index":673,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/data/data.module').then(m",{"_index":677,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then",{"_index":662,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/incident",{"_index":666,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/settings/settings.module').then",{"_index":675,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/user",{"_index":680,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1752,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["imports",{"_index":172,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["incidencias",{"_index":910,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["incident",{"_index":121,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["incident)).pipe",{"_index":2260,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident.categoryname",{"_index":904,"title":{},"body":{"injectables/CategoriesService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{}}}],["incident.checked",{"_index":2023,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{}}}],["incident.description",{"_index":2144,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.find((incident",{"_index":2257,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident.resolved",{"_index":2024,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{}}}],["incident.title",{"_index":2142,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.userid",{"_index":2025,"title":{},"body":{"components/HomePage.html":{}}}],["incident.username",{"_index":2143,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.uuid",{"_index":2258,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident?.title",{"_index":2225,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidentdatapage",{"_index":120,"title":{"components/IncidentDataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentdatapagemodule",{"_index":2152,"title":{"modules/IncidentDataPageModule.html":{}},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["incidentdatapageroutingmodule",{"_index":2156,"title":{"modules/IncidentDataPageRoutingModule.html":{}},"body":{"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["incidentid",{"_index":2115,"title":{},"body":{"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["incidentinfo",{"_index":1980,"title":{"interfaces/incidentInfo.html":{}},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["incidentinfo(id",{"_index":1986,"title":{},"body":{"components/HomePage.html":{}}}],["incidents",{"_index":123,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["incidents.anonymous",{"_index":2231,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.day",{"_index":2228,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.filter((incident",{"_index":2014,"title":{},"body":{"components/HomePage.html":{}}}],["incidents.hour",{"_index":2229,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.reduce((acc",{"_index":2171,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["incidents.resolved",{"_index":2145,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incidents.some",{"_index":903,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["incidents.unresolved",{"_index":2227,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.user",{"_index":2230,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidentscirclegraphiccomponent",{"_index":122,"title":{"components/IncidentsCircleGraphicComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentsinfo",{"_index":1723,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["incidentsinfocomponent",{"_index":126,"title":{"components/IncidentsInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentsservice",{"_index":2119,"title":{"injectables/IncidentsService.html":{}},"body":{"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"coverage.html":{}}}],["includes",{"_index":447,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["including",{"_index":1481,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"miscellaneous/variables.html":{}}}],["indexeddblocalpersistence",{"_index":1671,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["indicates",{"_index":1886,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["indicating",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["inesperado",{"_index":1569,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["info'},{'name",{"_index":102,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component",{"_index":2535,"title":{},"body":{"modules/SharedModule.html":{}}}],["info.component.html",{"_index":765,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.scss",{"_index":764,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts",{"_index":763,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:17",{"_index":815,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:18",{"_index":2207,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:21",{"_index":2674,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:22",{"_index":783,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:23",{"_index":2197,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:27",{"_index":790,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:28",{"_index":2198,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:31",{"_index":2206,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:32",{"_index":2205,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:33",{"_index":786,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:34",{"_index":777,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:44",{"_index":811,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:50",{"_index":2201,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:51",{"_index":805,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:59",{"_index":2673,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:60",{"_index":809,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:70",{"_index":795,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:73",{"_index":2203,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:75",{"_index":2672,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:79",{"_index":801,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:84",{"_index":2199,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:85",{"_index":2669,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:93",{"_index":2200,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:94",{"_index":2670,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.email",{"_index":1568,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.name",{"_index":1259,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{}}}],["info.password",{"_index":1550,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.role",{"_index":1565,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.surname",{"_index":1564,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.ts",{"_index":925,"title":{},"body":{"interfaces/CategoryInfo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["info.username",{"_index":1567,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.uuid",{"_index":1556,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info/categories",{"_index":762,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/incidents",{"_index":2189,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/users",{"_index":2534,"title":{},"body":{"modules/SharedModule.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["information",{"_index":250,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":1467,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{}}}],["init",{"_index":1111,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["init(firebaseconfig",{"_index":1703,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initform",{"_index":1356,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["initial",{"_index":779,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["initial.pipe",{"_index":620,"title":{},"body":{"modules/AppModule.html":{}}}],["initial.pipe.ts",{"_index":740,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{}}}],["initial.pipe.ts:17",{"_index":744,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["initialauthresolved",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["initialform",{"_index":1454,"title":{},"body":{"injectables/FilterService.html":{}}}],["initialformstate",{"_index":1389,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["initialize",{"_index":1693,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeapp",{"_index":1642,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeapp(firebaseconfig",{"_index":1705,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth",{"_index":1670,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth(getapp",{"_index":1711,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initialized",{"_index":980,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["initializes",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/RegisterFormComponent.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["initializestate",{"_index":1445,"title":{},"body":{"injectables/FilterService.html":{}}}],["initiates",{"_index":1167,"title":{},"body":{"components/DataPage.html":{}}}],["inject",{"_index":1100,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["inject(mat_dialog_data",{"_index":1098,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["injectable",{"_index":459,"title":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["injected",{"_index":236,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["injection",{"_index":2245,"title":{},"body":{"injectables/IncidentsService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["inline",{"_index":74,"title":{},"body":{"components/AboutPage.html":{}}}],["inner",{"_index":2451,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["input",{"_index":311,"title":{},"body":{"components/AccessPage.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["input('item",{"_index":2280,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["input.value",{"_index":1051,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["inputs",{"_index":771,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["instance",{"_index":265,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":1344,"title":{},"body":{"classes/EmailValidation.html":{},"injectables/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{}}}],["instances",{"_index":1427,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/UpdateUserComponent.html":{}}}],["intentar",{"_index":922,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["interact",{"_index":1950,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["interacting",{"_index":1594,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["interactions",{"_index":1591,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["interface",{"_index":923,"title":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{}},"body":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["interfaces",{"_index":924,"title":{},"body":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{},"index.html":{}}}],["interfaces/category",{"_index":866,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["interfaces/data",{"_index":1327,"title":{},"body":{"injectables/DataService.html":{}}}],["interfaces/incidents",{"_index":2254,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["interfaces/user",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["invalid",{"_index":279,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["io.ionic.starter",{"_index":2846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":77,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["ionic",{"_index":2834,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["ionicmodule.forroot",{"_index":642,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["ionicons",{"_index":2795,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":588,"title":{},"body":{"modules/AppModule.html":{}}}],["ioninput",{"_index":964,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["ionmenu",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["ionpopover",{"_index":970,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["isactive",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["isactive(url",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["isdisabled",{"_index":1008,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["islogged",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["isscreensmall",{"_index":766,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["issplash",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["issue",{"_index":1942,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserconnected",{"_index":1894,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserconnectedanonymously",{"_index":1898,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["item",{"_index":128,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["item(_item",{"_index":2281,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["item.active",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["item?.name",{"_index":2285,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["itemcategorycomponent",{"_index":127,"title":{"components/ItemCategoryComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["items",{"_index":373,"title":{},"body":{"components/AccessPage.html":{},"components/FilterComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["items:center",{"_index":569,"title":{},"body":{"components/AppComponent.html":{}}}],["itemusercomponent",{"_index":130,"title":{"components/ItemUserComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["itself",{"_index":448,"title":{},"body":{"guards/AdminGuard.html":{}}}],["join",{"_index":1225,"title":{},"body":{"components/DataPage.html":{}}}],["jpeg",{"_index":1749,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["jpg",{"_index":1765,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["json",{"_index":1186,"title":{},"body":{"components/DataPage.html":{}}}],["json.stringify(row[fieldname",{"_index":1224,"title":{},"body":{"components/DataPage.html":{}}}],["jsontocsv",{"_index":1148,"title":{},"body":{"components/DataPage.html":{}}}],["jsontocsv(dataobject",{"_index":1183,"title":{},"body":{"components/DataPage.html":{}}}],["justify",{"_index":42,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["key",{"_index":361,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{}}}],["key}.csv",{"_index":1213,"title":{},"body":{"components/DataPage.html":{}}}],["kinds",{"_index":1796,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["la",{"_index":898,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["label",{"_index":834,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["labels",{"_index":2174,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["lang",{"_index":2301,"title":{},"body":{"injectables/LocalService.html":{},"components/SettingsPage.html":{}}}],["language",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{}}}],["languages",{"_index":241,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/SettingsPage.html":{}}}],["lastvaluefrom",{"_index":1130,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["lastvaluefrom(this.translate.use(language",{"_index":1135,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["leaks",{"_index":2405,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["left",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["legacy",{"_index":2073,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["legend",{"_index":88,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["length",{"_index":1917,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["letter",{"_index":746,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["life",{"_index":365,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["lightgray",{"_index":563,"title":{},"body":{"components/AppComponent.html":{}}}],["limit",{"_index":2550,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["limits",{"_index":2552,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["line",{"_index":1284,"title":{},"body":{"components/DataPage.html":{},"components/RegisterFormComponent.html":{}}}],["link",{"_index":1235,"title":{},"body":{"components/DataPage.html":{}}}],["link.click",{"_index":1241,"title":{},"body":{"components/DataPage.html":{}}}],["link.download",{"_index":1238,"title":{},"body":{"components/DataPage.html":{}}}],["link.href",{"_index":1237,"title":{},"body":{"components/DataPage.html":{}}}],["link.style.display",{"_index":1239,"title":{},"body":{"components/DataPage.html":{}}}],["list",{"_index":829,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["listens",{"_index":796,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["literal",{"_index":1184,"title":{},"body":{"components/DataPage.html":{}}}],["load",{"_index":2610,"title":{},"body":{"components/UserDataPage.html":{}}}],["loadchildren",{"_index":661,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":252,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["loader",{"_index":191,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["loading",{"_index":1038,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/functions.html":{}}}],["loads",{"_index":990,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["local",{"_index":1517,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["localization",{"_index":243,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/SettingsPage.html":{}}}],["locallang",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["localservice",{"_index":487,"title":{"injectables/LocalService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LocalService.html":{},"coverage.html":{}}}],["locate",{"_index":1860,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["located",{"_index":1935,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["location",{"_index":1753,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["logged",{"_index":455,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["login",{"_index":133,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["login(credentials",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["loginformcomponent",{"_index":132,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginurl",{"_index":689,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loginuser",{"_index":210,"title":{},"body":{"components/AccessPage.html":{}}}],["loginuser(data",{"_index":270,"title":{},"body":{"components/AccessPage.html":{}}}],["logo",{"_index":377,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{}}}],["logout",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["logs",{"_index":274,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["lottie",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lottiefiles/lottie",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["m",{"_index":663,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ModalCategoryComponent.html":{}}}],["m.aboutpagemodule",{"_index":684,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.accesspagemodule",{"_index":674,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.datapagemodule",{"_index":678,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":664,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.incidentdatapagemodule",{"_index":669,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.settingspagemodule",{"_index":676,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.userdatapagemodule",{"_index":682,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["manage",{"_index":2607,"title":{},"body":{"components/UserDataPage.html":{}}}],["managing",{"_index":242,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{}}}],["manipulating",{"_index":431,"title":{},"body":{"guards/AdminGuard.html":{}}}],["map",{"_index":461,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["map(([users",{"_index":2678,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["map((data",{"_index":1572,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["map((doc",{"_index":1627,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["map((fieldname",{"_index":1223,"title":{},"body":{"components/DataPage.html":{}}}],["map((incident",{"_index":2256,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["map((incidents",{"_index":2013,"title":{},"body":{"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{}}}],["map((user",{"_index":469,"title":{},"body":{"guards/AdminGuard.html":{}}}],["map((users",{"_index":2691,"title":{},"body":{"injectables/UsersService.html":{}}}],["map(response",{"_index":2261,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["map(translations",{"_index":2597,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["map(users",{"_index":2589,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["mapfunction",{"_index":1868,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapfunction(doc.data",{"_index":1871,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapped",{"_index":1866,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["maps",{"_index":1600,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["margin",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["marked",{"_index":2125,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["mat",{"_index":1413,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{}}}],["mat_dialog_data",{"_index":1101,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["matbuttonmodule",{"_index":414,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["match",{"_index":1821,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/PasswordValidation.html":{}}}],["matcheckboxmodule",{"_index":2039,"title":{},"body":{"modules/HomePageModule.html":{}}}],["matches",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":155,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1152,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["matdialogmodule",{"_index":623,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["matdialogref",{"_index":1091,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["material",{"_index":421,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matformfieldmodule",{"_index":409,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["maticonmodule",{"_index":416,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matinputmodule",{"_index":412,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matselectmodule",{"_index":1298,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["mattabsmodule",{"_index":1296,"title":{},"body":{"modules/DataPageModule.html":{}}}],["max",{"_index":84,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["maximum",{"_index":2559,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["measurementid",{"_index":1701,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["mechanism",{"_index":2247,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["media",{"_index":83,"title":{"interfaces/Media.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["media.service",{"_index":601,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["media.service.ts",{"_index":1948,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["media.service.ts:13",{"_index":1949,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["media[0",{"_index":2508,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["mediaservice",{"_index":606,"title":{"injectables/MediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["mediaservice:32",{"_index":1955,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["mediaservicefactory",{"_index":627,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mediaservicefactory(backend",{"_index":2814,"title":{},"body":{"miscellaneous/functions.html":{}}}],["meet",{"_index":1912,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["memory",{"_index":2404,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["menu",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.about",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.close",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.graphics",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.home",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.logout",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.settings",{"_index":544,"title":{},"body":{"components/AppComponent.html":{}}}],["menucontroller",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":227,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["messages",{"_index":239,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["messageservice",{"_index":204,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["messagingsenderid",{"_index":1699,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["method",{"_index":453,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["mimetype",{"_index":1745,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["min",{"_index":2148,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["minimum",{"_index":1916,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["miscellaneous",{"_index":2807,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1510,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["mobile",{"_index":1058,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile'},{'name",{"_index":108,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["mobile.component",{"_index":2003,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["mobile.component.html",{"_index":1060,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.scss",{"_index":1059,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts",{"_index":1056,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mobile.component.ts:102",{"_index":2661,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:103",{"_index":1072,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:111",{"_index":2662,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:112",{"_index":1073,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:118",{"_index":2663,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:119",{"_index":1075,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:125",{"_index":2658,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:126",{"_index":1068,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:134",{"_index":2655,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:135",{"_index":1065,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:143",{"_index":2657,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:144",{"_index":1067,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:15",{"_index":1429,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:150",{"_index":2659,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:151",{"_index":1070,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:160",{"_index":2660,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:161",{"_index":1069,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:17",{"_index":1428,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:170",{"_index":2654,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:171",{"_index":1064,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:180",{"_index":2656,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:181",{"_index":1066,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:19",{"_index":1424,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:23",{"_index":1063,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:25",{"_index":1078,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:26",{"_index":1080,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:27",{"_index":1077,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:34",{"_index":1062,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:39",{"_index":1061,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:45",{"_index":1432,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:48",{"_index":1079,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:49",{"_index":1081,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:53",{"_index":1431,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:55",{"_index":1071,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:61",{"_index":1430,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:73",{"_index":1074,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:83",{"_index":1438,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:91",{"_index":2664,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:92",{"_index":1076,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:94",{"_index":1437,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile/category",{"_index":1055,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mobile/filter",{"_index":1421,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["mobile/user",{"_index":2045,"title":{},"body":{"modules/HomePageModule.html":{},"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mod",{"_index":1249,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["mod.ondiddismiss",{"_index":1254,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["mod.present",{"_index":1253,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["modal",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["modal.auto",{"_index":2450,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["modalcategorycomponent",{"_index":135,"title":{"components/ModalCategoryComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["modalcontroller",{"_index":1154,"title":{},"body":{"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["modaldesign",{"_index":2500,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["modals",{"_index":2481,"title":{},"body":{"components/SettingsPage.html":{}}}],["mode",{"_index":1252,"title":{},"body":{"components/DataPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/ModalCategoryComponent.html":{}}}],["mode(m",{"_index":2345,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["modifies",{"_index":1502,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["modify",{"_index":1937,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["module",{"_index":156,"title":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["modules",{"_index":158,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["msg",{"_index":1773,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["multi",{"_index":1030,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["mymodal",{"_index":1153,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["name",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":2462,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["native",{"_index":2449,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["navigate",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"components/UsersInfoComponent.html":{}}}],["navigates",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["navigating",{"_index":257,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["navigation",{"_index":446,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/UserDataPage.html":{}}}],["navigationend",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":1509,"title":{},"body":{"classes/FirebaseAuthService.html":{},"pipes/ShortenTextPipe.html":{}}}],["need",{"_index":2303,"title":{},"body":{"injectables/LocalService.html":{}}}],["needed",{"_index":1499,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["needs",{"_index":1861,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["new",{"_index":632,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["newly",{"_index":1514,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["next",{"_index":332,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/IncidentDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["ng_value_accessor",{"_index":1026,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":173,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["ngondestroy",{"_index":2386,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["ngx",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["nocheck",{"_index":2071,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{}}}],["nombre",{"_index":876,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["none",{"_index":378,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["notadmin",{"_index":229,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{}}}],["notification",{"_index":313,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["notifications",{"_index":246,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["null",{"_index":782,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"classes/PasswordValidation.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["number",{"_index":800,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["numbers",{"_index":1930,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["obj",{"_index":1012,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["object",{"_index":282,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"classes/PasswordValidation.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign(errors",{"_index":2377,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["object.keys(categorycounts",{"_index":2175,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["object.keys(dataobject[key][0",{"_index":1220,"title":{},"body":{"components/DataPage.html":{}}}],["object.keys(rolescount",{"_index":2594,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["object.values(categorycounts",{"_index":2177,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["objects",{"_index":1818,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["objeto",{"_index":1945,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["obs.error(error",{"_index":1975,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["obs.next(imgs",{"_index":1974,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["observable",{"_index":456,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["observable((obs",{"_index":1968,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["observable((subscr",{"_index":1535,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["observables",{"_index":1480,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["occurs",{"_index":1963,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["oncancel",{"_index":1422,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["oncategoryclicked",{"_index":940,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["oncategoryclicked(popover",{"_index":981,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["once",{"_index":2613,"title":{},"body":{"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["onchangepicture",{"_index":2387,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event",{"_index":2407,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture",{"_index":2388,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event",{"_index":2413,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["oneditclicked",{"_index":773,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["onfilter",{"_index":941,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["onfilter(evt",{"_index":985,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["onfilterchange",{"_index":1981,"title":{},"body":{"components/HomePage.html":{}}}],["onfilterchange(filtervalues",{"_index":1991,"title":{},"body":{"components/HomePage.html":{}}}],["onincidentclick",{"_index":2192,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["onincidentclick(event",{"_index":2202,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["onincidentclicked",{"_index":2193,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onloadcategories",{"_index":942,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["onresize",{"_index":770,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onresize(event",{"_index":812,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onsnapshot",{"_index":1649,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsub",{"_index":2311,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["onsubmit",{"_index":2312,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["ontrashclicked",{"_index":774,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["onuserclicked",{"_index":2267,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onuserclicked(popover",{"_index":2634,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["opendialog",{"_index":1149,"title":{},"body":{"components/DataPage.html":{}}}],["opendialog(category",{"_index":1190,"title":{},"body":{"components/DataPage.html":{}}}],["openfiltermodal",{"_index":1982,"title":{},"body":{"components/HomePage.html":{}}}],["opens",{"_index":1160,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/UserDataPage.html":{}}}],["operation",{"_index":699,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["operations",{"_index":846,"title":{},"body":{"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["operators",{"_index":1518,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["optional",{"_index":260,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":1882,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["options",{"_index":2077,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["original",{"_index":859,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseDataService.html":{}}}],["originalname",{"_index":857,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["otherwise",{"_index":752,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"injectables/IncidentsService.html":{}}}],["out",{"_index":170,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DataPageModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["outlet",{"_index":253,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["outline",{"_index":2518,"title":{},"body":{"components/SettingsPage.html":{}}}],["output",{"_index":787,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["output('clicked",{"_index":2283,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["outputs",{"_index":772,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["overflow",{"_index":52,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{}}}],["overview",{"_index":2824,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["package",{"_index":2764,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":374,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["page",{"_index":442,"title":{},"body":{"guards/AdminGuard.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"components/HomePage.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["page:number",{"_index":2350,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["pagecount",{"_index":1623,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["pagecount:number",{"_index":2352,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["pages/user",{"_index":657,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pagesize",{"_index":1621,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["pagesize:number",{"_index":2351,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["paginated",{"_index":1324,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["paginateddata",{"_index":1326,"title":{"interfaces/PaginatedData.html":{}},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["pagination",{"_index":1620,"title":{"interfaces/Pagination.html":{}},"body":{"classes/FirebaseDataService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["pagination:pagination",{"_index":2355,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["papaparse",{"_index":2798,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":323,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["parameter",{"_index":228,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":224,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1321,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["params.get('id",{"_index":2134,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["params['error",{"_index":326,"title":{},"body":{"components/AccessPage.html":{}}}],["parent",{"_index":2334,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["particularly",{"_index":1952,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["pass",{"_index":1795,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["passes",{"_index":2336,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["passing",{"_index":784,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["password",{"_index":285,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{}}}],["password.match(/^(?=.*[a",{"_index":2369,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["password:string",{"_index":2605,"title":{},"body":{"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["passwordcontrolname",{"_index":2364,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch",{"_index":2359,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch(passwordcontrolname",{"_index":2361,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto",{"_index":2360,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto(controlname",{"_index":2365,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation",{"_index":2357,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["passwordvalidation.passwordmatch('password",{"_index":2466,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["passwordvalidation.passwordproto",{"_index":2464,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["patch",{"_index":2050,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["patch(url",{"_index":2060,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["path",{"_index":201,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["pathmatch",{"_index":671,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":2368,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["pdf",{"_index":1751,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["performs",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["period",{"_index":748,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["persistence",{"_index":1712,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["photo",{"_index":2356,"title":{"interfaces/Photo.html":{}},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["picture",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["picture_selectable_value_accessor",{"_index":2382,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picturemodal",{"_index":2391,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["pictureselectablecomponent",{"_index":137,"title":{"components/PictureSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pinned",{"_index":2072,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["pipe",{"_index":737,"title":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}},"body":{"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["pipe(map",{"_index":921,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["pipe(map((_",{"_index":1638,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["pipe(switchmap((doc",{"_index":1635,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["pipes",{"_index":738,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{},"index.html":{}}}],["pipetransform",{"_index":759,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["platform",{"_index":589,"title":{},"body":{"modules/AppModule.html":{}}}],["player",{"_index":617,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["plugins",{"_index":2187,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["png",{"_index":1766,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["pointer",{"_index":394,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["pointing",{"_index":1959,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["popover",{"_index":974,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["popover.dismiss",{"_index":1050,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["populates",{"_index":2565,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["porque",{"_index":908,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["position",{"_index":46,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["post",{"_index":351,"title":{},"body":{"components/AccessPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["post(resource",{"_index":1314,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["post(url",{"_index":2066,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["postregister",{"_index":1459,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["postregister(info",{"_index":1497,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["potential",{"_index":2403,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["prefix",{"_index":1759,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["preloadallmodules",{"_index":652,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":686,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preventing",{"_index":2402,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["primary",{"_index":553,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng",{"_index":2800,"title":{},"body":{"dependencies.html":{}}}],["primeng/accordion",{"_index":1301,"title":{},"body":{"modules/DataPageModule.html":{},"modules/SettingsPageModule.html":{}}}],["primeng/api",{"_index":316,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["primeng/chart",{"_index":2543,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/divider",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dropdown",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/toast",{"_index":420,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{}}}],["private",{"_index":324,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":295,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["production",{"_index":2852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1494,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"injectables/UsersService.html":{}}}],["project",{"_index":2835,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":1697,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":449,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise((resolve",{"_index":1798,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise(async",{"_index":1770,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["propagate",{"_index":1000,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["propagatechange",{"_index":936,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["propagating",{"_index":1019,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["properly",{"_index":2399,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["properties",{"_index":208,"title":{"properties.html":{}},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"interfaces/incidentInfo.html":{},"properties.html":{}}}],["property",{"_index":269,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["protected",{"_index":525,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["provide",{"_index":192,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":592,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":247,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"components/UpdateUserComponent.html":{},"injectables/UsersService.html":{}}}],["providedin",{"_index":464,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}}}],["providelottieoptions",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":2083,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["providers",{"_index":162,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"index.html":{}}}],["provides",{"_index":237,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"miscellaneous/functions.html":{}}}],["providing",{"_index":1592,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["public",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["puede",{"_index":906,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["put",{"_index":1305,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["put(resource",{"_index":1316,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["put(url",{"_index":2068,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["q",{"_index":1856,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["que",{"_index":1836,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query",{"_index":223,"title":{},"body":{"components/AccessPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query(resource",{"_index":1320,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["queryparams",{"_index":473,"title":{},"body":{"guards/AdminGuard.html":{}}}],["querysnapshot",{"_index":1729,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["querysnapshot.docs.map((doc",{"_index":1732,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["radius",{"_index":1271,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["raw",{"_index":1742,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reactive",{"_index":1302,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["reactiveformsmodule",{"_index":404,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/UserDataPageModule.html":{}}}],["reader",{"_index":2436,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onerror",{"_index":2440,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onload",{"_index":2438,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.readasdataurl(file",{"_index":2442,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["readonly",{"_index":2097,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["real",{"_index":1867,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["received",{"_index":1478,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["recent",{"_index":1874,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["redirects",{"_index":441,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["redirectto",{"_index":670,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":1661,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ref(this._webstorage",{"_index":1781,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reference",{"_index":1093,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["refers",{"_index":1746,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reflect",{"_index":1512,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["refreshed",{"_index":1523,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["refreshes",{"_index":1516,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["register",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["register(info",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["registered",{"_index":298,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{}}}],["registerformcomponent",{"_index":139,"title":{"components/RegisterFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["registeronchange",{"_index":943,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registeronchange(fn",{"_index":991,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registerontouched",{"_index":944,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registerontouched(fn",{"_index":996,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registers",{"_index":290,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registeruser",{"_index":211,"title":{},"body":{"components/AccessPage.html":{}}}],["registeruser(data",{"_index":287,"title":{},"body":{"components/AccessPage.html":{}}}],["registration",{"_index":294,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{}}}],["reject",{"_index":1772,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject('document",{"_index":1849,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(err",{"_index":1803,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(error",{"_index":1778,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["rejected",{"_index":1932,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["rejects",{"_index":1842,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["related",{"_index":255,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{}}}],["relative",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/CategoriesInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["relevant",{"_index":299,"title":{},"body":{"components/AccessPage.html":{}}}],["remarks",{"_index":1204,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["removed",{"_index":1862,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["repeat",{"_index":384,"title":{},"body":{"components/AccessPage.html":{}}}],["reppassword",{"_index":2465,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["represent",{"_index":1741,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["representing",{"_index":697,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["represents",{"_index":307,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["request",{"_index":2055,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["requested",{"_index":1602,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["required",{"_index":1911,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reset",{"_index":169,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["resetfilters",{"_index":1357,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["resetrequested",{"_index":1361,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["resets",{"_index":1372,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["resetsignal",{"_index":948,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["resetting",{"_index":961,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["resize",{"_index":798,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["resolutions",{"_index":1961,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["resolve",{"_index":1771,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(deleteuser(this._user",{"_index":1933,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(docref.id",{"_index":1802,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(false",{"_index":1896,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(null",{"_index":1919,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(this._auth!.currentuser",{"_index":1897,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolved",{"_index":1386,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/IncidentDataPage.html":{},"interfaces/incidentInfo.html":{}}}],["resolvedvalue",{"_index":2021,"title":{},"body":{"components/HomePage.html":{}}}],["resolves",{"_index":450,"title":{},"body":{"guards/AdminGuard.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resource",{"_index":1309,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["resource.split('/')[0",{"_index":1634,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["resource.split('/')[1",{"_index":1626,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["resources",{"_index":2819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["respectively",{"_index":1465,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["response",{"_index":1895,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{}}}],["responsetype",{"_index":2099,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["resueltos",{"_index":1404,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["result",{"_index":698,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["resulting",{"_index":1325,"title":{},"body":{"injectables/DataService.html":{}}}],["results",{"_index":154,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.data",{"_index":1255,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["results.data.picture",{"_index":2507,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["results?.data",{"_index":1256,"title":{},"body":{"components/DataPage.html":{}}}],["results?.data?.picture",{"_index":2502,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["results?.data?.picture?.substring(0",{"_index":2503,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["retrieve",{"_index":1120,"title":{},"body":{"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ItemUserComponent.html":{}}}],["retrieved",{"_index":1313,"title":{},"body":{"injectables/DataService.html":{}}}],["retrieves",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["retrieving",{"_index":2278,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["return",{"_index":467,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"classes/PasswordValidation.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LocalService.html":{},"pipes/ShortenTextPipe.html":{},"injectables/UsersService.html":{}}}],["returning",{"_index":457,"title":{},"body":{"guards/AdminGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["rgba(0",{"_index":1286,"title":{},"body":{"components/DataPage.html":{}}}],["rgba(71",{"_index":1409,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["right",{"_index":548,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{}}}],["rni3rcpqs7xmtbh4",{"_index":2854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":291,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["roles",{"_index":2593,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["roles.map(role",{"_index":2595,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["rolescount",{"_index":2590,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["rolescount[role",{"_index":2598,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["root",{"_index":465,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["route",{"_index":217,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["router",{"_index":219,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["routereusestrategy",{"_index":585,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":198,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":202,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":685,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":437,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":197,"title":{"routes.html":{}},"body":{"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["routing.module.ts",{"_index":196,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["row",{"_index":371,"title":{},"body":{"components/AccessPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{}}}],["rxjs",{"_index":460,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/PictureSelectableComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":861,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["rxjs/operators",{"_index":462,"title":{},"body":{"guards/AdminGuard.html":{}}}],["same",{"_index":1960,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["save",{"_index":1806,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["screen",{"_index":780,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["se",{"_index":905,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["search",{"_index":967,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["searching",{"_index":1855,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["security",{"_index":1914,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["seems",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["select",{"_index":1004,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selectable",{"_index":107,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable'},{'name",{"_index":105,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["selectable.component",{"_index":2038,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SharedModule.html":{}}}],["selectable.component.html",{"_index":932,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.scss",{"_index":931,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts",{"_index":929,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable.component.ts:109",{"_index":2636,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:110",{"_index":992,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:116",{"_index":2414,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:118",{"_index":2637,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:119",{"_index":997,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:124",{"_index":2395,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:125",{"_index":2639,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:126",{"_index":1007,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:132",{"_index":2632,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:133",{"_index":978,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:141",{"_index":2629,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:142",{"_index":968,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:150",{"_index":2631,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:151",{"_index":976,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:157",{"_index":2633,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:158",{"_index":986,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:167",{"_index":2635,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:168",{"_index":982,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:177",{"_index":2628,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:178",{"_index":965,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:187",{"_index":2630,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:188",{"_index":971,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:19",{"_index":2420,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:20",{"_index":2423,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:21",{"_index":2421,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:22",{"_index":2390,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:30",{"_index":958,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:32",{"_index":1015,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:33",{"_index":1017,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:34",{"_index":1014,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:35",{"_index":2396,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:39",{"_index":2406,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:41",{"_index":954,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:44",{"_index":2424,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:46",{"_index":951,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:50",{"_index":2419,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:55",{"_index":1016,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:56",{"_index":1018,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:61",{"_index":2416,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:62",{"_index":989,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:69",{"_index":2417,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:75",{"_index":2418,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:80",{"_index":1001,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:83",{"_index":2394,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:94",{"_index":2410,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:98",{"_index":2640,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:99",{"_index":1010,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable/category",{"_index":928,"title":{},"body":{"components/CategorySelectableComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable/picture",{"_index":2381,"title":{},"body":{"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable/user",{"_index":2041,"title":{},"body":{"modules/HomePageModule.html":{},"components/UserSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcategory",{"_index":945,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["selectcategory(id",{"_index":999,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["selected",{"_index":957,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selecting",{"_index":984,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selection",{"_index":962,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["selects",{"_index":1002,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selectuser",{"_index":2627,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selectuser(id",{"_index":2638,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["server",{"_index":2076,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/UserDataPage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":235,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["services",{"_index":233,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["services/auth.service",{"_index":463,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["set",{"_index":1031,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setcategory(_category",{"_index":1022,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["setcategoryinfo(category",{"_index":2339,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["setdisabledstate",{"_index":946,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1006,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":1044,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setdoc",{"_index":1651,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setdoc(docref",{"_index":1812,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setfilters",{"_index":1358,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["setitem(_item",{"_index":2279,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["setlanguage",{"_index":2478,"title":{},"body":{"components/SettingsPage.html":{}}}],["setlanguage(lang",{"_index":2483,"title":{},"body":{"components/SettingsPage.html":{}}}],["setmode(m",{"_index":2340,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["setresolvedincident",{"_index":2117,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["setresolvedincident(incident",{"_index":2123,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["sets",{"_index":802,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["setservertrustmode",{"_index":2051,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["setservertrustmode(mode",{"_index":2070,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["setter",{"_index":955,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ItemCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setting",{"_index":956,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ItemCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["settings",{"_index":519,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{}}}],["settings'},{'name",{"_index":142,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["settings.page",{"_index":2525,"title":{},"body":{"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{}}}],["settings.page.html",{"_index":2476,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page.scss",{"_index":2475,"title":{},"body":{"components/SettingsPage.html":{}}}],["settingspage",{"_index":141,"title":{"components/SettingsPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["settingspagemodule",{"_index":2519,"title":{"modules/SettingsPageModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"index.html":{},"modules.html":{}}}],["settingspageroutingmodule",{"_index":2523,"title":{"modules/SettingsPageRoutingModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["setuser(_user",{"_index":2641,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setuserinfo(user",{"_index":2571,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["severity",{"_index":363,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["shadow",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["shared",{"_index":422,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["shared/shared.module",{"_index":614,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":402,"title":{"modules/SharedModule.html":{}},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["shortentext",{"_index":2226,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{}}}],["shortentextpipe",{"_index":2531,"title":{"pipes/ShortenTextPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"coverage.html":{},"index.html":{}}}],["showall",{"_index":1983,"title":{},"body":{"components/HomePage.html":{}}}],["showerror",{"_index":212,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["showerror(text",{"_index":302,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["showing",{"_index":1989,"title":{},"body":{"components/HomePage.html":{}}}],["showrolefield",{"_index":2563,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["shows",{"_index":1996,"title":{},"body":{"components/HomePage.html":{}}}],["showsuccess",{"_index":213,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["showsuccess(text",{"_index":308,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["sign",{"_index":1486,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signal",{"_index":960,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["signaling",{"_index":1367,"title":{},"body":{"components/FilterComponent.html":{}}}],["signed",{"_index":1887,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanon",{"_index":1885,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanon=false",{"_index":1884,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously",{"_index":1668,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth",{"_index":1777,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth!).catch((error",{"_index":1904,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signing",{"_index":1888,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinwithemailandpassword",{"_index":1669,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout",{"_index":1485,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(signinanon",{"_index":1891,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(this._auth",{"_index":1787,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signs",{"_index":1881,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["simplechanges",{"_index":1024,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["single",{"_index":1312,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["size",{"_index":62,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["slogan",{"_index":68,"title":{},"body":{"components/AboutPage.html":{}}}],["snapshot",{"_index":444,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["snapshot.data",{"_index":1879,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["snippet",{"_index":2461,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["social",{"_index":72,"title":{},"body":{"components/AboutPage.html":{}}}],["solid",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{},"dependencies.html":{}}}],["something",{"_index":1764,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["space",{"_index":44,"title":{},"body":{"components/AboutPage.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{}}}],["span",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["special",{"_index":1929,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["specific",{"_index":278,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["specified",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"classes/PasswordValidation.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{}}}],["specifies",{"_index":1747,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["specify",{"_index":1852,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["split",{"_index":1607,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["src/.../app.module.ts",{"_index":2809,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../blob.ts",{"_index":2811,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../category",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../picture",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../translate.ts",{"_index":2810,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user",{"_index":2844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":651,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:102",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:62",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:69",{"_index":514,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:76",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:90",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":581,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":427,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:16",{"_index":429,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:42",{"_index":438,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":687,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:17",{"_index":690,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:37",{"_index":695,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/helpers/blob",{"_index":2488,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["src/app/core/helpers/blob.ts",{"_index":2705,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/interfaces/category",{"_index":817,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/CategoryInfo.html":{},"components/DataPage.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["src/app/core/interfaces/data",{"_index":1613,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["src/app/core/interfaces/data.ts",{"_index":2349,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["src/app/core/interfaces/incidents",{"_index":2000,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["src/app/core/interfaces/user",{"_index":317,"title":{},"body":{"components/AccessPage.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["src/app/core/pipes/capitalize",{"_index":739,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/shorten",{"_index":2547,"title":{},"body":{"pipes/ShortenTextPipe.html":{},"coverage.html":{}}}],["src/app/core/services/api/categories.service",{"_index":1027,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{}}}],["src/app/core/services/api/categories.service.ts",{"_index":840,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/app/core/services/api/categories.service.ts:116",{"_index":858,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:19",{"_index":845,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:27",{"_index":854,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:37",{"_index":848,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:80",{"_index":851,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/incidents.service",{"_index":2131,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["src/app/core/services/api/incidents.service.ts",{"_index":2240,"title":{},"body":{"injectables/IncidentsService.html":{},"coverage.html":{}}}],["src/app/core/services/api/incidents.service.ts:27",{"_index":2250,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/incidents.service.ts:42",{"_index":2253,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/incidents.service.ts:9",{"_index":2243,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/users.service",{"_index":2208,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["src/app/core/services/api/users.service.ts",{"_index":2682,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/core/services/api/users.service.ts:10",{"_index":2684,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:32",{"_index":2686,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:46",{"_index":2689,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/auth.service",{"_index":318,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:10",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:11",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:12",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:19",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:26",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:31",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:44",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:9",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/data.service.ts",{"_index":1304,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/core/services/data.service.ts:15",{"_index":1322,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:25",{"_index":1311,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:33",{"_index":1315,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:41",{"_index":1317,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:48",{"_index":1307,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/filter/filter.service",{"_index":1380,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{}}}],["src/app/core/services/filter/filter.service.ts",{"_index":1442,"title":{},"body":{"injectables/FilterService.html":{},"coverage.html":{}}}],["src/app/core/services/filter/filter.service.ts:16",{"_index":1450,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter/filter.service.ts:25",{"_index":1447,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter/filter.service.ts:32",{"_index":1448,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter/filter.service.ts:9",{"_index":1451,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/firebase/api/firebase",{"_index":1456,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["src/app/core/services/firebase/firebase.service",{"_index":1028,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["src/app/core/services/firebase/firebase.service.ts",{"_index":1640,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["src/app/core/services/http/http",{"_index":2047,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["src/app/core/services/media.service",{"_index":2491,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["src/app/core/services/media.service.ts",{"_index":2326,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["src/app/core/services/media.service.ts:13",{"_index":2327,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/core/services/translate/local.service.ts",{"_index":2296,"title":{},"body":{"injectables/LocalService.html":{},"coverage.html":{}}}],["src/app/core/services/translate/local.service.ts:8",{"_index":2299,"title":{},"body":{"injectables/LocalService.html":{}}}],["src/app/core/services/translate/translate.service",{"_index":319,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["src/app/core/services/translate/translate.service.ts",{"_index":1108,"title":{},"body":{"injectables/CustomTranslateService.html":{},"coverage.html":{}}}],["src/app/core/services/translate/translate.service.ts:11",{"_index":1114,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:26",{"_index":1122,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:37",{"_index":1125,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:47",{"_index":1121,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:57",{"_index":1117,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:8",{"_index":1128,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/translate/translate",{"_index":189,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["src/app/core/translate/translate.ts",{"_index":2736,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/validators/email",{"_index":2459,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["src/app/core/validators/email.ts",{"_index":1330,"title":{},"body":{"classes/EmailValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/email.ts:14",{"_index":1333,"title":{},"body":{"classes/EmailValidation.html":{}}}],["src/app/core/validators/password",{"_index":2460,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["src/app/core/validators/password.ts",{"_index":2358,"title":{},"body":{"classes/PasswordValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/password.ts:13",{"_index":2366,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/core/validators/password.ts:35",{"_index":2363,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/pages/about/about",{"_index":195,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":171,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/about/about.page.ts:12",{"_index":26,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:8",{"_index":25,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/access/access",{"_index":423,"title":{},"body":{"modules/AccessPageRoutingModule.html":{}}}],["src/app/pages/access/access.module.ts",{"_index":403,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["src/app/pages/access/access.page.ts",{"_index":203,"title":{},"body":{"components/AccessPage.html":{},"coverage.html":{}}}],["src/app/pages/access/access.page.ts:106",{"_index":272,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:129",{"_index":309,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:146",{"_index":304,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:19",{"_index":220,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:55",{"_index":286,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:60",{"_index":266,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:72",{"_index":289,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/login",{"_index":2307,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/pages/access/register",{"_index":2453,"title":{},"body":{"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["src/app/pages/data/data",{"_index":1303,"title":{},"body":{"modules/DataPageRoutingModule.html":{}}}],["src/app/pages/data/data.module.ts",{"_index":1294,"title":{},"body":{"modules/DataPageModule.html":{}}}],["src/app/pages/data/data.page.ts",{"_index":1141,"title":{},"body":{"components/DataPage.html":{},"coverage.html":{}}}],["src/app/pages/data/data.page.ts:105",{"_index":1166,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:127",{"_index":1191,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:145",{"_index":1197,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:154",{"_index":1173,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:179",{"_index":1159,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:210",{"_index":1163,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:22",{"_index":1155,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:229",{"_index":1195,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:249",{"_index":1194,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:40",{"_index":1199,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:44",{"_index":1189,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:54",{"_index":1175,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:75",{"_index":1185,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/modal",{"_index":2328,"title":{},"body":{"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/category",{"_index":927,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/home/filter",{"_index":1420,"title":{},"body":{"components/FilterMobileComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/filter/filter.component.ts",{"_index":1353,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/filter/filter.component.ts:19",{"_index":1368,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:24",{"_index":1365,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:26",{"_index":1364,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:47",{"_index":1370,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:55",{"_index":1369,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:77",{"_index":1376,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:88",{"_index":1374,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:96",{"_index":1371,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/home",{"_index":2046,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":2036,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1976,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:19",{"_index":1985,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:33",{"_index":1999,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:43",{"_index":1987,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:53",{"_index":1994,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:72",{"_index":1988,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:86",{"_index":1995,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:95",{"_index":1992,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/item",{"_index":2262,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/user",{"_index":2624,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/incident",{"_index":2113,"title":{},"body":{"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings",{"_index":2526,"title":{},"body":{"modules/SettingsPageRoutingModule.html":{}}}],["src/app/pages/settings/settings.module.ts",{"_index":2524,"title":{},"body":{"modules/SettingsPageModule.html":{}}}],["src/app/pages/settings/settings.page.ts",{"_index":2474,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings.page.ts:108",{"_index":2484,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:19",{"_index":2486,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:20",{"_index":2480,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:52",{"_index":2482,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:69",{"_index":2485,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/user",{"_index":2562,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/shared/components/categories",{"_index":761,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/confirm",{"_index":1082,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"coverage.html":{}}}],["src/app/shared/components/incidents",{"_index":2158,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/picture",{"_index":2380,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/user",{"_index":2585,"title":{},"body":{"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/users",{"_index":2665,"title":{},"body":{"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module",{"_index":418,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/UserDataPageModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2532,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":609,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":2760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":2549,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["start",{"_index":2028,"title":{},"body":{"components/HomePage.html":{},"components/PictureSelectableComponent.html":{}}}],["state",{"_index":436,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["statements",{"_index":2696,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1331,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["status",{"_index":694,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["storage",{"_index":1738,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["storagebucket",{"_index":1698,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["storageref",{"_index":1780,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["store",{"_index":1805,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stored",{"_index":1604,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stores",{"_index":1506,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stream",{"_index":2687,"title":{},"body":{"injectables/UsersService.html":{}}}],["string",{"_index":303,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{}}}],["strong",{"_index":1926,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["structure",{"_index":1609,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["style",{"_index":339,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["su",{"_index":919,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["subheader",{"_index":833,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["subject",{"_index":1126,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(mapfunction(data",{"_index":1880,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(snapshot.docs.map((doc",{"_index":1870,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["submission",{"_index":2316,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["subscr.complete",{"_index":1547,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.error('cannot",{"_index":1544,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.error(err",{"_index":1548,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.next(_info",{"_index":1555,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.next(data",{"_index":1546,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscribe",{"_index":1260,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribe((chartdata",{"_index":2183,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["subscribe((user",{"_index":2496,"title":{},"body":{"components/SettingsPage.html":{}}}],["subscribe(chartdata",{"_index":2603,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["subscribers",{"_index":1876,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribes",{"_index":222,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["subscribetocollection",{"_index":1865,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetodocument",{"_index":1872,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetofilterstate",{"_index":1359,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["subscribing",{"_index":1990,"title":{},"body":{"components/HomePage.html":{}}}],["subscriptions",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["substring",{"_index":1820,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["success",{"_index":310,"title":{},"body":{"components/AccessPage.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["successful",{"_index":1479,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["successfully",{"_index":850,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{}}}],["such",{"_index":284,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["super",{"_index":1527,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{}}}],["support",{"_index":2829,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":1563,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["svg",{"_index":2782,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["switch",{"_index":343,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{}}}],["switch(backend",{"_index":630,"title":{},"body":{"modules/AppModule.html":{}}}],["switchmap",{"_index":863,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["switchmap((doc",{"_index":1630,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["switchmap((docref",{"_index":886,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["switchmap((existingcategories",{"_index":869,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["switchmap((incidents",{"_index":901,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["t",{"_index":1308,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/PaginatedData.html":{}}}],["table",{"_index":2763,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2762,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":865,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["take(1",{"_index":2255,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["takes",{"_index":301,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["tap",{"_index":700,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{}}}],["tap(logged",{"_index":702,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tasks",{"_index":1521,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["terminated",{"_index":2400,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["text",{"_index":55,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["text.pipe",{"_index":2537,"title":{},"body":{"modules/SharedModule.html":{}}}],["text.pipe.ts",{"_index":2548,"title":{},"body":{"pipes/ShortenTextPipe.html":{},"coverage.html":{}}}],["text.pipe.ts:23",{"_index":2551,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["text/csv;charset=utf",{"_index":1232,"title":{},"body":{"components/DataPage.html":{}}}],["tfcchato",{"_index":2848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["then((_",{"_index":1136,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["then((credentials",{"_index":1540,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["then((data",{"_index":1970,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["then((dataobject",{"_index":1207,"title":{},"body":{"components/DataPage.html":{}}}],["then((docref",{"_index":1801,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["then(async",{"_index":1784,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._app",{"_index":1704,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth",{"_index":1710,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth!.currentuser",{"_index":1899,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth!.currentuser.isanonymous",{"_index":1900,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.currentuser",{"_index":1776,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.onauthstatechanged(async",{"_index":1713,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.signout",{"_index":1892,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categories",{"_index":1722,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categories.asobservable",{"_index":1686,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categoryservice",{"_index":1257,"title":{},"body":{"components/DataPage.html":{}}}],["this._categoryservice.createcategory(results?.data).subscribe",{"_index":1264,"title":{},"body":{"components/DataPage.html":{}}}],["this._categoryservice.deletecategory(info).subscribe",{"_index":1265,"title":{},"body":{"components/DataPage.html":{}}}],["this._db",{"_index":1706,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._firebaseservice",{"_index":1205,"title":{},"body":{"components/DataPage.html":{}}}],["this._firebaseservice.incidents",{"_index":2169,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["this._firebaseservice.users$.pipe",{"_index":2588,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["this._incidents",{"_index":1724,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._incidents.asobservable",{"_index":1684,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.asobservable",{"_index":1680,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(false",{"_index":1725,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(true",{"_index":1717,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._item",{"_index":2282,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["this._language.asobservable",{"_index":1129,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._language.getvalue",{"_index":1139,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._language.next(language",{"_index":1137,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._logged.asobservable",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["this._logged.next(false",{"_index":1533,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._logged.next(true",{"_index":1531,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._picture.asobservable",{"_index":2422,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.complete",{"_index":2426,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(obj",{"_index":2428,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(picture",{"_index":2430,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._router.navigate(['/data",{"_index":2617,"title":{},"body":{"components/UserDataPage.html":{}}}],["this._user",{"_index":1714,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._user.asobservable",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["this._user.next(data",{"_index":1530,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.next(null",{"_index":1534,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.next(user",{"_index":1586,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.value?.uuid",{"_index":1585,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._users",{"_index":1719,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._users.asobservable",{"_index":1682,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._webstorage",{"_index":1708,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.auth.islogged$.pipe",{"_index":701,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.islogged$.subscribe((logged",{"_index":526,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.login(_data).subscribe",{"_index":354,"title":{},"body":{"components/AccessPage.html":{}}}],["this.auth.logout",{"_index":471,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.auth.logout().subscribe(async",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.register(_data).subscribe",{"_index":331,"title":{},"body":{"components/AccessPage.html":{}}}],["this.auth.updateuser(data).subscribe",{"_index":2693,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.auth.user",{"_index":2677,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.auth.user$.pipe",{"_index":468,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.auth.user$.subscribe(currentuser",{"_index":2579,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.browserlanguage",{"_index":2304,"title":{},"body":{"injectables/LocalService.html":{}}}],["this.categories",{"_index":1035,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.categoryselected",{"_index":1040,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.categoryservice.getcategory(id).then((category",{"_index":1039,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.changepicture",{"_index":2444,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.changepicture(reader.result",{"_index":2439,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.checkscreensize(event.target.innerwidth",{"_index":821,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.checkscreensize(window.innerwidth",{"_index":818,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.clearselection",{"_index":1047,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.clicked.emit(this._item",{"_index":2284,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["this.connectanonymously",{"_index":1893,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.createbody(body",{"_index":2103,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.createheaders(headers",{"_index":2101,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.currentlang",{"_index":2492,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.data",{"_index":2184,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["this.deletecategory(category",{"_index":1247,"title":{},"body":{"components/DataPage.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1244,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.dialogref.close",{"_index":1105,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.disabled",{"_index":1045,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.downloadcsv(csvcontent",{"_index":1212,"title":{},"body":{"components/DataPage.html":{}}}],["this.fileupload(blob",{"_index":1791,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.filter",{"_index":1052,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.filter(evt.detail.value",{"_index":1048,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.filteredincidents",{"_index":2010,"title":{},"body":{"components/HomePage.html":{}}}],["this.filterservice.getfilter().subscribe((filtervalues",{"_index":2008,"title":{},"body":{"components/HomePage.html":{}}}],["this.filterservice.getfilter().subscribe((formstate",{"_index":1395,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.filterservice.getfilter().value",{"_index":1390,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.filterservice.updatefilterstate(this.form",{"_index":1400,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.filterstate",{"_index":1453,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.filterstate.next(form",{"_index":1452,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.filterstate.next(initialform",{"_index":1455,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.firebase",{"_index":1969,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["this.firebase.categories$.subscribe",{"_index":1034,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.firebase.deletedocument",{"_index":1637,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.getdocument(resource.split('/')[0",{"_index":1625,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.updatedocument",{"_index":1633,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.users$.subscribe",{"_index":2643,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.firebaseservice",{"_index":912,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.categories$.pipe",{"_index":868,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.createdocument('categoryinfo",{"_index":885,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.getdocument('categoryinfo",{"_index":867,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.incidents",{"_index":1998,"title":{},"body":{"components/HomePage.html":{}}}],["this.firebaseservice.incidents$.pipe",{"_index":900,"title":{},"body":{"injectables/CategoriesService.html":{},"components/HomePage.html":{},"injectables/IncidentsService.html":{}}}],["this.firebaseservice.updatedocument",{"_index":920,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.updatedocument('categoryinfo",{"_index":889,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user",{"_index":879,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user.email",{"_index":883,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user.uid",{"_index":881,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.users",{"_index":2676,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.firebaseservice.users$.pipe",{"_index":2690,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.firebasesvc",{"_index":1536,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.createdocumentwithid",{"_index":1562,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.getdocument('userinfo",{"_index":1570,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.islogged$.subscribe((logged",{"_index":1528,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.updatedocument('userinfo",{"_index":1582,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.user.uid",{"_index":1571,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.user?.uid",{"_index":1553,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.form",{"_index":1381,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.form.controls['description'].setvalue(category.description",{"_index":2343,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['name'].setvalue(category.name",{"_index":2342,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['name'].setvalue(user.name",{"_index":2574,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['picture'].setvalue(user.picture",{"_index":2573,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['role'].setvalue(user.role",{"_index":2578,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['surname'].setvalue(user.surname",{"_index":2575,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['username'].setvalue(user.username",{"_index":2576,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['uuid'].setvalue(category.uuid",{"_index":2344,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['uuid'].setvalue(user.uuid",{"_index":2577,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.reset",{"_index":1401,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.form.setvalue(formstate.value",{"_index":1397,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.formattedday",{"_index":2212,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.formattedtime",{"_index":2214,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.formbuilder.group",{"_index":1439,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.get(resource",{"_index":1631,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.get(resource).pipe",{"_index":1636,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.hasvalue",{"_index":2427,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.httpclient.delete(url",{"_index":2107,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.get(url",{"_index":2098,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.patch(url",{"_index":2106,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.post(url",{"_index":2102,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.put(url",{"_index":2104,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.incident",{"_index":2136,"title":{},"body":{"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{}}}],["this.incident.date",{"_index":2210,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.incident.resolved",{"_index":2140,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentid",{"_index":2133,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.getincidentbyid(this.incidentid).subscribe",{"_index":2135,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.updateincident(incident",{"_index":2137,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.updateincident(incident).subscribe",{"_index":2139,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.init",{"_index":1131,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.init(config",{"_index":1688,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.initform",{"_index":1388,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.initialauthresolved",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdisabled",{"_index":2429,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.isscreensmall",{"_index":822,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.isuserconnected",{"_index":1902,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.isuserconnectedanonymously",{"_index":1903,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.jsontocsv(dataobject",{"_index":1209,"title":{},"body":{"components/DataPage.html":{}}}],["this.lang.use(this.browserlanguage",{"_index":2306,"title":{},"body":{"injectables/LocalService.html":{}}}],["this.login",{"_index":328,"title":{},"body":{"components/AccessPage.html":{}}}],["this.me().subscribe",{"_index":1529,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.me().subscribe((data",{"_index":1545,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.media.upload(blob).subscribe((media",{"_index":2506,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this.message",{"_index":1104,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.messageservice.add",{"_index":360,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.mod",{"_index":2346,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.modal.dismiss('reset",{"_index":1441,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["this.modal.dismiss(null",{"_index":1440,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.modal.dismiss(this.form.value",{"_index":2347,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.mymodal.create",{"_index":1250,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this.oneditclicked.emit(category",{"_index":820,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["this.onfilterchange(filtervalues",{"_index":2009,"title":{},"body":{"components/HomePage.html":{}}}],["this.onfilterchange(results.data",{"_index":2007,"title":{},"body":{"components/HomePage.html":{}}}],["this.onincidentclicked.emit(this.incident?.uuid",{"_index":2223,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.onsubmit.emit(this.form?.value",{"_index":2319,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.ontrashclicked.emit(category",{"_index":819,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["this.onuserclicked.emit(userid",{"_index":2681,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.options",{"_index":2186,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["this.picturemodal?.dismiss",{"_index":2445,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.postregister(_info).subscribe((data",{"_index":1554,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.propagatechange",{"_index":1043,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.propagatechange(picture",{"_index":2431,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.propagatechange(this.categoryselected.data.name",{"_index":1041,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.propagatechange(this.userselected.uuid",{"_index":2647,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.resetrequested.emit",{"_index":1402,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.resetsignal.subscribe",{"_index":1046,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.route.parammap.subscribe((params",{"_index":2132,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":325,"title":{},"body":{"components/AccessPage.html":{}}}],["this.router.createurltree([this.homeurl",{"_index":703,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.createurltree([this.loginurl",{"_index":704,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/about",{"_index":537,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/access",{"_index":472,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{}}}],["this.router.navigate(['/access']).catch(err",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/data",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home",{"_index":532,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentDataPage.html":{}}}],["this.router.navigate(['/home']).catch(err",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home/incident",{"_index":2005,"title":{},"body":{"components/HomePage.html":{}}}],["this.router.navigate(['/settings",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate([`/data/user/${userid",{"_index":1248,"title":{},"body":{"components/DataPage.html":{}}}],["this.router.url.includes(url",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["this.selectcategory(category.uuid",{"_index":1049,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.selectcategory(obj.name",{"_index":1042,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.selectcategory(undefined",{"_index":1053,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.selectuser(obj.name",{"_index":2648,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.selectuser(undefined",{"_index":2650,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.selectuser(user.uuid",{"_index":2649,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.showall",{"_index":2006,"title":{},"body":{"components/HomePage.html":{}}}],["this.showerror('cant",{"_index":1262,"title":{},"body":{"components/DataPage.html":{}}}],["this.showerror('emailuser",{"_index":348,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('error",{"_index":2141,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.showerror('failregister",{"_index":352,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('loginerror",{"_index":357,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('unknown",{"_index":353,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('waitadmin",{"_index":327,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showrolefield",{"_index":2581,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.showsuccess('good",{"_index":1261,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.showsuccess('waitadmin",{"_index":336,"title":{},"body":{"components/AccessPage.html":{}}}],["this.subscribetocollection",{"_index":1721,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetocollection('userinfo",{"_index":1718,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetofilterstate",{"_index":1387,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.translate.addlangs(['es",{"_index":1132,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.get(`forms.${role",{"_index":2596,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["this.translate.get(key",{"_index":1140,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.get(message).subscribe",{"_index":359,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.translate.getcurrentlang",{"_index":2493,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.translate.setdefaultlang(this._language.value",{"_index":1134,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.use(lang",{"_index":2511,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.user",{"_index":2497,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this.userid",{"_index":2615,"title":{},"body":{"components/UserDataPage.html":{}}}],["this.username",{"_index":2221,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.users",{"_index":2644,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.userselected",{"_index":2646,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.userservice",{"_index":2494,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.userservice.getuserbyid(id).subscribe",{"_index":2645,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.userservice.getuserbyid(this.incident.userid).subscribe((user",{"_index":2220,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.userservice.getuserbyid(this.userid).subscribe((user",{"_index":2616,"title":{},"body":{"components/UserDataPage.html":{}}}],["this.userservice.updateuser(results.data",{"_index":2509,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this?.form?.get('role')?.setvalue('admin",{"_index":2582,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["through",{"_index":1474,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"miscellaneous/functions.html":{}}}],["throw",{"_index":634,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["throwerror",{"_index":864,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["throws",{"_index":1496,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["thumbnails",{"_index":1962,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["tiene",{"_index":909,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["time",{"_index":445,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["timestamp",{"_index":1761,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["timestamp.todate",{"_index":2217,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["timestamp.tolocaledatestring",{"_index":2213,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["timestamp.tolocaletimestring",{"_index":2215,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["title",{"_index":2823,"title":{},"body":{"interfaces/incidentInfo.html":{}}}],["tl",{"_index":362,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["toabout",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["toabout(menu",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":312,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["toast.${text",{"_index":358,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["toastmodule",{"_index":419,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{}}}],["todata",{"_index":483,"title":{},"body":{"components/AppComponent.html":{}}}],["toggles",{"_index":267,"title":{},"body":{"components/AccessPage.html":{}}}],["tohome",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbar",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":369,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["tosettings",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["total",{"_index":1624,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["total:number",{"_index":2353,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["touched",{"_index":998,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["transform",{"_index":741,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["transform(value",{"_index":742,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["transformed",{"_index":756,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["translate",{"_index":36,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["translate.service",{"_index":2302,"title":{},"body":{"injectables/LocalService.html":{}}}],["translate/core",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["translated",{"_index":1118,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translateloader",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule",{"_index":184,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule.forchild",{"_index":190,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule.forroot",{"_index":643,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":1113,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translating",{"_index":238,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["translation",{"_index":232,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"miscellaneous/functions.html":{}}}],["translations",{"_index":1115,"title":{},"body":{"injectables/CustomTranslateService.html":{},"components/UserCircleGraphicComponent.html":{}}}],["transparent",{"_index":390,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["trash",{"_index":791,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["triggered",{"_index":1434,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["triggering",{"_index":2412,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["true",{"_index":315,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/EmailValidation.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["truncate",{"_index":2555,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["trust",{"_index":2075,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["try",{"_index":1033,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["tslib",{"_index":2803,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":259,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":2209,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"classes/PasswordValidation.html":{}}}],["typescript",{"_index":273,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["typically",{"_index":1694,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["uid",{"_index":1477,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["un",{"_index":1944,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unauthenticated",{"_index":1513,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["undefined",{"_index":743,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["unique",{"_index":1702,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["uniquely",{"_index":1809,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unsubscribe",{"_index":1653,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["up",{"_index":1689,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["update",{"_index":144,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["updatecategory",{"_index":843,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategory(category",{"_index":856,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategory(results?.data",{"_index":1258,"title":{},"body":{"components/DataPage.html":{}}}],["updated",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["updatedoc",{"_index":1648,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(doc(collectionref",{"_index":1816,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(documentref",{"_index":1947,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocument",{"_index":1813,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocumentfield",{"_index":1934,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatefilterstate",{"_index":1446,"title":{},"body":{"injectables/FilterService.html":{}}}],["updatefilterstate(form",{"_index":1449,"title":{},"body":{"injectables/FilterService.html":{}}}],["updateincident",{"_index":2242,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["updateincident(incident",{"_index":2252,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["updates",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["updateuser",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["updateuser(data",{"_index":2688,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(user",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["updateusercomponent",{"_index":143,"title":{"components/UpdateUserComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["updating",{"_index":1319,"title":{},"body":{"injectables/DataService.html":{},"components/SettingsPage.html":{}}}],["upload",{"_index":1755,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["upload(blob",{"_index":1954,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["uploadbytes",{"_index":1663,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploadbytes(storageref",{"_index":1783,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploaded",{"_index":1739,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["uploading",{"_index":1953,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{}}}],["uploads",{"_index":1737,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["upon",{"_index":1596,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["url",{"_index":433,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["url('../../../assets/images/vectorial",{"_index":387,"title":{},"body":{"components/AccessPage.html":{}}}],["url.createobjecturl(blob",{"_index":1234,"title":{},"body":{"components/DataPage.html":{}}}],["url.revokeobjecturl(url",{"_index":1243,"title":{},"body":{"components/DataPage.html":{}}}],["url_large",{"_index":1966,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_medium",{"_index":1965,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_small",{"_index":1964,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_thumbnail",{"_index":1967,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["urlencoded",{"_index":2062,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["urls",{"_index":1958,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["urltree",{"_index":452,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["use",{"_index":347,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["use(language",{"_index":1124,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["useclass",{"_index":649,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":230,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":1029,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":193,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["user",{"_index":146,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["user!.uuid",{"_index":1583,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["user's",{"_index":693,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user'},{'name",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["user(_user",{"_index":2642,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["user.component",{"_index":2044,"title":{},"body":{"modules/HomePageModule.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{}}}],["user.component.html",{"_index":2288,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{}}}],["user.component.scss",{"_index":2287,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{}}}],["user.component.ts",{"_index":2286,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:13",{"_index":2569,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:14",{"_index":2570,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:16",{"_index":2290,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:21",{"_index":2564,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:23",{"_index":2291,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:30",{"_index":2295,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:32",{"_index":2289,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:36",{"_index":2292,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{}}}],["user.component.ts:42",{"_index":2293,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:62",{"_index":2566,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:68",{"_index":2568,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:79",{"_index":2567,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:9",{"_index":2294,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.email",{"_index":1716,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.name",{"_index":2222,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.picture",{"_index":2510,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["user.role",{"_index":470,"title":{},"body":{"guards/AdminGuard.html":{}}}],["user.surname",{"_index":2618,"title":{},"body":{"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.uid",{"_index":1715,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.username",{"_index":2619,"title":{},"body":{"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.uuid",{"_index":1584,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["user/:id",{"_index":679,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user/item",{"_index":2043,"title":{},"body":{"modules/HomePageModule.html":{},"components/ItemUserComponent.html":{},"coverage.html":{}}}],["user/update",{"_index":2490,"title":{},"body":{"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"coverage.html":{}}}],["user_selectable_mobile_value_accessor",{"_index":2653,"title":{},"body":{"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_selectable_value_accessor",{"_index":2625,"title":{},"body":{"components/UserSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercirclegraphiccomponent",{"_index":145,"title":{"components/UserCircleGraphicComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["usercredential",{"_index":1672,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["usercredentials",{"_index":271,"title":{"interfaces/UserCredentials.html":{}},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["userdatapage",{"_index":147,"title":{"components/UserDataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["userdatapagemodule",{"_index":656,"title":{"modules/UserDataPageModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["userdatapageroutingmodule",{"_index":2623,"title":{"modules/UserDataPageRoutingModule.html":{}},"body":{"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["userid",{"_index":1198,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["useridvalue",{"_index":2015,"title":{},"body":{"components/HomePage.html":{}}}],["userinfo",{"_index":723,"title":{"interfaces/UserInfo.html":{}},"body":{"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userinfo(user",{"_index":2572,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["userinfo(userid",{"_index":1196,"title":{},"body":{"components/DataPage.html":{}}}],["username",{"_index":1566,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["userregisterinfo",{"_index":288,"title":{"interfaces/UserRegisterInfo.html":{}},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["users",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["users.filter((user",{"_index":2680,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["users.find((user",{"_index":2692,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.reduce((acc",{"_index":2591,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["userselectablecomponent",{"_index":148,"title":{"components/UserSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userselectablemobilecomponent",{"_index":149,"title":{"components/UserSelectableMobileComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userselected",{"_index":2626,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["userselected.name",{"_index":2652,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["userservice",{"_index":2196,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["usersinfocomponent",{"_index":150,"title":{"components/UsersInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["usersservice",{"_index":2195,"title":{"injectables/UsersService.html":{}},"body":{"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uses",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{}}}],["usevalue",{"_index":645,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue:'firebase",{"_index":648,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":305,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["utilized",{"_index":1611,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["uuid",{"_index":887,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{}}}],["valid",{"_index":1476,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["validate",{"_index":1337,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validates",{"_index":1334,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validation",{"_index":1340,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validationerrors",{"_index":1343,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validator",{"_index":1339,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validatorfn",{"_index":1338,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validators",{"_index":1379,"title":{},"body":{"components/FilterComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["validators.required",{"_index":2318,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["value",{"_index":268,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["value!.length",{"_index":2560,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["value!.substring(0",{"_index":2561,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["value.charat(0).touppercase",{"_index":760,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["values",{"_index":1373,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["var",{"_index":92,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["variable",{"_index":2698,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2839,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1905,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["version",{"_index":2832,"title":{},"body":{"properties.html":{}}}],["viewencapsulation",{"_index":1200,"title":{},"body":{"components/DataPage.html":{}}}],["viewencapsulation.none",{"_index":1143,"title":{},"body":{"components/DataPage.html":{}}}],["views",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentDataPage.html":{}}}],["vistos",{"_index":1403,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["want",{"_index":1754,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["web",{"_index":618,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["web.provider",{"_index":605,"title":{},"body":{"modules/AppModule.html":{}}}],["web.provider.ts",{"_index":2078,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["web.provider.ts:12",{"_index":2082,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["web.provider.ts:153",{"_index":2088,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["web.provider.ts:170",{"_index":2085,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["webdir",{"_index":2849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":66,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["where(field",{"_index":1857,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["whether",{"_index":495,"title":{},"body":{"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["white",{"_index":1273,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["whose",{"_index":1825,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["width",{"_index":80,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["width:99",{"_index":382,"title":{},"body":{"components/AccessPage.html":{}}}],["window",{"_index":797,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["window.navigator.language",{"_index":2300,"title":{},"body":{"injectables/LocalService.html":{}}}],["window.navigator.language.split",{"_index":2305,"title":{},"body":{"injectables/LocalService.html":{}}}],["window:resize",{"_index":776,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["window:resize(event",{"_index":794,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["windows",{"_index":2392,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["within",{"_index":234,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"miscellaneous/functions.html":{}}}],["without",{"_index":1436,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["wrap",{"_index":2027,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["writes",{"_index":1011,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["writevalue",{"_index":947,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["writevalue(obj",{"_index":1009,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["written",{"_index":1013,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["www",{"_index":2112,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":891,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["ya",{"_index":877,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["yes",{"_index":2064,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["z0",{"_index":1349,"title":{},"body":{"classes/EmailValidation.html":{}}}],["z70ncw6nln",{"_index":2861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z\\d]{8",{"_index":2372,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z])(?=.*[a",{"_index":2370,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z])(?=.*\\d)[a",{"_index":2371,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z]{2",{"_index":1352,"title":{},"body":{"classes/EmailValidation.html":{}}}],["za",{"_index":1348,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["zone.js",{"_index":2805,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":168,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/about/about.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      CHATO\n      \n        {{'about.about' | translate}}\n      \n      \n        \n        \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                .container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: relative;\n    height: 86.3vh;\n    margin: 0;\n    overflow: hidden;\n}\n\n.header {\n    text-align: center;\n    flex: 1;\n    overflow: auto;\n}\n\nh1 {\n    font-size: 90px;\n    color: #0f212d;\n    font-weight: 900;\n}\n\n.slogan {\n    font-size: 30px;\n    color: #0f212d;\n    margin-bottom: 20px;\n}\n\n.social-icons a {\n    display: inline-block;\n    margin: 0 10px;\n\n    ion-icon {\n        color: #0f212d;\n    }\n}\n\n.footer {\n    width: 100%;\n    position: absolute;\n    bottom: 0;\n}\n\n\n@media (max-width: 600px) {\n    .container {\n        height: 100%;\n        .header {\n            h1 {\n                font-size: 5rem;\n            }\n            \n            .slogan {\n                font-size: 1rem;\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            CHATO              {{\\'about.about\\' | translate}}                                                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AboutPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPageRoutingModule } from './about-routing.module';\n\nimport { AboutPage } from './about.page';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AboutPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccessPage.html":{"url":"components/AccessPage.html","title":"component - AccessPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/access.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-access\n            \n\n\n\n            \n                styleUrls\n                ./access.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./access.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeForm\n                            \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, translate: CustomTranslateService, messageService: MessageService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/access.page.ts:19\n                            \n                        \n\n                \n                    \n                            The constructor function subscribes to query parameters and displays an error message if the\n'error' parameter is 'notAdmin'.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\nMessageService. It is likely used for displaying messages or notifications to the user within\nthe application.\nservice provided by Angular that gives access to information about a route associated with a\ncomponent loaded in an outlet. It allows you to access route parameters, query parameters, and\nother information related to the current route.\nservice. It is used for navigating between different components in your Angular application based\non the defined routes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService - a service for handling authentication and user authorization.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The translate parameter in the constructor is of type CustomTranslateService.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The messageService parameter in the constructor is of type\nMessageService. It is likely used for displaying messages or notifications to the user within\nthe application.\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The route parameter in the constructor is of type ActivatedRoute, which is a\nservice provided by Angular that gives access to information about a route associated with a\ncomponent loaded in an outlet. It allows you to access route parameters, query parameters, and\nother information related to the current route.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different components in your Angular application based\non the defined routes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeForm\n                        \n                    \n                \n            \n            \n                \nchangeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:60\n                        \n                    \n\n\n            \n                \n                        The function toggles the value of the login property.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(data: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:106\n                        \n                    \n\n\n            \n                \n                        The loginUser function in TypeScript logs in a user with provided credentials and handles\nerrors, displaying a specific error message for invalid email.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    UserCredentials object containing user login information, such as email and password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(data: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:72\n                        \n                    \n\n\n            \n                \n                        The function registerUser registers a user with the role 'user' and handles different error\ncases during the registration process.\nThis parameter likely contains information about a user that is being registered, such as their\nemail, password, and any other relevant details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The registerUser function takes in a parameter data of type UserRegisterInfo.\nThis parameter likely contains information about a user that is being registered, such as their\nemail, password, and any other relevant details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:146\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:129\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/access.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport {\n  UserCredentials,\n  UserRegisterInfo,\n} from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\n\n@Component({\n  selector: 'app-access',\n  templateUrl: './access.page.html',\n  styleUrls: ['./access.page.scss'],\n  providers: [MessageService],\n})\nexport class AccessPage implements OnInit {\n  login = true;\n\n  /**\n   * The constructor function subscribes to query parameters and displays an error message if the\n   * 'error' parameter is 'notAdmin'.\n   *\n   * @param auth AuthService - a service for handling authentication and user authorization.\n   * @param translate The `translate` parameter in the constructor is of type `CustomTranslateService`.\n   * It is used for handling translation services within the component or service where it is injected.\n   * This service likely provides methods for translating text or messages into different languages or\n   * for managing localization in the application.\n   * @param messageService The `messageService` parameter in the constructor is of type\n   * `MessageService`. It is likely used for displaying messages or notifications to the user within\n   * the application.\n   * @param route The `route` parameter in the constructor is of type `ActivatedRoute`, which is a\n   * service provided by Angular that gives access to information about a route associated with a\n   * component loaded in an outlet. It allows you to access route parameters, query parameters, and\n   * other information related to the current route.\n   * @param router The `router` parameter in the constructor is an instance of the Angular Router\n   * service. It is used for navigating between different components in your Angular application based\n   * on the defined routes.\n   */\n  constructor(\n    private auth: AuthService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.route.queryParams.subscribe((params) => {\n      if (params['error'] === 'notAdmin') {\n        this.showError('waitAdmin');\n      }\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * The function toggles the value of the `login` property.\n   */\n  changeForm() {\n    this.login = !this.login;\n  }\n\n  /**\n   * The function `registerUser` registers a user with the role 'user' and handles different error\n   * cases during the registration process.\n   *\n   * @param data The `registerUser` function takes in a parameter `data` of type `UserRegisterInfo`.\n   * This parameter likely contains information about a user that is being registered, such as their\n   * email, password, and any other relevant details.\n   */\n  registerUser(data: UserRegisterInfo) {\n    let _data: UserRegisterInfo = { ...data };\n    _data.role = 'user';\n    this.auth.register(_data).subscribe({\n      next: async (data) => {\n        console.log('ALL WAS GOOD');\n        this.showSuccess('waitAdmin');\n        await Haptics.impact({ style: ImpactStyle.Medium });\n      },\n      error: async (err) => {\n        if (err.code) {\n          switch (err.code) {\n            case 'auth/email-already-in-use':\n              this.showError('emailUser');\n              await Haptics.impact({ style: ImpactStyle.Heavy });\n              break;\n            case 'post-registration-error':\n              this.showError('failRegister');\n              await Haptics.impact({ style: ImpactStyle.Heavy });\n              break;\n          }\n        } else {\n          this.showError('Unknown registration error');\n        }\n      },\n    });\n  }\n\n  /**\n   * The `loginUser` function in TypeScript logs in a user with provided credentials and handles\n   * errors, displaying a specific error message for invalid email.\n   *\n   * @param data UserCredentials object containing user login information, such as email and password\n   */\n  loginUser(data: UserCredentials) {\n    let _data: UserCredentials = { ...data };\n    this.auth.login(_data).subscribe({\n      next: async (data) => {\n        console.log('ALL WAS GOOD');\n        await Haptics.impact({ style: ImpactStyle.Medium });\n      },\n      error: async (err) => {\n        console.log('BAD', err);\n        if (err.code === 'auth/invalid-email') {\n          this.showError('loginError');\n          await Haptics.impact({ style: ImpactStyle.Heavy });\n        }\n      },\n    });\n  }\n\n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({ key: 'tl', severity: 'info', detail: text });\n        this.login = true;\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n        this.login = true;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n\n      \n      \n      {{'access.toRegister' | translate}}\n    \n      {{'access.toLogin' | translate}}\n    \n\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./access.page.scss\n                \n                ion-content {\n    margin-top: 30%;\n}\n\n.access {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n\n    &__forms {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        padding: 20px;\n        gap: 20px;\n\n        .access__forms--logo {\n            display: none;\n            width: 30%;\n        }\n\n        app-login-form,\n        app-register-form {\n            width: 70%;\n        }\n    }\n\n    &__image {\n        flex: 1;\n        width:99%;\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: cover;\n        background-image: url('../../../assets/images/vectorial-access.webp');\n    }\n\n    button {\n        background-color: transparent;\n        padding: 0.5rem;\n        border: none;\n        cursor: pointer;\n    }\n}\n\n@media (max-width: 700px) {\n    .access {\n        flex-direction: column;\n    \n        &__forms {  \n            .access__forms--logo {\n                display: block;\n                width: 30%;\n            }\n    \n            app-login-form {\n                width: 100%;\n            }\n\n            app-register-form {\n                margin-top: -5%;\n                width: 100%;\n            }\n        }\n    \n        &__image {\n            display: none;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{\\'access.toRegister\\' | translate}}          {{\\'access.toLogin\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccessPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccessPageModule.html":{"url":"modules/AccessPageModule.html","title":"module - AccessPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AccessPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccessPageModule\n\n\n\ncluster_AccessPageModule_imports\n\n\n\ncluster_AccessPageModule_declarations\n\n\n\n\nAccessPage\n\nAccessPage\n\n\n\nAccessPageModule\n\nAccessPageModule\n\nAccessPageModule -->\n\nAccessPage->AccessPageModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAccessPageModule -->\n\nLoginFormComponent->AccessPageModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAccessPageModule -->\n\nRegisterFormComponent->AccessPageModule\n\n\n\n\n\nAccessPageRoutingModule\n\nAccessPageRoutingModule\n\nAccessPageModule -->\n\nAccessPageRoutingModule->AccessPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAccessPageModule -->\n\nSharedModule->AccessPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/access/access.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccessPage\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            RegisterFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccessPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AccessPageRoutingModule } from './access-routing.module';\n\nimport { AccessPage } from './access.page';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccessPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n     // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    // Shared\n    SharedModule,\n    ToastModule\n  ],\n  declarations: [\n    AccessPage,\n    LoginFormComponent,\n    RegisterFormComponent\n  ]\n})\nexport class AccessPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccessPageRoutingModule.html":{"url":"modules/AccessPageRoutingModule.html","title":"module - AccessPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccessPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/access/access-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccessPage } from './access.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccessPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccessPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:16\n                            \n                        \n\n                \n                    \n                            The constructor function takes AuthService and Router as parameters.\nhandling authentication-related functionalities in the application.\nnavigating between different components in an Angular application by manipulating the browser's\nURL.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is an instance of the AuthService class, which is used for\nhandling authentication-related functionalities in the application.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter is an instance of the Angular Router service. It is used for\nnavigating between different components in an Angular application by manipulating the browser's\nURL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/admin.guard.ts:42\n                        \n                    \n\n\n            \n                \n                        The function canActivate checks if the user is an admin and returns true, logs out the user and\nredirects to an access page with an error message if not.\nrepresents the activated route snapshot at the time of navigation. It contains information about\nthe route, its parameters, and related data.\nthe current router state snapshot, which includes information about the current activated route,\nthe URL, and the router state itself. It is of type RouterStateSnapshot.\nPromise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\nchecks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\nIf the user is logged in but not an admin, it logs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe route parameter in the canActivate method\nrepresents the activated route snapshot at the time of navigation. It contains information about\nthe route, its parameters, and related data.\n\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe state parameter in the canActivate method represents\nthe current router state snapshot, which includes information about the current activated route,\nthe URL, and the router state itself. It is of type RouterStateSnapshot.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                The canActivate method is returning an Observable that emits a boolean or UrlTree, a\nPromise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\nchecks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\nIf the user is logged in but not an admin, it logs\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  /**\n   * The constructor function takes AuthService and Router as parameters.\n   *\n   * @param auth The `auth` parameter is an instance of the `AuthService` class, which is used for\n   * handling authentication-related functionalities in the application.\n   * @param router The `router` parameter is an instance of the Angular Router service. It is used for\n   * navigating between different components in an Angular application by manipulating the browser's\n   * URL.\n   */\n  constructor(private auth: AuthService, private router: Router) {}\n\n  /**\n   * The function `canActivate` checks if the user is an admin and returns true, logs out the user and\n   * redirects to an access page with an error message if not.\n   * @param {ActivatedRouteSnapshot} route - The `route` parameter in the `canActivate` method\n   * represents the activated route snapshot at the time of navigation. It contains information about\n   * the route, its parameters, and related data.\n   * @param {RouterStateSnapshot} state - The `state` parameter in the `canActivate` method represents\n   * the current router state snapshot, which includes information about the current activated route,\n   * the URL, and the router state itself. It is of type `RouterStateSnapshot`.\n   * @returns The `canActivate` method is returning an Observable that emits a boolean or UrlTree, a\n   * Promise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\n   * checks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\n   * If the user is logged in but not an admin, it logs\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.auth.user$.pipe(\n      map((user) => {\n        if (user && user.role === 'admin') {\n          return true;\n        }\n        if (user) this.auth.logout();\n        this.router.navigate(['/access'], {\n          queryParams: { error: 'notAdmin' },\n        });\n        return false;\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialAuthResolved\n                            \n                            \n                                isSplash\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toAbout\n                            \n                            \n                                toData\n                            \n                            \n                                toHome\n                            \n                            \n                                toSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router, localLang: LocalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            The constructor initializes subscriptions to authentication and router events in a TypeScript\nclass.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\nprivate property that is used to access the LocalService service within the class. This service\nis likely used for handling localization or language-related functionalities in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\n\n                                                        \n                                                \n                                                \n                                                        localLang\n                                                  \n                                                        \n                                                                        LocalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The localLang parameter in the constructor is of type LocalService. It is a\nprivate property that is used to access the LocalService service within the class. This service\nis likely used for handling localization or language-related functionalities in the application.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:62\n                        \n                    \n\n\n            \n                \n                        The function isActive checks if the current URL includes a specified URL string and returns a\nboolean value.\nused to check if the current URL matches the provided url parameter.\nspecified URL string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The isActive function takes a url parameter of type string. This function is likely\nused to check if the current URL matches the provided url parameter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                A boolean value is being returned, indicating whether the current URL contains the\nspecified URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:90\n                        \n                    \n\n\n            \n                \n                        The logOut function calls the logout method of the auth object.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAbout\n                        \n                    \n                \n            \n            \n                \ntoAbout(menu: IonMenu)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:102\n                        \n                    \n\n\n            \n                \n                        The toAbout function navigates to the '/about' route using the Angular router and close the menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                        IonMenu\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The menu\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toData\n                        \n                    \n                \n            \n            \n                \ntoData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:83\n                        \n                    \n\n\n            \n                \n                        The toData function navigates to the '/data' route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toHome\n                        \n                    \n                \n            \n            \n                \ntoHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:69\n                        \n                    \n\n\n            \n                \n                        The toHome function uses the Angular router to navigate to the '/home' route.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSettings\n                        \n                    \n                \n            \n            \n                \ntoSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:76\n                        \n                    \n\n\n            \n                \n                        The toSettings function navigates to the settings route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialAuthResolved\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSplash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LocalService } from './core/services/translate/local.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AuthService } from './core/services/auth.service';\nimport { filter } from 'rxjs';\nimport { IonMenu, MenuController } from '@ionic/angular';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent implements OnInit{\n  isSplash: boolean = false;\n  initialAuthResolved = false;\n\n  /**\n   * The constructor initializes subscriptions to authentication and router events in a TypeScript\n   * class.\n   *\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   * @param router The `router` parameter in the constructor is an instance of the Angular Router\n   * service. It is used for navigating between different views in the Angular application based on the\n   * specified routes.\n   * @param localLang The `localLang` parameter in the constructor is of type `LocalService`. It is a\n   * private property that is used to access the `LocalService` service within the class. This service\n   * is likely used for handling localization or language-related functionalities in the application.\n   */\n  constructor(\n    protected auth: AuthService,\n    private router: Router,\n    private localLang: LocalService\n  ) {\n    this.auth.isLogged$.subscribe((logged) => {\n      if (this.initialAuthResolved) {\n        if (logged) {\n          this.router.navigate(['/home']).catch(err => console.error(err));\n        } else {\n          this.router.navigate(['/access']).catch(err => console.error(err));\n        }\n      } else {\n        this.initialAuthResolved = true;\n      }\n    });\n  }\n  ngOnInit(): void {\n  }\n\n  /**\n   * The function `isActive` checks if the current URL includes a specified URL string and returns a\n   * boolean value.\n   *\n   * @param url The `isActive` function takes a `url` parameter of type string. This function is likely\n   * used to check if the current URL matches the provided `url` parameter.\n   * @return A boolean value is being returned, indicating whether the current URL contains the\n   * specified URL string.\n   */\n  isActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  /**\n   * The `toHome` function uses the Angular router to navigate to the '/home' route.\n   */\n  toHome() {\n    this.router.navigate(['/home']);\n  }\n\n  /**\n   * The `toSettings` function navigates to the settings route using the Angular router.\n   */\n  toSettings() {\n    this.router.navigate(['/settings']);\n  }\n\n  /**\n   * The `toData` function navigates to the '/data' route using the Angular router.\n   */\n  toData() {\n    this.router.navigate(['/data']);\n  }\n\n  /**\n   * The `logOut` function calls the `logout` method of the `auth` object.\n   */\n  logOut() {\n    this.auth.logout().subscribe(async (_) => {\n      await this.router.navigate(['/access']);\n      await Haptics.impact({ style: ImpactStyle.Heavy });\n    });\n  }\n\n  /**\n   * The `toAbout` function navigates to the '/about' route using the Angular router and close the menu.\n   *\n   * @param menu The menu\n   */\n  toAbout(menu: IonMenu) {\n    this.router.navigate(['/about']);\n    menu.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n    \n  \n  \n  \n    \n    \n      \n        \n          \n        \n        \n          {{(auth.user$ | async)?.name }} {{ (auth.user$ | async)?.surname | capitalizeInitial}}\n        \n      \n    \n  \n    \n\n    \n      \n        \n\n          \n            \n            {{'menu.home' | translate}}\n          \n\n          \n            \n            {{'menu.settings' | translate}}\n          \n          \n          \n            \n            {{'menu.graphics' | translate}}\n          \n\n          \n            \n            {{'menu.logOut' | translate}}\n          \n          \n        \n\n      \n      \n        {{'menu.about' | translate}}\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                ion-item {\n    cursor: pointer;\n}\n\nion-icon {\n    margin-right: 20px;\n}\n\nion-menu-button {\n    --color: #0F212D;\n    font-size: 50px;\n    margin-left: 100px;\n}\n\nion-item.active {\n    --background: #0F212D;\n    --color: var(--ion-color-primary-contrast);\n    \n    ion-icon {\n      color: var(--ion-color-primary-contrast);\n    }\n}\n\nion-header {\n    --background: transparent;\n    ion-toolbar {\n        --background: transparent;\n        border: none;\n        box-shadow: none;\n        \n        .app-logo {\n          height: 100px;\n          margin-right: 40px;\n        }\n    }\n\n}\n\n.menu-footer {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    text-align: center;\n    padding: 10px;\n    font-size: 0.8em;\n    color: gray;\n    border-top: 1px solid lightgray;\n  \n    p {\n      margin: 0;\n    }\n\n    &:hover {\n        cursor: pointer;\n        p {\n            font-weight: bold;\n        }\n    }\n}\n\n\n.menu--header__toolbar {\n    margin-top: 5%;\n    display:flex;\n    align-items:center;\n    justify-content: center;\n    gap: 20px;\n\n    ion-avatar {\n        img {\n            width: 60px;\n        }\n    }\n\n    span {\n        font-weight: bold;\n    }\n}\n    \n\n@media (max-width: 700px) {\n    ion-menu-button{\n        font-size: 40px;\n        margin-left: 10px;\n    }\n\n    ion-header {\n        ion-toolbar {\n            .app-logo {\n              margin-right: 10px;\n            }\n        }\n    }\n    \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    {{(auth.user$ | async)?.name }} {{ (auth.user$ | async)?.surname | capitalizeInitial}}                                                                            {{\\'menu.home\\' | translate}}                                            {{\\'menu.settings\\' | translate}}                                                      {{\\'menu.graphics\\' | translate}}                                            {{\\'menu.logOut\\' | translate}}                                                {{\\'menu.about\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCapitalizeInitialPipe\n\nCapitalizeInitialPipe\n\nAppModule -->\n\nCapitalizeInitialPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CapitalizeInitialPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { IonicModule, IonicRouteStrategy, Platform } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { createTranslateLoader } from './core/translate/translate';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\nimport { FirebaseAuthService } from './core/services/firebase/api/firebase-auth.service';\nimport { FirebaseService } from './core/services/firebase/firebase.service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FirebaseMediaService } from './core/services/firebase/api/firebase-media.service';\nimport { HttpClientWebProvider } from './core/services/http/http-client-web.provider';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { MediaService } from './core/services/media.service';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './core/services/auth.service';\nimport { DataService } from './core/services/data.service';\nimport { HttpClientProvider } from './core/services/http/http-client.provider';\nimport { ToastModule } from 'primeng/toast';\nimport { SharedModule } from './shared/shared.module';\n\nimport { provideLottieOptions } from 'ngx-lottie';\nimport player from 'lottie-web';\nimport { CapitalizeInitialPipe } from './core/pipes/capitalize-initial.pipe';\nimport { DividerModule } from 'primeng/divider';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport { DropdownModule } from 'primeng/dropdown';\n\nexport function MediaServiceFactory(\n  backend:string,\n  firebase:FirebaseService){\n  switch(backend){\n    case 'Firebase':\n      return new FirebaseMediaService(firebase);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\nexport function httpProviderFactory(\n  http:HttpClient) {\n  return new HttpClientWebProvider(http);\n}\n\nexport function AuthServiceFactory(\n  backend:string,\n  firebase:FirebaseService\n) {\n  switch(backend){\n    case 'Firebase':\n      return new FirebaseAuthService(firebase);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CapitalizeInitialPipe,\n  ],\n  imports: [\n    DropdownModule,\n    BrowserAnimationsModule,\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n    SharedModule,\n    DividerModule,\n  ],\n  providers: [\n    provideLottieOptions({\n      player: () => player,\n    }),\n    {\n      provide: 'firebase-config',\n      useValue: environment.firebaseConfig\n    },\n    {\n      provide: 'backend',\n      useValue:'Firebase'\n    },\n    { \n      provide: RouteReuseStrategy, \n      useClass: IonicRouteStrategy \n    },\n    // Factories\n    {\n      provide: HttpClientProvider,\n      deps: [HttpClient, Platform],\n      useFactory: httpProviderFactory,  \n    },\n    {\n      provide: AuthService,\n      deps: ['backend', FirebaseService],\n      useFactory: AuthServiceFactory,  \n    },\n    {\n      provide: MediaService,\n      deps: ['backend', FirebaseService],\n      useFactory: MediaServiceFactory,  \n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { AdminGuard } from './core/guards/admin.guard';\nimport { UserDataPageModule } from './pages/user-data/user-data.module';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./pages/home/home.module').then( m => m.HomePageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n      {\n        path: 'incident-data/:id',\n        loadChildren: () => \"import('./pages/incident-data/incident-data.module').then( m => m.IncidentDataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: 'access',\n    pathMatch: 'full'\n  },\n  {\n    path: 'access',\n    loadChildren: () => \"import('./pages/access/access.module').then( m => m.AccessPageModule)\"\n  },\n  {\n    path: 'settings',\n    loadChildren: () => \"import('./pages/settings/settings.module').then( m => m.SettingsPageModule)\",\n    canActivate: [AuthGuard, AdminGuard]\n  },\n  {\n    path: 'data',\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./pages/data/data.module').then(m => m.DataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n      {\n        path: 'user/:id',\n        loadChildren: () => \"import('./pages/user-data/user-data.module').then(m => m.UserDataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n    ]\n  },\n  {\n    path: 'about',\n    loadChildren: () => \"import('./pages/about/about.module').then( m => m.AboutPageModule)\",\n    canActivate: [AuthGuard, AdminGuard],\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                homeUrl\n                            \n                            \n                                    Private\n                                loginUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthGuard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe AuthService for checking the user's authentication status.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Router for navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth.guard.ts:37\n                        \n                    \n\n\n            \n                \n                        Checks if the user is logged in and redirects accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe activated route snapshot.\n\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe router state snapshot.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                An observable, promise, boolean, or URL tree representing the result of the canActivate operation.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable, map, tap } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  private loginUrl: string = '/access';\n  private homeUrl: string = '/home';\n\n  /**\n   * Creates an instance of AuthGuard.\n   * \n   * @param auth - The AuthService for checking the user's authentication status.\n   * @param router - The Router for navigation.\n   */\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {}\n\n  /**\n   * Checks if the user is logged in and redirects accordingly.\n   * \n   * @param route - The activated route snapshot.\n   * @param state - The router state snapshot.\n   * @returns An observable, promise, boolean, or URL tree representing the result of the canActivate operation.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n    return this.auth.isLogged$.pipe(\n      tap(logged => {\n        if (logged) {\n          return this.router.createUrlTree([this.homeUrl]);\n        } else {\n          return this.router.createUrlTree([this.loginUrl]);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                login\n                            \n                            \n                                    Public\n                                    Abstract\n                                logout\n                            \n                            \n                                    Public\n                                    Abstract\n                                me\n                            \n                            \n                                    Public\n                                    Abstract\n                                register\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Performs user login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser credentials for login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable emitting the authenticated user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Logs out the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Retrieves information about the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting information about the current user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Registers a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser information for registration.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the registration process.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Updates the user's information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUpdated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the update process.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UserInfo, UserCredentials } from '../interfaces/user-info';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class AuthService {\n  protected _logged = new BehaviorSubject(false);\n  public isLogged$ = this._logged.asObservable();\n  protected _user = new BehaviorSubject(null);\n  public user$ = this._user.asObservable();\n\n  /**\n   * Performs user login.\n   * @param {Object} credentials - User credentials for login.\n   * @returns {Observable} Observable emitting the authenticated user.\n   */\n  public abstract login(credentials: Object): Observable;\n\n  /**\n   * Registers a new user.\n   * @param {Object} info - User information for registration.\n   * @returns {Observable} Observable emitting the result of the registration process.\n   */\n  public abstract register(info: Object): Observable;\n\n  /**\n   * Logs out the current user.\n   */\n  public abstract logout(): Observable;\n\n  /**\n   * Retrieves information about the current user.\n   * @returns {Observable} Observable emitting information about the current user.\n   */\n  public abstract me(): Observable;\n\n  /**\n   * Updates the user's information.\n   * @param {UserInfo} user - Updated user information.\n   * @returns {Observable} Observable emitting the result of the update process.\n   */\n  public abstract updateUser(user: UserInfo): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizeInitialPipe.html":{"url":"pipes/CapitalizeInitialPipe.html","title":"pipe - CapitalizeInitialPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizeInitialPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/capitalize-initial.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        capitalizeInitial\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/capitalize-initial.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        The function takes a string as input, capitalizes the first letter, and adds a period at the end.\nvalue is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\nfirst character of the string and appends a period at the end before returning the transformed\nstring.\nof the value is capitalized and followed by a period.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value parameter in the transform function is a string or undefined. If the\nvalue is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\nfirst character of the string and appends a period at the end before returning the transformed\nstring.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                An empty string is being returned if the value is falsy. Otherwise, the first character\nof the value is capitalized and followed by a period.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalizeInitial',\n})\nexport class CapitalizeInitialPipe implements PipeTransform {\n  /**\n   * The function takes a string as input, capitalizes the first letter, and adds a period at the end.\n   *\n   * @param value The `value` parameter in the `transform` function is a string or undefined. If the\n   * `value` is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\n   * first character of the string and appends a period at the end before returning the transformed\n   * string.\n   * @return An empty string is being returned if the `value` is falsy. Otherwise, the first character\n   * of the `value` is capitalized and followed by a period.\n   */\n  transform(value: string | undefined): string {\n    if (!value) {\n      return '';\n    }\n    return value.charAt(0).toUpperCase() + '.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesInfoComponent.html":{"url":"components/CategoriesInfoComponent.html","title":"component - CategoriesInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/categories-info/categories-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories-info\n            \n\n\n\n            \n                styleUrls\n                ./categories-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categories-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScreenSmall\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                editCategory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onEditClicked\n                            \n                            \n                                onTrashClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/categories-info/categories-info.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\nInitializes the component by checking the initial screen size.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categories\n                    \n                \n                \n                    \n                        Type :         CategoryInfo[] | null | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:22\n                            \n                        \n                \n                    \n                        Represents the input property for passing category information to the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onEditClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:33\n                            \n                        \n                \n                    \n                        Represents the output property for emitting events when the edit icon is clicked for a category.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onTrashClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:27\n                            \n                        \n                \n                    \n                        Represents the output property for emitting events when the trash icon is clicked for a category.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Emits an event when the delete icon for a category is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCategory\n                        \n                    \n                \n            \n            \n                \neditCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Emits an event when the edit icon for a category is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/categories-info/categories-info.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\n\n@Component({\n  selector: 'app-categories-info',\n  templateUrl: './categories-info.component.html',\n  styleUrls: ['./categories-info.component.scss'],\n})\nexport class CategoriesInfoComponent implements OnInit {\n  isScreenSmall: boolean = false;\n\n  /**\n   * Represents the input property for passing category information to the component.\n   **/\n  @Input() categories: CategoryInfo[] | null | undefined;\n\n  /**\n   * Represents the output property for emitting events when the trash icon is clicked for a category.\n   */\n  @Output() onTrashClicked: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * Represents the output property for emitting events when the edit icon is clicked for a category.\n   */\n  @Output() onEditClicked: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * Constructs a component constructor function.\n   * Initializes the component by checking the initial screen size.\n   */\n  constructor() {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Emits an event when the delete icon for a category is clicked.\n   *\n   * @param category CategoryInfo - the category to be deleted.\n   */\n  deleteCategory(category: CategoryInfo) {\n    this.onTrashClicked.emit(category);\n  }\n\n  /**\n   * Emits an event when the edit icon for a category is clicked.\n   *\n   * @param category CategoryInfo - the category to be edited.\n   */\n  editCategory(category: CategoryInfo) {\n    this.onEditClicked.emit(category);\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n  \n\n  \n    {{'forms.name' | translate }}\n    {{'forms.description' | translate }}\n     \n    {{'forms.actions' | translate }}\n  \n\n  \n    {{category.name}}\n    {{category.description}}\n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./categories-info.component.scss\n                \n                ion-list {\n    width: 80%;\n    margin: 3% auto;\n\n    ion-list-header {\n        --background: #0F212D;\n        --color: #fff;\n    }\n\n    .subheader {\n        ion-label {\n          font-weight: bold;\n        }\n    }\n\n    .data {\n        position: relative;\n        border-top: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n\n        &:hover {\n            border-color: #0F212D;\n        }\n\n        #actions {\n            display: flex;\n            gap: 20px;\n            cursor: pointer;\n\n        }\n    }\n}\n\n@media (max-width: 900px) {\n    .subheader {\n        ion-label {\n          margin-left: 0.2%;\n        }\n    }\n}\n\n@media (max-width: 700px) {\n    ion-list {\n        width: 100%;\n        margin-top: 5%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}        {{\\'forms.name\\' | translate }}    {{\\'forms.description\\' | translate }}         {{\\'forms.actions\\' | translate }}        {{category.name}}    {{category.description}}                                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                getCategory\n                            \n                            \n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/categories.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCategory\n                        \n                    \n                \n            \n            \n                \ncreateCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Creates a new category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is created successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Deletes a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is deleted successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory(categoryId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategory\n                        \n                    \n                \n            \n            \n                \nupdateCategory(category: CategoryInfo, originalName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Updates a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the updated category information.\n\n                                            \n                                        \n                                        \n                                                originalName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the original name of the category.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is updated successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {\n  catchError,\n  first,\n  map,\n  switchMap,\n  throwError,\n  of,\n  from,\n  take,\n} from 'rxjs';\nimport { CategoryInfo } from '../../interfaces/category-info';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoriesService {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param firebaseService FirebaseService - a service for handling Firebase-related operations.\n   */\n  constructor(private firebaseService: FirebaseService) {}\n\n  getCategory(categoryId: string) {\n    return this.firebaseService.getDocument('categoryInfo', categoryId)\n  }\n\n  /**\n   * Creates a new category.\n   *\n   * @param category CategoryInfo - the category information to be created.\n   * @returns An Observable that emits a success message if the category is created successfully, otherwise emits an error message.\n   */\n  createCategory(category: CategoryInfo): Observable {\n    return this.firebaseService.categories$.pipe(\n      first(),\n      switchMap((existingCategories) => {\n        if (existingCategories.some((c) => c.name === category.name)) {\n          return throwError(\n            () => new Error('Una categoría con este nombre ya existe.')\n          );\n        }\n        if (this.firebaseService.user) {\n          category.adminId = this.firebaseService.user.uid || '';\n          category.admin = this.firebaseService.user.email || '';\n        }\n        console.log('object');\n        return from(\n          this.firebaseService.createDocument('categoryInfo', category)\n        ).pipe(\n          switchMap((docRef) => {\n            const uuid = docRef;\n            return from(\n              this.firebaseService.updateDocument('categoryInfo', uuid, {\n                uuid,\n              })\n            ).pipe(\n              map(() => 'Categoría creada y actualizada exitosamente con UUID.')\n            );\n          })\n        );\n      }),\n      catchError((err) =>\n        throwError(\n          () => new Error('Error al crear la categoría: ' + err.message)\n        )\n      )\n    );\n  }\n\n  /**\n   * Deletes a category.\n   *\n   * @param category CategoryInfo - the category information to be deleted.\n   * @returns An Observable that emits a success message if the category is deleted successfully, otherwise emits an error message.\n   */\n  deleteCategory(category: CategoryInfo): Observable {\n    return this.firebaseService.incidents$.pipe(\n      first(),\n      switchMap((incidents) => {\n        const hasIncident = incidents.some(\n          (incident) => incident.categoryName === category.name\n        );\n        if (hasIncident) {\n          return throwError(\n            () =>\n              new Error(\n                'No se puede borrar la categoría porque tiene incidencias asociadas'\n              )\n          );\n        }\n        return this.firebaseService\n          .deleteDocument('categoryInfo', category.uuid)\n          .then(() => {\n            return 'Categoría borrada exitosamente.';\n          });\n      }),\n      catchError((err) => {\n        return throwError(\n          () => new Error(`Error al borrar la categoría: ${err.message}`)\n        );\n      })\n    );\n  }\n\n  /**\n   * Updates a category.\n   *\n   * @param category CategoryInfo - the updated category information.\n   * @param originalName string - the original name of the category.\n   * @returns An Observable that emits a success message if the category is updated successfully, otherwise emits an error message.\n   */\n  updateCategory(\n    category: CategoryInfo,\n    originalName: string\n  ): Observable {\n    return this.firebaseService.incidents$.pipe(\n      first(),\n      switchMap((incidents) => {\n        const hasIncidentWithOriginalName = incidents.some(\n          (incident) => incident.categoryName === originalName\n        );\n        if (hasIncidentWithOriginalName) {\n          return throwError(\n            () =>\n              new Error(\n                'No se puede actualizar la categoría porque tiene incidencias asociadas con su nombre original'\n              )\n          );\n        }\n        return from(\n          this.firebaseService.updateDocument(\n            'categoryInfo',\n            category.uuid,\n            category\n          )\n        ).pipe(map(() => 'Categoría actualizada exitosamente.'));\n      }),\n      catchError((err) =>\n        throwError(\n          () =>\n            new Error(\n              `Error al intentar actualizar la categoría: ${err.message}`\n            )\n        )\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryInfo.html":{"url":"interfaces/CategoryInfo.html","title":"interface - CategoryInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoryInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/category-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            adminId\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CategoryInfo {\n    name: string;\n    admin: string;\n    adminId: string;\n    description: string;\n    uuid: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategorySelectableComponent.html":{"url":"components/CategorySelectableComponent.html","title":"component - CategorySelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategorySelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/category-selectable/category-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                CATEGORY_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-category-selectable\n            \n\n\n\n            \n                styleUrls\n                ./category-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                categorySelected\n                            \n                            \n                                    Public\n                                categoryService\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategoryClicked\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectCategory\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                resetSignal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    category\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:46\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoriesSelectorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe CategoriesService for fetching category data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:41\n                            \n                        \n                \n                    \n                        Setter method for setting the selected category.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:30\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Clears the selected category.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Filters categories based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter categories.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategoryClicked\n                        \n                    \n                \n            \n            \n                \nonCategoryClicked(popover: IonPopover, category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a category from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected category.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering categories.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Loads categories from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectCategory(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Selects a category by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the category to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorySelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categoryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoriesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:55\n                        \n                    \n\n            \n                \n                    - The CategoriesService for fetching category data.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:56\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:46\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n\n                \n                    \n                        setcategory(_category: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:41\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected category.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _category\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected category.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  SimpleChanges,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const CATEGORY_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-category-selectable',\n  templateUrl: './category-selectable.component.html',\n  styleUrls: ['./category-selectable.component.scss'],\n  providers: [CATEGORY_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class CategorySelectableComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  categorySelected: any | undefined;\n  disabled: boolean = true;\n  categories: any[] = [];\n\n  /**\n   * Setter method for setting the selected category.\n   *\n   * @param _category - The selected category.\n   */\n  @Input() set category(_category: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of CategoriesSelectorComponent.\n   *\n   * @param categoryService - The CategoriesService for fetching category data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public categoryService: CategoriesService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads categories from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.categories$.subscribe({\n        next: (categories) => {\n          this.categories = categories;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a category by its ID.\n   *\n   * @param id - The ID of the category to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectCategory(\n    id: string | undefined,\n    propagate: boolean = false\n  ) {\n    if (id) {\n      await this.categoryService.getCategory(id).then((category) => {\n        this.categorySelected = category;\n      });\n    } else this.categorySelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.categorySelected.data.name);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectCategory(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected category.\n   */\n  clearSelection() {\n    this.categorySelected = undefined;\n  }\n\n  /**\n   * Filters categories based on a search value.\n   *\n   * @param value - The search value to filter categories.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering categories.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a category from the list.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   * @param category - The selected category.\n   */\n  onCategoryClicked(popover: IonPopover, category: any) {\n    this.selectCategory(category.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected category.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectCategory(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n    {{categorySelected.data.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./category-selectable.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}    {{categorySelected.data.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategorySelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategorySelectableMobileComponent.html":{"url":"components/CategorySelectableMobileComponent.html","title":"component - CategorySelectableMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategorySelectableMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-category-selectable-mobile\n            \n\n\n\n            \n                styleUrls\n                ./category-selectable-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-selectable-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                categorySelected\n                            \n                            \n                                    Public\n                                categoryService\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategoryClicked\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectCategory\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                resetSignal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    category\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoriesSelectorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe CategoriesService for fetching category data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:34\n                            \n                        \n                \n                    \n                        Setter method for setting the selected category.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:23\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:171\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:135\n                        \n                    \n\n\n            \n                \n                        Clears the selected category.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Filters categories based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter categories.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategoryClicked\n                        \n                    \n                \n            \n            \n                \nonCategoryClicked(popover: IonPopover, category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a category from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected category.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering categories.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Loads categories from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectCategory(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Selects a category by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the category to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorySelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categoryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoriesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:48\n                        \n                    \n\n            \n                \n                    - The CategoriesService for fetching category data.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:49\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:39\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n\n                \n                    \n                        setcategory(_category: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:34\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected category.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _category\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected category.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableMobileComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-category-selectable-mobile',\n  templateUrl: './category-selectable-mobile.component.html',\n  styleUrls: ['./category-selectable-mobile.component.scss'],\n  providers: [CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR]\n})\nexport class CategorySelectableMobileComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  categorySelected: any | undefined;\n  disabled: boolean = true;\n  categories: any[] = [];\n\n  /**\n   * Setter method for setting the selected category.\n   *\n   * @param _category - The selected category.\n   */\n  @Input() set category(_category: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of CategoriesSelectorComponent.\n   *\n   * @param categoryService - The CategoriesService for fetching category data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public categoryService: CategoriesService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads categories from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.categories$.subscribe({\n        next: (categories) => {\n          this.categories = categories;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a category by its ID.\n   *\n   * @param id - The ID of the category to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectCategory(\n    id: string | undefined,\n    propagate: boolean = false\n  ) {\n    if (id) {\n      await this.categoryService.getCategory(id).then((category) => {\n        this.categorySelected = category;\n      });\n    } else this.categorySelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.categorySelected.data.name);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectCategory(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected category.\n   */\n  clearSelection() {\n    this.categorySelected = undefined;\n  }\n\n  /**\n   * Filters categories based on a search value.\n   *\n   * @param value - The search value to filter categories.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering categories.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a category from the list.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   * @param category - The selected category.\n   */\n  onCategoryClicked(popover: IonPopover, category: any) {\n    this.selectCategory(category.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected category.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectCategory(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n    {{categorySelected.data.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./category-selectable-mobile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}    {{categorySelected.data.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategorySelectableMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n\n\n            \n                styleUrls\n                ./confirm-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, message: any, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialogRef - a reference to the dialog component.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                string - the message to be displayed in the dialog.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Closes the dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:18\n                        \n                    \n\n            \n                \n                    MatDialogRef - a reference to the dialog component.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:20\n                        \n                    \n\n            \n                \n                    string - the message to be displayed in the dialog.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param dialogRef MatDialogRef - a reference to the dialog component.\n   * @param message string - the message to be displayed in the dialog.\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA)\n    public message: any,\n    private translate: CustomTranslateService,\n  ) {}\n\n  ngOnInit() {\n    console.log(this.message.message);\n    let message = `dialog.${this.message.message}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.message = text\n      },\n    });\n  }\n\n  /**\n   * Closes the dialog.\n   */\n  cancel() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  {{message}}\n\n\n  {{'dialog.no' | translate}}\n  {{'dialog.yes' | translate}}\n\n\n    \n\n    \n                \n                    ./confirm-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{message}}  {{\\'dialog.no\\' | translate}}  {{\\'dialog.yes\\' | translate}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomTranslateService.html":{"url":"injectables/CustomTranslateService.html","title":"injectable - CustomTranslateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomTranslateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/translate/translate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _language\n                            \n                            \n                                    Public\n                                language$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getCurrentLang\n                            \n                            \n                                    Private\n                                    Async\n                                init\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/translate/translate.service.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor initializes the TranslateService and calls the init() method.\nTranslateService class, which is likely used for handling translations in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe translate parameter is an instance of the\nTranslateService class, which is likely used for handling translations in the application.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:57\n                        \n                    \n\n\n            \n                \n                        The function get returns an Observable that retrieves a translated string based on a given key.\ntranslation value from the translation service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key parameter is a string that represents the key used to retrieve a\ntranslation value from the translation service.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable of type string is being returned.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentLang\n                        \n                    \n                \n            \n            \n                \ngetCurrentLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:26\n                        \n                    \n\n\n            \n                \n                        The init function initializes language settings by adding languages and setting a default\nlanguage.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(language: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:37\n                        \n                    \n\n\n            \n                \n                        The function use in TypeScript sets the language for translation and updates the language\nsubject accordingly.\nrepresenting the language to be used for translation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe use function takes a language parameter, which is a string\nrepresenting the language to be used for translation.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _language\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    'es'\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/translate.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        language$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._language.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/translate.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, lastValueFrom, tap } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomTranslateService {\n  private _language: BehaviorSubject = new BehaviorSubject(\n    'es'\n  );\n  public language$ = this._language.asObservable();\n\n  /**\n   * The constructor initializes the TranslateService and calls the init() method.\n   * @param {TranslateService} translate - The `translate` parameter is an instance of the\n   * `TranslateService` class, which is likely used for handling translations in the application.\n   */\n  constructor(private translate: TranslateService) {\n    this.init();\n  }\n\n  /**\n   * The `init` function initializes language settings by adding languages and setting a default\n   * language.\n   */\n  private async init() {\n    this.translate.addLangs(['es', 'en']);\n    this.translate.setDefaultLang(this._language.value);\n  }\n\n  /**\n   * The function `use` in TypeScript sets the language for translation and updates the language\n   * subject accordingly.\n   * @param {string} language - The `use` function takes a `language` parameter, which is a string\n   * representing the language to be used for translation.\n   */\n  use(language: string) {\n    lastValueFrom(this.translate.use(language))\n      .then((_) => {\n        this._language.next(language);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  getCurrentLang(): string {\n    return this._language.getValue();\n  }\n\n  /**\n   * The function `get` returns an Observable that retrieves a translated string based on a given key.\n   * @param {string} key - The `key` parameter is a string that represents the key used to retrieve a\n   * translation value from the translation service.\n   * @returns An Observable of type string is being returned.\n   */\n  get(key: string): Observable {\n    return this.translate.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataPage.html":{"url":"components/DataPage.html","title":"component - DataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/data/data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-data\n            \n\n\n\n            \n                styleUrls\n                ./data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                    Public\n                                downloadCSV\n                            \n                            \n                                    Async\n                                editCategory\n                            \n                            \n                                exportData\n                            \n                            \n                                    Public\n                                jsonToCSV\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, router: Router, _categoryService: CategoriesService, translate: CustomTranslateService, messageService: MessageService, dialog: MatDialog, myModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/data/data.page.ts:22\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router - an instance of the Angular Router service used for navigating between different components.\n\n                                                        \n                                                \n                                                \n                                                        _categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CategoriesService - a service for managing categories.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MessageService - a service for displaying messages or notifications to the user within the application.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog - a service for displaying dialog boxes.\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ModalController - a service for managing modal dialogs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:179\n                        \n                    \n\n\n            \n                \n                        Opens a modal dialog for creating a new category.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(info: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:210\n                        \n                    \n\n\n            \n                \n                        Deletes a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        downloadCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadCSV(csvContent: string, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:105\n                        \n                    \n\n\n            \n                \n                        Initiates the download of a CSV file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                csvContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe CSV content to be downloaded.\n\n\n                                            \n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the CSV file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    editCategory(info: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:154\n                        \n                    \n\n\n            \n                \n                        Opens a modal dialog for editing a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportData\n                        \n                    \n                \n            \n            \n                \nexportData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:54\n                        \n                    \n\n\n            \n                \n                        Method to export data to CSV format.\nFetches data from Firebase, converts it to CSV format, and initiates CSV file downloads.\nThis method retrieves data from Firebase using the FirebaseService, converts it to CSV format,\nand initiates the download of CSV files for each dataset.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        jsonToCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    jsonToCSV(dataObject: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:75\n                        \n                    \n\n\n            \n                \n                        Converts JSON data to CSV format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataObject\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JSON data object to be converted to CSV.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                An object containing CSV content for each dataset.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:127\n                        \n                    \n\n\n            \n                \n                        Opens a confirmation dialog for deleting a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:249\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:229\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n            \n                \nuserInfo(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:145\n                        \n                    \n\n\n            \n                \n                        Navigates to the user information page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/data.page.ts:40\n                        \n                    \n\n            \n                \n                    MatDialog - a service for displaying dialog boxes.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\nimport { ModalController } from '@ionic/angular';\nimport { ModalCategoryComponent } from './modal-category/modal-category.component';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.page.html',\n  styleUrls: ['./data.page.scss'],\n  providers: [MessageService],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DataPage implements OnInit {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param router Router - an instance of the Angular Router service used for navigating between different components.\n   * @param _categoryService CategoriesService - a service for managing categories.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   * @param messageService MessageService - a service for displaying messages or notifications to the user within the application.\n   * @param dialog MatDialog - a service for displaying dialog boxes.\n   * @param myModal ModalController - a service for managing modal dialogs.\n   */\n  constructor(\n    protected _firebaseService: FirebaseService,\n    private router: Router,\n    private _categoryService: CategoriesService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    public dialog: MatDialog,\n    private myModal: ModalController\n  ) {}\n\n  ngOnInit() {}\n\n  /**\n   * Method to export data to CSV format.\n   * Fetches data from Firebase, converts it to CSV format, and initiates CSV file downloads.\n   *\n   * @remarks\n   * This method retrieves data from Firebase using the FirebaseService, converts it to CSV format,\n   * and initiates the download of CSV files for each dataset.\n   */\n  exportData(): void {\n    this._firebaseService\n      .getAllData()\n      .then((dataObject) => {\n        const csvFiles = this.jsonToCSV(dataObject);\n        for (const key in csvFiles) {\n          if (csvFiles.hasOwnProperty(key)) {\n            const csvContent = csvFiles[key];\n            this.downloadCSV(csvContent, `${key}.csv`);\n          }\n        }\n      })\n      .catch((error) => console.error('Failed to fetch data', error));\n  }\n\n  /**\n   * Converts JSON data to CSV format.\n   *\n   * @param dataObject - The JSON data object to be converted to CSV.\n   * @returns An object containing CSV content for each dataset.\n   */\n  public jsonToCSV(dataObject: { [key: string]: any[] }): {\n    [key: string]: string;\n  } {\n    const csvFiles: { [key: string]: string } = {};\n\n    for (const key in dataObject) {\n      if (dataObject.hasOwnProperty(key) && dataObject[key].length > 0) {\n        const headers = Object.keys(dataObject[key][0]);\n        const csvRows = dataObject[key].map((row) =>\n          headers\n            .map((fieldName) =>\n              JSON.stringify(row[fieldName], (key, value) =>\n                value == null ? '' : value\n              )\n            )\n            .join(',')\n        );\n        csvRows.unshift(headers.join(','));\n        csvFiles[key] = csvRows.join('\\r\\n');\n      }\n    }\n    return csvFiles;\n  }\n\n  /**\n   * Initiates the download of a CSV file.\n   *\n   * @param csvContent - The CSV content to be downloaded.\n   * @param filename - The name of the CSV file.\n   */\n  public downloadCSV(csvContent: string, filename: string): void {\n    if (!csvContent) {\n      console.error('No CSV content available for download.');\n      return;\n    }\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens a confirmation dialog for deleting a category.\n   *\n   * @param category CategoryInfo - the category information to be deleted.\n   */\n  openDialog(category: CategoryInfo): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      data: { message: 'delete' },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.deleteCategory(category);\n      }\n    });\n  }\n\n  /**\n   * Navigates to the user information page.\n   *\n   * @param userId string - the ID of the user.\n   */\n  userInfo(userId: string) {\n    this.router.navigate([`/data/user/${userId}`]);\n  }\n\n  /**\n   * Opens a modal dialog for editing a category.\n   *\n   * @param info CategoryInfo - the category information to be edited.\n   */\n  async editCategory(info: CategoryInfo) {\n    const mod = await this.myModal.create({\n      component: ModalCategoryComponent,\n      componentProps: {\n        categoryInfo: info,\n        mode: 'update',\n      },\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results?.data) {\n        this._categoryService\n          .updateCategory(results?.data, info.name)\n          .subscribe({\n            next: (_) => this.showSuccess('good'),\n            error: (_) => this.showError('cant'),\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens a modal dialog for creating a new category.\n   */\n  async createCategory() {\n    const mod = await this.myModal.create({\n      component: ModalCategoryComponent,\n      componentProps: {\n        categoryInfo: null,\n        mode: 'create',\n      },\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results?.data) {\n        this._categoryService.createCategory(results?.data).subscribe({\n          next: async (_) => {\n            this.showSuccess('good');\n            await Haptics.impact({ style: ImpactStyle.Medium });\n          },\n          error: async (_) => {\n            this.showError('cant');\n            await Haptics.impact({ style: ImpactStyle.Heavy });\n          },\n        });\n      }\n    }\n  }\n\n  /**\n   * Deletes a category.\n   *\n   * @param info CategoryInfo - the category to delete.\n   */\n  deleteCategory(info: CategoryInfo) {\n    this._categoryService.deleteCategory(info).subscribe({\n      next: async (_) => {\n        this.showSuccess('good');\n        await Haptics.impact({ style: ImpactStyle.Medium });\n      },\n      error: async (_) => {\n        this.showError('cant');\n        await Haptics.impact({ style: ImpactStyle.Heavy });\n      },\n    });\n  }\n\n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'success',\n          detail: text,\n        });\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        {{'data.data' | translate}}\n      \n\n      \n        {{ \"data.download\" | translate }}\n      \n\n      \n\n      \n        {{ \"data.create\" | translate }}\n      \n\n      \n\n      \n        +\n      \n    \n  \n    \n      \n      \n        \n        {{'data.graphic' | translate}}\n      \n\n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./data.page.scss\n                \n                ion-icon {\n    margin-right: 8px;\n}\n\n.category-mobile {\n    display: none;\n\n    button {\n        padding: 1rem;\n        border: none;\n        border-radius: 4px;\n        background-color: #0F212D;\n        color: white;\n        font-weight: bold;\n        cursor: pointer;\n\n        &:hover {\n            background-color: #1b3e56;\n        }\n\n        &:disabled {\n            background-color: #cccccc;\n            color: #777777;\n            cursor: not-allowed;\n        }\n    }\n}\n\n.graphics {\n    margin-top: 3%;\n}\n\napp-user-circle-graphic {\n    display: block;\n    max-width: 300px;\n    margin: 0 auto;\n    height: auto;\n}\n\napp-incidents-circle-graphic {\n    display: block;\n    max-width: 300px;\n    margin: 0 auto;\n    height: auto;\n}\n\n.category-button {\n    position: fixed;\n    bottom: 10px;\n    right: 20px;\n    width: 50px;\n    height: 50px;\n    padding: 0;\n    background-color: #0F212D;\n    color: white;\n    border-radius: 50%;\n    cursor: pointer;\n    font-size: 24px;\n    line-height: 50px;\n    text-align: center;\n\n    &:hover {\n        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);\n    }\n}\n\n.download-data {\n    margin-top: 30px;\n    display: flex;\n    justify-content: center;\n\n    button {\n        padding: 1rem;\n        border: none;\n        border-radius: 4px;\n        background-color: #0F212D;\n        color: white;\n        font-weight: bold;\n        cursor: pointer;\n\n        &:hover {\n            background-color: #1b3e56;\n        }\n\n        &:disabled {\n            background-color: #cccccc;\n            color: #777777;\n            cursor: not-allowed;\n        }\n    }\n}\n\n\n@media (max-width: 700px) {\n    .category-mobile {\n        margin-top: 80px;\n        margin-bottom: -10px;\n        display: flex;\n        justify-content: center;\n    }\n\n    .category-button {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{\\'data.data\\' | translate}}                    {{ \"data.download\" | translate }}                          {{ \"data.create\" | translate }}                          +                                            {{\\'data.graphic\\' | translate}}                                                                                                          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataPageModule.html":{"url":"modules/DataPageModule.html","title":"module - DataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    DataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataPageModule\n\n\n\ncluster_DataPageModule_declarations\n\n\n\ncluster_DataPageModule_imports\n\n\n\n\nDataPage\n\nDataPage\n\n\n\nDataPageModule\n\nDataPageModule\n\nDataPageModule -->\n\nDataPage->DataPageModule\n\n\n\n\n\nModalCategoryComponent\n\nModalCategoryComponent\n\nDataPageModule -->\n\nModalCategoryComponent->DataPageModule\n\n\n\n\n\nDataPageRoutingModule\n\nDataPageRoutingModule\n\nDataPageModule -->\n\nDataPageRoutingModule->DataPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DataPage\n                        \n                        \n                            ModalCategoryComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DataPageRoutingModule } from './data-routing.module';\n\nimport { DataPage } from './data.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { ToastModule } from 'primeng/toast';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ModalCategoryComponent } from './modal-category/modal-category.component';\nimport { AccordionModule } from 'primeng/accordion';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    // Reactive form\n    ReactiveFormsModule,\n    IonicModule,\n    DataPageRoutingModule,\n    SharedModule,\n    MatTabsModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n    // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    SharedModule,\n    AccordionModule\n  ],\n  declarations: [\n    DataPage,\n    ModalCategoryComponent\n  ]\n})\nexport class DataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataPageRoutingModule.html":{"url":"modules/DataPageRoutingModule.html","title":"module - DataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/data/data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DataPage } from './data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:48\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deletes an item from a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to delete the item from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the deleted item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a single item from a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to retrieve the item from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the retrieved item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Creates a new item on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to create the item on.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData for creating the item.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the created item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Updates an existing item on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to update the item on.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData for updating the item.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the updated item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:15\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Executes a query operation on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to query.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nParameters for the query.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Observable emitting the paginated data resulting from the query.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PaginatedData } from '../interfaces/data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class DataService {\n  /**\n   * Executes a query operation on a resource.\n   * @param {string} resource - The resource to query.\n   * @param {any} params - Parameters for the query.\n   * @returns {Observable>} Observable emitting the paginated data resulting from the query.\n   */\n  public abstract query(\n    resource: string,\n    params: any\n  ): Observable>;\n\n  /**\n   * Retrieves a single item from a resource.\n   * @param {string} resource - The resource to retrieve the item from.\n   * @returns {Observable} Observable emitting the retrieved item.\n   */\n  public abstract get(resource: string): Observable;\n\n  /**\n   * Creates a new item on a resource.\n   * @param {string} resource - The resource to create the item on.\n   * @param {any} data - Data for creating the item.\n   * @returns {Observable} Observable emitting the created item.\n   */\n  public abstract post(resource: string, data: any): Observable;\n\n  /**\n   * Updates an existing item on a resource.\n   * @param {string} resource - The resource to update the item on.\n   * @param {any} data - Data for updating the item.\n   * @returns {Observable} Observable emitting the updated item.\n   */\n  public abstract put(resource: string, data: any): Observable;\n\n  /**\n   * Deletes an item from a resource.\n   * @param {string} resource - The resource to delete the item from.\n   * @returns {Observable} Observable emitting the deleted item.\n   */\n  public abstract delete(resource: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailValidation.html":{"url":"classes/EmailValidation.html","title":"class - EmailValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/email.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        email\n                        \n                    \n                \n            \n            \n                \n                        \n                    email(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/email.ts:14\n                        \n                    \n\n\n            \n                \n                        Validates an email control.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe name of the control to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for email validation.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbstractControl,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\n\nexport class EmailValidation {\n  /**\n   * Validates an email control.\n   * @param {string} controlName - The name of the control to validate.\n   * @returns {ValidatorFn} Validator function for email validation.\n   */\n  public static email(controlName: string = ''): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      let email = '';\n      if (control instanceof FormControl) email = control?.value;\n      else email = control.get(controlName)?.value;\n      if (\n        email &&\n        !email.match(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)\n      ) {\n        return { email: true };\n      } else {\n        return null;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/filter/filter.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n\n\n            \n                styleUrls\n                ./filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetFilters\n                            \n                            \n                                setFilters\n                            \n                            \n                                subscribeToFilterState\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChanged\n                            \n                            \n                                resetRequested\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/filter/filter.component.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of FilterComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FilterService for managing filter state.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter/filter.component.ts:24\n                            \n                        \n                \n                    \n                        Event emitter for signaling filter changes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resetRequested\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter/filter.component.ts:19\n                            \n                        \n                \n                    \n                        EventEmitter for emitting a signal to reset filters.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Initializes the form with the initial filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nInitializes the form and subscribes to changes in filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFilters\n                        \n                    \n                \n            \n            \n                \nresetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Resets the filter settings to their default values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilters\n                        \n                    \n                \n            \n            \n                \nsetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Applies the current filter settings.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToFilterState\n                        \n                    \n                \n            \n            \n                \nsubscribeToFilterState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Subscribes to changes in the filter state and updates the form accordingly.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/filter/filter.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\nimport { FilterService } from 'src/app/core/services/filter/filter.service';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent implements OnInit {\n  /**\n   * EventEmitter for emitting a signal to reset filters.\n   */\n  @Output() resetRequested = new EventEmitter();\n\n  /**\n   * Event emitter for signaling filter changes.\n   */\n  @Output() filterChanged = new EventEmitter();\n\n  form: FormGroup;\n\n  /**\n   * Creates an instance of FilterComponent.\n   *\n   * @param filterService - The FilterService for managing filter state.\n   */\n  constructor(private filterService: FilterService) {\n    this.form = new FormGroup({\n      categoryName: new FormControl(undefined),\n      userId: new FormControl(undefined),\n      checked: new FormControl(false),\n      resolved: new FormControl(false),\n    });\n    this.subscribeToFilterState();\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Initializes the form and subscribes to changes in filter state.\n   */\n  ngOnInit() {\n    this.initForm();\n    this.subscribeToFilterState();\n  }\n\n  /**\n   * Initializes the form with the initial filter state.\n   */\n  initForm() {\n    const initialFormState = this.filterService.getFilter().value;\n    if (initialFormState) {\n      this.form = new FormGroup({\n        categoryName: new FormControl(initialFormState?.get('categoryName')?.value),\n        userId: new FormControl(initialFormState.get('userId')?.value),\n        checked: new FormControl(initialFormState.get('checked')?.value),\n        resolved: new FormControl(initialFormState.get('resolved')?.value),\n      });\n    } else {\n      this.form = new FormGroup({\n        categoryName: new FormControl(undefined),\n        userId: new FormControl(undefined),\n        checked: new FormControl(false),\n        resolved: new FormControl(false),\n      });\n    }\n  }\n\n  /**\n   * Subscribes to changes in the filter state and updates the form accordingly.\n   */\n  subscribeToFilterState() {\n    this.filterService.getFilter().subscribe((formState) => {\n      if (formState && this.form !== formState) {\n        this.form.setValue(formState.value, { emitEvent: false });\n      }\n    });\n  }\n\n  /**\n   * Applies the current filter settings.\n   */\n  setFilters() {\n    console.log(this.form.value);\n    this.filterService.updateFilterState(this.form);\n  }\n\n  /**\n   * Resets the filter settings to their default values.\n   */\n  resetFilters() {\n    this.form.reset({\n      categoryName: undefined,\n      userId: undefined,\n      checked: false,\n      resolved: false,\n    });\n    this.filterService.updateFilterState(this.form);\n    this.resetRequested.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n\n      Vistos\n      Resueltos\n    \n    \n      {{'filter.reset' | translate}}\n      {{'filter.apply' | translate}}\n    \n  \n\n    \n\n    \n                \n                    ./filter.component.scss\n                \n                .filter {\n    flex-direction: column;\n    align-items: center;\n    padding: 10px;\n    width: 80%;\n    border-radius: 0.5rem;\n    margin: 2% auto;\n    box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n\n    .form-controls {\n        display: flex;\n        justify-content: space-between;\n        width: 100%;\n        margin-bottom: 20px;\n        gap: 20px;\n\n        app-category-selectable,\n        app-user-selectable {\n            flex: 2;\n            max-width: 100%\n        }\n\n        mat-checkbox {\n            flex: 1;\n            max-width: 100%;\n        }\n    }\n\n\n\n    .form-actions {\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n        width: 100%;\n        gap: 20px;\n        padding: 10px 0;\n\n        button {\n            margin-left: 10px;\n            border-radius: 20px;\n            padding: 8px 60px;\n            font-size: 16px;\n        }\n\n        .reset--button {\n            background-color: #BD1E1E;\n            color: #fff;\n            font-weight: bold;\n\n            &:disabled {\n                background-color: #cccccc;\n                color: #777777;\n                cursor: not-allowed;\n            }\n        }\n\n        .apply--button {\n            background-color: #0F212D;\n            color: #fff;\n            font-weight: bold;\n        }\n    }\n\n    @media (max-width: 850px) {\n        width: 95%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Vistos      Resueltos              {{\\'filter.reset\\' | translate}}      {{\\'filter.apply\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterMobileComponent.html":{"url":"components/FilterMobileComponent.html","title":"component - FilterMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/filter-mobile/filter-mobile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-mobile\n            \n\n\n\n            \n                styleUrls\n                ./filter-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                resetFilters\n                            \n                            \n                                setFilters\n                            \n                            \n                                subscribeToFilterState\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChanged\n                            \n                            \n                                resetRequested\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController, filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of FiltersComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FormBuilder service for building form instances.\n\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController - a service for managing modal dialogs.\n\n\n                                                        \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service for managing filter service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resetRequested\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:15\n                            \n                        \n                \n                    \n                        EventEmitter for emitting a signal to reset filters.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Initializes the form with the initial filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nInitializes the form and subscribes to changes in the filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Method executed when the cancel action is triggered.\nDismisses the modal without passing any data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFilters\n                        \n                    \n                \n            \n            \n                \nresetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Resets the filter settings to their default values and dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilters\n                        \n                    \n                \n            \n            \n                \nsetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Applies the current filter settings and dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToFilterState\n                        \n                    \n                \n            \n            \n                \nsubscribeToFilterState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Subscribes to changes in the filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { FilterService } from 'src/app/core/services/filter/filter.service';\n\n@Component({\n  selector: 'app-filter-mobile',\n  templateUrl: './filter-mobile.component.html',\n  styleUrls: ['./filter-mobile.component.scss'],\n})\nexport class FilterMobileComponent implements OnInit {\n  /**\n   * EventEmitter for emitting a signal to reset filters.\n   */\n  @Output() resetRequested = new EventEmitter();\n\n  @Output() filterChanged = new EventEmitter();\n\n  form: FormGroup;\n\n  /**\n   * Creates an instance of FiltersComponent.\n   *\n   * @param formBuilder - The FormBuilder service for building form instances.\n   * @param modal - The ModalController - a service for managing modal dialogs.\n   * @param filterService - A service for managing filter service.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private filterService: FilterService\n  ) {\n    this.form = this.formBuilder.group({\n      categoryName: [undefined],\n      userId: [undefined],\n      checked: [false],\n      resolved: [false],\n    });\n  }\n\n  /**\n   * Method executed when the cancel action is triggered.\n   * Dismisses the modal without passing any data.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Initializes the form and subscribes to changes in the filter state.\n   */\n  ngOnInit() {\n    this.initForm();\n    this.subscribeToFilterState();\n  }\n\n  /**\n   * Initializes the form with the initial filter state.\n   */\n  initForm() {\n    const initialFormState = this.filterService.getFilter().value;\n    if (initialFormState) {\n      this.form = new FormGroup({\n        categoryName: new FormControl(initialFormState?.get('categoryName')?.value),\n        userId: new FormControl(initialFormState.get('userId')?.value),\n        checked: new FormControl(initialFormState.get('checked')?.value),\n        resolved: new FormControl(initialFormState.get('resolved')?.value),\n      });\n    } else {\n      this.form = new FormGroup({\n        categoryName: new FormControl(undefined),\n        userId: new FormControl(undefined),\n        checked: new FormControl(false),\n        resolved: new FormControl(false),\n      });\n    }\n  }\n\n  /**\n   * Subscribes to changes in the filter state.\n   */\n  subscribeToFilterState() {\n    this.filterService.getFilter().subscribe((formState) => {\n      if (formState && this.form !== formState) {\n        this.form.setValue(formState.value);\n      }\n    });\n  }\n\n  /**\n   * Applies the current filter settings and dismisses the modal.\n   */\n  setFilters() {\n    console.log(this.form.value);\n    this.modal.dismiss(null);\n    this.filterService.updateFilterState(this.form);\n  }\n\n  /**\n   * Resets the filter settings to their default values and dismisses the modal.\n   */\n  resetFilters() {\n    this.form.reset({\n      categoryName: undefined,\n      userId: undefined,\n      checked: false,\n      resolved: false,\n    });\n    this.modal.dismiss('reset');\n    this.filterService.updateFilterState(this.form);\n    this.resetRequested.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n  \n\n\n\n  \n    \n      \n        \n        \n\n        Vistos\n        Resueltos\n      \n      \n        {{'filter.reset' | translate}}\n        {{'filter.apply' | translate}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./filter-mobile.component.scss\n                \n                .filter {\n    display: flex;\n    flex-direction: column;\n    padding: 3%;\n\n    .form-controls {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        width: 100%;\n        margin-bottom: 20px;\n        gap: 20px;\n\n        mat-checkbox {\n            flex: 1;\n            max-width: 100%;\n        }\n    }\n\n\n\n    .form-actions {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        width: 100%;\n        gap: 20px;\n\n        button {\n            border-radius: 20px;\n            padding: 8px 60px;\n            font-size: 16px;\n        }\n\n        .reset--button {\n            background-color: #BD1E1E;\n            color: #fff;\n            font-weight: bold;\n\n            &:disabled {\n                background-color: #cccccc;\n                color: #777777;\n                cursor: not-allowed;\n            }\n        }\n\n        .apply--button {\n            background-color: #0F212D;\n            color: #fff;\n            font-weight: bold;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      Vistos        Resueltos                    {{\\'filter.reset\\' | translate}}        {{\\'filter.apply\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/filter/filter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFilter\n                            \n                            \n                                initializeState\n                            \n                            \n                                updateFilterState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFilter\n                        \n                    \n                \n            \n            \n                \ngetFilter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/filter/filter.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Retrieves the current filter state as a BehaviorSubject.\n\n\n                        \n                            Returns :     BehaviorSubject\n\n                        \n                            \n                                A BehaviorSubject containing the current filter state.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/filter/filter.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Initializes the filter state with default values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilterState\n                        \n                    \n                \n            \n            \n                \nupdateFilterState(form: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/filter/filter.service.ts:16\n                        \n                    \n\n\n            \n                \n                        Updates the filter state with the provided form.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form containing the updated filter settings.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filterState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/filter/filter.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilterService {\n  private filterState = new BehaviorSubject(null);\n\n  /**\n   * Updates the filter state with the provided form.\n   *\n   * @param form - The form containing the updated filter settings.\n   */\n  updateFilterState(form: FormGroup) {\n    this.filterState.next(form);\n  }\n\n  /**\n   * Retrieves the current filter state as a BehaviorSubject.\n   *\n   * @returns A BehaviorSubject containing the current filter state.\n   */\n  getFilter(): BehaviorSubject {\n    return this.filterState;\n  }\n\n  /**\n   * Initializes the filter state with default values.\n   */\n  initializeState() {\n    const initialForm = new FormGroup({\n      categoryName: new FormControl(undefined),\n      userId: new FormControl(undefined),\n      checked: new FormControl(false),\n      resolved: new FormControl(false),\n    });\n    this.filterState.next(initialForm);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseAuthService.html":{"url":"classes/FirebaseAuthService.html","title":"class - FirebaseAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                me\n                            \n                            \n                                    Private\n                                postRegister\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseSvc: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseAuthService class. It subscribes to the isLogged$ observable from the FirebaseService to\nautomatically handle changes in the authentication state. If the user is logged in, it attempts to fetch the user's data.\nIf not logged in, it sets _logged and _user to false and null, respectively.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:44\n\n                        \n                    \n\n\n            \n                \n                        Logs in a user using their credentials. Attempts to connect the user through Firebase using email and password.\nIf authentication fails or if a valid UID for the user is not received, it emits an error. If successful, it retrieves\nthe user information and updates the _user and _logged observables.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe credentials of the user, including email and password.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that may emit the logged-in user or an error in case of failed authentication.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:178\n\n                        \n                    \n\n\n            \n                \n                        Logs out the current user by calling the signOut method from FirebaseService. The method returns an Observable\nthat resolves when the sign-out process is complete.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable indicating the completion of the logout process.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:153\n\n                        \n                    \n\n\n            \n                \n                        Fetches the current user's information from Firestore based on their UID. If the user is connected (UID exists),\nretrieves their detailed profile from the 'userInfo' collection. Throws an error if no user is currently connected.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Returns an Observable that emits the user's detailed information or throws an error if the user is not connected.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    postRegister(info: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/firebase/api/firebase-auth.service.ts:124\n                        \n                    \n\n\n            \n                \n                        The function postRegister takes a User object, capitalizes the first letter of the name\nproperty if needed, and then creates a document in Firebase with the user information.\ncontains the following properties:\nparameter, checks if the uuid property exists in the info object, and then modifies the name\nproperty by capitalizing the first letter if it is not already capitalized. Finally, it creates a\ndocument in the 'userInfo' collection in Firebase with the provided user information and the\nspecified\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The info parameter in the postRegister function is an object of type UserInfo that\ncontains the following properties:\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable is being returned. The function postRegister takes a User object as a\nparameter, checks if the uuid property exists in the info object, and then modifies the name\nproperty by capitalizing the first letter if it is not already capitalized. Finally, it creates a\ndocument in the 'userInfo' collection in Firebase with the provided user information and the\nspecified\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:83\n\n                        \n                    \n\n\n            \n                \n                        Registers a new user using registration info. Creates a user in Firebase and, if successful, stores additional\nuser information in the database. If the registration fails to create a user or if necessary user details (like UID) are\nmissing, it emits an error. Otherwise, it completes the registration, updates user-related observables to reflect\nthe unauthenticated state, and emits the new user information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe registration info of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that may emit null or detailed information of the newly registered user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:189\n\n                        \n                    \n\n\n            \n                \n                        Updates the current user's information in Firestore and refreshes the local user data by fetching updated info after the update.\nUses RxJS operators to chain these asynchronous tasks efficiently.\nuser data is refreshed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new user data to be updated in Firestore.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that emits the updated user data after both the Firestore document is updated and the local\nuser data is refreshed.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, from, map, switchMap, tap } from 'rxjs';\nimport {\n  UserInfo,\n  UserCredentials,\n  UserRegisterInfo,\n} from '../../../interfaces/user-info';\nimport { FirebaseService, FirebaseUserCredential } from '../firebase.service';\nimport { AuthService } from '../../auth.service';\n\nexport class FirebaseAuthService extends AuthService {\n  /**\n   * Constructs the FirebaseAuthService class. It subscribes to the `isLogged$` observable from the FirebaseService to\n   * automatically handle changes in the authentication state. If the user is logged in, it attempts to fetch the user's data.\n   * If not logged in, it sets `_logged` and `_user` to `false` and `null`, respectively.\n   */\n  constructor(private firebaseSvc: FirebaseService) {\n    super();\n\n    this.firebaseSvc.isLogged$.subscribe((logged) => {\n      if (logged) {\n        this.me().subscribe({\n          next: (data) => {\n            this._user.next(data);\n            this._logged.next(true);\n          },\n          error: (err) => {\n            console.log(err);\n          },\n        });\n      } else {\n        this._logged.next(false);\n        this._user.next(null);\n      }\n    });\n  }\n\n  /**\n   * Logs in a user using their credentials. Attempts to connect the user through Firebase using email and password.\n   * If authentication fails or if a valid UID for the user is not received, it emits an error. If successful, it retrieves\n   * the user information and updates the `_user` and `_logged` observables.\n   * @param {UserCredentials} credentials - The credentials of the user, including email and password.\n   * @returns Returns an Observable that may emit the logged-in user or an error in case of failed authentication.\n   */\n  public login(credentials: UserCredentials): Observable {\n    return new Observable((subscr) => {\n      this.firebaseSvc\n        .connectUserWithEmailAndPassword(\n          credentials.email,\n          credentials.password\n        )\n        .then((credentials: FirebaseUserCredential | null) => {\n          if (\n            !credentials ||\n            !credentials.user ||\n            !credentials.user.user ||\n            !credentials.user.user.uid\n          ) {\n            subscr.error('Cannot login');\n          }\n          if (credentials) {\n            this.me().subscribe((data) => {\n              this._user.next(data);\n              this._logged.next(true);\n              subscr.next(data);\n              subscr.complete();\n            });\n          }\n        })\n        .catch((err) => {\n          subscr.error(err);\n        });\n    });\n  }\n\n  /**\n   * Registers a new user using registration info. Creates a user in Firebase and, if successful, stores additional\n   * user information in the database. If the registration fails to create a user or if necessary user details (like UID) are\n   * missing, it emits an error. Otherwise, it completes the registration, updates user-related observables to reflect\n   * the unauthenticated state, and emits the new user information.\n   * @param {UserRegisterInfo} info - The registration info of the user.\n   * @returns Returns an Observable that may emit null or detailed information of the newly registered user.\n   */\n  public register(info: UserRegisterInfo): Observable {\n    return new Observable((subscr) => {\n      this.firebaseSvc\n        .createUserWithEmailAndPassword(info.email, info.password)\n        .then((credentials: FirebaseUserCredential | null) => {\n          if (\n            !credentials ||\n            !credentials.user ||\n            !credentials.user.user ||\n            !credentials.user.user.uid\n          )\n            subscr.error('Cannot register');\n          if (credentials) {\n            var _info: UserInfo = { ...info };\n            _info.uuid = this.firebaseSvc.user?.uid;\n            this.postRegister(_info).subscribe((data) => {\n              this._user.next(null);\n              this._logged.next(false);\n              subscr.next(_info);\n              subscr.complete();\n            });\n          }\n        })\n        .catch((err) => {\n          subscr.error(err);\n        });\n    });\n  }\n\n  /**\n   * The function `postRegister` takes a `User` object, capitalizes the first letter of the `name`\n   * property if needed, and then creates a document in Firebase with the user information.\n   *\n   * @param info The `info` parameter in the `postRegister` function is an object of type `UserInfo` that\n   * contains the following properties:\n   * @return An Observable is being returned. The function `postRegister` takes a `User` object as a\n   * parameter, checks if the `uuid` property exists in the `info` object, and then modifies the `name`\n   * property by capitalizing the first letter if it is not already capitalized. Finally, it creates a\n   * document in the 'userInfo' collection in Firebase with the provided user information and the\n   * specified\n   */\n  private postRegister(info: UserInfo): Observable {\n    if (info.uuid) {\n      let fixedName = info.name;\n      if (fixedName[0] !== fixedName[0].toUpperCase()) {\n        fixedName = fixedName.charAt(0).toUpperCase() + fixedName.slice(1);\n      }\n      return from(\n        this.firebaseSvc.createDocumentWithId(\n          'userInfo',\n          {\n            name: fixedName,\n            surname: info.surname,\n            role: info.role,\n            username: info.username,\n            email: info.email,\n            uuid: info.uuid,\n          },\n          info.uuid\n        )\n      );\n    }\n    throw new Error('Error inesperado');\n  }\n\n  /**\n   * Fetches the current user's information from Firestore based on their UID. If the user is connected (UID exists),\n   * retrieves their detailed profile from the 'userInfo' collection. Throws an error if no user is currently connected.\n   * @returns Returns an Observable that emits the user's detailed information or throws an error if the user is not connected.\n   */\n  public me(): Observable {\n    if (this.firebaseSvc.user?.uid)\n      return from(\n        this.firebaseSvc.getDocument('userInfo', this.firebaseSvc.user.uid)\n      ).pipe(\n        map((data) => {\n          return {\n            name: data.data['name'],\n            surname: data.data['surname'],\n            picture: data.data['picture'] ?? '',\n            email: data.data['email'],\n            role: data.data['role'],\n            username: data.data['username'],\n            uuid: data.id,\n          };\n        })\n      );\n    else throw new Error('User is not connected');\n  }\n\n  /**\n   * Logs out the current user by calling the `signOut` method from FirebaseService. The method returns an Observable\n   * that resolves when the sign-out process is complete.\n   * @returns Returns an Observable indicating the completion of the logout process.\n   */\n  public logout(): Observable {\n    return from(this.firebaseSvc.signOut(false));\n  }\n\n  /**\n   * Updates the current user's information in Firestore and refreshes the local user data by fetching updated info after the update.\n   * Uses RxJS operators to chain these asynchronous tasks efficiently.\n   * @param {UserInfo} user - The new user data to be updated in Firestore.\n   * @returns Returns an Observable that emits the updated user data after both the Firestore document is updated and the local\n   * user data is refreshed.\n   */\n  public updateUser(user: UserInfo): Observable {\n    return from(\n      this.firebaseSvc.updateDocument('userInfo', user!.uuid!, user)\n    ).pipe(\n      tap(() => {\n        if (user.uuid === this._user.value?.uuid) {\n          this._user.next(user);\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseDataService.html":{"url":"classes/FirebaseDataService.html","title":"class - FirebaseDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            DataService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-data.service.ts:6\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseDataService with a reference to FirebaseService.\nThis service handles all interactions with Firebase, providing methods to get, create, update,\nand delete documents in a Firestore database.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides methods for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:101\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deletes a document from Firebase and returns the document that was deleted.\nRetrieves the document first, then deletes it from Firestore, emitting the original document upon completion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, formatted as 'collectionName/documentId'.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the document that was deleted as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:52\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a single document from Firebase based on a resource path which includes collection name and document ID.\nMaps the Firestore document to a generic type T.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, formatted as 'collectionName/documentId'.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the requested document as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Creates a new document in a specified Firebase collection and retrieves the newly created document.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the Firestore collection where the document will be created.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be stored in the new document.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the newly created document as type T, after fetching it using its ID.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:85\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Updates an existing document in Firebase and retrieves the updated document.\nAssumes the resource string is formatted as 'collectionName/documentId'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, which is split to get collection name and document ID.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new data for the document.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the updated document as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:24\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Fetches a collection of documents from Firebase and maps them to a PaginatedData structure.\nThis method is generic and can be used for any type of collection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the Firestore collection to query.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nQuery parameters (currently not used in implementation but can be utilized for filtering/sorting).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \nAn observable that emits the paginated data of the specified type.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, from, map, switchMap } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { PaginatedData } from 'src/app/core/interfaces/data';\nimport { DataService } from '../../data.service';\n\nexport class FirebaseDataService extends DataService {\n  /**\n   * Constructs the FirebaseDataService with a reference to FirebaseService.\n   * This service handles all interactions with Firebase, providing methods to get, create, update,\n   * and delete documents in a Firestore database.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(protected firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Fetches a collection of documents from Firebase and maps them to a PaginatedData structure.\n   * This method is generic and can be used for any type of collection.\n   * @param {string} resource - The name of the Firestore collection to query.\n   * @param {any} params - Query parameters (currently not used in implementation but can be utilized for filtering/sorting).\n   * @returns {Observable>} - An observable that emits the paginated data of the specified type.\n   */\n  public query(resource: string, params: any): Observable> {\n    return from(this.firebase.getDocuments(resource)).pipe(\n      map((data) => {\n        return {\n          data: data.map((doc) => {\n            return {\n              id: 0,\n              uuid: doc.id,\n              ...doc.data,\n            } as T;\n          }),\n          pagination: {\n            page: 0,\n            pageSize: data.length,\n            pageCount: 1,\n            total: data.length,\n          },\n        };\n      })\n    );\n  }\n\n  /**\n   * Retrieves a single document from Firebase based on a resource path which includes collection name and document ID.\n   * Maps the Firestore document to a generic type T.\n   * @param {string} resource - The path to the document, formatted as 'collectionName/documentId'.\n   * @returns {Observable} - An observable that emits the requested document as type T.\n   */\n  public get(resource: string): Observable {\n    return from(\n      this.firebase.getDocument(resource.split('/')[0], resource.split('/')[1])\n    ).pipe(\n      map((doc) => {\n        return {\n          id: 0,\n          uuid: doc.id,\n          ...doc.data,\n        } as T;\n      })\n    );\n  }\n\n  /**\n   * Creates a new document in a specified Firebase collection and retrieves the newly created document.\n   * @param {string} resource - The name of the Firestore collection where the document will be created.\n   * @param {any} data - The data to be stored in the new document.\n   * @returns {Observable} - An observable that emits the newly created document as type T, after fetching it using its ID.\n   */\n  public post(resource: string, data: any): Observable {\n    return from(this.firebase.createDocument(resource, data)).pipe(\n      switchMap((doc) => this.get(resource + '/' + doc))\n    );\n  }\n\n  /**\n   * Updates an existing document in Firebase and retrieves the updated document.\n   * Assumes the resource string is formatted as 'collectionName/documentId'.\n   * @param {string} resource - The path to the document, which is split to get collection name and document ID.\n   * @param {any} data - The new data for the document.\n   * @returns {Observable} - An observable that emits the updated document as type T.\n   */\n  public put(resource: string, data: any): Observable {\n    return from(\n      this.firebase.updateDocument(\n        resource.split('/')[0],\n        resource.split('/')[1],\n        data\n      )\n    ).pipe(switchMap((doc) => this.get(resource)));\n  }\n\n  /**\n   * Deletes a document from Firebase and returns the document that was deleted.\n   * Retrieves the document first, then deletes it from Firestore, emitting the original document upon completion.\n   * @param {string} resource - The path to the document, formatted as 'collectionName/documentId'.\n   * @returns {Observable} - An observable that emits the document that was deleted as type T.\n   */\n  public delete(resource: string): Observable {\n    return this.get(resource).pipe(\n      switchMap((doc) => {\n        return from(\n          this.firebase.deleteDocument(\n            resource.split('/')[0],\n            resource.split('/')[1]\n          )\n        ).pipe(map((_) => doc));\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseDocument.html":{"url":"interfaces/FirebaseDocument.html","title":"interface - FirebaseDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     DocumentData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseMediaService.html":{"url":"classes/FirebaseMediaService.html","title":"class - FirebaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MediaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-media.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseMediaService with a reference to FirebaseService.\nThis service will be used to interact with Firebase's functionalities, particularly for uploading images.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides methods for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         MediaService:32\n\n                        \n                    \n\n\n            \n                \n                        Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\nThe method is designed to handle the upload process asynchronously and emit the result as an array of Media.\nEach Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\nIf an error occurs during upload, the observable will emit an error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file data to be uploaded, typically an image file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable that emits an array containing the uploaded media information.\nIf an error occurs during upload, the observable will emit an error.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { MediaService } from '../../media.service';\n\nexport interface Media {\n  id: number;\n  url_small: string;\n  url_medium: string;\n  url_large: string;\n  url_thumbnail: string;\n}\n\nexport class FirebaseMediaService extends MediaService {\n  /**\n   * Constructs the FirebaseMediaService with a reference to FirebaseService.\n   * This service will be used to interact with Firebase's functionalities, particularly for uploading images.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(private firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\n   * The method is designed to handle the upload process asynchronously and emit the result as an array of Media.\n   * Each Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\n   *\n   * @param {Blob} blob - The file data to be uploaded, typically an image file.\n   * @returns {Observable} - An observable that emits an array containing the uploaded media information.\n   * If an error occurs during upload, the observable will emit an error.\n   */\n  public upload(blob: Blob): Observable {\n    return new Observable((obs) => {\n      this.firebase\n        .imageUpload(blob)\n        .then((data) => {\n          var imgs = [];\n          var media: any = data.file;\n          imgs.push(media);\n          obs.next(imgs);\n        })\n        .catch((error) => obs.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseStorageFile.html":{"url":"interfaces/FirebaseStorageFile.html","title":"interface - FirebaseStorageFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseStorageFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseUserCredential.html":{"url":"interfaces/FirebaseUserCredential.html","title":"interface - FirebaseUserCredential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseUserCredential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     UserCredential\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserCredential\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredIncidents$\n                            \n                            \n                                    Public\n                                firebaseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                incidentInfo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilterChange\n                            \n                            \n                                    Async\n                                openFilterModal\n                            \n                            \n                                showAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService, router: Router, firebaseService: FirebaseService, myModal: ModalController, filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService - a service for handling authentication and user authorization.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router - an instance of the Angular Router service used for navigating between different components.\n\n                                                        \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController - a service for managing modal dialogs.\n\n\n                                                        \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service for managing filter service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        incidentInfo\n                        \n                    \n                \n            \n            \n                \nincidentInfo(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:43\n                        \n                    \n\n\n            \n                \n                        Navigates to the incident data page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the incident.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:72\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nInitializes the component by showing all incidents and subscribing to changes in the filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterChange\n                        \n                    \n                \n            \n            \n                \nonFilterChange(filterValues: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:95\n                        \n                    \n\n\n            \n                \n                        Applies the specified filter settings to the incidents.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filterValues\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe filter settings to apply.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFilterModal\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFilterModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:53\n                        \n                    \n\n\n            \n                \n                        Opens the filter modal and applies the selected filter settings.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAll\n                        \n                    \n                \n            \n            \n                \nshowAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:86\n                        \n                    \n\n\n            \n                \n                        Shows all incidents without applying any filters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredIncidents$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.firebaseService.incidents$\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebaseService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:33\n                        \n                    \n\n            \n                \n                    FirebaseService - a service for handling Firebase-related operations.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { Observable, map } from 'rxjs';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { ModalCategoryComponent } from '../data/modal-category/modal-category.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { FilterMobileComponent } from './filter-mobile/filter-mobile.component';\nimport { FilterService } from 'src/app/core/services/filter/filter.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  filteredIncidents$: Observable = this.firebaseService.incidents$;\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _auth AuthService - a service for handling authentication and user authorization.\n   * @param router Router - an instance of the Angular Router service used for navigating between different components.\n   * @param firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param myModal - The ModalController - a service for managing modal dialogs.\n   * @param filterService - A service for managing filter service.\n   */\n  constructor(\n    private _auth: AuthService,\n    private router: Router,\n    public firebaseService: FirebaseService,\n    private myModal: ModalController,\n    private filterService: FilterService\n  ) {}\n\n  /**\n   * Navigates to the incident data page.\n   *\n   * @param id string - the ID of the incident.\n   */\n  incidentInfo(id: string) {\n    if (id) {\n      console.log(id);\n      this.router.navigate(['/home/incident-data', id]);\n    }\n  }\n\n  /**\n   * Opens the filter modal and applies the selected filter settings.\n   */\n  async openFilterModal() {\n    const mod = await this.myModal.create({\n      component: FilterMobileComponent,\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results.data === 'reset') {\n        this.showAll();\n      } else if (results.data) {\n        this.onFilterChange(results.data);\n      }\n    }\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Initializes the component by showing all incidents and subscribing to changes in the filter state.\n   */\n  ngOnInit() {\n    this.showAll();\n    this.filterService.getFilter().subscribe((filterValues) => {\n      if (filterValues) {\n        this.onFilterChange(filterValues);\n      } else {\n        this.showAll();\n      }\n    });\n  }\n\n  /**\n   * Shows all incidents without applying any filters.\n   */\n  showAll() {\n    this.filteredIncidents$ = this.firebaseService.incidents$;\n  }\n\n  /**\n   * Applies the specified filter settings to the incidents.\n   *\n   * @param filterValues - The filter settings to apply.\n   */\n  onFilterChange(filterValues: any) {\n    console.log('filterValues:', filterValues.controls);\n    this.filteredIncidents$ = this.firebaseService.incidents$.pipe(\n      map((incidents) =>\n        incidents.filter((incident: incidentInfo) => {\n          const userIdValue = filterValues.controls.userId.value;\n          const categoryNameValue = filterValues.controls.categoryName.value;\n          const checkedValue = filterValues.controls.checked.value;\n          const resolvedValue = filterValues.controls.resolved.value;\n\n          if (userIdValue && !categoryNameValue) {\n            return (\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue &&\n              incident.userId == userIdValue\n            );\n          } else if (userIdValue) {\n            return (\n              incident.categoryName == categoryNameValue &&\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue &&\n              incident.userId == userIdValue\n            );\n          } else if (!userIdValue && categoryNameValue) {\n            return (\n              incident.categoryName == categoryNameValue &&\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue\n            );\n          } else if (!userIdValue && !categoryNameValue) {\n            return (\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue\n            );\n          } else {\n            return incident;\n          }\n        })\n      )\n    );\n  }\n}\n\n    \n\n    \n        \n    \n    \n        {{'filter.filter' | translate}}\n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    home.page.scss\n                \n                .incidents {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n  row-gap: 20px;\n  column-gap: 30px;\n  width: 100%;\n  padding: 20px;\n\n  app-incidents-info {\n    flex: 0 0 calc(33.333% - 40px);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n  }\n\n  @media (max-width: 850px) {\n    app-incidents-info {\n      flex: 0 0 100%;\n    }\n  }\n}\n\n.mobile {\n  display: none;\n}\n\n@media (max-width: 600px) {\n  .mobile {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 95%;\n    box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n    border-radius: 0.5rem;\n    margin: 2% auto;\n    background-color: #BD1E1E;\n\n    p {\n      font-weight: bold;\n      color: #fff;\n    }\n  }\n\n  .desktop {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{\\'filter.filter\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nCategorySelectableComponent\n\nCategorySelectableComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nCategorySelectableComponent->HomePageModule\n\n\n\n\n\nCategorySelectableMobileComponent\n\nCategorySelectableMobileComponent\n\nHomePageModule -->\n\nCategorySelectableMobileComponent->HomePageModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nHomePageModule -->\n\nFilterComponent->HomePageModule\n\n\n\n\n\nFilterMobileComponent\n\nFilterMobileComponent\n\nHomePageModule -->\n\nFilterMobileComponent->HomePageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nItemCategoryComponent\n\nItemCategoryComponent\n\nHomePageModule -->\n\nItemCategoryComponent->HomePageModule\n\n\n\n\n\nItemUserComponent\n\nItemUserComponent\n\nHomePageModule -->\n\nItemUserComponent->HomePageModule\n\n\n\n\n\nUserSelectableComponent\n\nUserSelectableComponent\n\nHomePageModule -->\n\nUserSelectableComponent->HomePageModule\n\n\n\n\n\nUserSelectableMobileComponent\n\nUserSelectableMobileComponent\n\nHomePageModule -->\n\nUserSelectableMobileComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategorySelectableComponent\n                        \n                        \n                            CategorySelectableMobileComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            FilterMobileComponent\n                        \n                        \n                            HomePage\n                        \n                        \n                            ItemCategoryComponent\n                        \n                        \n                            ItemUserComponent\n                        \n                        \n                            UserSelectableComponent\n                        \n                        \n                            UserSelectableMobileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CategorySelectableComponent } from './category-selectable/category-selectable.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { UserSelectableComponent } from './user-selectable/user-selectable.component';\nimport { ItemCategoryComponent } from './item-category/item-category.component';\nimport { ItemUserComponent } from './item-user/item-user.component';\nimport { FilterMobileComponent } from './filter-mobile/filter-mobile.component';\nimport { UserSelectableMobileComponent } from './user-selectable-mobile/user-selectable-mobile.component';\nimport { CategorySelectableMobileComponent } from './category-selectable-mobile/category-selectable-mobile.component';\n\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    SharedModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    MatCheckboxModule\n  ],\n  declarations: [\n    HomePage,\n    CategorySelectableComponent,\n    ItemCategoryComponent,\n    ItemUserComponent,\n    FilterComponent,\n    UserSelectableComponent,\n    FilterMobileComponent,\n    UserSelectableMobileComponent,\n    CategorySelectableMobileComponent\n  ]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientProvider.html":{"url":"injectables/HttpClientProvider.html","title":"injectable - HttpClientProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                getImage\n                            \n                            \n                                    Public\n                                    Abstract\n                                patch\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:84\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        delete\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        get\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:16\n                        \n                    \n\n\n            \n                \n                        getImage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:69\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        patch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:37\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        post\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:53\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        put\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:94\n                        \n                    \n\n\n            \n                \n                        Sets the trust mode for the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n// rxjs\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport abstract class HttpClientProvider {\n  /**\n   * getImage\n   *\n   * @param url http request url\n   * @param options http request options\n   * @returns observable with http response\n   */\n  public abstract getImage(url: string): Observable;\n\n  /**\n   * get\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public abstract get(url: string, params: any, headers: any): Observable;\n\n  /**\n   * post\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract post(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * put\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract put(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * patch\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract patch(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * delete\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public abstract delete(\n    url: string,\n    params: any,\n    headers: any\n  ): Observable;\n\n  /**\n   * Sets the trust mode for the server\n   * @param mode server trust mode\n   */\n  public abstract setServerTrustMode(\n    mode: 'default' | 'nocheck' | 'pinned' | 'legacy'\n  ): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientWebProvider.html":{"url":"injectables/HttpClientWebProvider.html","title":"injectable - HttpClientWebProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientWebProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client-web.provider.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            HttpClientProvider\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBody\n                            \n                            \n                                    Private\n                                createHeaders\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getImage\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/http/http-client-web.provider.ts:12\n                            \n                        \n\n                \n                    \n                            provider constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                angular http client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBody\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBody(body: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:170\n                        \n                    \n\n\n            \n                \n                        create http request body\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any | HttpParams\n\n                        \n                            \n                                http request body\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    createHeaders(headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:153\n                        \n                    \n\n\n            \n                \n                        create http headers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                angular http headers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:126\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        delete\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:43\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        get\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:29\n\n                        \n                    \n\n\n            \n                \n                        getImage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:103\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        patch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:63\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        post\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:83\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        put\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:142\n\n                        \n                    \n\n\n            \n                \n                        Sets the trust mode for the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// rxjs\nimport { Observable } from 'rxjs';\n\n// providers\nimport { HttpClientProvider } from './http-client.provider';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpClientWebProvider extends HttpClientProvider {\n  /**\n   * provider constructor\n   *\n   * @param httpClient angular http client\n   */\n  constructor(private readonly httpClient: HttpClient) {\n    super();\n  }\n\n  /**\n   * getImage\n   *\n   * @param url http request url\n   * @param options http request options\n   * @returns observable with http response\n   */\n  public getImage(url: string): Observable {\n    return this.httpClient.get(url, {\n      responseType: 'blob',\n    });\n  }\n\n  /**\n   * get\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public get(\n    url: string,\n    params: any = {},\n    headers: any = {}\n  ): Observable {\n    return this.httpClient.get(url, {\n      params: new HttpParams({ fromObject: params }),\n      headers: this.createHeaders(headers),\n    });\n  }\n\n  /**\n   * post\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public post(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    return this.httpClient.post(url, this.createBody(body, urlEncoded), {\n      headers: this.createHeaders(headers, urlEncoded),\n    });\n  }\n\n  /**\n   * put\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public put(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    return this.httpClient.put(url, this.createBody(body, urlEncoded), {\n      headers: this.createHeaders(headers, urlEncoded),\n    });\n  }\n\n  /**\n   * patch\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public patch(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    if (body instanceof FormData) {\n      return this.httpClient.patch(url, body, { headers: headers });\n    } else {\n      return this.httpClient.patch(url, this.createBody(body, urlEncoded), {\n        headers: this.createHeaders(headers, urlEncoded),\n      });\n    }\n  }\n\n  /**\n   * delete\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public delete(\n    url: string,\n    params: any = {},\n    headers: any = {}\n  ): Observable {\n    return this.httpClient.delete(url, {\n      params: new HttpParams({ fromObject: params }),\n      headers: this.createHeaders(headers),\n    });\n  }\n\n  /**\n   * Sets the trust mode for the server\n   *\n   * @param mode server trust mode\n   */\n  public setServerTrustMode(\n    mode: 'default' | 'nocheck' | 'pinned' | 'legacy'\n  ): void {}\n\n  /**\n   * create http headers\n   *\n   * @param headers http headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns angular http headers\n   */\n  private createHeaders(\n    headers: any,\n    urlEncoded: boolean = false\n  ): HttpHeaders {\n    var _headers = new HttpHeaders(headers);\n    if (urlEncoded)\n      _headers.set('Accept', ' application/x-www-form-urlencoded');\n    return _headers;\n  }\n\n  /**\n   * create http request body\n   *\n   * @param body http request body\n   * @param urlEncoded http request as url encoded content-type\n   * @returns http request body\n   */\n  private createBody(body: any, urlEncoded: boolean): any | HttpParams {\n    return urlEncoded ? new HttpParams({ fromObject: body }) : body;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentDataPage.html":{"url":"components/IncidentDataPage.html","title":"component - IncidentDataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentDataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/incident-data/incident-data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-incident-data\n            \n\n\n\n            \n                styleUrls\n                ./incident-data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./incident-data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                incident\n                            \n                            \n                                incidentId\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                setResolvedIncident\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, incidentsService: IncidentsService, translate: CustomTranslateService, messageService: MessageService, dialog: MatDialog, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute - a service provided by Angular that gives access to information about a route associated with a component loaded in an outlet.\n\n                                                        \n                                                \n                                                \n                                                        incidentsService\n                                                  \n                                                        \n                                                                        IncidentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                IncidentsService - a service for managing incidents.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MessageService - a service for displaying messages or notifications to the user within the application.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog - a service for displaying dialog boxes.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:136\n                        \n                    \n\n\n            \n                \n                        The goBack function navigates to the home route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:44\n                        \n                    \n\n\n            \n                \n                        Initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setResolvedIncident\n                        \n                    \n                \n            \n            \n                \n                        \n                    setResolvedIncident(incident: incidentInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:68\n                        \n                    \n\n\n            \n                \n                        Sets an incident as resolved.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incident\n                                            \n                                                            incidentInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    incidentInfo - the incident to be marked as resolved.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:119\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:99\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:37\n                        \n                    \n\n            \n                \n                    MatDialog - a service for displaying dialog boxes.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incident\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incidentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        router\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Router\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:38\n                        \n                    \n\n            \n                \n                    The `router` parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { IncidentsService } from 'src/app/core/services/api/incidents.service';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\nimport { MessageService } from 'primeng/api';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-incident-data',\n  templateUrl: './incident-data.page.html',\n  styleUrls: ['./incident-data.page.scss'],\n  providers: [MessageService],\n})\nexport class IncidentDataPage implements OnInit {\n  incidentId: string | null = '';\n  incident: any | undefined;\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param route ActivatedRoute - a service provided by Angular that gives access to information about a route associated with a component loaded in an outlet.\n   * @param incidentsService IncidentsService - a service for managing incidents.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   * @param messageService MessageService - a service for displaying messages or notifications to the user within the application.\n   * @param dialog MatDialog - a service for displaying dialog boxes.\n   * @param router The `router` parameter in the constructor is an instance of the Angular Router\n   * service. It is used for navigating between different views in the Angular application based on the\n   * specified routes.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private incidentsService: IncidentsService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    public dialog: MatDialog,\n    public router: Router\n  ) {}\n\n  /**\n   * Initializes the component.\n   */\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.incidentId = params.get('id');\n      if (this.incidentId) {\n        this.incidentsService.getIncidentById(this.incidentId).subscribe({\n          next: (incident) => {\n            if (incident) {\n              this.incident = incident;\n              if (!incident.checked) {\n                incident.checked = true;\n                this.incidentsService.updateIncident(incident);\n              }\n            }\n          },\n        });\n      }\n    });\n  }\n\n  /**\n   * Sets an incident as resolved.\n   *\n   * @param incident incidentInfo - the incident to be marked as resolved.\n   */\n  async setResolvedIncident(incident: incidentInfo) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      data: { message: 'resolved' },\n    });\n\n    dialogRef.afterClosed().subscribe(async (result) => {\n      if (result) {\n        incident.resolved = true;\n        this.incident = incident;\n        this.incidentsService.updateIncident(incident).subscribe({\n          next: async _ => {\n            this.showSuccess('good');\n            await Haptics.impact({ style: ImpactStyle.Medium });\n          },\n          error: async error => {\n            this.incident.resolved = false;\n            this.showError('error');\n            await Haptics.impact({ style: ImpactStyle.Heavy });\n          }\n        });\n      }\n    });\n  }\n  \n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'success',\n          detail: text,\n        });\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n      },\n    });\n  }\n\n  /**\n   * The `goBack` function navigates to the home route using the Angular router.\n   */\n  goBack() {\n    this.router.navigate(['/home'])\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      \n    \n\n    \n      \n\n        {{incident.title}}\n\n        {{incident.categoryName}}\n\n        {{incident.userName}}\n\n        {{incident.description}}\n\n        {{\"incidents.resolved\" | translate}}\n       \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./incident-data.page.scss\n                \n                .back {\n    width: auto;\n    margin: 2%;\n\n    ion-icon {\n        cursor: pointer;\n    }\n}\n\n.incident {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--text {\n        margin: 0;\n    }\n\n    &--description {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n    \n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{incident.title}}        {{incident.categoryName}}        {{incident.userName}}        {{incident.description}}        {{\"incidents.resolved\" | translate}}               '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentDataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IncidentDataPageModule.html":{"url":"modules/IncidentDataPageModule.html","title":"module - IncidentDataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    IncidentDataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IncidentDataPageModule\n\n\n\ncluster_IncidentDataPageModule_declarations\n\n\n\ncluster_IncidentDataPageModule_imports\n\n\n\n\nIncidentDataPage\n\nIncidentDataPage\n\n\n\nIncidentDataPageModule\n\nIncidentDataPageModule\n\nIncidentDataPageModule -->\n\nIncidentDataPage->IncidentDataPageModule\n\n\n\n\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageModule -->\n\nIncidentDataPageRoutingModule->IncidentDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/incident-data/incident-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IncidentDataPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IncidentDataPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IncidentDataPageRoutingModule } from './incident-data-routing.module';\n\nimport { IncidentDataPage } from './incident-data.page';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IncidentDataPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n  ],\n  declarations: [IncidentDataPage]\n})\nexport class IncidentDataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IncidentDataPageRoutingModule.html":{"url":"modules/IncidentDataPageRoutingModule.html","title":"module - IncidentDataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    IncidentDataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/incident-data/incident-data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IncidentDataPage } from './incident-data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IncidentDataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IncidentDataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentsCircleGraphicComponent.html":{"url":"components/IncidentsCircleGraphicComponent.html","title":"component - IncidentsCircleGraphicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentsCircleGraphicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-incidents-circle-graphic\n            \n\n\n\n            \n                styleUrls\n                ./incidents-circle-graphic.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./incidents-circle-graphic.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Initializes the component and fetches user data from Firebase to generate a chart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map, switchMap, forkJoin } from 'rxjs';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-incidents-circle-graphic',\n  templateUrl: './incidents-circle-graphic.component.html',\n  styleUrls: ['./incidents-circle-graphic.component.scss'],\n})\nexport class IncidentsCircleGraphicComponent implements OnInit {\n  data: any;\n  options: any;\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private translate: CustomTranslateService\n  ) {}\n\n  /**\n   * Initializes the component and fetches user data from Firebase to generate a chart.\n   */\n  ngOnInit() {\n    this._firebaseService.incidents$\n      .pipe(\n        map((incidents) => {\n          const categoryCounts = incidents.reduce((acc: any, incident: any) => {\n            const categoryName = incident.categoryName;\n            acc[categoryName] = (acc[categoryName] || 0) + 1;\n            return acc;\n          }, {});\n\n          return {\n            labels: Object.keys(categoryCounts),\n            datasets: [\n              {\n                data: Object.values(categoryCounts),\n                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n                hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n              },\n            ],\n          };\n        })\n      )\n      .subscribe((chartData) => {\n        this.data = chartData;\n        this.options = {\n          plugins: {\n            legend: {\n              labels: {\n                color: '#495057',\n              },\n            },\n          },\n        };\n      });\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./incidents-circle-graphic.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentsCircleGraphicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentsInfoComponent.html":{"url":"components/IncidentsInfoComponent.html","title":"component - IncidentsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/incidents-info/incidents-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-incidents-info\n            \n\n\n\n            \n                styleUrls\n                ./incidents-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./incidents-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formattedDay\n                            \n                            \n                                formattedTime\n                            \n                            \n                                isScreenSmall\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onIncidentClick\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                incident\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onIncidentClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:33\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\nInitializes the component by checking the initial screen size.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                UsersService - a service for managing user-related operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        incident\n                    \n                \n                \n                    \n                        Type :         incidentInfo | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:23\n                            \n                        \n                \n                    \n                        Represents the input property for passing incident information to the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onIncidentClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:28\n                            \n                        \n                \n                    \n                        Represents the output property for emitting events when an incident is clicked.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onIncidentClick\n                        \n                    \n                \n            \n            \n                \nonIncidentClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Handles the click event on the incident.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event - the click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formattedDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formattedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { UsersService } from 'src/app/core/services/api/users.service';\n\n@Component({\n  selector: 'app-incidents-info',\n  templateUrl: './incidents-info.component.html',\n  styleUrls: ['./incidents-info.component.scss'],\n})\nexport class IncidentsInfoComponent implements OnInit {\n  isScreenSmall: boolean = false;\n\n  /**\n   * Represents the input property for passing incident information to the component.\n   */\n  @Input() incident: incidentInfo | undefined;\n\n  /**\n   * Represents the output property for emitting events when an incident is clicked.\n   */\n  @Output() onIncidentClicked: EventEmitter =\n    new EventEmitter();\n\n  formattedTime: string | undefined;\n  formattedDay: string | undefined;\n  userName: string | undefined;\n\n  /**\n   * Constructs a component constructor function.\n   * Initializes the component by checking the initial screen size.\n   *\n   * @param userService UsersService - a service for managing user-related operations.\n   */\n\n  constructor(private userService: UsersService) {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  /**\n   * Initializes the component.\n   */\n\n  ngOnInit() {\n    if (this.incident) {\n      if (typeof this.incident.date === 'string') {\n        const timestamp = new Date(this.incident.date);\n        this.formattedDay = timestamp.toLocaleDateString();\n        this.formattedTime = timestamp.toLocaleTimeString();\n      } else {\n        const timestamp = this.incident.date;\n        const date = timestamp.toDate();\n        this.formattedDay = date.toLocaleDateString();\n        this.formattedTime = date.toLocaleTimeString();\n      }\n      this.userService.getUserById(this.incident.userId).subscribe((user) => {\n        this.userName = user ? user.name : '';\n      });\n    }\n  }\n\n  /**\n   * Handles the click event on the incident.\n   *\n   * @param event Event - the click event.\n   */\n  onIncidentClick(event: Event) {\n    this.onIncidentClicked.emit(this.incident?.uuid);\n    event.stopPropagation();\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{incident?.title}}\n    {{incident?.title | shortenText}}\n    \n      {{'incidents.unresolved' | translate}}\n    \n  \n\n  \n    \n      \n      \n        {{'incidents.day' |translate}}: {{formattedDay}}\n      \n    \n    \n      \n      \n        {{'incidents.hour' |translate}}: {{formattedTime}}\n      \n    \n    \n      \n      \n        {{'incidents.user' |translate}}: {{userName ? userName : ('incidents.anonymous' | translate)}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./incidents-info.component.scss\n                \n                  .card {\n    padding: 15px;\n    border-radius: 0.5rem;\n    box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n    width: calc((100vw / 3) - (30px * 2) + 10px);\n    height: 190px;\n\n    &--header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      &__title {\n        font-weight: bold;\n      }\n\n      &__status {\n        background-color: #bd1e1e;\n        padding: 2% 5%;\n        border-radius: 2em;\n\n        span {\n          color: #ffffff;\n          font-weight: bold;\n        }\n      }\n    }\n\n    ion-icon {\n      color: #bd1e1e;\n    }\n\n    &--info {\n      margin-top: 5%;\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n\n      span {\n        margin-left: 3%;\n        font-weight: bold;\n      }\n    }\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    @media (max-width: 850px) {\n      width: 100% !important;\n\n      &--header {\n        &__status {\n          margin-left: 1rem;\n        }\n      }\n\n      &--info {\n        margin-top: 0;\n      }\n    }\n  }\n\n  .noCheck {\n    background-color: #BBBBBB;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{incident?.title}}    {{incident?.title | shortenText}}          {{\\'incidents.unresolved\\' | translate}}                                {{\\'incidents.day\\' |translate}}: {{formattedDay}}                                  {{\\'incidents.hour\\' |translate}}: {{formattedTime}}                                  {{\\'incidents.user\\' |translate}}: {{userName ? userName : (\\'incidents.anonymous\\' | translate)}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IncidentsService.html":{"url":"injectables/IncidentsService.html","title":"injectable - IncidentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IncidentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/incidents.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIncidentById\n                            \n                            \n                                updateIncident\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/incidents.service.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor function initializes a private firebaseService property using dependency\ninjection.\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The firebaseService parameter is an instance of the FirebaseService\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIncidentById\n                        \n                    \n                \n            \n            \n                \ngetIncidentById(incidentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/incidents.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Retrieves an incident by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incidentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the incident to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the incident information if found, otherwise undefined.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIncident\n                        \n                    \n                \n            \n            \n                \nupdateIncident(incident: incidentInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/incidents.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Updates an incident.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incident\n                                            \n                                                            incidentInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    incidentInfo - the updated incident information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the incident is updated successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { incidentInfo } from '../../interfaces/incidents-info';\nimport { Observable, catchError, from, map, of, take, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IncidentsService {\n  /**\n   * The constructor function initializes a private firebaseService property using dependency\n   * injection.\n   *\n   * @param firebaseService The `firebaseService` parameter is an instance of the `FirebaseService`\n   * class that is being injected into the constructor using Angular's dependency injection mechanism.\n   * This allows the component or service to have access to the functionality provided by the\n   * `FirebaseService` class.\n   */\n  constructor(private firebaseService: FirebaseService) {}\n\n  /**\n   * Retrieves an incident by its ID.\n   *\n   * @param incidentId string - the ID of the incident to retrieve.\n   * @returns An Observable that emits the incident information if found, otherwise undefined.\n   */\n  getIncidentById(incidentId: string): Observable {\n    return this.firebaseService.incidents$.pipe(\n      take(1),\n      map((incident) =>\n        incident.find((incident) => incident.uuid === incidentId)\n      )\n    );\n  }\n\n  /**\n   * Updates an incident.\n   *\n   * @param incident incidentInfo - the updated incident information.\n   * @returns An Observable that emits a success message if the incident is updated successfully, otherwise emits an error message.\n   */\n  updateIncident(incident: incidentInfo): Observable {\n    return from(this.firebaseService.updateDocument('incidentsInfo', incident.uuid, incident)).pipe(\n      map(response => ({ success: true, data: response })),\n      catchError((err) =>\n        throwError(\n          () =>\n            new Error(\n              `Error: ${err.message}`\n            )\n        ))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemCategoryComponent.html":{"url":"components/ItemCategoryComponent.html","title":"component - ItemCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ItemCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/item-category/item-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-category\n            \n\n\n\n            \n                styleUrls\n                ./item-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    item\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/item-category/item-category.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:16\n                            \n                        \n                \n                    \n                        Setter method for setting the item data.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:23\n                            \n                        \n                \n                    \n                        Output property for emitting a click event.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-category/item-category.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-category/item-category.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Event handler for when the user clicks on the item.\nEmits a click event with the item data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/item-category/item-category.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n\n                \n                    \n                        getitem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:30\n                                \n                            \n                    \n                        \n                                Getter method for retrieving the item data.\n\n\n                                \n                                \n                                \n                                    Returns :     any | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setitem(_item: any | undefined)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:16\n                                \n                            \n                    \n                        \n                                Setter method for setting the item data.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _item\n                                                    \n                                                            \n                                                                        any | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe item data to be set.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-item-category',\n  templateUrl: './item-category.component.html',\n  styleUrls: ['./item-category.component.scss'],\n})\nexport class ItemCategoryComponent implements OnInit {\n  private _item: any | undefined;\n\n  /**\n   * Setter method for setting the item data.\n   *\n   * @param _item - The item data to be set.\n   */\n  @Input('item') set item(_item: any | undefined) {\n    this._item = _item;\n  }\n\n  /**\n   * Output property for emitting a click event.\n   */\n  @Output('clicked') clicked = new EventEmitter();\n\n  /**\n   * Getter method for retrieving the item data.\n   *\n   * @returns The item data.\n   */\n  get item(): any | undefined {\n    return this._item;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for when the user clicks on the item.\n   * Emits a click event with the item data.\n   */\n  onUserClicked() {\n    this.clicked.emit(this._item);\n  }\n}\n\n    \n\n    \n        \n  {{item?.name}}\n\n    \n\n    \n                \n                    ./item-category.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{item?.name}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemUserComponent.html":{"url":"components/ItemUserComponent.html","title":"component - ItemUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ItemUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/item-user/item-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-user\n            \n\n\n\n            \n                styleUrls\n                ./item-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    item\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/item-user/item-user.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:16\n                            \n                        \n                \n                    \n                        Input property to set the item data.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:23\n                            \n                        \n                \n                    \n                        Output property to emit a click event.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-user/item-user.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-user/item-user.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Event handler for when the user clicks on the item.\nEmits a click event with the item data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/item-user/item-user.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n\n                \n                    \n                        getitem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:30\n                                \n                            \n                    \n                        \n                                Getter method to retrieve the item data.\n\n\n                                \n                                \n                                \n                                    Returns :     any | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setitem(_item: any | undefined)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:16\n                                \n                            \n                    \n                        \n                                Input property to set the item data.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _item\n                                                    \n                                                            \n                                                                        any | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe item data to be set.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-item-user',\n  templateUrl: './item-user.component.html',\n  styleUrls: ['./item-user.component.scss'],\n})\nexport class ItemUserComponent implements OnInit {\n  private _item: any | undefined;\n\n  /**\n   * Input property to set the item data.\n   *\n   * @param _item - The item data to be set.\n   */\n  @Input('item') set item(_item: any | undefined) {\n    this._item = _item;\n  }\n\n  /**\n   * Output property to emit a click event.\n   */\n  @Output('clicked') clicked = new EventEmitter();\n\n  /**\n   * Getter method to retrieve the item data.\n   *\n   * @returns The item data.\n   */\n  get item(): any | undefined {\n    return this._item;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for when the user clicks on the item.\n   * Emits a click event with the item data.\n   */\n  onUserClicked() {\n    this.clicked.emit(this._item);\n  }\n}\n\n    \n\n    \n        \n  {{item?.name}}\n\n    \n\n    \n                \n                    ./item-user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{item?.name}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalService.html":{"url":"injectables/LocalService.html","title":"injectable - LocalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/translate/local.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browserLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lang: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/translate/local.service.ts:8\n                            \n                        \n\n                \n                    \n                            The constructor function sets the browser language based on the value returned by\nwindow.navigator.language.\nproperty of type CustomTranslateService. It is used to handle language translation within the\ncomponent or service where this constructor is defined.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe lang parameter in the constructor is a private\nproperty of type CustomTranslateService. It is used to handle language translation within the\ncomponent or service where this constructor is defined.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        browserLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/local.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { CustomTranslateService } from './translate.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalService {\n  browserLanguage: string = '';\n\n  /**\n   * The constructor function sets the browser language based on the value returned by\n   * window.navigator.language.\n   * @param {CustomTranslateService} lang - The `lang` parameter in the constructor is a private\n   * property of type `CustomTranslateService`. It is used to handle language translation within the\n   * component or service where this constructor is defined.\n   */\n  constructor(private lang: CustomTranslateService) {\n    // window.navigator.language returns 'es-ES', we only need 'es'\n    this.browserLanguage = window.navigator.language.split('-')[0];\n    this.lang.use(this.browserLanguage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/login-form/login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n\n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            Constructs the LoginFormComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder service for building the form.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/access/login-form/login-form.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/login-form/login-form.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/login-form/login-form.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Event handler for form submission.\nEmits the user credentials through the onsubmit event emitter.\nResets the form after submission.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/login-form/login-form.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserCredentials } from 'src/app/core/interfaces/user-info';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent implements OnInit {\n  form: FormGroup;\n  @Output() onsubmit = new EventEmitter();\n\n  /**\n   * Constructs the LoginFormComponent.\n   * @param {FormBuilder} formBuilder - FormBuilder service for building the form.\n   */\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for form submission.\n   * Emits the user credentials through the onsubmit event emitter.\n   * Resets the form after submission.\n   */\n  onSub() {\n    this.onsubmit.emit(this.form?.value);\n    this.form.reset();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{'forms.email' | translate}}\n      \n      {{'errors.valid' | translate}}\n    \n  \n    \n      {{'forms.password' | translate}}\n      \n      {{'errors.valid' | translate}}\n    \n  \n    {{\"forms.logIn\" | translate}}\n  \n  \n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                div {\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    \n    \n    .mat-form-field {\n      width: 350px;\n      margin-bottom: 2rem;\n    }\n\n    button {\n      padding: 1rem;\n      border: none;\n      border-radius: 4px;\n      background-color: #0F212D;\n      color: white;\n      font-weight: bold;\n      cursor: pointer;\n      \n      &:hover {\n        background-color: #1b3e56;\n      }\n    \n      &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{\\'forms.email\\' | translate}}            {{\\'errors.valid\\' | translate}}                {{\\'forms.password\\' | translate}}            {{\\'errors.valid\\' | translate}}          {{\"forms.logIn\" | translate}}    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url_large\n                                        \n                                \n                                \n                                        \n                                            url_medium\n                                        \n                                \n                                \n                                        \n                                            url_small\n                                        \n                                \n                                \n                                        \n                                            url_thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_large:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_medium:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_small:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { MediaService } from '../../media.service';\n\nexport interface Media {\n  id: number;\n  url_small: string;\n  url_medium: string;\n  url_large: string;\n  url_thumbnail: string;\n}\n\nexport class FirebaseMediaService extends MediaService {\n  /**\n   * Constructs the FirebaseMediaService with a reference to FirebaseService.\n   * This service will be used to interact with Firebase's functionalities, particularly for uploading images.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(private firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\n   * The method is designed to handle the upload process asynchronously and emit the result as an array of Media.\n   * Each Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\n   *\n   * @param {Blob} blob - The file data to be uploaded, typically an image file.\n   * @returns {Observable} - An observable that emits an array containing the uploaded media information.\n   * If an error occurs during upload, the observable will emit an error.\n   */\n  public upload(blob: Blob): Observable {\n    return new Observable((obs) => {\n      this.firebase\n        .imageUpload(blob)\n        .then((data) => {\n          var imgs = [];\n          var media: any = data.file;\n          imgs.push(media);\n          obs.next(imgs);\n        })\n        .catch((error) => obs.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/media.service.ts:13\n                        \n                    \n\n\n            \n                \n                        Uploads a media blob.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe blob representing the media to upload.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the upload process.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class MediaService {\n  /**\n   * Uploads a media blob.\n   * @param {Blob} blob - The blob representing the media to upload.\n   * @returns {Observable} Observable emitting the result of the upload process.\n   */\n  public abstract upload(blob: Blob): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalCategoryComponent.html":{"url":"components/ModalCategoryComponent.html","title":"component - ModalCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/data/modal-category/modal-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-category\n            \n\n\n\n            \n                styleUrls\n                ./modal-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                mod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryInfo\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    categoryInfo\n                                \n                                \n                                    mode\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:37\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder - a service for creating and managing Angular forms.\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ModalController - a service for managing modal dialogs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryInfo\n                    \n                \n                \n                    \n                        Type :         CategoryInfo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:20\n                            \n                        \n                \n                    \n                        Sets the category information for the form.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:33\n                            \n                        \n                \n                    \n                        Sets the mode for the component.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Handler for cancel action.\nDismisses the modal without passing any data to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Handler for form submission.\nDismisses the modal and passes the updated user information to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        categoryInfo\n                    \n                \n\n\n                \n                    \n                        setcategoryInfo(category: CategoryInfo)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:20\n                                \n                            \n                    \n                        \n                                Sets the category information for the form.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                            \n                                                                            CategoryInfo\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    CategoryInfo - the category information to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n\n\n                \n                    \n                        setmode(m: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:33\n                                \n                            \n                    \n                        \n                                Sets the mode for the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            m\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    string - the mode to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\n\n@Component({\n  selector: 'app-modal-category',\n  templateUrl: './modal-category.component.html',\n  styleUrls: ['./modal-category.component.scss'],\n})\nexport class ModalCategoryComponent implements OnInit {\n  form: FormGroup;\n  mod: string = '';\n  \n  /**\n   * Sets the category information for the form.\n   *\n   * @param category CategoryInfo - the category information to be set.\n   */\n  @Input() set categoryInfo(category: CategoryInfo) {\n    if (category) {\n      this.form.controls['name'].setValue(category.name);\n      this.form.controls['description'].setValue(category.description);\n      this.form.controls['uuid'].setValue(category.uuid);\n    }\n  }\n\n  /**\n   * Sets the mode for the component.\n   *\n   * @param m string - the mode to be set.\n   */\n  @Input() set mode(m: string) {\n    if (m) {\n      this.mod = m;\n    }\n  }\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param formBuilder FormBuilder - a service for creating and managing Angular forms.\n   * @param modal ModalController - a service for managing modal dialogs.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      uuid: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Handler for form submission.\n   * Dismisses the modal and passes the updated user information to the parent component.\n   */\n  onSub() {\n    this.modal.dismiss(this.form.value);\n  }\n\n  /**\n   * Handler for cancel action.\n   * Dismisses the modal without passing any data to the parent component.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n    \n      {{'forms.update' | translate}}\n    \n    \n      {{'data.create' | translate}}\n    \n  \n\n\n\n  \n\n    \n      \n        {{ 'forms.name' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n    \n      \n        {{ 'forms.description' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      {{'forms.update' | translate}}\n      {{'data.create' | translate}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./modal-category.component.scss\n                \n                ion-icon {\n    color: #0f212d;\n  }\n  .form {\n    display: flex;\n    flex-direction: column;\n    padding: 5%;\n  \n    button {\n      padding: 1rem;\n      border: none;\n      border-radius: 4px;\n      background-color: #0f212d;\n      color: white;\n      font-weight: bold;\n      cursor: pointer;\n  \n      &:hover {\n        background-color: #1b3e56;\n      }\n  \n      &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n      }\n    }\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\\'forms.update\\' | translate}}              {{\\'data.create\\' | translate}}                          {{ \\'forms.name\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                                {{ \\'forms.description\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                    {{\\'forms.update\\' | translate}}      {{\\'data.create\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedData.html":{"url":"interfaces/PaginatedData.html","title":"interface - PaginatedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         Pagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pagination\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pageCount\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                passwordMatch\n                            \n                            \n                                    Static\n                                passwordProto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordMatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordMatch(passwordControlName: string, confirmControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:35\n                        \n                    \n\n\n            \n                \n                        Validates if password and confirm password match.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                passwordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the password control.\n\n\n                                            \n                                        \n                                        \n                                                confirmControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the confirm password control.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for password match validation.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordProto\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordProto(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:13\n                        \n                    \n\n\n            \n                \n                        Validates password according to a specified pattern.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe name of the control to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for password validation.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbstractControl,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\nexport class PasswordValidation {\n  /**\n   * Validates password according to a specified pattern.\n   * @param {string} controlName - The name of the control to validate.\n   * @returns {ValidatorFn} Validator function for password validation.\n   */\n  public static passwordProto(controlName: string = ''): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      let password = '';\n      if (control instanceof FormControl) password = control?.value;\n      else password = control.get(controlName)?.value;\n      if (\n        password &&\n        !password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,}$/)\n      ) {\n        return { passwordProto: true };\n      } else {\n        return null;\n      }\n    };\n  }\n\n  /**\n   * Validates if password and confirm password match.\n   * @param {string} passwordControlName - The name of the password control.\n   * @param {string} confirmControlName - The name of the confirm password control.\n   * @returns {ValidatorFn} Validator function for password match validation.\n   */\n  public static passwordMatch(\n    passwordControlName: string,\n    confirmControlName: string\n  ): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const password = control.get(passwordControlName)?.value;\n      const confirmPassword = control.get(confirmControlName)?.value;\n\n      if (password != confirmPassword) {\n        let errors = control?.errors;\n        if (errors && typeof errors === 'object') {\n          Object.assign(errors, {\n            passwordMatch: true,\n          });\n        } else {\n          errors = {\n            passwordMatch: true,\n          };\n        }\n        return errors;\n      } else {\n        let errors = control?.errors;\n        if (errors && typeof errors === 'object') {\n          if (errors['passwordMatch']) delete errors['passwordMatch'];\n        }\n        return control.errors;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Photo.html":{"url":"interfaces/Photo.html","title":"interface - Photo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url_large\n                                        \n                                \n                                \n                                        \n                                            url_medium\n                                        \n                                \n                                \n                                        \n                                            url_small\n                                        \n                                \n                                \n                                        \n                                            url_thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_large:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_medium:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_small:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PictureSelectableComponent.html":{"url":"components/PictureSelectableComponent.html","title":"component - PictureSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PictureSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PICTURE_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-picture-selectable\n            \n\n\n\n            \n                styleUrls\n                ./picture-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./picture-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _picture\n                            \n                            \n                                hasValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                picture$\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePicture\n                            \n                            \n                                close\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePicture\n                            \n                            \n                                onDeletePicture\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pictureModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of PictureSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pictureModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for managing modal windows.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePicture\n                        \n                    \n                \n            \n            \n                \nchangePicture(picture: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Changes the selected picture.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new picture value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Closes the picture modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:35\n                        \n                    \n\n\n            \n                \n                        This method is called when the component is being destroyed. It ensures\nthat any subscriptions to the BehaviorSubject for the selected picture are properly\nterminated by completing the BehaviorSubject, preventing potential memory leaks.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangePicture\n                        \n                    \n                \n            \n            \n                \nonChangePicture(event: Event, fileLoader: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Event handler for changing the picture by uploading a file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event triggering the picture change.\n\n\n                                            \n                                        \n                                        \n                                                fileLoader\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HTML input element for file uploading.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeletePicture\n                        \n                    \n                \n            \n            \n                \nonDeletePicture(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Event handler for deleting the selected picture.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event triggering the picture deletion.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating if the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _picture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        picture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._picture.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:44\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const PICTURE_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-picture-selectable',\n  templateUrl: './picture-selectable.component.html',\n  styleUrls: ['./picture-selectable.component.scss'],\n  providers: [PICTURE_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class PictureSelectableComponent implements OnInit {\n  private _picture = new BehaviorSubject('');\n  public picture$ = this._picture.asObservable();\n  isDisabled: boolean = false;\n  hasValue: boolean = false;\n\n  /**\n   * Creates an instance of PictureSelectableComponent.\n   * @param pictureModal - The ModalController for managing modal windows.\n   */\n  constructor(private pictureModal: ModalController) {}\n\n  /**\n   * This method is called when the component is being destroyed. It ensures\n   * that any subscriptions to the BehaviorSubject for the selected picture are properly\n   * terminated by completing the BehaviorSubject, preventing potential memory leaks.\n   */\n  ngOnDestroy(): void {\n    this._picture.complete();\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Writes a new value to the component.\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.hasValue = true;\n      this._picture.next(obj);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   * @param isDisabled - Boolean value indicating if the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  /**\n   * Changes the selected picture.\n   * @param picture - The new picture value.\n   */\n  changePicture(picture: string) {\n    this.hasValue = picture != '';\n    this._picture.next(picture);\n    this.propagateChange(picture);\n  }\n\n  /**\n   * Event handler for changing the picture by uploading a file.\n   * @param event - The event triggering the picture change.\n   * @param fileLoader - The HTML input element for file uploading.\n   */\n  onChangePicture(event: Event, fileLoader: HTMLInputElement) {\n    event.stopPropagation();\n    fileLoader.onchange = () => {\n      if (fileLoader.files && fileLoader.files?.length > 0) {\n        var file = fileLoader.files[0];\n        var reader = new FileReader();\n        reader.onload = () => {\n          this.changePicture(reader.result as string);\n        };\n        reader.onerror = (error) => {\n          console.log(error);\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    fileLoader.click();\n  }\n\n  /**\n   * Event handler for deleting the selected picture.\n   * @param event - The event triggering the picture deletion.\n   */\n  onDeletePicture(event: Event) {\n    event.stopPropagation();\n    this.changePicture('');\n  }\n\n  /**\n   * Closes the picture modal.\n   */\n  close() {\n    this.pictureModal?.dismiss();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n        \n    \n    \n        \n    \n  \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./picture-selectable.component.scss\n                \n                div.user-picture {\n    height: 200px;\n    width: 300px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  \n    ion-img {\n      width: 100%;\n      height: 100%;\n      align-items: center;\n      cursor: pointer;\n    }\n  \n    ion-button.picture-button {\n      margin: 0;\n      --padding-start: 0;\n      --padding-end: 0;\n  \n      .button-native {\n        padding: 0 !important;\n      }\n    }\n  }\n  \n  ion-modal.auto-height {\n    &.bottom {\n      align-items: flex-end;\n    }\n  \n    --height: auto;\n  \n    .ion-page {\n      position: relative;\n      display: block;\n      contain: content;\n  \n      .inner-content {\n        max-height: 80vh;\n        overflow: auto;\n        padding: 10px;\n      }\n    }\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PictureSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterFormComponent.html":{"url":"components/RegisterFormComponent.html","title":"component - RegisterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/register-form/register-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-form\n            \n\n\n\n            \n                styleUrls\n                ./register-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                hide\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructs the RegisterFormComponent.\nInitializes the form with form controls and validators.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder service for building the form.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/access/register-form/register-form.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/register-form/register-form.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/register-form/register-form.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Event handler for form submission.\nEmits the user registration information through the onsubmit event emitter.\nResets the form after submission.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { UserRegisterInfo } from 'src/app/core/interfaces/user-info';\nimport { EmailValidation } from 'src/app/core/validators/email';\nimport { PasswordValidation } from 'src/app/core/validators/password';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss'],\n})\nexport class RegisterFormComponent implements OnInit {\n  form: FormGroup;\n  hide = true;\n\n  /* The `@Output() onsubmit = new EventEmitter();` line in the code snippet is\n  creating an output property named `onsubmit` of type `EventEmitter`. This output\n  property allows the `RegisterFormComponent` to emit events containing `UserRegisterInfo` data to\n  its parent component or any component that uses this form. */\n  @Output() onsubmit = new EventEmitter();\n\n  /**\n   * Constructs the RegisterFormComponent.\n   * Initializes the form with form controls and validators.\n   * @param {FormBuilder} formBuilder - FormBuilder service for building the form.\n   */\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group(\n      {\n        name: ['', [Validators.required]],\n        surname: ['', [Validators.required]],\n        email: ['', [Validators.required, EmailValidation.email()]],\n        username: ['', [Validators.required]],\n        password: [\n          '',\n          [Validators.required, PasswordValidation.passwordProto()],\n        ],\n        repPassword: [\n          '',\n          [Validators.required, PasswordValidation.passwordProto()],\n        ],\n      },\n      {\n        validators: [\n          PasswordValidation.passwordMatch('password', 'repPassword'),\n        ],\n      }\n    );\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for form submission.\n   * Emits the user registration information through the onsubmit event emitter.\n   * Resets the form after submission.\n   */\n  onSub() {\n    this.onsubmit.emit(this.form?.value);\n    this.form.reset({\n      name: '',\n      surname: '',\n      email: '',\n      username: '',\n      password: '',\n      repPassword: '',\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'forms.name' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.surname' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.email' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n    \n      {{ 'errors.emailError' | translate }}\n    \n  \n\n  \n    {{ 'forms.username' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.password' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n  \n  \n    {{ 'forms.repPassword' | translate }}\n    \n    \n      \n      \n    \n    \n      {{ 'errors.repeatError' | translate }}\n    \n  \n\n  {{ \"forms.register\" | translate }}\n\n    \n\n    \n                \n                    ./register-form.component.scss\n                \n                form {\n  margin-top: 8%;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  .register--button {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n  }\n}\n\n@media (max-width: 900px) {\n  div {\n    margin-top: 30%;\n  }\n  .access__image {\n      display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'forms.name\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.surname\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.email\\' | translate }}              {{ \\'errors.valid\\' | translate }}              {{ \\'errors.emailError\\' | translate }}            {{ \\'forms.username\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.password\\' | translate }}              {{ \\'errors.valid\\' | translate }}              {{ \\'forms.repPassword\\' | translate }}                                  {{ \\'errors.repeatError\\' | translate }}        {{ \"forms.register\" | translate }}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/settings/settings.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLang\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLanguage\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, userService: UsersService, myModal: ModalController, media: MediaService, _router: Router, auth: AuthService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/settings/settings.page.ts:20\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserDataPage.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for Firebase operations.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService for user-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for creating and managing modals.\n\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe MediaService for media-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Router for navigating between routes.\n\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe AuthService for authentication-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The translate parameter in the constructor is of type CustomTranslateService.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:52\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nRetrieves the user data for the currently logged-in user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLanguage\n                        \n                    \n                \n            \n            \n                \nsetLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:108\n                        \n                    \n\n\n            \n                \n                        The function setLanguage sets the language for translation in a TypeScript application.\nlanguage code or identifier for the language to be set. This parameter is used to switch the\nlanguage of the application to the specified language\n:type lang: string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe lang parameter in the setLanguage function is a string that represents the\nlanguage code or identifier for the language to be set. This parameter is used to switch the\nlanguage of the application to the specified language\n:type lang: string\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:69\n                        \n                    \n\n\n            \n                \n                        Method for updating user profile information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { UpdateUserComponent } from '../user-data/update-user/update-user.component';\nimport { ModalController } from '@ionic/angular';\nimport { MediaService } from 'src/app/core/services/media.service';\nimport { Router } from '@angular/router';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  user: any | undefined;\n  currentLang: string;\n\n  /**\n   * Creates an instance of UserDataPage.\n   *\n   * @param _firebaseService - The FirebaseService for Firebase operations.\n   * @param userService - The UsersService for user-related operations.\n   * @param myModal - The ModalController for creating and managing modals.\n   * @param media - The MediaService for media-related operations.\n   * @param _router - The Router for navigating between routes.\n   * @param auth - The AuthService for authentication-related operations.\n   * @param translate The `translate` parameter in the constructor is of type `CustomTranslateService`.\n   * It is used for handling translation services within the component or service where it is injected.\n   * This service likely provides methods for translating text or messages into different languages or\n   * for managing localization in the application.\n   */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private userService: UsersService,\n    private myModal: ModalController,\n    private media: MediaService,\n    private _router: Router,\n    protected auth: AuthService,\n    private translate: CustomTranslateService\n  ) {\n    this.currentLang = this.translate.getCurrentLang();\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Retrieves the user data for the currently logged-in user.\n   */\n  ngOnInit() {\n    this.userService\n      .getUserById(this._firebaseService.user!.uid)\n      .subscribe((user) => {\n        if (user) {\n          this.user = user;\n        } else {\n          console.log('User not found!');\n        }\n      });\n  }\n\n  /**\n   * Method for updating user profile information.\n   *\n   * @param user - The updated user information.\n   */\n  async updateUser(user: UserInfo) {\n    const mod = await this.myModal.create({\n      component: UpdateUserComponent,\n      componentProps: {\n        userInfo: user,\n      },\n      cssClass: 'modalDesign',\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      console.log(results.data);\n      if (results?.data?.picture) {\n        if (results?.data?.picture?.substring(0, 4) == 'data') {\n          dataURLtoBlob(results.data.picture, (blob: Blob) => {\n            this.media.upload(blob).subscribe((media: number[]) => {\n              results.data.picture = media[0];\n              this.userService.updateUser(results.data);\n            });\n          });\n        } else {\n          results.data.picture = user.picture;\n          this.userService.updateUser(results.data);\n        }\n      } else {\n        results.data.picture = '';\n        this.userService.updateUser(results.data);\n      }\n    }\n  }\n\n  /**\n   * The function `setLanguage` sets the language for translation in a TypeScript application.\n   * \n   * @param lang - The `lang` parameter in the `setLanguage` function is a string that represents the\n   * language code or identifier for the language to be set. This parameter is used to switch the\n   * language of the application to the specified language\n   * :type lang: string\n   */\n  setLanguage(lang: string) {\n    this.translate.use(lang);\n    this.currentLang = lang;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n\n        {{(auth.user$|async)?.name}} {{(auth.user$|async)?.surname}}\n\n        {{(auth.user$|async)?.username}}\n\n        {{'forms.admin' | translate}}\n\n        {{\"data.update\" | translate}}\n       \n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./settings.page.scss\n                \n                .content {\n    width: 70%;\n    margin: 3% auto;\n\n    .languages {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        padding: 2%;\n        gap: 50px;\n\n        div {\n            display: flex;\n            justify-content: center;\n\n            img {\n                width: 40%;\n            }\n        }\n\n        .selected {\n            outline: 2px solid #0F212D;\n            border-radius: 4px;\n        }\n\n    }\n}\n\n.user {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--username {\n        margin: 0;\n    }\n\n    &--role {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n\n    &:hover {\n        background-color: #1b3e56;\n    }\n\n    &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .content {\n        width: 80%;\n    }\n\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n\n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{(auth.user$|async)?.name}} {{(auth.user$|async)?.surname}}        {{(auth.user$|async)?.username}}        {{\\'forms.admin\\' | translate}}        {{\"data.update\" | translate}}                                                                                                                     '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageModule.html":{"url":"modules/SettingsPageModule.html","title":"module - SettingsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_imports\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nSettingsPageRoutingModule\n\nSettingsPageRoutingModule\n\nSettingsPageModule -->\n\nSettingsPageRoutingModule->SettingsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\nimport { AccordionModule } from 'primeng/accordion';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    AccordionModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageRoutingModule.html":{"url":"modules/SettingsPageRoutingModule.html","title":"module - SettingsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_declarations\n\n\n\n\nCategoriesInfoComponent\n\nCategoriesInfoComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCategoriesInfoComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nIncidentsCircleGraphicComponent\n\nIncidentsCircleGraphicComponent\n\nSharedModule -->\n\nIncidentsCircleGraphicComponent->SharedModule\n\n\n\n\n\nIncidentsInfoComponent\n\nIncidentsInfoComponent\n\nSharedModule -->\n\nIncidentsInfoComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nUserCircleGraphicComponent\n\nUserCircleGraphicComponent\n\nSharedModule -->\n\nUserCircleGraphicComponent->SharedModule\n\n\n\n\n\nUsersInfoComponent\n\nUsersInfoComponent\n\nSharedModule -->\n\nUsersInfoComponent->SharedModule\n\n\n\n\n\nCategoriesInfoComponent \n\nCategoriesInfoComponent \n\nCategoriesInfoComponent  -->\n\nSharedModule->CategoriesInfoComponent \n\n\n\n\n\nConfirmDialogComponent \n\nConfirmDialogComponent \n\nConfirmDialogComponent  -->\n\nSharedModule->ConfirmDialogComponent \n\n\n\n\n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent  -->\n\nSharedModule->IncidentsCircleGraphicComponent \n\n\n\n\n\nIncidentsInfoComponent \n\nIncidentsInfoComponent \n\nIncidentsInfoComponent  -->\n\nSharedModule->IncidentsInfoComponent \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent  -->\n\nSharedModule->UserCircleGraphicComponent \n\n\n\n\n\nUsersInfoComponent \n\nUsersInfoComponent \n\nUsersInfoComponent  -->\n\nSharedModule->UsersInfoComponent \n\n\n\n\n\nShortenTextPipe\n\nShortenTextPipe\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategoriesInfoComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            IncidentsCircleGraphicComponent\n                        \n                        \n                            IncidentsInfoComponent\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            UserCircleGraphicComponent\n                        \n                        \n                            UsersInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ShortenTextPipe\n                        \n                        \n                            ShortenTextPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoriesInfoComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            IncidentsCircleGraphicComponent\n                        \n                        \n                            IncidentsInfoComponent\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            UserCircleGraphicComponent\n                        \n                        \n                            UsersInfoComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { IonicModule } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from '../core/translate/translate';\nimport { UsersInfoComponent } from './components/users-info/users-info.component';\nimport { ShortenTextPipe } from '../core/pipes/shorten-text.pipe';\nimport { PictureSelectableComponent } from './components/picture-selectable/picture-selectable.component';\nimport { IncidentsInfoComponent } from './components/incidents-info/incidents-info.component';\nimport { CategoriesInfoComponent } from './components/categories-info/categories-info.component';\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ChartModule } from 'primeng/chart';\nimport { UserCircleGraphicComponent } from './components/user-circle-graphic/user-circle-graphic.component';\nimport { IncidentsCircleGraphicComponent } from './components/incidents-circle-graphic/incidents-circle-graphic.component';\n\n\n@NgModule({\n  declarations: [\n    UsersInfoComponent,\n    PictureSelectableComponent,\n    IncidentsInfoComponent,\n    CategoriesInfoComponent,\n    ConfirmDialogComponent,\n    UserCircleGraphicComponent,\n    IncidentsCircleGraphicComponent\n  ],\n  imports: [\n    CommonModule,\n    ChartModule,\n    IonicModule.forRoot(), \n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ShortenTextPipe,\n    ShortenTextPipe,\n    MatDialogModule,\n    MatButtonModule\n  ],\n  exports: [\n    UsersInfoComponent,\n    PictureSelectableComponent,\n    IncidentsInfoComponent,\n    CategoriesInfoComponent,\n    ConfirmDialogComponent,\n    UserCircleGraphicComponent,\n    IncidentsCircleGraphicComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShortenTextPipe.html":{"url":"pipes/ShortenTextPipe.html","title":"pipe - ShortenTextPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ShortenTextPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/shorten-text.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        shortenText\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | undefined, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/shorten-text.pipe.ts:23\n                        \n                    \n\n\n            \n                \n                        The function \"transform\" takes a string value and limits its length to a specified number, adding\nellipsis if necessary.\ntransformed.\nreturned by the transform function. If the length of the value string is greater than the\nlimit, the function will truncate the string to the limit length and append a period ('.') at\nthe end\ndefault value of 15. It checks if the length of the value is greater than the limit. If it is,\nit returns a substring of the value up to the limit followed by a period. If the length of the\nvalue is not greater than the\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The value parameter is a string that represents the input value that will be\ntransformed.\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    6\n                                            \n\n                                            \n                                                    The limit parameter specifies the maximum length of the string that will be\nreturned by the transform function. If the length of the value string is greater than the\nlimit, the function will truncate the string to the limit length and append a period ('.') at\nthe end\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                The function transform takes a string value and an optional number limit with a\ndefault value of 15. It checks if the length of the value is greater than the limit. If it is,\nit returns a substring of the value up to the limit followed by a period. If the length of the\nvalue is not greater than the\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'shortenText',\n  standalone: true,\n})\nexport class ShortenTextPipe implements PipeTransform {\n  /**\n   * The function \"transform\" takes a string value and limits its length to a specified number, adding\n   * ellipsis if necessary.\n   *\n   * @param value The `value` parameter is a string that represents the input value that will be\n   * transformed.\n   * @param limit The `limit` parameter specifies the maximum length of the string that will be\n   * returned by the `transform` function. If the length of the `value` string is greater than the\n   * `limit`, the function will truncate the string to the `limit` length and append a period ('.') at\n   * the end\n   * @return The function `transform` takes a string `value` and an optional number `limit` with a\n   * default value of 15. It checks if the length of the `value` is greater than the `limit`. If it is,\n   * it returns a substring of the `value` up to the `limit` followed by a period. If the length of the\n   * `value` is not greater than the\n   */\n  transform(value: string | undefined, limit: number = 6): string | undefined {\n    return value!.length > limit ? value!.substring(0, limit) + '...' : value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateUserComponent.html":{"url":"components/UpdateUserComponent.html","title":"component - UpdateUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-data/update-user/update-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-user\n            \n\n\n\n            \n                styleUrls\n                ./update-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                showRoleField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userInfo\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of UpdateUserComponent.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FormBuilder service for building form instances.\n\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for managing modal windows.\n\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userInfo\n                    \n                \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/user-data/update-user/update-user.component.ts:21\n                            \n                        \n                \n                    \n                        Setter method for setting user information to be edited.\nPopulates the form fields with the provided user information.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Handler for cancel action.\nDismisses the modal without passing any data to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Handler for form submission.\nDismisses the modal and passes the updated user information to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRoleField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userInfo\n                    \n                \n\n\n                \n                    \n                        setuserInfo(user: UserInfo)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/user-data/update-user/update-user.component.ts:21\n                                \n                            \n                    \n                        \n                                Setter method for setting user information to be edited.\nPopulates the form fields with the provided user information.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            user\n                                                    \n                                                            \n                                                                            UserInfo\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe user information to be edited.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.scss'],\n})\nexport class UpdateUserComponent implements OnInit {\n  form: FormGroup;\n  showRoleField: boolean = true;\n\n  /**\n   * Setter method for setting user information to be edited.\n   * Populates the form fields with the provided user information.\n   * @param user - The user information to be edited.\n   */\n  @Input() set userInfo(user: UserInfo) {\n    if (user) {\n      this.form.controls['picture'].setValue(user.picture);\n      this.form.controls['name'].setValue(user.name);\n      this.form.controls['surname'].setValue(user.surname);\n      this.form.controls['username'].setValue(user.username);\n      this.form.controls['uuid'].setValue(user.uuid);\n      this.form.controls['role'].setValue(user.role);\n\n      this.auth.user$.subscribe(currentUser => {\n        if (currentUser?.uuid === user.uuid) {\n          this.showRoleField = false;\n        }\n      });\n    }\n  }\n\n  /**\n   * Creates an instance of UpdateUserComponent.\n   * @param formBuilder - The FormBuilder service for building form instances.\n   * @param modal - The ModalController for managing modal windows.\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private auth: AuthService\n  ) {\n    this.form = this.formBuilder.group({\n      picture: ['', [Validators.required]],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      username: ['', [Validators.required]],\n      role: ['', [Validators.required]],\n      uuid: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Handler for form submission.\n   * Dismisses the modal and passes the updated user information to the parent component.\n   */\n  onSub() {\n    if (!this.showRoleField && this.form) {\n      this?.form?.get('role')?.setValue('admin');\n    }\n    this.modal.dismiss(this.form.value);\n  }\n\n  /**\n   * Handler for cancel action.\n   * Dismisses the modal without passing any data to the parent component.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n    \n      {{'forms.update' | translate}}\n    \n  \n\n\n\n  \n      \n\n    \n      \n        {{ 'forms.name' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n    \n      \n        {{ 'forms.surname' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      \n        {{ 'forms.username' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      \n        {{'forms.role' | translate}}\n        \n          {{'forms.admin' | translate}}\n          {{'forms.user' | translate}}\n        \n      \n\n      {{'forms.update' | translate}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./update-user.component.scss\n                \n                ion-icon {\n  color: #0F212D;\n}\n.form {\n  display: flex;\n  flex-direction: column;\n  padding: 2%;\n\n\n  button {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\\'forms.update\\' | translate}}                                {{ \\'forms.name\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                                {{ \\'forms.surname\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                            {{ \\'forms.username\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                            {{\\'forms.role\\' | translate}}                  {{\\'forms.admin\\' | translate}}          {{\\'forms.user\\' | translate}}                    {{\\'forms.update\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCircleGraphicComponent.html":{"url":"components/UserCircleGraphicComponent.html","title":"component - UserCircleGraphicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserCircleGraphicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-circle-graphic\n            \n\n\n\n            \n                styleUrls\n                ./user-circle-graphic.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-circle-graphic.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:14\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Initializes the component and fetches user data from Firebase to generate a chart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { forkJoin, map, switchMap } from 'rxjs';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-user-circle-graphic',\n  templateUrl: './user-circle-graphic.component.html',\n  styleUrls: ['./user-circle-graphic.component.scss'],\n})\nexport class UserCircleGraphicComponent  implements OnInit {\n\n  data: any;\n  options: any;\n\n  /**\n  * Constructs a component constructor function.\n  * \n  * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n  * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n  */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private translate: CustomTranslateService\n  ) { }\n\n  /**\n  * Initializes the component and fetches user data from Firebase to generate a chart.\n  */\n  ngOnInit() {\n    this._firebaseService.users$.pipe(\n      map(users => {\n        const rolesCount = users.reduce((acc: any, user: any) => {\n          acc[user.role] = (acc[user.role] || 0) + 1;\n          return acc;\n        }, {});\n        const roles = Object.keys(rolesCount);\n        return { roles, rolesCount };\n      }),\n      switchMap(({ roles, rolesCount }) => {\n        return forkJoin(\n          roles.map(role => this.translate.get(`forms.${role}`))\n        ).pipe(\n          map(translations => ({\n            labels: translations,\n            datasets: [{\n              data: roles.map(role => rolesCount[role]),\n              backgroundColor: ['#42A5F5', '#66BB6A'],\n              hoverBackgroundColor: ['#64B5F6', '#81C784']\n            }]\n          }))\n        );\n      })\n    ).subscribe(chartData => {\n      this.data = chartData;\n      this.options = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#495057'\n            }\n          }\n        }\n      };\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./user-circle-graphic.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserCircleGraphicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCredentials.html":{"url":"interfaces/UserCredentials.html","title":"interface - UserCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDataPage.html":{"url":"components/UserDataPage.html","title":"component - UserDataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserDataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-data/user-data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-data\n            \n\n\n\n            \n                styleUrls\n                ./user-data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, userService: UsersService, _router: Router, myModal: ModalController, media: MediaService, _firebaseSvc: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-data/user-data.page.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserDataPage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ActivatedRoute service to get URL parameters.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService to manage user data.\n\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Router service for page navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe modal controller to display and control modal windows.\n\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe MediaService for handling media operations.\n\n\n                                                        \n                                                \n                                                \n                                                        _firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goBack\n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/user-data.page.ts:102\n                        \n                    \n\n\n            \n                \n                        The goBack function navigates to the '/data' route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/user-data.page.ts:44\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nSubscribes to changes in URL parameters to get the user ID\nand load corresponding user data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/user-data.page.ts:65\n                        \n                    \n\n\n            \n                \n                        Method to update user data.\nOpens a modal for editing user data and updates the data\non the server once the editing is confirmed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/user-data.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/user-data.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { User } from 'firebase/auth';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { MediaService } from 'src/app/core/services/media.service';\nimport { UpdateUserComponent } from './update-user/update-user.component';\n\n@Component({\n  selector: 'app-user-data',\n  templateUrl: './user-data.page.html',\n  styleUrls: ['./user-data.page.scss'],\n})\nexport class UserDataPage implements OnInit {\n  userId: string | null = '';\n  user: any | undefined;\n\n  /**\n   * Creates an instance of UserDataPage.\n   * @param route - The ActivatedRoute service to get URL parameters.\n   * @param userService - The UsersService to manage user data.\n   * @param _router - The Router service for page navigation.\n   * @param myModal - The modal controller to display and control modal windows.\n   * @param media - The MediaService for handling media operations.\n   * @param _firebaseSvc - The FirebaseService for interacting with Firebase.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UsersService,\n    private _router: Router,\n    private myModal: ModalController,\n    private media: MediaService,\n    private _firebaseSvc: FirebaseService\n  ) {}\n\n  /**\n   * Method executed when the component is initialized.\n   * Subscribes to changes in URL parameters to get the user ID\n   * and load corresponding user data.\n   */\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.userId = params.get('id');\n      if (this.userId) {\n        this.userService.getUserById(this.userId).subscribe((user) => {\n          if (user) {\n            this.user = user;\n          } else {\n            console.log('User not found!');\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Method to update user data.\n   * Opens a modal for editing user data and updates the data\n   * on the server once the editing is confirmed.\n   * @param user - The updated user information.\n   */\n  async updateUser(user: UserInfo) {\n    const mod = await this.myModal.create({\n      component: UpdateUserComponent,\n      componentProps: {\n        userInfo: user,\n      },\n      cssClass: 'modalDesign',\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      console.log(results.data);\n      if (results?.data?.picture) {\n        if (results?.data?.picture?.substring(0, 4) == 'data') {\n          dataURLtoBlob(results.data.picture, (blob: Blob) => {\n            this.media.upload(blob).subscribe((media: number[]) => {\n              results.data.picture = media[0];\n              this.userService.updateUser(results.data);\n            });\n          });\n          this._router.navigate(['/data']);\n        } else {\n          results.data.picture = user.picture;\n          this.userService.updateUser(results.data);\n          this._router.navigate(['/data']);\n        }\n      } else {\n        results.data.picture = '';\n        this.userService.updateUser(results.data);\n        this._router.navigate(['/data']);\n      }\n    }\n  }\n\n  /**\n   * The `goBack` function navigates to the '/data' route using the Angular router.\n   */\n  goBack() {\n    this._router.navigate(['/data'])\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n    \n      \n    \n\n    \n      \n\n        {{user.name}} {{user.surname}}\n\n        {{user.username}}\n\n        {{'forms.user' | translate}}\n        {{'forms.admin' | translate}}\n\n        {{\"data.update\" | translate}}\n       \n    \n  \n\n    \n\n    \n                \n                    ./user-data.page.scss\n                \n                .back {\n    width: auto;\n    margin: 2%;\n\n    ion-icon {\n        cursor: pointer;\n    }\n}\n\n.user {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--username {\n        margin: 0;\n    }\n\n    &--role {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n    \n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{user.name}} {{user.surname}}        {{user.username}}        {{\\'forms.user\\' | translate}}        {{\\'forms.admin\\' | translate}}        {{\"data.update\" | translate}}             '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserDataPageModule.html":{"url":"modules/UserDataPageModule.html","title":"module - UserDataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    UserDataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserDataPageModule\n\n\n\ncluster_UserDataPageModule_imports\n\n\n\ncluster_UserDataPageModule_declarations\n\n\n\n\nUpdateUserComponent\n\nUpdateUserComponent\n\n\n\nUserDataPageModule\n\nUserDataPageModule\n\nUserDataPageModule -->\n\nUpdateUserComponent->UserDataPageModule\n\n\n\n\n\nUserDataPage\n\nUserDataPage\n\nUserDataPageModule -->\n\nUserDataPage->UserDataPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUserDataPageModule -->\n\nSharedModule->UserDataPageModule\n\n\n\n\n\nUserDataPageRoutingModule\n\nUserDataPageRoutingModule\n\nUserDataPageModule -->\n\nUserDataPageRoutingModule->UserDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/user-data/user-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UpdateUserComponent\n                        \n                        \n                            UserDataPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UserDataPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserDataPageRoutingModule } from './user-data-routing.module';\n\nimport { UserDataPage } from './user-data.page';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    // Reactive form\n    ReactiveFormsModule,\n    IonicModule,\n    UserDataPageRoutingModule, \n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    SharedModule\n  ],\n  declarations: [\n    UserDataPage,\n    UpdateUserComponent\n  ]\n})\nexport class UserDataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserDataPageRoutingModule.html":{"url":"modules/UserDataPageRoutingModule.html","title":"module - UserDataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserDataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/user-data/user-data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserDataPage } from './user-data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserDataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserDataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRegisterInfo.html":{"url":"interfaces/UserRegisterInfo.html","title":"interface - UserRegisterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRegisterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserSelectableComponent.html":{"url":"components/UserSelectableComponent.html","title":"component - UserSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/user-selectable/user-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                USER_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-user-selectable\n            \n\n\n\n            \n                styleUrls\n                ./user-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                            \n                                users\n                            \n                            \n                                userSelected\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                onUserClicked\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectUser\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                resetSignal\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:46\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService for fetching user data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:30\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:41\n                            \n                        \n                \n                    \n                        Setter method for setting the selected user.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:177\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Clears the selected user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Filters users based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter users.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Loads users from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked(popover: IonPopover, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a user from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectUser(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Selects a user by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the user to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:56\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:46\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:55\n                        \n                    \n\n            \n                \n                    - The UsersService for fetching user data.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n\n                \n                    \n                        setuser(_user: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:41\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected user.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _user\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected user.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  SimpleChanges,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const USER_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-user-selectable',\n  templateUrl: './user-selectable.component.html',\n  styleUrls: ['./user-selectable.component.scss'],\n  providers: [USER_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class UserSelectableComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  userSelected: any | undefined;\n  disabled: boolean = true;\n  users: any[] = [];\n\n  /**\n   * Setter method for setting the selected user.\n   *\n   * @param _user - The selected user.\n   */\n  @Input() set user(_user: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of UserSelectableComponent.\n   *\n   * @param userService - The UsersService for fetching user data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public userService: UsersService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads users from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.users$.subscribe({\n        next: (users) => {\n          this.users = users;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a user by its ID.\n   *\n   * @param id - The ID of the user to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectUser(id: string | undefined, propagate: boolean = false) {\n    if (id) {\n      await this.userService.getUserById(id).subscribe({\n        next: (user) => {\n          this.userSelected = user;\n        },\n      });\n    } else this.userSelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.userSelected.uuid);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectUser(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected user.\n   */\n  clearSelection() {\n    this.userSelected = undefined;\n  }\n\n  /**\n   * Filters users based on a search value.\n   *\n   * @param value - The search value to filter users.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering users.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a user from the list.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   * @param user - The selected user.\n   */\n  onUserClicked(popover: IonPopover, user: any) {\n    this.selectUser(user.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected user.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectUser(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n    {{userSelected.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./user-selectable.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}    {{userSelected.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserSelectableMobileComponent.html":{"url":"components/UserSelectableMobileComponent.html","title":"component - UserSelectableMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserSelectableMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                USER_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-user-selectable-mobile\n            \n\n\n\n            \n                styleUrls\n                ./user-selectable-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-selectable-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                            \n                                users\n                            \n                            \n                                userSelected\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                onUserClicked\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectUser\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                resetSignal\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService for fetching user data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:23\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:34\n                            \n                        \n                \n                    \n                        Setter method for setting the selected user.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Clears the selected user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:180\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Filters users based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter users.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Loads users from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked(popover: IonPopover, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a user from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectUser(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Selects a user by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the user to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:49\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:39\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:48\n                        \n                    \n\n            \n                \n                    - The UsersService for fetching user data.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n\n                \n                    \n                        setuser(_user: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:34\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected user.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _user\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected user.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const USER_SELECTABLE_MOBILE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableMobileComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-user-selectable-mobile',\n  templateUrl: './user-selectable-mobile.component.html',\n  styleUrls: ['./user-selectable-mobile.component.scss'],\n  providers: [USER_SELECTABLE_MOBILE_VALUE_ACCESSOR]\n})\nexport class UserSelectableMobileComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  userSelected: any | undefined;\n  disabled: boolean = true;\n  users: any[] = [];\n\n  /**\n   * Setter method for setting the selected user.\n   *\n   * @param _user - The selected user.\n   */\n  @Input() set user(_user: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of UserSelectableComponent.\n   *\n   * @param userService - The UsersService for fetching user data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public userService: UsersService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads users from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.users$.subscribe({\n        next: (users) => {\n          this.users = users;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a user by its ID.\n   *\n   * @param id - The ID of the user to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectUser(id: string | undefined, propagate: boolean = false) {\n    if (id) {\n      await this.userService.getUserById(id).subscribe({\n        next: (user) => {\n          this.userSelected = user;\n        },\n      });\n    } else this.userSelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.userSelected.uuid);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectUser(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected user.\n   */\n  clearSelection() {\n    this.userSelected = undefined;\n  }\n\n  /**\n   * Filters users based on a search value.\n   *\n   * @param value - The search value to filter users.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering users.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a user from the list.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   * @param user - The selected user.\n   */\n  onUserClicked(popover: IonPopover, user: any) {\n    this.selectUser(user.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected user.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectUser(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n    {{userSelected.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n\n    \n\n    \n                \n                    ./user-selectable-mobile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}    {{userSelected.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserSelectableMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersInfoComponent.html":{"url":"components/UsersInfoComponent.html","title":"component - UsersInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/users-info/users-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-info\n            \n\n\n\n            \n                styleUrls\n                ./users-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScreenSmall\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                dataUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, auth: AuthService, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:32\n                            \n                        \n\n                \n                    \n                            The constructor function takes a Router object as a parameter and assigns it to a private property\nin a TypeScript class.\ninjection that allows the class to navigate between different components in the Angular\napplication.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is of type Router. It is a dependency\ninjection that allows the class to navigate between different components in the Angular\napplication.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        users\n                    \n                \n                \n                    \n                        Type :         UserInfo[] | null | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/users-info/users-info.component.ts:27\n                            \n                        \n                \n                    \n                        Represents the input property for passing user information to the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onUserClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/users-info/users-info.component.ts:32\n                            \n                        \n                \n                    \n                        Represents the output property for emitting events when a user is clicked.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataUser\n                        \n                    \n                \n            \n            \n                \ndataUser(userId: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Emits an event when a user is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string | undefined - the ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nRetrieves and filters user data from Firebase and the authentication service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\n@Component({\n  selector: 'app-users-info',\n  templateUrl: './users-info.component.html',\n  styleUrls: ['./users-info.component.scss'],\n})\nexport class UsersInfoComponent implements OnInit {\n  users$: Observable | null = null;\n  isScreenSmall: boolean = false;\n\n  /**\n   * Represents the input property for passing user information to the component.\n   */\n  @Input() users: UserInfo[] | null | undefined;\n\n  /**\n   * Represents the output property for emitting events when a user is clicked.\n   */\n  @Output() onUserClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * The constructor function takes a Router object as a parameter and assigns it to a private property\n   * in a TypeScript class.\n   *\n   * @param router The `router` parameter in the constructor is of type `Router`. It is a dependency\n   * injection that allows the class to navigate between different components in the Angular\n   * application.\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   * @param firebaseService - The FirebaseService for interacting with Firebase.\n   */\n  constructor(\n    private router: Router,\n    protected auth: AuthService,\n    protected firebaseService: FirebaseService\n  ) {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Retrieves and filters user data from Firebase and the authentication service.\n   */\n  ngOnInit() {\n    this.users$ = combineLatest([\n      this.firebaseService.users$,\n      this.auth.user$,\n    ]).pipe(\n      map(([users, currentUser]) =>\n        users.filter((user) => user.uuid !== currentUser?.uuid)\n      )\n    );\n  }\n\n  /**\n   * Emits an event when a user is clicked.\n   *\n   * @param userId string | undefined - the ID of the user.\n   */\n  dataUser(userId: string | undefined) {\n    this.onUserClicked.emit(userId);\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n  \n\n  \n    {{'forms.name' | translate }}\n    {{'forms.surname' | translate }}\n    {{'forms.username' | translate }}\n    {{'forms.role' | translate }}\n  \n\n  \n    {{ user.name | shortenText }}\n    {{ user.name }}\n\n    {{ user.surname | shortenText }}\n    {{ user.surname }}\n\n    {{ user.username | shortenText }}\n    {{ user.username }}\n\n    {{'forms.user' | translate}}\n    {{'forms.user' | translate | shortenText }}\n\n    {{'forms.admin' | translate}}\n    {{'forms.admin' | translate | shortenText }}\n\n  \n\n    \n\n    \n                \n                    ./users-info.component.scss\n                \n                ion-list {\n    width: 80%;\n    margin: 3% auto;\n\n    ion-list-header {\n        --background: #0F212D;\n        --color: #fff;\n    }\n\n    .subheader {\n        ion-label {\n          font-weight: bold;\n        }\n    }\n\n    .data {\n        cursor: pointer;\n        position: relative;\n        border-top: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n\n        &:hover {\n            border-color: #0F212D;\n        }\n    }\n}\n\n@media (max-width: 900px) {\n    .subheader {\n        ion-label {\n          margin-left: 0.2%;\n        }\n    }\n}\n\n@media (max-width: 700px) {\n    ion-list {\n        width: 100%;\n        margin-top: 5%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}        {{\\'forms.name\\' | translate }}    {{\\'forms.surname\\' | translate }}    {{\\'forms.username\\' | translate }}    {{\\'forms.role\\' | translate }}        {{ user.name | shortenText }}    {{ user.name }}    {{ user.surname | shortenText }}    {{ user.surname }}    {{ user.username | shortenText }}    {{ user.username }}    {{\\'forms.user\\' | translate}}    {{\\'forms.user\\' | translate | shortenText }}    {{\\'forms.admin\\' | translate}}    {{\\'forms.admin\\' | translate | shortenText }}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserById\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor function initializes a private firebaseService property using dependency\ninjection.\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The firebaseService parameter is an instance of the FirebaseService\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:32\n                        \n                    \n\n\n            \n                \n                        The function getUserById retrieves user information by user ID from a Firebase service and\nreturns it as an observable stream.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The userId parameter is a string that represents the unique identifier of a user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable of type UserInfo or undefined is being returned.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(data: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:46\n                        \n                    \n\n\n            \n                \n                        The updateUser function in TypeScript updates user information using an authentication service.\ncontains information about the user that needs to be updated, such as their name, email, or other\nprofile details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data parameter in the updateUser function is of type UserInfo. It likely\ncontains information about the user that needs to be updated, such as their name, email, or other\nprofile details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserInfo } from '../../interfaces/user-info';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { take, map, Observable } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  /**\n   * The constructor function initializes a private firebaseService property using dependency\n   * injection.\n   *\n   * @param firebaseService The `firebaseService` parameter is an instance of the `FirebaseService`\n   * class that is being injected into the constructor using Angular's dependency injection mechanism.\n   * This allows the component or service to have access to the functionality provided by the\n   * `FirebaseService` class.\n   */\n  constructor(\n    private firebaseService: FirebaseService,\n    private auth: AuthService\n  ) {}\n\n  /**\n   * The function `getUserById` retrieves user information by user ID from a Firebase service and\n   * returns it as an observable stream.\n   *\n   * @param userId The `userId` parameter is a string that represents the unique identifier of a user.\n   * @return An Observable of type UserInfo or undefined is being returned.\n   */\n  getUserById(userId: string): Observable {\n    return this.firebaseService.users$.pipe(\n      take(1),\n      map((users) => users.find((user) => user.uuid === userId))\n    );\n  }\n\n  /**\n   * The `updateUser` function in TypeScript updates user information using an authentication service.\n   *\n   * @param data The `data` parameter in the `updateUser` function is of type `UserInfo`. It likely\n   * contains information about the user that needs to be updated, such as their name, email, or other\n   * profile details.\n   */\n  updateUser(data: UserInfo) {\n    this.auth.updateUser(data).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            AuthServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            httpProviderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            MediaServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/core/helpers/blob.ts\n            \n            function\n            dataURLtoBlob\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/category-info.ts\n            \n            interface\n            CategoryInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            PaginatedData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            Photo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/incidents-info.ts\n            \n            interface\n            incidentInfo\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserCredentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserRegisterInfo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/pipes/capitalize-initial.pipe.ts\n            \n            pipe\n            CapitalizeInitialPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/shorten-text.pipe.ts\n            \n            pipe\n            ShortenTextPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/core/services/api/incidents.service.ts\n            \n            injectable\n            IncidentsService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/services/api/users.service.ts\n            \n            injectable\n            UsersService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/core/services/filter/filter.service.ts\n            \n            injectable\n            FilterService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-auth.service.ts\n            \n            class\n            FirebaseAuthService\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-data.service.ts\n            \n            class\n            FirebaseDataService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-media.service.ts\n            \n            class\n            FirebaseMediaService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-media.service.ts\n            \n            interface\n            Media\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            injectable\n            FirebaseService\n            \n                59 %\n                (22/37)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseDocument\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseStorageFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseUserCredential\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client-web.provider.ts\n            \n            injectable\n            HttpClientWebProvider\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client.provider.ts\n            \n            injectable\n            HttpClientProvider\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/services/media.service.ts\n            \n            injectable\n            MediaService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/services/translate/local.service.ts\n            \n            injectable\n            LocalService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/services/translate/translate.service.ts\n            \n            injectable\n            CustomTranslateService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/core/translate/translate.ts\n            \n            function\n            createTranslateLoader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/email.ts\n            \n            class\n            EmailValidation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/password.ts\n            \n            class\n            PasswordValidation\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/access/access.page.ts\n            \n            component\n            AccessPage\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/pages/access/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/pages/access/register-form/register-form.component.ts\n            \n            component\n            RegisterFormComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/pages/data/data.page.ts\n            \n            component\n            DataPage\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/pages/data/modal-category/modal-category.component.ts\n            \n            component\n            ModalCategoryComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n            \n            component\n            CategorySelectableMobileComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n            \n            variable\n            CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable/category-selectable.component.ts\n            \n            component\n            CategorySelectableComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable/category-selectable.component.ts\n            \n            variable\n            CATEGORY_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/filter-mobile/filter-mobile.component.ts\n            \n            component\n            FilterMobileComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/pages/home/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/pages/home/item-category/item-category.component.ts\n            \n            component\n            ItemCategoryComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/pages/home/item-user/item-user.component.ts\n            \n            component\n            ItemUserComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n            \n            component\n            UserSelectableMobileComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n            \n            variable\n            USER_SELECTABLE_MOBILE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable/user-selectable.component.ts\n            \n            component\n            UserSelectableComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable/user-selectable.component.ts\n            \n            variable\n            USER_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/incident-data/incident-data.page.ts\n            \n            component\n            IncidentDataPage\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/pages/settings/settings.page.ts\n            \n            component\n            SettingsPage\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/pages/user-data/update-user/update-user.component.ts\n            \n            component\n            UpdateUserComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/pages/user-data/user-data.page.ts\n            \n            component\n            UserDataPage\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/categories-info/categories-info.component.ts\n            \n            component\n            CategoriesInfoComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts\n            \n            component\n            IncidentsCircleGraphicComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/incidents-info/incidents-info.component.ts\n            \n            component\n            IncidentsInfoComponent\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            component\n            PictureSelectableComponent\n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            variable\n            PICTURE_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts\n            \n            component\n            UserCircleGraphicComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/users-info/users-info.component.ts\n            \n            component\n            UsersInfoComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.2\n        \n            @angular/cdk : ^17.3.3\n        \n            @angular/common : ^17.0.2\n        \n            @angular/compiler : ^17.0.2\n        \n            @angular/core : ^17.0.2\n        \n            @angular/forms : ^17.0.2\n        \n            @angular/material : ^17.3.3\n        \n            @angular/platform-browser : ^17.0.2\n        \n            @angular/platform-browser-dynamic : ^17.0.2\n        \n            @angular/router : ^17.0.2\n        \n            @capacitor/android : 5.7.4\n        \n            @capacitor/app : 5.0.7\n        \n            @capacitor/core : 5.7.4\n        \n            @capacitor/haptics : ^5.0.7\n        \n            @capacitor/keyboard : 5.0.8\n        \n            @capacitor/status-bar : 5.0.7\n        \n            @fortawesome/fontawesome-svg-core : ^6.5.2\n        \n            @fortawesome/free-solid-svg-icons : ^6.5.2\n        \n            @ionic/angular : ^7.0.0\n        \n            @lottiefiles/lottie-player : ^2.0.4\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            chart.js : ^4.4.3\n        \n            firebase : ^10.10.0\n        \n            ionicons : ^7.0.0\n        \n            lottie-web : ^5.12.2\n        \n            ngx-lottie : ^11.0.2\n        \n            papaparse : ^5.4.1\n        \n            primeng : ^17.13.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../translate.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../blob.ts)\n                        \n                        \n                            httpProviderFactory   (src/.../app.module.ts)\n                        \n                        \n                            MediaServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthServiceFactory\n                        \n                    \n                \n            \n            \n                \nAuthServiceFactory(backend: string, firebase: FirebaseService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpProviderFactory\n                        \n                    \n                \n            \n            \n                \nhttpProviderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MediaServiceFactory\n                        \n                    \n                \n            \n            \n                \nMediaServiceFactory(backend: string, firebase: FirebaseService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/translate/translate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n                        Function to create a loader for translation files.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nHttpClient instance used for loading translation files.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/helpers/blob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataUrl: string, callback)\n                \n            \n\n\n\n\n            \n                \n                        The function dataURLtoBlob converts a data URL to a Blob object and provides the Blob through a\ncallback function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The dataUrl parameter in the dataURLtoBlob function is a string that represents a\ndata URL. Data URLs are URLs that contain data, such as base64 encoded images or other resources,\ndirectly within the URL string.\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The callback parameter is a function that will be called once the operation is\ncompleted. It takes a Blob object as its argument. You can pass a function to the dataURLtoBlob\nfunction as the callback parameter to handle the Blob object once it is created\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/incidentInfo.html":{"url":"interfaces/incidentInfo.html","title":"interface - incidentInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  incidentInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/incidents-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categoryName\n                                        \n                                \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            resolved\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoryName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         Photo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resolved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\nimport { Photo } from \"./data\";\n\nexport interface incidentInfo {\n    checked: boolean,\n    date: Timestamp,\n    description: string,\n    image: Photo,\n    resolved: boolean,\n    title: string,\n    userId: string,\n    uuid: string,\n    categoryName: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\ncluster_AccessPageModule\n\n\n\ncluster_AccessPageModule_declarations\n\n\n\ncluster_AccessPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DataPageModule\n\n\n\ncluster_DataPageModule_declarations\n\n\n\ncluster_DataPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_IncidentDataPageModule\n\n\n\ncluster_IncidentDataPageModule_declarations\n\n\n\ncluster_IncidentDataPageModule_imports\n\n\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\ncluster_SettingsPageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_UserDataPageModule\n\n\n\ncluster_UserDataPageModule_declarations\n\n\n\ncluster_UserDataPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nAccessPage\n\nAccessPage\n\n\n\nAccessPageModule\n\nAccessPageModule\n\nAccessPageModule -->\n\nAccessPage->AccessPageModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAccessPageModule -->\n\nLoginFormComponent->AccessPageModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAccessPageModule -->\n\nRegisterFormComponent->AccessPageModule\n\n\n\n\n\nAccessPageRoutingModule\n\nAccessPageRoutingModule\n\nAccessPageModule -->\n\nAccessPageRoutingModule->AccessPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAccessPageModule -->\n\nSharedModule->AccessPageModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDataPageModule\n\nDataPageModule\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\nCategoriesInfoComponent \n\nCategoriesInfoComponent \n\nCategoriesInfoComponent  -->\n\nSharedModule->CategoriesInfoComponent \n\n\n\n\n\nConfirmDialogComponent \n\nConfirmDialogComponent \n\nConfirmDialogComponent  -->\n\nSharedModule->ConfirmDialogComponent \n\n\n\n\n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent  -->\n\nSharedModule->IncidentsCircleGraphicComponent \n\n\n\n\n\nIncidentsInfoComponent \n\nIncidentsInfoComponent \n\nIncidentsInfoComponent  -->\n\nSharedModule->IncidentsInfoComponent \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent  -->\n\nSharedModule->UserCircleGraphicComponent \n\n\n\n\n\nUsersInfoComponent \n\nUsersInfoComponent \n\nUsersInfoComponent  -->\n\nSharedModule->UsersInfoComponent \n\n\n\n\n\nUserDataPageModule\n\nUserDataPageModule\n\nUserDataPageModule -->\n\nSharedModule->UserDataPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCapitalizeInitialPipe\n\nCapitalizeInitialPipe\n\nAppModule -->\n\nCapitalizeInitialPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDataPage\n\nDataPage\n\nDataPageModule -->\n\nDataPage->DataPageModule\n\n\n\n\n\nModalCategoryComponent\n\nModalCategoryComponent\n\nDataPageModule -->\n\nModalCategoryComponent->DataPageModule\n\n\n\n\n\nDataPageRoutingModule\n\nDataPageRoutingModule\n\nDataPageModule -->\n\nDataPageRoutingModule->DataPageModule\n\n\n\n\n\nCategorySelectableComponent\n\nCategorySelectableComponent\n\nHomePageModule -->\n\nCategorySelectableComponent->HomePageModule\n\n\n\n\n\nCategorySelectableMobileComponent\n\nCategorySelectableMobileComponent\n\nHomePageModule -->\n\nCategorySelectableMobileComponent->HomePageModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nHomePageModule -->\n\nFilterComponent->HomePageModule\n\n\n\n\n\nFilterMobileComponent\n\nFilterMobileComponent\n\nHomePageModule -->\n\nFilterMobileComponent->HomePageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nItemCategoryComponent\n\nItemCategoryComponent\n\nHomePageModule -->\n\nItemCategoryComponent->HomePageModule\n\n\n\n\n\nItemUserComponent\n\nItemUserComponent\n\nHomePageModule -->\n\nItemUserComponent->HomePageModule\n\n\n\n\n\nUserSelectableComponent\n\nUserSelectableComponent\n\nHomePageModule -->\n\nUserSelectableComponent->HomePageModule\n\n\n\n\n\nUserSelectableMobileComponent\n\nUserSelectableMobileComponent\n\nHomePageModule -->\n\nUserSelectableMobileComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nIncidentDataPage\n\nIncidentDataPage\n\n\n\nIncidentDataPageModule\n\nIncidentDataPageModule\n\nIncidentDataPageModule -->\n\nIncidentDataPage->IncidentDataPageModule\n\n\n\n\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageModule -->\n\nIncidentDataPageRoutingModule->IncidentDataPageModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nSettingsPageRoutingModule\n\nSettingsPageRoutingModule\n\nSettingsPageModule -->\n\nSettingsPageRoutingModule->SettingsPageModule\n\n\n\n\n\nCategoriesInfoComponent\n\nCategoriesInfoComponent\n\nSharedModule -->\n\nCategoriesInfoComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nIncidentsCircleGraphicComponent\n\nIncidentsCircleGraphicComponent\n\nSharedModule -->\n\nIncidentsCircleGraphicComponent->SharedModule\n\n\n\n\n\nIncidentsInfoComponent\n\nIncidentsInfoComponent\n\nSharedModule -->\n\nIncidentsInfoComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nUserCircleGraphicComponent\n\nUserCircleGraphicComponent\n\nSharedModule -->\n\nUserCircleGraphicComponent->SharedModule\n\n\n\n\n\nUsersInfoComponent\n\nUsersInfoComponent\n\nSharedModule -->\n\nUsersInfoComponent->SharedModule\n\n\n\n\n\nShortenTextPipe\n\nShortenTextPipe\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\n\n\nUpdateUserComponent\n\nUpdateUserComponent\n\nUserDataPageModule -->\n\nUpdateUserComponent->UserDataPageModule\n\n\n\n\n\nUserDataPage\n\nUserDataPage\n\nUserDataPageModule -->\n\nUserDataPage->UserDataPageModule\n\n\n\n\n\nUserDataPageRoutingModule\n\nUserDataPageRoutingModule\n\nUserDataPageModule -->\n\nUserDataPageRoutingModule->UserDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    27 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        24 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccessPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccessPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IncidentDataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IncidentDataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserDataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserDataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR   (src/.../category-selectable-mobile.component.ts)\n                        \n                        \n                            CATEGORY_SELECTABLE_VALUE_ACCESSOR   (src/.../category-selectable.component.ts)\n                        \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PICTURE_SELECTABLE_VALUE_ACCESSOR   (src/.../picture-selectable.component.ts)\n                        \n                        \n                            USER_SELECTABLE_MOBILE_VALUE_ACCESSOR   (src/.../user-selectable-mobile.component.ts)\n                        \n                        \n                            USER_SELECTABLE_VALUE_ACCESSOR   (src/.../user-selectable.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableMobileComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/category-selectable/category-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'TFCChato',\n  webDir: 'www',\n  server: {\n    androidScheme: 'https'\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDOnguE6cpcz6VKkf-RnI3RcpqS7Xmtbh4\",\n    authDomain: \"chato-a4ef9.firebaseapp.com\",\n    projectId: \"chato-a4ef9\",\n    storageBucket: \"chato-a4ef9.appspot.com\",\n    messagingSenderId: \"770666336001\",\n    appId: \"1:770666336001:web:96e7751d6f04cea0b39500\",\n    measurementId: \"G-Z70NCW6NLN\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDOnguE6cpcz6VKkf-RnI3RcpqS7Xmtbh4\",\n    authDomain: \"chato-a4ef9.firebaseapp.com\",\n    projectId: \"chato-a4ef9\",\n    storageBucket: \"chato-a4ef9.appspot.com\",\n    messagingSenderId: \"770666336001\",\n    appId: \"1:770666336001:web:96e7751d6f04cea0b39500\",\n    measurementId: \"G-Z70NCW6NLN\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PICTURE_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableMobileComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/user-selectable/user-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
