var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.413,1,1.144]],["body/components/AboutPage.html",[0,0.689,1,2.027,2,1.838,3,0.179,4,0.136,5,1.564,6,1.564,7,1.564,8,1.564,9,0.119,10,3.925,11,1.907,12,2.383,13,1.301,14,2.868,15,2.762,16,2.054,17,6.619,18,2.054,19,5.927,20,0.447,21,1.027,22,2.63,23,1.54,24,1.027,25,4.512,26,4.512,27,0.668,28,0.014,29,1.169,30,0.207,31,0.382,32,0.136,33,0.171,34,5.156,35,5.927,36,5.927,37,5.927,38,5.927,39,5.927,40,5.927,41,3.965,42,5.927,43,5.927,44,5.927,45,2.609,46,2.914,47,2.275,48,2.275,49,2.39,50,1.904,51,3.925,52,2.39,53,3.497,54,3.249,55,3.713,56,4.512,57,2.914,58,2.681,59,5.156,60,4.512,61,3.965,62,3.249,63,2.518,64,2.518,65,3.019,66,2.518,67,5.927,68,3.357,69,3.724,70,4.512,71,2.681,72,3.184,73,2.075,74,4.512,75,5.927,76,3.249,77,3.497,78,2.827,79,4.512,80,3.925,81,4.512,82,3.249,83,2.39,84,2.275,85,2.662,86,3.925,87,2.609,88,2.852,89,3.925,90,1.564,91,2.075,92,4.512,93,4.512,94,2.39,95,1.088,96,2.054,97,2.054,98,1.564,99,1.887,100,1.564,101,0.742,102,1.564,103,1.301,104,1.564,105,1.349,106,1.564,107,1.349,108,1.399,109,2.054,110,1.349,111,1.506,112,1.564,113,1.301,114,2.294,115,1.255,116,1.564,117,1.301,118,1.169,119,1.349,120,1.838,121,1.907,122,2.054,123,1.349,124,1.349,125,1.399,126,2.054,127,1.349,128,1.506,129,1.564,130,1.301,131,1.349,132,1.564,133,1.349,134,1.399,135,1.301,136,1.564,137,1.349,138,1.169,139,1.564,140,1.349,141,1.429,142,1.301,143,1.349,144,1.399,145,1.564,146,1.564,147,0.01,148,0.01]],["title/modules/AboutPageModule.html",[149,1.027,150,2.857]],["body/modules/AboutPageModule.html",[1,2.307,3,0.177,4,0.177,9,0.155,28,0.014,30,0.366,31,0.495,32,0.177,33,0.221,95,1.409,147,0.012,148,0.012,149,1.513,150,5.868,151,1.95,152,2.687,153,3.756,154,2.946,155,2.466,156,2.103,157,5.083,158,5.083,159,5.083,160,5.351,161,3.515,162,2.946,163,2.274,164,5.843,165,2.608,166,2.608,167,3.89,168,3.095,169,4.112,170,2.367,171,3.692,172,2.274,173,3.261,174,5.083]],["title/modules/AboutPageRoutingModule.html",[149,1.027,160,2.654]],["body/modules/AboutPageRoutingModule.html",[0,0.641,1,2.074,3,0.186,4,0.186,9,0.163,28,0.014,30,0.349,31,0.522,32,0.186,33,0.233,147,0.012,148,0.012,151,2.056,156,2.217,160,4.81,165,2.304,166,2.69,174,5.358,175,6.16,176,3.438,177,3.353,178,4.013,179,2.056,180,2.135,181,2.832,182,3.634]],["title/components/AccessPage.html",[0,0.413,103,1.144]],["body/components/AccessPage.html",[0,0.691,1,0.671,2,1.737,3,0.156,4,0.07,5,0.807,6,0.807,7,0.807,8,0.807,9,0.062,11,1.18,12,1.633,13,0.671,14,2.651,15,2.601,16,1.271,18,1.271,20,0.231,21,0.97,22,1.926,23,1.639,24,1.201,27,0.881,28,0.014,29,1.541,30,0.272,31,0.197,32,0.07,33,0.088,45,2.466,46,2.741,47,2.288,48,1.849,49,1.233,50,1.548,52,2.404,53,1.374,55,1.458,57,1.615,62,5.364,63,1.299,64,2.533,65,2.454,69,1.233,71,0.943,78,2.298,82,1.677,84,1.174,87,2.741,88,2.477,90,0.807,91,1.071,95,0.561,96,1.271,97,1.271,98,0.807,99,1.382,100,0.807,101,0.779,102,0.807,103,1.485,104,0.807,105,0.696,106,0.807,107,0.696,108,0.722,109,1.271,110,0.696,111,0.777,112,0.807,113,0.671,114,1.573,115,0.648,116,0.807,117,0.671,118,0.603,119,0.696,120,1.137,121,1.18,122,1.271,123,0.696,124,0.696,125,2.107,126,1.271,127,0.696,128,0.777,129,0.807,130,0.671,131,0.696,132,0.807,133,0.696,134,1.407,135,0.671,136,0.807,137,0.696,138,0.603,139,0.807,140,0.696,141,1.822,142,0.671,143,0.696,144,0.722,145,0.807,146,0.807,147,0.006,148,0.006,155,1.548,177,1.998,179,0.777,183,2.025,184,6.363,185,3.6,186,4.538,187,3.668,188,0.685,189,5.149,190,5.601,191,6.226,192,5.175,193,5.175,194,1.677,195,2.736,196,2.186,197,3.32,198,4.582,199,4.665,200,3.732,201,3.668,202,1.684,203,2.164,204,3.509,205,1.146,206,5.175,207,3.583,208,4.245,209,2.828,210,3.947,211,2.689,212,2.364,213,3.304,214,3.268,215,3,216,2.244,217,2.843,218,2.843,219,4.872,220,3.98,221,2.966,222,3.947,223,2.677,224,3.947,225,3.347,226,4.872,227,3.947,228,2.824,229,2.723,230,3.947,231,2.401,232,3.558,233,3.947,234,3.947,235,3.268,236,2.183,237,2.404,238,2.843,239,2.404,240,0.708,241,0.97,242,0.898,243,2.533,244,1.849,245,3.19,246,1.427,247,2.328,248,3.668,249,1.218,250,1.849,251,2.328,252,2.967,253,2.328,254,2.047,255,2.164,256,2.641,257,4.037,258,3.19,259,2.641,260,2.641,261,2.966,262,1.318,263,1.548,264,2.164,265,3.509,266,2.824,267,2.328,268,2.328,269,3.126,270,2.328,271,2.641,272,1.943,273,2.641,274,2.298,275,3.708,276,1.943,277,2.183,278,2.087,279,3.947,280,4.538,281,3.558,282,1.615,283,3.19,284,1.221,285,2.328,286,1.764,287,4.665,288,2.477,289,3.19,290,2.328,291,3.509,292,1.615,293,3.947,294,3.947,295,0.671,296,2.368,297,2.025,298,1.174,299,1.826,300,1.677,301,1.064,302,1.558,303,2.328,304,2.328,305,5.601,306,3.668,307,5.149,308,2.328,309,2.328,310,2.328,311,2.328,312,3.668,313,3.444,314,3.708,315,3.268,316,3.668,317,2.328,318,3.947,319,4.538,320,1.677,321,2.298,322,1.677,323,1.558,324,1.558,325,2.328,326,2.641,327,1.558,328,2.328,329,2.328,330,2.328,331,2.328,332,2.328,333,2.328,334,1.677,335,2.328,336,3.19,337,3.668,338,3.19,339,2.298,340,3.19,341,3.19,342,2.641,343,2.025,344,2.025,345,3.668,346,3.668,347,1.943,348,3.947,349,2.025,350,3.668,351,1.299,352,1.687,353,1.233,354,3.668,355,3.19,356,2.404,357,2.477,358,2.328,359,3.668,360,2.328,361,2.576,362,3.668,363,2.328,364,1.233,365,2.328,366,2.328,367,1.174,368,1.677,369,2.025,370,1.071,371,1.025,372,1.025,373,1.558,374,1.174]],["title/modules/AccessPageModule.html",[149,1.027,375,2.857]],["body/modules/AccessPageModule.html",[3,0.153,4,0.153,9,0.134,28,0.014,30,0.38,31,0.429,32,0.153,33,0.192,95,1.22,103,2.228,124,2.31,125,1.57,133,2.31,134,1.57,147,0.011,148,0.011,149,1.311,151,1.69,152,2.328,153,3.525,154,2.553,155,2.136,156,1.822,161,3.219,162,2.553,163,1.97,165,2.388,166,2.388,167,3.562,168,2.682,169,3.766,170,2.05,171,3.381,172,1.97,173,2.825,185,2.682,196,1.628,229,2.136,375,5.92,376,4.404,377,4.404,378,4.404,379,5.169,380,4.093,381,5.062,382,5.005,383,4.404,384,3.97,385,6.383,386,3.97,387,3.562,388,2.987,389,3.171,390,3.998,391,2.825,392,2.825,393,3.562,394,3.645,395,5.005,396,3.97,397,2.987,398,5.005,399,3.97,400,4.27,401,3.387,402,5.005,403,3.97,404,3.645,405,4.596,406,3.645,407,3.387,408,2.825,409,2.825,410,3.171,411,3.171,412,3.97,413,5.062]],["title/modules/AccessPageRoutingModule.html",[149,1.027,379,2.654]],["body/modules/AccessPageRoutingModule.html",[0,0.641,3,0.186,4,0.186,9,0.163,28,0.014,30,0.349,31,0.522,32,0.186,33,0.233,103,2.074,147,0.012,148,0.012,151,2.056,156,2.217,165,2.304,166,2.69,176,3.438,177,3.353,178,4.013,179,2.056,180,2.135,181,2.832,182,3.634,379,4.81,383,5.358,414,6.16]],["title/guards/AdminGuard.html",[415,3.111,416,2.857]],["body/guards/AdminGuard.html",[2,1.892,3,0.116,4,0.116,9,0.102,11,1.237,20,0.381,21,0.922,23,1.419,24,0.922,27,1.086,28,0.014,30,0.316,31,0.326,32,0.116,33,0.231,52,3.233,101,0.666,141,1.922,147,0.009,148,0.009,163,2.071,179,1.284,185,2.819,194,2.769,195,3.436,198,4.968,200,4.307,202,1.478,205,1.176,207,2.936,208,2.97,209,2.795,210,3.345,211,2.667,212,2.575,216,1.591,221,2.806,225,3.606,229,2.918,231,2.478,236,3.44,237,3.788,238,3.823,240,0.685,241,0.922,242,0.853,243,3.858,244,3.077,246,2.562,249,1.638,255,4.079,262,1.183,272,3.233,277,2.936,282,2.343,288,3.326,296,3.288,301,1.056,302,1.07,416,3.832,417,3.015,418,3.345,419,6.179,420,3.845,421,4.394,422,5.308,423,5.308,424,3.44,425,3.345,426,6.014,427,4.616,428,6.5,429,3.845,430,3.326,431,6.805,432,5.321,433,2.97,434,6.22,435,4.784,436,4.082,437,5.308,438,3.823,439,6.102,440,4.625,441,3.823,442,3.381,443,6.748,444,3.073,445,4.082,446,5.15,447,2.396,448,3.333,449,2.071,450,1.428,451,1.15,452,2.146,453,3.845,454,3.345,455,1.558,456,1.496,457,1.558,458,1.825,459,3.845,460,3.845,461,3.845,462,3.845,463,3.015,464,3.845,465,1.768]],["title/components/AppComponent.html",[0,0.413,105,1.186]],["body/components/AppComponent.html",[0,0.511,1,0.76,2,1.253,3,0.122,4,0.08,5,0.914,6,0.914,7,0.914,8,0.914,9,0.07,13,0.76,14,2.7,15,2.623,16,1.4,18,1.4,20,0.261,21,0.7,23,1.664,24,1.165,27,0.996,28,0.014,29,1.537,30,0.287,31,0.223,32,0.08,33,0.237,49,1.397,50,1.113,52,2.602,53,1.556,55,1.652,57,2.869,58,1.636,61,2.703,62,1.899,63,2.255,64,2.255,68,2.729,69,2.602,71,2.536,72,1.943,73,1.858,77,1.556,78,2.531,83,2.602,84,3.706,85,2.383,86,2.294,87,2.162,88,1.268,89,2.294,90,0.914,91,1.212,95,0.636,96,1.4,97,1.4,98,0.914,99,1.681,100,0.914,101,0.743,102,0.914,103,0.76,104,0.914,105,1.646,106,0.914,107,0.788,108,0.818,109,1.4,110,0.788,111,0.88,112,0.914,113,0.76,114,1.702,115,0.734,116,0.914,117,0.76,118,0.683,119,0.788,120,1.253,121,1.3,122,1.4,123,0.788,124,0.788,125,0.818,126,1.4,127,0.788,128,0.88,129,0.914,130,0.76,131,0.788,132,0.914,133,0.788,134,0.818,135,0.76,136,0.914,137,0.788,138,0.683,139,0.914,140,0.788,141,1.431,142,0.76,143,0.788,144,0.818,145,0.914,146,0.914,147,0.007,148,0.007,172,1.026,177,2.162,179,0.88,185,2.602,188,0.755,194,1.899,195,2.879,196,2.263,198,4.212,200,4.146,202,1.696,203,2.897,205,0.787,209,2.677,211,3.009,212,2.505,215,2.476,216,2.061,221,2.258,224,4.272,225,3.476,228,2.476,229,3.102,236,3.012,237,3.453,238,3.076,239,2.602,240,0.697,241,0.851,242,0.787,243,3.637,244,2.993,246,1.572,249,1.805,250,3.157,254,2.255,262,0.783,263,1.705,277,1.943,278,1.858,282,1.778,284,1.219,286,3.012,295,0.76,301,0.952,302,1.651,347,2.14,352,1.212,353,1.397,355,3.514,356,2.14,361,2.258,367,2.037,368,2.909,370,1.858,371,1.778,372,1.778,373,1.764,374,1.33,421,4.509,424,3.71,430,1.943,438,2.531,442,3.15,444,1.636,446,3.964,447,2.17,449,1.911,451,0.788,456,1.572,458,1.208,463,3.168,465,1.858,466,2.294,467,4.911,468,4.04,469,4.911,470,6.261,471,5.272,472,5.505,473,6.261,474,6.261,475,6.261,476,6.261,477,4.964,478,4.04,479,1.778,480,3.514,481,2.909,482,4.911,483,2.897,484,3.718,485,4.274,486,4.964,487,4.911,488,3.752,489,3.851,490,4.04,491,2.637,492,4.272,493,4.911,494,2.037,495,2.637,496,3.514,497,4.04,498,5.505,499,2.637,500,3.514,501,7.035,502,2.637,503,2.637,504,3.514,505,3.514,506,2.909,507,2.637,508,2.255,509,2.637,510,2.637,511,2.294,512,2.637,513,2.637,514,1.899,515,2.637,516,4.04,517,2.637,518,2.637,519,2.637,520,2.637,521,2.294,522,1.652,523,2.637,524,2.637,525,5.505,526,4.04,527,4.04,528,3.514,529,4.04,530,4.04,531,4.04,532,4.04,533,4.04,534,2.294,535,4.272,536,2.294,537,2.909,538,4.04,539,2.637,540,4.04,541,4.04,542,4.04,543,2.067,544,2.067,545,4.04,546,2.637,547,2.637,548,2.637,549,1.899,550,2.637,551,4.04,552,1.268,553,1.943,554,2.637,555,2.637,556,2.637,557,2.637,558,1.899,559,2.637,560,2.294]],["title/modules/AppModule.html",[149,1.027,561,2.857]],["body/modules/AppModule.html",[3,0.13,4,0.13,9,0.114,15,1.433,28,0.014,30,0.382,31,0.364,32,0.208,33,0.163,95,1.035,105,2.381,147,0.01,148,0.01,149,1.112,151,1.433,152,1.974,153,3.256,154,3.256,155,2.42,156,1.545,161,2.892,162,2.165,163,1.67,165,2.145,166,2.145,171,2.274,172,1.67,173,2.396,179,1.433,195,2.637,202,1.449,295,1.654,321,3.592,380,3.915,387,3.604,388,2.533,389,2.689,390,3.592,391,3.2,392,2.396,393,3.2,400,2.872,401,2.872,405,4.13,406,3.091,408,2.396,409,4.211,410,4.318,411,4.318,458,1.931,511,3.734,561,5.77,562,3.734,563,3.734,564,3.734,565,3.734,566,4.944,567,4.944,568,3.366,569,5.735,570,5.617,571,3.091,572,5.735,573,5.735,574,4.293,575,5.735,576,5.735,577,4.293,578,3.734,579,4.293,580,4.293,581,3.091,582,5.735,583,3.366,584,2.325,585,4.293,586,5.735,587,2.872,588,3.366,589,3.091,590,5.735,591,3.366,592,4.293,593,3.383,594,4.293,595,3.366,596,4.293,597,2.872,598,4.293,599,3.836,600,3.734,601,4.293,602,5.735,603,4.988,604,5.617,605,3.734,606,4.293,607,4.293,608,5.735,609,4.293,610,3.734,611,3.091,612,4.497,613,5.735,614,5.735,615,5.735,616,2.416,617,2.31,618,4.293,619,3.836,620,5.735,621,5.735,622,4.497,623,4.293,624,4.293,625,4.497,626,4.293,627,3.734,628,4.293,629,2.689,630,4.293,631,4.293,632,5.617,633,4.293,634,4.293,635,4.293]],["title/modules/AppRoutingModule.html",[149,1.027,567,2.654]],["body/modules/AppRoutingModule.html",[3,0.156,4,0.156,9,0.137,28,0.014,30,0.349,31,0.439,32,0.156,33,0.196,118,1.341,147,0.011,148,0.011,151,1.728,156,1.864,165,1.937,166,2.422,176,2.89,177,3.109,178,3.613,179,1.728,180,1.794,181,3.722,185,3.43,262,1.004,416,5.677,419,6.093,506,3.729,508,2.89,567,4.331,636,5.178,637,6.474,638,5.677,639,5.178,640,5.178,641,3.464,642,5.178,643,4.331,644,5.178,645,6.474,646,7.883,647,5.178,648,6.627,649,5.178,650,5.178,651,5.178,652,3.464,653,5.178,654,5.178,655,5.178,656,5.178,657,5.178,658,5.178,659,5.178,660,5.178,661,5.178,662,5.178,663,5.178,664,5.178,665,5.178,666,5.178,667,5.178,668,5.178,669,5.178,670,5.178,671,5.178]],["title/guards/AuthGuard.html",[415,3.111,638,2.857]],["body/guards/AuthGuard.html",[2,1.92,3,0.119,4,0.119,9,0.105,11,1.272,20,0.392,21,0.94,23,1.44,24,0.94,27,0.803,28,0.014,30,0.305,31,0.335,32,0.119,33,0.235,52,3.28,101,0.679,141,1.814,147,0.009,148,0.009,179,1.32,185,2.874,188,1.014,194,2.848,195,3.459,198,5.058,200,4.319,202,1.495,205,1.184,209,2.917,211,2.699,212,2.613,216,2.088,218,3.879,221,2.848,225,3.637,229,2.947,231,2.5,232,4.856,236,2.979,237,3.821,238,3.879,240,0.692,241,0.94,242,0.87,243,4.198,244,3.123,246,2.593,249,1.662,262,1.201,277,2.979,278,2.848,282,2.388,286,2.979,288,3.359,301,1.069,302,1.723,417,3.101,419,6.206,422,5.387,423,5.387,424,2.979,425,3.44,426,6.074,427,4.637,428,6.544,430,2.61,433,3.028,434,6.274,435,4.143,436,4.143,440,4.671,441,3.879,442,3.399,443,6.782,444,3.091,446,5.496,447,2.607,448,3.398,449,2.111,450,1.456,451,1.183,454,3.44,455,1.602,456,1.539,457,1.602,458,1.183,463,3.101,483,3.653,486,5.028,492,5.387,638,3.907,672,3.44,673,3.955,674,4.719,675,4.856,676,3.955,677,6.192,678,4.143,679,6.192,680,6.192,681,3.101,682,3.955,683,3.955]],["title/injectables/AuthService.html",[195,1.824,450,1.065]],["body/injectables/AuthService.html",[3,0.21,4,0.132,9,0.115,20,0.432,21,1.004,24,1.349,27,1.153,28,0.014,30,0.298,31,0.37,32,0.132,33,0.165,101,0.815,125,2.302,134,1.797,138,1.501,141,1.997,147,0.01,148,0.01,163,2.255,188,1.083,195,2.665,205,1.044,231,2.726,237,3.933,240,0.645,241,1.128,242,1.044,249,1.862,252,2.311,255,3.42,256,4.995,263,3.247,271,4.174,275,4.995,276,3.675,295,2.001,301,1.044,447,2.87,450,1.556,451,1.304,455,1.767,456,1.697,471,5.439,483,3.841,514,5.346,617,2.388,684,2.098,685,3.794,686,5.663,687,4.355,688,2.859,689,5.86,690,4.174,691,5.042,692,4.362,693,5.796,694,4.539,695,5.796,696,4.362,697,4.362,698,2.788,699,5.042,700,4.362,701,3.871,702,4.545,703,2.925,704,4.362,705,2.348,706,3.878,707,2.552,708,5.042,709,4.362,710,5.042,711,4.362,712,5.042,713,4.362,714,5.042,715,4.362,716,2.733,717,2.733]],["title/pipes/CapitalizeInitialPipe.html",[566,2.654,718,2.001]],["body/pipes/CapitalizeInitialPipe.html",[3,0.153,4,0.153,9,0.134,11,1.628,13,1.46,21,0.877,24,0.877,27,1.087,28,0.014,30,0.232,31,0.429,32,0.153,33,0.192,101,0.875,147,0.011,148,0.011,202,1.76,205,0.812,209,2.388,240,0.502,241,0.877,242,0.812,249,2.199,278,2.935,282,2.81,284,1.445,292,2.81,301,0.812,445,5.248,448,4.379,458,2.09,494,3.219,528,5.552,566,4.27,718,3.219,719,3.97,720,5.552,721,4.404,722,4.677,723,5.552,724,3.649,725,5.062,726,6.583,727,5.552,728,6.383,729,6.903,730,5.934,731,7.567,732,5.449,733,5.449,734,7.567,735,6.991,736,5.034,737,6.081,738,6.081,739,6.081,740,5.552,741,5.062]],["title/components/CategoriesInfoComponent.html",[0,0.413,107,1.186]],["body/components/CategoriesInfoComponent.html",[0,0.73,1,0.949,2,1.477,3,0.197,4,0.099,5,1.14,6,1.14,7,1.14,8,1.14,9,0.087,11,1.532,12,2.016,13,0.949,14,2.778,15,2.676,16,1.651,18,1.651,20,0.326,21,0.825,22,2.297,23,1.516,24,1.304,27,0.965,28,0.014,29,1.688,30,0.218,31,0.279,32,0.099,33,0.125,45,1.448,46,1.448,53,1.941,54,2.369,57,2.466,61,2.2,66,1.836,68,1.512,69,3.713,71,1.93,72,2.292,73,1.512,77,1.941,78,2.06,84,3.286,85,3.623,87,3.22,88,1.582,90,1.651,91,2.191,95,0.793,96,1.651,97,1.651,98,1.14,99,1.648,100,1.14,101,0.877,102,1.14,103,0.949,104,1.14,105,0.984,106,1.14,107,1.836,108,2.333,109,1.651,110,0.984,111,1.098,112,1.14,113,0.949,114,1.941,115,0.915,116,1.14,117,0.949,118,0.852,119,0.984,120,1.477,121,1.532,122,1.651,123,0.984,124,0.984,125,1.02,126,1.651,127,0.984,128,1.098,129,1.14,130,0.949,131,0.984,132,1.14,133,0.984,134,1.02,135,0.949,136,1.14,137,0.984,138,0.852,139,1.14,140,0.984,141,1.149,142,0.949,143,0.984,144,1.02,145,1.14,146,1.14,147,0.008,148,0.008,188,0.89,196,2.309,202,1.069,205,1.045,240,0.712,241,1.129,242,1.045,249,0.883,262,0.638,292,2.097,295,0.949,301,0.985,302,1.558,347,2.524,353,1.742,361,1.512,368,3.431,370,2.576,371,1.448,372,1.448,373,2.2,374,1.659,430,2.292,442,2.703,449,2.389,465,2.191,479,2.097,481,4.033,537,2.369,549,3.431,552,1.582,553,1.582,617,1.532,705,2.269,724,2.191,742,6.616,743,5.964,744,2.369,745,4.392,746,3.736,747,4.392,748,3.736,749,3.736,750,4.144,751,3.736,752,3.187,753,3.187,754,5.601,755,5.601,756,3.736,757,3.736,758,2.861,759,1.854,760,4.144,761,4.144,762,5.495,763,3.871,764,2.292,765,2.579,766,4.688,767,2.861,768,2.861,769,2.579,770,4.808,771,2.579,772,4.764,773,4.392,774,5.11,775,5.328,776,4.693,777,3.736,778,2.869,779,3.289,780,2.01,781,2.984,782,4.144,783,3.289,784,2.402,785,5.477,786,5.341,787,2.659,788,4.764,789,3.289,790,4.764,791,3.736,792,3.289,793,3.736,794,2.369,795,3.736,796,3.289,797,2.579,798,3.747,799,2.2,800,2.579,801,3.289,802,3.289,803,2.579,804,2.579,805,4.764,806,3.187,807,4.144,808,4.764,809,4.144,810,4.764,811,4.872,812,2.2,813,2.369,814,2.861,815,4.144,816,4.144,817,3.736,818,3.289,819,2.2,820,2.861]],["title/injectables/CategoriesService.html",[450,1.065,821,2.857]],["body/injectables/CategoriesService.html",[0,0.533,3,0.155,4,0.11,9,0.096,20,0.36,21,0.886,23,1.377,24,1.113,27,1.04,28,0.014,30,0.31,31,0.308,32,0.11,33,0.138,101,0.879,118,1.325,147,0.009,148,0.009,180,2.052,202,1.148,205,1.03,207,3.652,208,4.324,212,2.159,216,1.53,231,2.435,236,2.461,240,0.637,241,1.113,242,1.03,284,1.173,291,4.401,301,1.086,445,4.299,447,2.706,449,3.015,450,1.373,451,1.087,452,2.855,455,1.472,456,1.414,457,1.472,458,2.317,584,2.696,616,1.914,617,2.37,684,1.749,705,2.072,707,2.829,718,2.58,733,5.059,749,4.012,759,1.991,763,4.029,782,4.451,785,5.937,787,3.586,809,4.451,821,3.684,822,3.162,823,4.451,824,5.921,825,2.85,826,3.635,827,3.019,828,5.116,829,3.635,830,2.58,831,3.791,832,5.059,833,3.635,834,3.019,835,3.635,836,6.772,837,3.635,838,5.15,839,2.277,840,3.635,841,3.635,842,2.432,843,7.217,844,2.85,845,3.635,846,3.635,847,3.635,848,3.635,849,3.635,850,3.635,851,7.491,852,4.264,853,3.635,854,5.116,855,3.635,856,3.635,857,3.635,858,3.635,859,3.635,860,3.635,861,3.635,862,3.635,863,3.635,864,3.635,865,3.24,866,2.618,867,3.635,868,3.635,869,3.635,870,5.116,871,5.921,872,5.921,873,3.162,874,5.921,875,2.618,876,6.772,877,5.921,878,4.451,879,5.116,880,5.116,881,5.116,882,4.012,883,3.684,884,5.116,885,4.451,886,5.116,887,5.116,888,5.116,889,5.116,890,3.635,891,3.635,892,5.116,893,3.635,894,3.635,895,5.116,896,3.684,897,3.635,898,3.162,899,3.635,900,3.635]],["title/interfaces/CategoryInfo.html",[763,2.001,901,1.065]],["body/interfaces/CategoryInfo.html",[3,0.182,4,0.182,9,0.16,20,0.598,28,0.014,32,0.182,101,0.975,147,0.012,148,0.012,188,1.327,240,0.788,242,1.25,284,1.454,431,6.78,763,3.581,799,4.034,865,3.93,901,1.619,902,2.655,903,3.778,904,7.794]],["title/components/ConfirmDialogComponent.html",[0,0.413,110,1.186]],["body/components/ConfirmDialogComponent.html",[0,0.803,1,1.268,2,1.807,3,0.176,4,0.133,5,1.524,6,1.524,7,1.524,8,1.524,9,0.116,11,1.875,12,2.353,13,1.268,14,2.861,15,2.756,16,2.02,18,2.02,20,0.436,21,1.01,22,2.603,23,1.619,24,1.254,27,0.863,28,0.014,29,1.509,30,0.267,31,0.373,32,0.133,33,0.167,95,1.06,96,2.02,97,2.02,98,1.524,99,1.868,100,1.524,101,0.818,102,1.524,103,1.268,104,1.524,105,1.315,106,1.524,107,1.315,108,1.364,109,2.02,110,2.081,111,2.573,112,1.524,113,1.268,114,2.265,115,1.223,116,1.524,117,1.268,118,1.139,119,1.315,120,1.807,121,1.875,122,2.02,123,1.315,124,1.315,125,1.364,126,2.02,127,1.315,128,1.468,129,1.524,130,1.268,131,1.315,132,1.524,133,1.315,134,1.364,135,1.268,136,1.524,137,1.315,138,1.139,139,1.524,140,1.315,141,1.405,142,1.268,143,1.315,144,1.364,145,1.524,146,1.524,147,0.01,148,0.01,188,1.089,196,2.393,202,1.308,205,0.705,208,4.353,240,0.648,241,0.762,242,0.705,284,1.315,287,5.125,301,0.934,611,3.167,688,2.579,759,2.268,794,3.167,905,5.834,906,5.358,907,3.825,908,6.851,909,6.536,910,5.827,911,6.298,912,5.457,913,4.398,914,7.707,915,4.398,916,4.707,917,4.398,918,5.069,919,4.398,920,4.398,921,5.827,922,4.398,923,3.167,924,4.398,925,4.398,926,5.827,927,5.827,928,5.827]],["title/injectables/CustomTranslateService.html",[197,2.214,450,1.065]],["body/injectables/CustomTranslateService.html",[3,0.129,4,0.129,9,0.113,20,0.424,21,0.991,23,1.499,24,1.279,27,1.093,28,0.014,29,1.107,30,0.295,31,0.362,32,0.129,33,0.261,101,0.807,147,0.01,148,0.01,188,1.069,196,2.307,197,3.192,202,1.719,205,1.033,209,2.761,211,3.102,212,2.72,213,4.663,216,1.927,222,4.975,225,3.25,239,3.03,240,0.732,241,1.117,242,1.033,246,2.226,249,1.925,254,3.192,278,2.63,282,2.518,284,1.407,288,2.752,295,1.985,301,1.033,302,2.054,324,4.938,339,4.798,391,2.386,392,2.386,444,2.317,447,2.612,450,1.535,451,1.278,455,1.732,456,1.664,457,1.732,458,1.278,479,3.029,489,6.408,494,2.884,496,4.975,508,3.192,617,1.84,681,3.353,684,2.057,688,2.234,698,2.752,705,2.317,716,4.493,776,4.119,780,2.414,929,3.719,930,6.445,931,4.037,932,5.516,933,4.276,934,7.836,935,5.719,936,5.606,937,5.719,938,4.276,939,5.719,940,5.719,941,3.583,942,4.276,943,4.975,944,3.826,945,5.719,946,4.276,947,4.119,948,3.802,949,4.975,950,4.276,951,5.719,952,4.276,953,4.276,954,4.276,955,4.276,956,4.276,957,4.276,958,4.276,959,4.276,960,2.86,961,4.276,962,4.276]],["title/components/DataPage.html",[0,0.413,113,1.144]],["body/components/DataPage.html",[0,0.653,1,0.568,2,1.45,3,0.183,4,0.06,5,0.683,6,0.683,7,0.683,8,0.683,9,0.154,11,1.032,12,1.461,13,0.568,14,2.577,15,2.513,16,1.112,18,1.112,20,0.195,21,0.556,22,1.75,23,1.088,24,1.187,27,0.997,28,0.014,29,1.71,30,0.308,31,0.167,32,0.123,33,0.075,41,1.318,45,2.431,46,1.412,49,1.699,50,2.457,52,1.699,53,1.162,55,2.93,57,2.563,58,2.236,62,5.074,63,1.099,64,2.264,66,2.61,68,1.866,69,1.043,71,2.728,72,1.952,73,1.475,76,1.418,77,1.892,78,1.234,82,2.31,83,1.699,84,0.993,85,1.162,87,2.267,90,0.683,91,1.866,94,1.699,95,0.475,96,1.112,97,1.112,98,0.683,99,1.255,100,0.683,101,0.858,102,0.683,103,0.568,104,0.683,105,0.589,106,0.683,107,0.589,108,1.258,109,1.112,110,0.959,111,0.657,112,0.683,113,1.349,114,1.406,115,0.548,116,0.683,117,0.568,118,0.51,119,0.589,120,1.258,121,1.505,122,1.112,123,0.589,124,0.589,125,0.611,126,1.112,127,1.399,128,2.026,129,0.683,130,0.568,131,0.589,132,0.683,133,0.589,134,0.611,135,0.568,136,0.683,137,0.589,138,0.831,139,0.683,140,0.589,141,1.513,142,0.568,143,0.589,144,0.611,145,0.683,146,0.683,147,0.009,148,0.005,155,1.354,172,0.766,179,0.657,180,2.442,184,5.859,188,0.599,192,4.803,193,4.803,195,0.906,196,2.167,197,3.081,200,3.568,202,1.448,205,1.006,206,4.069,207,3.019,208,3.932,209,1.75,211,1.299,212,1.974,213,2.76,214,2.31,215,2.359,216,2.224,217,2.009,219,2.79,220,2.146,221,1.475,223,2.76,225,1.617,226,4.479,227,2.79,229,1.354,231,1.913,236,1.543,238,2.009,240,0.689,241,1.087,242,1.006,246,1.248,249,1.089,262,1.366,263,1.974,264,1.892,283,2.79,284,1.335,286,2.25,287,4.329,288,2.25,289,2.79,291,3.459,292,1.412,293,3.53,294,3.53,297,1.713,299,1.544,300,1.418,301,1.143,302,1.433,313,1.318,314,3.708,336,2.79,338,2.79,339,3.801,340,2.79,341,2.79,342,2.31,343,1.713,344,1.713,347,2.15,352,1.866,356,2.728,361,2.677,367,2.359,370,2.368,371,2.267,372,1.786,373,1.318,424,1.543,433,1.79,444,1.895,458,0.959,486,2.31,514,1.418,521,4.803,522,3.459,535,2.79,536,3.53,543,1.544,544,1.544,552,1.952,553,1.543,584,2.184,611,1.418,616,2.066,617,1.305,688,2.175,698,1.543,701,1.099,703,1.299,749,2.515,750,2.79,759,1.248,763,3.665,764,1.543,784,1.617,785,5.319,787,1.79,791,2.515,799,1.318,813,1.418,821,3.976,823,4.069,827,1.892,834,1.892,885,1.713,905,1.544,906,1.418,908,6.129,911,1.713,931,3.459,963,1.713,964,3.207,965,3.207,966,3.182,967,2.515,968,3.207,969,4.677,970,3.207,971,3.207,972,1.544,973,4.677,974,6.068,975,4.069,976,3.694,977,1.969,978,3.182,979,4.058,980,2.79,981,1.969,982,4.803,983,2.515,984,3.207,985,1.969,986,3.207,987,5.15,988,1.969,989,5.521,990,3.976,991,7.528,992,4.677,993,3.207,994,3.207,995,1.969,996,2.79,997,1.969,998,4.37,999,1.79,1000,4.803,1001,3.207,1002,2.146,1003,2.93,1004,4.677,1005,3.207,1006,4.058,1007,1.969,1008,4.677,1009,4.058,1010,3.207,1011,1.969,1012,3.207,1013,1.969,1014,3.207,1015,2.146,1016,1.969,1017,1.969,1018,3.207,1019,1.969,1020,2.146,1021,1.299,1022,1.969,1023,1.969,1024,1.969,1025,1.318,1026,1.713,1027,1.418,1028,1.713,1029,1.418,1030,1.969,1031,1.418,1032,1.969,1033,4.677,1034,1.969,1035,1.969,1036,3.207,1037,1.969,1038,1.969,1039,1.544,1040,1.969,1041,1.318,1042,1.969,1043,1.969,1044,2.515,1045,1.969,1046,1.969,1047,1.969,1048,1.969,1049,1.969,1050,1.969,1051,1.969,1052,1.969,1053,1.969,1054,1.318,1055,0.993,1056,1.969,1057,1.969,1058,1.418,1059,1.969,1060,1.969,1061,1.969,1062,1.969,1063,1.969,1064,1.969,1065,1.969,1066,1.969,1067,1.969,1068,1.969,1069,1.969,1070,1.969,1071,1.969,1072,1.969,1073,1.418,1074,1.969,1075,1.969,1076,1.969,1077,1.969,1078,1.969,1079,1.969,1080,2.515,1081,2.79,1082,2.79,1083,2.31,1084,2.79,1085,2.79,1086,2.79,1087,3.207,1088,1.969,1089,1.969,1090,1.713,1091,4.058,1092,4.058,1093,1.043,1094,1.969,1095,1.969,1096,3.207,1097,3.207,1098,3.207,1099,2.79,1100,3.207,1101,3.207,1102,3.207,1103,2.264,1104,2.394,1105,2.394,1106,1.892,1107,1.79,1108,1.892,1109,1.892,1110,1.617,1111,1.969,1112,2.515,1113,2.31,1114,1.969,1115,1.713,1116,1.969,1117,1.969,1118,1.713,1119,1.969,1120,1.969,1121,1.969]],["title/modules/DataPageModule.html",[149,1.027,1122,2.857]],["body/modules/DataPageModule.html",[3,0.151,4,0.151,9,0.132,28,0.014,30,0.381,31,0.424,32,0.151,33,0.19,95,1.206,113,2.222,127,2.304,128,1.67,147,0.011,148,0.011,149,1.296,151,1.67,152,2.301,153,3.506,154,2.523,155,2.112,156,1.801,161,3.195,162,2.523,163,1.947,165,2.37,166,2.37,167,3.536,168,2.651,169,3.738,170,2.027,171,3.357,172,1.947,173,2.793,196,1.61,229,2.112,262,0.97,357,2.407,380,4.233,382,4.968,387,3.536,388,2.952,389,3.135,390,3.969,391,2.793,392,2.793,393,3.536,394,3.603,395,4.968,396,3.924,397,2.952,398,4.968,399,3.924,400,4.239,401,3.347,402,4.968,403,3.924,404,3.603,405,4.563,406,3.603,407,3.347,408,2.793,409,2.793,410,3.135,411,3.135,412,3.924,1027,3.603,1028,4.353,1122,5.912,1123,4.353,1124,4.353,1125,4.353,1126,5.154,1127,5.004,1128,3.135,1129,6.336,1130,5.004,1131,5.512,1132,4.353,1133,6.336,1134,5.004,1135,4.353]],["title/modules/DataPageRoutingModule.html",[149,1.027,1126,2.654]],["body/modules/DataPageRoutingModule.html",[0,0.641,3,0.186,4,0.186,9,0.163,28,0.014,30,0.349,31,0.522,32,0.186,33,0.233,113,2.074,147,0.012,148,0.012,151,2.056,156,2.217,165,2.304,166,2.69,176,3.438,177,3.353,178,4.013,179,2.056,180,2.135,181,2.832,182,3.634,1126,4.81,1128,3.859,1136,6.16]],["title/injectables/DataService.html",[450,1.065,597,2.654]],["body/injectables/DataService.html",[3,0.126,4,0.126,9,0.111,20,0.414,21,0.975,24,1.233,27,1.155,28,0.014,30,0.292,31,0.354,32,0.126,33,0.158,101,0.891,138,1.458,147,0.009,148,0.009,204,4.931,205,1.272,240,0.774,241,1.233,242,1.141,262,1.556,284,1.42,301,1.222,327,3.766,447,2.875,450,1.511,451,1.249,455,1.692,456,1.625,534,7.236,597,3.766,617,1.811,684,2.009,688,2.794,689,5.83,694,4.603,698,2.709,705,2.28,707,2.479,784,3.437,787,3.142,830,2.839,831,3.322,834,3.322,941,3.527,983,4.415,1093,2.983,1137,3.633,1138,4.054,1139,4.897,1140,4.176,1141,4.761,1142,7.262,1143,4.897,1144,4.176,1145,4.897,1146,5.63,1147,4.897,1148,4.176,1149,4.897,1150,4.176,1151,4.897,1152,5.63,1153,3.633,1154,4.908,1155,4.176,1156,5.63,1157,3.766,1158,4.897,1159,5.63,1160,2.464,1161,4.176]],["title/classes/EmailValidation.html",[33,0.15,1162,2.857]],["body/classes/EmailValidation.html",[3,0.166,4,0.166,9,0.146,20,0.546,21,1.165,24,0.954,27,0.996,28,0.014,30,0.252,32,0.166,33,0.209,101,0.909,147,0.011,148,0.011,170,2.231,202,1.509,205,0.883,240,0.546,241,0.954,242,0.883,249,1.478,261,3.776,284,1.31,295,1.588,296,2.533,301,0.883,458,2.171,688,1.909,764,3.236,1162,4.843,1163,3.45,1164,4.791,1165,6.316,1166,6.726,1167,5.508,1168,5.851,1169,6.186,1170,5.851,1171,5.851,1172,6.578,1173,5.851,1174,5.851,1175,5.851,1176,4.843,1177,5.851,1178,4.319,1179,4.791,1180,4.791,1181,5.508,1182,6.316,1183,6.726,1184,5.508,1185,5.508,1186,5.508]],["title/classes/FirebaseAuthService.html",[33,0.15,581,2.857]],["body/classes/FirebaseAuthService.html",[3,0.229,4,0.074,9,0.065,20,0.243,21,0.661,23,0.569,24,1.217,27,1.152,28,0.014,30,0.242,32,0.074,33,0.178,99,0.657,101,0.893,125,1.453,131,0.732,134,1.453,138,0.988,141,2.002,147,0.006,148,0.006,163,2.059,188,1.072,195,3.28,202,1.363,203,2.251,205,0.92,207,3.378,209,2.146,228,2.364,231,2.641,236,1.835,237,3.219,239,2.021,240,0.629,241,0.994,242,0.849,244,3.064,249,1.42,250,3.309,252,3.039,255,3.122,256,4.964,261,2.794,262,1.383,263,2.845,266,2.669,269,3.201,271,2.747,272,2.021,275,4.726,276,2.804,277,2.255,278,1.754,279,3.319,281,2.992,282,2.33,286,2.923,295,1.526,301,0.849,302,1.304,314,1.763,318,2.13,321,2.39,323,3.136,427,3.122,430,2.255,441,2.39,444,2.144,445,3.838,446,4.569,447,2.753,449,2.682,451,1.402,452,1.366,457,0.992,458,1.962,465,1.754,471,4.765,483,3.122,484,2.39,488,2.616,494,1.924,504,3.319,514,3.811,581,3.811,583,1.92,584,2.362,616,2.522,617,2.295,619,2.552,678,2.552,681,2.992,686,5.286,687,4.065,688,2.641,690,2.747,691,3.319,698,2.546,699,3.319,702,2.992,703,3.045,705,2.461,706,4.39,707,2.889,708,2.13,710,2.13,712,2.13,714,2.13,717,1.534,718,1.924,726,3.319,727,4.99,733,2.747,738,4.077,759,1.484,764,2.923,780,1.61,830,3.2,842,1.638,865,2.893,873,2.13,960,2.552,999,2.129,1041,2.552,1090,2.13,1093,2.021,1163,1.534,1187,3.136,1188,2.13,1189,2.552,1190,6.563,1191,2.448,1192,2.448,1193,3.815,1194,2.552,1195,2.39,1196,3.811,1197,3.815,1198,3.815,1199,4.855,1200,2.448,1201,2.448,1202,2.448,1203,2.448,1204,2.448,1205,3.815,1206,2.747,1207,3.811,1208,2.747,1209,6.563,1210,3.815,1211,3.811,1212,5.292,1213,2.747,1214,4.15,1215,3.815,1216,2.448,1217,2.747,1218,2.747,1219,2.747,1220,3.815,1221,3.319,1222,2.448,1223,4.39,1224,4.569,1225,4.131,1226,6.076,1227,3.319,1228,3.838,1229,3.811,1230,2.552,1231,3.815,1232,2.448,1233,2.747,1234,4.245,1235,4.687,1236,4.687,1237,4.687,1238,4.687,1239,2.448,1240,2.747,1241,2.552,1242,3.319,1243,3.815,1244,3.815,1245,3.815,1246,3.815,1247,2.552,1248,2.448,1249,3.815,1250,5.292,1251,2.552,1252,3.815,1253,3.815,1254,3.815,1255,3.815,1256,3.815,1257,4.687,1258,3.815,1259,2.936,1260,2.448,1261,1.638,1262,2.448,1263,2.448,1264,3.815,1265,3.815,1266,2.448,1267,3.815,1268,3.815,1269,3.815,1270,3.815,1271,1.763,1272,2.448,1273,2.448,1274,3.815,1275,3.815,1276,3.815,1277,3.815,1278,3.815,1279,2.448,1280,2.448,1281,3.815,1282,3.815,1283,2.448,1284,2.448,1285,2.448,1286,2.448,1287,3.815,1288,2.448,1289,2.448,1290,4.687,1291,4.687,1292,2.448,1293,2.448,1294,2.448,1295,2.448,1296,2.448,1297,2.39,1298,2.448,1299,2.448,1300,2.021,1301,2.448,1302,2.448,1303,2.448,1304,2.448,1305,2.448,1306,2.13,1307,2.448,1308,2.448,1309,2.448,1310,2.448,1311,2.448,1312,2.448,1313,2.448,1314,2.448,1315,2.448,1316,2.448,1317,2.448,1318,2.13,1319,2.448,1320,2.448]],["title/classes/FirebaseDataService.html",[33,0.15,1321,3.111]],["body/classes/FirebaseDataService.html",[3,0.096,4,0.096,9,0.084,20,0.315,21,1.163,23,0.738,24,1.163,27,1.118,28,0.014,30,0.276,32,0.096,33,0.12,58,2.222,65,2.123,101,0.962,138,1.202,147,0.008,148,0.008,181,3.268,204,4.204,205,1.223,211,2.445,216,1.805,218,2.907,239,2.459,240,0.801,241,1.163,242,1.076,257,3.639,262,1.512,284,1.388,286,2.233,301,1.162,327,3.105,433,1.771,438,2.907,444,1.88,445,3.105,447,2.807,449,2.867,451,0.949,452,1.771,458,2.168,488,3.369,584,2.495,597,4.754,616,2.934,617,2.159,688,2.685,694,2.738,698,3.419,705,1.88,707,2.658,718,1.6,759,1.806,784,3.044,787,3.369,830,2.34,831,3.959,834,3.562,838,4.037,839,1.988,842,2.123,865,2.34,916,3.342,999,2.59,1021,2.878,1093,2.459,1138,3.342,1139,4.037,1141,5.246,1142,6.689,1143,4.037,1145,4.037,1147,4.037,1149,4.037,1151,4.037,1153,4.037,1154,4.348,1158,4.037,1160,3.237,1163,1.988,1187,3.105,1189,3.105,1199,4.626,1221,4.037,1223,4.929,1228,5.145,1230,3.105,1234,5.56,1241,3.105,1247,4.039,1251,3.105,1261,2.123,1306,2.76,1321,4.734,1322,2.76,1323,2.76,1324,3.173,1325,4.641,1326,4.641,1327,4.348,1328,3.342,1329,3.173,1330,4.641,1331,6.71,1332,6.71,1333,3.173,1334,6.037,1335,6.037,1336,4.641,1337,3.173,1338,3.342,1339,3.173,1340,4.641,1341,4.641,1342,3.173,1343,3.342,1344,4.641,1345,4.641,1346,4.641,1347,3.173,1348,3.173,1349,3.173,1350,3.173,1351,3.173,1352,3.342,1353,3.342,1354,1.988,1355,2.76,1356,4.641,1357,2.76,1358,2.76,1359,3.173,1360,5.487,1361,3.173,1362,3.173,1363,3.173,1364,4.641,1365,4.641,1366,3.342,1367,3.173,1368,4.641,1369,3.173,1370,3.173,1371,3.173,1372,3.173]],["title/interfaces/FirebaseDocument.html",[901,1.065,1373,2.654]],["body/interfaces/FirebaseDocument.html",[3,0.064,4,0.036,9,0.175,13,0.816,20,0.12,27,1.125,28,0.014,29,0.733,30,0.21,31,0.102,32,0.103,33,0.046,41,0.808,50,0.509,58,0.489,90,0.418,99,0.324,101,0.805,108,0.374,118,0.313,120,0.374,138,1.104,141,1.746,144,0.374,147,0.004,148,0.004,163,1.101,180,2.42,181,2.458,188,0.723,202,1.779,203,1.67,204,2.425,205,0.454,207,3.359,208,0.674,209,2.809,211,2.165,212,0.509,215,2.792,220,0.808,221,0.555,225,0.609,228,2.15,231,1.179,237,0.639,239,1.802,240,0.607,243,1.182,244,2.15,246,0.47,249,1.727,250,2.15,254,2.379,255,0.712,259,3.85,260,0.869,261,2.959,262,1.488,263,2.787,264,2.284,265,2.671,266,3.088,273,0.869,274,2.425,276,1.499,277,1.862,278,2.358,282,0.933,284,1.392,286,0.581,288,3.334,291,2.131,292,0.933,295,0.348,296,1.301,301,1.2,302,1.427,313,0.808,315,0.869,320,0.869,321,2.879,322,0.869,323,2.276,324,1.893,326,2.788,334,0.869,339,0.756,351,0.674,357,0.581,364,2.051,397,3.267,424,1.637,427,0.712,430,0.581,435,1.893,436,0.808,438,0.756,440,5.121,441,4.031,442,2.258,444,1.146,447,1.342,448,1.773,449,0.824,450,0.569,451,0.633,455,0.489,456,0.47,458,2.13,465,1.301,479,0.531,483,0.712,484,2.131,485,2.45,488,3.867,494,2.15,508,1.182,522,4.086,584,0.435,616,2.372,617,2.292,619,1.417,629,1.327,678,0.808,687,0.808,688,2.437,694,0.712,698,1.862,701,0.674,703,0.858,705,1.568,706,2.276,707,0.933,716,3.836,717,0.756,722,1.417,724,0.974,732,0.869,736,0.869,763,1.068,764,2.946,778,0.933,780,0.509,781,0.756,784,1.427,787,0.674,830,1.427,831,0.712,832,0.869,834,1.25,852,1.525,866,2.038,875,0.869,883,0.869,896,0.869,901,0.76,902,0.531,923,0.869,931,2.879,932,0.869,941,2.425,944,0.808,947,3.693,948,2.515,960,1.893,990,0.869,998,2.038,999,0.674,1002,0.808,1003,2.131,1015,0.808,1021,2.675,1029,0.869,1031,0.869,1041,1.417,1054,0.808,1055,3.025,1073,0.869,1093,1.802,1110,0.609,1157,1.417,1195,1.327,1196,0.869,1207,0.869,1208,0.869,1211,2.038,1213,0.869,1217,0.869,1218,1.525,1219,3.07,1223,4.558,1224,4.634,1225,2.038,1228,5.039,1229,0.869,1230,0.808,1233,0.869,1234,5.248,1240,0.869,1241,4.766,1247,0.808,1251,0.808,1259,2.131,1271,2.45,1327,4.221,1338,2.038,1343,0.869,1352,2.45,1353,2.788,1366,0.869,1373,3.576,1374,0.869,1375,3.827,1376,0.947,1377,0.947,1378,1.661,1379,0.947,1380,0.947,1381,0.947,1382,0.947,1383,2.219,1384,0.947,1385,0.947,1386,2.219,1387,3.036,1388,0.947,1389,1.661,1390,1.661,1391,0.947,1392,0.947,1393,0.869,1394,0.947,1395,0.947,1396,0.947,1397,0.947,1398,1.661,1399,0.947,1400,3.343,1401,2.668,1402,0.947,1403,1.661,1404,0.947,1405,1.661,1406,1.661,1407,0.869,1408,1.417,1409,0.947,1410,0.947,1411,1.525,1412,0.947,1413,0.947,1414,0.947,1415,0.947,1416,0.947,1417,0.947,1418,0.947,1419,0.947,1420,0.947,1421,0.947,1422,0.947,1423,2.038,1424,3.036,1425,1.525,1426,0.947,1427,1.661,1428,1.893,1429,0.869,1430,0.869,1431,0.869,1432,0.869,1433,0.869,1434,0.869,1435,0.869,1436,3.07,1437,0.947,1438,0.947,1439,0.947,1440,4.476,1441,0.947,1442,1.661,1443,0.947,1444,4.342,1445,0.947,1446,0.947,1447,0.947,1448,2.219,1449,0.947,1450,0.947,1451,0.947,1452,0.947,1453,0.947,1454,4.192,1455,1.661,1456,0.947,1457,1.525,1458,0.947,1459,0.947,1460,1.661,1461,1.661,1462,3.827,1463,5.906,1464,2.219,1465,3.343,1466,0.947,1467,2.219,1468,3.827,1469,0.947,1470,0.947,1471,0.947,1472,4.022,1473,1.327,1474,2.852,1475,2.852,1476,0.947,1477,0.947,1478,1.661,1479,2.131,1480,1.661,1481,2.668,1482,3.343,1483,2.788,1484,2.219,1485,0.947,1486,0.947,1487,1.661,1488,0.808,1489,0.947,1490,5.586,1491,1.773,1492,0.947,1493,0.947,1494,1.661,1495,3.036,1496,0.947,1497,0.808,1498,3.343,1499,1.661,1500,0.947,1501,2.219,1502,0.947,1503,1.661,1504,0.947,1505,0.947,1506,4.596,1507,5.619,1508,5.551,1509,4.192,1510,0.947,1511,3.036,1512,0.947,1513,0.947,1514,4.192,1515,0.947,1516,0.947,1517,0.947,1518,0.947,1519,0.947,1520,1.661,1521,0.947,1522,1.661,1523,2.219,1524,1.661,1525,2.219,1526,0.808,1527,0.947,1528,2.219,1529,1.661,1530,0.947,1531,0.869,1532,0.947,1533,0.947,1534,2.219,1535,1.661,1536,0.947,1537,1.661,1538,0.947,1539,2.219,1540,2.668,1541,0.947,1542,0.947,1543,3.827,1544,2.276,1545,0.947,1546,1.661,1547,3.036,1548,0.947,1549,2.219,1550,1.661,1551,1.893,1552,0.947,1553,2.59,1554,0.947,1555,3.074,1556,2.59,1557,0.947,1558,3.309,1559,2.038,1560,2.219,1561,1.661,1562,2.219,1563,0.947,1564,0.947,1565,1.661,1566,0.947,1567,0.947,1568,1.661,1569,0.947,1570,0.947,1571,0.947,1572,0.947,1573,0.947,1574,0.947,1575,0.947,1576,0.947,1577,0.947,1578,2.219,1579,2.668,1580,0.947,1581,0.947,1582,0.947,1583,0.947,1584,0.947,1585,0.947,1586,0.947,1587,2.668,1588,0.947,1589,0.947,1590,0.947,1591,0.947,1592,0.947,1593,0.947,1594,0.947,1595,0.947,1596,0.947,1597,2.668,1598,0.947,1599,0.947,1600,0.869,1601,0.947,1602,0.947,1603,0.947,1604,1.661,1605,2.668,1606,1.661,1607,0.947,1608,3.343,1609,0.947,1610,0.947,1611,0.947,1612,2.668,1613,2.668,1614,0.947,1615,1.661,1616,1.661,1617,0.947,1618,2.219,1619,0.947,1620,0.947,1621,1.661,1622,0.947,1623,3.036,1624,0.947,1625,2.219,1626,0.947,1627,0.947,1628,1.661,1629,2.668,1630,1.417,1631,0.947,1632,0.947,1633,0.947,1634,2.219,1635,2.852,1636,1.661,1637,0.947,1638,1.661,1639,0.947,1640,0.947,1641,0.947,1642,0.947,1643,1.661,1644,0.947,1645,0.808,1646,2.668,1647,2.219,1648,0.947,1649,0.947,1650,0.947,1651,0.947,1652,0.947,1653,0.947,1654,0.947,1655,0.947,1656,0.947,1657,0.869,1658,0.947,1659,1.661,1660,0.947,1661,1.661,1662,0.947,1663,0.947,1664,0.947,1665,0.947,1666,0.947,1667,1.661,1668,0.947,1669,0.947,1670,0.947,1671,0.947,1672,0.947,1673,3.343,1674,0.947,1675,0.947,1676,0.947,1677,3.343,1678,0.869,1679,0.947,1680,2.668,1681,0.947,1682,1.661,1683,0.947,1684,0.947,1685,0.947,1686,0.947]],["title/classes/FirebaseMediaService.html",[33,0.15,587,2.654]],["body/classes/FirebaseMediaService.html",[3,0.137,4,0.137,9,0.208,20,0.451,21,1.221,23,1.057,24,1.032,27,1.044,28,0.014,30,0.304,32,0.18,33,0.172,90,2.746,99,1.599,101,0.745,147,0.01,148,0.01,205,0.955,207,3.613,211,2.412,216,2.108,218,3.731,221,2.739,231,2.064,240,0.59,241,1.032,242,0.955,262,1.367,263,2.514,264,3.514,274,4.162,276,3.155,277,2.865,284,1.221,301,0.955,364,3.155,421,4.289,444,2.412,447,2.766,449,2.743,451,1.359,457,1.841,458,1.359,584,2.754,587,4.716,588,3.564,593,4.159,616,2.863,617,1.462,688,2.302,701,3.324,759,2.318,778,2.001,839,2.848,901,1.22,916,4.289,948,3.514,1003,3.731,1021,1.841,1039,3.564,1055,3.914,1163,2.848,1187,3.985,1189,3.985,1194,3.985,1199,3.273,1214,5.739,1261,3.041,1323,3.954,1328,4.289,1428,3.985,1473,3.731,1474,3.985,1475,4.716,1479,3.731,1491,4.793,1526,3.041,1555,5.024,1556,3.985,1645,3.985,1687,3.564,1688,4.546,1689,5.181,1690,5.181,1691,5.181,1692,4.67,1693,4.67,1694,4.546,1695,5.181,1696,5.181,1697,4.67,1698,5.181,1699,5.181,1700,5.181,1701,5.181,1702,5.779,1703,3.041,1704,3.041,1705,3.041,1706,3.041,1707,3.954,1708,3.954,1709,3.954,1710,3.954,1711,3.954,1712,3.954,1713,3.954,1714,3.954]],["title/interfaces/FirebaseStorageFile.html",[901,1.065,1408,2.654]],["body/interfaces/FirebaseStorageFile.html",[3,0.064,4,0.036,9,0.18,13,0.816,20,0.12,27,1.125,28,0.014,29,0.733,30,0.21,31,0.102,32,0.103,33,0.046,41,0.808,50,0.509,58,0.489,90,0.418,99,0.324,101,0.805,108,0.374,118,0.313,120,0.374,138,1.104,141,1.746,144,0.374,147,0.004,148,0.004,163,1.101,180,2.42,181,2.695,188,0.723,202,1.779,203,1.67,204,2.425,205,0.454,207,3.359,208,0.674,209,2.809,211,2.165,212,0.509,215,2.792,220,0.808,221,0.555,225,0.609,228,2.15,231,1.179,237,0.639,239,1.802,240,0.607,243,1.182,244,2.15,246,0.47,249,1.727,250,2.15,254,2.379,255,0.712,259,3.85,260,0.869,261,2.959,262,1.477,263,2.787,264,2.284,265,2.671,266,3.088,273,0.869,274,2.425,276,1.499,277,1.862,278,2.358,282,0.933,284,1.394,286,0.581,288,3.334,291,2.131,292,0.933,295,0.348,296,1.301,301,1.2,302,1.427,313,0.808,315,0.869,320,0.869,321,2.879,322,0.869,323,2.276,324,1.893,326,2.788,334,0.869,339,0.756,351,0.674,357,0.581,364,2.051,397,3.267,424,1.637,427,0.712,430,0.581,435,1.893,436,0.808,438,0.756,440,5.121,441,4.031,442,2.258,444,1.146,447,1.342,448,1.773,449,0.824,450,0.569,451,0.633,455,0.489,456,0.47,458,2.13,465,1.301,479,0.531,483,0.712,484,2.131,485,2.45,488,3.867,494,2.15,508,1.182,522,4.086,584,0.435,616,2.372,617,2.292,619,1.417,629,1.327,678,0.808,687,0.808,688,2.437,694,0.712,698,1.862,701,0.674,703,0.858,705,1.568,706,2.276,707,0.933,716,3.836,717,0.756,722,1.417,724,0.974,732,0.869,736,0.869,763,1.068,764,2.946,778,0.933,780,0.509,781,0.756,784,1.427,787,0.674,830,1.427,831,0.712,832,0.869,834,1.25,852,1.525,866,2.038,875,0.869,883,0.869,896,0.869,901,0.76,902,0.531,923,0.869,931,2.879,932,0.869,941,2.425,944,0.808,947,3.693,948,2.515,960,1.893,990,0.869,998,2.038,999,0.674,1002,0.808,1003,2.131,1015,0.808,1021,2.568,1029,0.869,1031,0.869,1041,1.417,1054,0.808,1055,3.025,1073,0.869,1093,1.802,1110,0.609,1157,1.417,1195,1.327,1196,0.869,1207,0.869,1208,0.869,1211,2.038,1213,0.869,1217,0.869,1218,1.525,1219,3.07,1223,4.558,1224,4.634,1225,2.038,1228,5.039,1229,0.869,1230,0.808,1233,0.869,1234,5.248,1240,0.869,1241,4.766,1247,0.808,1251,0.808,1259,2.131,1271,2.45,1327,4.221,1338,2.038,1343,0.869,1352,2.45,1353,2.788,1366,0.869,1373,3.431,1374,0.869,1375,3.343,1376,0.947,1377,0.947,1378,1.661,1379,0.947,1380,0.947,1381,0.947,1382,0.947,1383,2.219,1384,0.947,1385,0.947,1386,2.219,1387,3.036,1388,0.947,1389,1.661,1390,1.661,1391,0.947,1392,0.947,1393,0.869,1394,0.947,1395,0.947,1396,0.947,1397,0.947,1398,1.661,1399,0.947,1400,3.343,1401,2.668,1402,0.947,1403,1.661,1404,0.947,1405,1.661,1406,1.661,1407,0.869,1408,1.893,1409,0.947,1410,0.947,1411,1.525,1412,0.947,1413,0.947,1414,0.947,1415,0.947,1416,0.947,1417,0.947,1418,0.947,1419,0.947,1420,0.947,1421,0.947,1422,0.947,1423,2.038,1424,3.036,1425,1.525,1426,0.947,1427,1.661,1428,1.893,1429,0.869,1430,0.869,1431,0.869,1432,0.869,1433,0.869,1434,0.869,1435,0.869,1436,3.07,1437,0.947,1438,0.947,1439,0.947,1440,4.476,1441,0.947,1442,1.661,1443,0.947,1444,4.342,1445,0.947,1446,0.947,1447,0.947,1448,2.219,1449,0.947,1450,0.947,1451,0.947,1452,0.947,1453,0.947,1454,4.192,1455,1.661,1456,0.947,1457,1.525,1458,0.947,1459,0.947,1460,1.661,1461,1.661,1462,3.827,1463,5.906,1464,2.219,1465,3.343,1466,0.947,1467,2.219,1468,3.827,1469,0.947,1470,0.947,1471,0.947,1472,4.022,1473,1.327,1474,2.852,1475,2.852,1476,0.947,1477,0.947,1478,1.661,1479,2.131,1480,1.661,1481,2.668,1482,3.343,1483,2.788,1484,2.219,1485,0.947,1486,0.947,1487,1.661,1488,0.808,1489,0.947,1490,5.586,1491,1.773,1492,0.947,1493,0.947,1494,1.661,1495,3.036,1496,0.947,1497,0.808,1498,3.343,1499,1.661,1500,0.947,1501,2.219,1502,0.947,1503,1.661,1504,0.947,1505,0.947,1506,4.596,1507,5.619,1508,5.551,1509,4.192,1510,0.947,1511,3.036,1512,0.947,1513,0.947,1514,4.192,1515,0.947,1516,0.947,1517,0.947,1518,0.947,1519,0.947,1520,1.661,1521,0.947,1522,1.661,1523,2.219,1524,1.661,1525,2.219,1526,0.808,1527,0.947,1528,2.219,1529,1.661,1530,0.947,1531,0.869,1532,0.947,1533,0.947,1534,2.219,1535,1.661,1536,0.947,1537,1.661,1538,0.947,1539,2.219,1540,2.668,1541,0.947,1542,0.947,1543,3.827,1544,2.276,1545,0.947,1546,1.661,1547,3.036,1548,0.947,1549,2.219,1550,1.661,1551,1.893,1552,0.947,1553,2.59,1554,0.947,1555,3.074,1556,2.59,1557,0.947,1558,3.309,1559,2.038,1560,2.219,1561,1.661,1562,2.219,1563,0.947,1564,0.947,1565,1.661,1566,0.947,1567,0.947,1568,1.661,1569,0.947,1570,0.947,1571,0.947,1572,0.947,1573,0.947,1574,0.947,1575,0.947,1576,0.947,1577,0.947,1578,2.219,1579,2.668,1580,0.947,1581,0.947,1582,0.947,1583,0.947,1584,0.947,1585,0.947,1586,0.947,1587,2.668,1588,0.947,1589,0.947,1590,0.947,1591,0.947,1592,0.947,1593,0.947,1594,0.947,1595,0.947,1596,0.947,1597,2.668,1598,0.947,1599,0.947,1600,0.869,1601,0.947,1602,0.947,1603,0.947,1604,1.661,1605,2.668,1606,1.661,1607,0.947,1608,3.343,1609,0.947,1610,0.947,1611,0.947,1612,2.668,1613,2.668,1614,0.947,1615,1.661,1616,1.661,1617,0.947,1618,2.219,1619,0.947,1620,0.947,1621,1.661,1622,0.947,1623,3.036,1624,0.947,1625,2.219,1626,0.947,1627,0.947,1628,1.661,1629,2.668,1630,1.417,1631,0.947,1632,0.947,1633,0.947,1634,2.219,1635,2.852,1636,1.661,1637,0.947,1638,1.661,1639,0.947,1640,0.947,1641,0.947,1642,0.947,1643,1.661,1644,0.947,1645,0.808,1646,2.668,1647,2.219,1648,0.947,1649,0.947,1650,0.947,1651,0.947,1652,0.947,1653,0.947,1654,0.947,1655,0.947,1656,0.947,1657,0.869,1658,0.947,1659,1.661,1660,0.947,1661,1.661,1662,0.947,1663,0.947,1664,0.947,1665,0.947,1666,0.947,1667,1.661,1668,0.947,1669,0.947,1670,0.947,1671,0.947,1672,0.947,1673,3.343,1674,0.947,1675,0.947,1676,0.947,1677,3.343,1678,0.869,1679,0.947,1680,2.668,1681,0.947,1682,1.661,1683,0.947,1684,0.947,1685,0.947,1686,0.947]],["title/interfaces/FirebaseUserCredential.html",[901,1.065,1259,2.485]],["body/interfaces/FirebaseUserCredential.html",[3,0.064,4,0.037,9,0.175,13,0.817,20,0.12,27,1.125,28,0.014,29,0.734,30,0.211,31,0.102,32,0.103,33,0.046,41,0.809,50,0.51,58,0.49,90,0.419,99,0.325,101,0.806,108,0.375,118,0.313,120,0.375,138,1.105,141,1.771,144,0.375,147,0.004,148,0.004,163,1.103,180,2.421,181,2.46,188,0.724,202,1.779,203,1.672,204,2.428,205,0.455,207,3.361,208,0.675,209,2.81,211,2.167,212,0.51,215,2.795,220,0.809,221,0.556,225,0.61,228,2.152,231,1.181,237,0.641,239,1.805,240,0.595,243,1.184,244,2.152,246,0.471,249,1.728,250,2.152,254,2.382,255,0.714,259,3.853,260,0.871,261,2.961,262,1.477,263,2.788,264,2.287,265,2.674,266,3.09,273,0.871,274,2.428,276,1.502,277,1.865,278,2.361,282,0.934,284,1.39,286,0.582,288,3.335,291,2.134,292,0.934,295,0.349,296,1.303,301,1.2,302,1.428,313,0.809,315,0.871,320,0.871,321,2.882,322,0.871,323,2.279,324,1.896,326,2.791,334,0.871,339,0.758,351,0.675,357,0.582,364,2.053,397,3.27,424,1.639,427,0.714,430,0.582,435,1.896,436,0.809,438,0.758,440,5.122,441,4.034,442,2.26,444,1.148,447,1.343,448,1.776,449,0.826,450,0.57,451,0.634,455,0.49,456,0.471,458,2.131,465,1.303,479,0.532,483,0.714,484,2.134,485,2.453,488,3.869,494,2.152,508,1.184,522,4.088,584,0.435,616,2.374,617,2.293,619,1.419,629,1.329,678,0.809,687,0.809,688,2.438,694,0.714,698,1.865,701,0.675,703,0.859,705,1.57,706,2.279,707,0.934,716,3.838,717,0.758,722,1.419,724,0.976,732,0.871,736,0.871,763,1.07,764,2.948,778,0.934,780,0.51,781,0.758,784,1.429,787,0.675,830,1.429,831,0.714,832,0.871,834,1.252,852,1.528,866,2.041,875,0.871,883,0.871,896,0.871,901,0.761,902,0.532,923,0.871,931,2.882,932,0.871,941,2.428,944,0.809,947,3.697,948,2.518,960,1.896,990,0.871,998,2.041,999,0.675,1002,0.809,1003,2.134,1015,0.809,1021,2.57,1029,0.871,1031,0.871,1041,1.419,1054,0.809,1055,3.027,1073,0.871,1093,1.805,1110,0.61,1157,1.419,1195,1.329,1196,0.871,1207,0.871,1208,0.871,1211,2.041,1213,0.871,1217,0.871,1218,1.528,1219,3.074,1223,4.56,1224,4.637,1225,2.041,1228,5.04,1229,0.871,1230,0.809,1233,0.871,1234,5.249,1240,0.871,1241,4.768,1247,0.809,1251,0.809,1259,2.428,1271,2.453,1327,4.224,1338,2.041,1343,0.871,1352,2.453,1353,2.791,1366,0.871,1373,3.434,1374,0.871,1375,3.347,1376,0.948,1377,0.948,1378,1.664,1379,0.948,1380,0.948,1381,0.948,1382,0.948,1383,2.223,1384,0.948,1385,0.948,1386,2.223,1387,3.039,1388,0.948,1389,1.664,1390,1.664,1391,0.948,1392,0.948,1393,0.871,1394,0.948,1395,0.948,1396,0.948,1397,0.948,1398,1.664,1399,0.948,1400,3.347,1401,2.671,1402,0.948,1403,1.664,1404,0.948,1405,1.664,1406,2.671,1407,0.871,1408,1.419,1409,0.948,1410,0.948,1411,1.528,1412,0.948,1413,0.948,1414,0.948,1415,0.948,1416,0.948,1417,0.948,1418,0.948,1419,0.948,1420,0.948,1421,0.948,1422,0.948,1423,2.041,1424,3.039,1425,1.528,1426,0.948,1427,1.664,1428,1.896,1429,0.871,1430,0.871,1431,0.871,1432,0.871,1433,0.871,1434,0.871,1435,0.871,1436,3.074,1437,0.948,1438,0.948,1439,0.948,1440,4.48,1441,0.948,1442,1.664,1443,0.948,1444,4.346,1445,0.948,1446,0.948,1447,0.948,1448,2.223,1449,0.948,1450,0.948,1451,0.948,1452,0.948,1453,0.948,1454,4.196,1455,1.664,1456,0.948,1457,1.528,1458,0.948,1459,0.948,1460,1.664,1461,1.664,1462,3.831,1463,5.908,1464,2.223,1465,3.347,1466,0.948,1467,2.223,1468,3.831,1469,0.948,1470,0.948,1471,0.948,1472,4.025,1473,1.329,1474,2.855,1475,2.855,1476,0.948,1477,0.948,1478,1.664,1479,2.134,1480,1.664,1481,2.671,1482,3.347,1483,2.791,1484,2.223,1485,0.948,1486,0.948,1487,1.664,1488,0.809,1489,0.948,1490,5.588,1491,1.776,1492,0.948,1493,0.948,1494,1.664,1495,3.039,1496,0.948,1497,0.809,1498,3.347,1499,1.664,1500,0.948,1501,2.223,1502,0.948,1503,1.664,1504,0.948,1505,0.948,1506,4.599,1507,5.621,1508,5.554,1509,4.196,1510,0.948,1511,3.039,1512,0.948,1513,0.948,1514,4.196,1515,0.948,1516,0.948,1517,0.948,1518,0.948,1519,0.948,1520,1.664,1521,0.948,1522,1.664,1523,2.223,1524,1.664,1525,2.223,1526,0.809,1527,0.948,1528,2.223,1529,1.664,1530,0.948,1531,0.871,1532,0.948,1533,0.948,1534,2.223,1535,1.664,1536,0.948,1537,1.664,1538,0.948,1539,2.223,1540,2.671,1541,0.948,1542,0.948,1543,3.831,1544,2.279,1545,0.948,1546,1.664,1547,3.039,1548,0.948,1549,2.223,1550,1.664,1551,1.896,1552,0.948,1553,2.593,1554,0.948,1555,3.078,1556,2.593,1557,0.948,1558,3.313,1559,2.041,1560,2.223,1561,1.664,1562,2.223,1563,0.948,1564,0.948,1565,1.664,1566,0.948,1567,0.948,1568,1.664,1569,0.948,1570,0.948,1571,0.948,1572,0.948,1573,0.948,1574,0.948,1575,0.948,1576,0.948,1577,0.948,1578,2.223,1579,2.671,1580,0.948,1581,0.948,1582,0.948,1583,0.948,1584,0.948,1585,0.948,1586,0.948,1587,2.671,1588,0.948,1589,0.948,1590,0.948,1591,0.948,1592,0.948,1593,0.948,1594,0.948,1595,0.948,1596,0.948,1597,2.671,1598,0.948,1599,0.948,1600,0.871,1601,0.948,1602,0.948,1603,0.948,1604,1.664,1605,2.671,1606,1.664,1607,0.948,1608,3.347,1609,0.948,1610,0.948,1611,0.948,1612,2.671,1613,2.671,1614,0.948,1615,1.664,1616,1.664,1617,0.948,1618,2.223,1619,0.948,1620,0.948,1621,1.664,1622,0.948,1623,3.039,1624,0.948,1625,2.223,1626,0.948,1627,0.948,1628,1.664,1629,2.671,1630,1.419,1631,0.948,1632,0.948,1633,0.948,1634,2.223,1635,2.855,1636,1.664,1637,0.948,1638,1.664,1639,0.948,1640,0.948,1641,0.948,1642,0.948,1643,1.664,1644,0.948,1645,0.809,1646,2.671,1647,2.223,1648,0.948,1649,0.948,1650,0.948,1651,0.948,1652,0.948,1653,0.948,1654,0.948,1655,0.948,1656,0.948,1657,0.871,1658,0.948,1659,1.664,1660,0.948,1661,1.664,1662,0.948,1663,0.948,1664,0.948,1665,0.948,1666,0.948,1667,1.664,1668,0.948,1669,0.948,1670,0.948,1671,0.948,1672,0.948,1673,3.347,1674,0.948,1675,0.948,1676,0.948,1677,3.347,1678,0.871,1679,0.948,1680,2.671,1681,0.948,1682,1.664,1683,0.948,1684,0.948,1685,0.948,1686,0.948]],["title/components/HomePage.html",[0,0.413,115,1.104]],["body/components/HomePage.html",[0,0.742,1,1.207,2,2.115,3,0.193,4,0.126,5,1.45,6,1.45,7,1.45,8,1.45,9,0.111,13,1.207,14,2.848,15,2.744,16,1.954,18,1.954,20,0.415,21,0.977,23,1.587,24,1.105,27,0.62,28,0.014,29,1.084,30,0.326,31,0.354,32,0.126,33,0.159,45,1.842,46,3.003,47,2.11,48,2.843,49,2.217,50,1.766,52,2.986,57,1.842,66,2.335,76,3.013,78,2.621,87,2.482,88,2.013,90,1.45,91,1.924,95,1.009,96,1.954,97,1.954,98,1.45,99,1.831,100,1.45,101,0.854,102,1.45,103,1.207,104,1.45,105,1.251,106,1.45,107,1.251,108,1.298,109,1.954,110,1.251,111,1.397,112,1.45,113,1.207,114,2.209,115,1.898,116,1.45,117,1.207,118,1.844,119,1.251,120,1.977,121,1.813,122,1.954,123,1.251,124,1.251,125,1.298,126,1.954,127,1.251,128,1.397,129,1.45,130,1.207,131,1.251,132,1.45,133,1.251,134,1.298,135,1.207,136,1.45,137,1.251,138,1.084,139,1.45,140,1.251,141,1.645,142,1.207,143,1.251,144,1.298,145,1.45,146,1.45,147,0.009,148,0.009,179,1.397,188,1.053,195,3.373,200,4.202,202,1.265,205,0.904,211,2.283,212,3.005,216,2.242,221,2.592,229,2.379,236,3.067,238,3.531,240,0.632,241,0.977,242,0.904,244,2.843,245,4.904,246,2.194,262,1.236,284,1.234,299,3.281,301,1.094,302,1.568,349,3.64,352,1.924,353,2.986,374,2.11,433,3.146,486,4.06,506,4.06,584,2.889,616,2.385,688,2.209,759,2.194,827,3.761,1021,2.971,1025,2.799,1411,4.591,1715,3.64,1716,6.375,1717,5.637,1718,3.761,1719,4.185,1720,4.185,1721,5.637,1722,4.185,1723,4.185,1724,2.799,1725,4.185,1726,4.185,1727,3.64,1728,4.42,1729,2.621,1730,3.64]],["title/modules/HomePageModule.html",[149,1.027,1731,2.857]],["body/modules/HomePageModule.html",[3,0.173,4,0.173,9,0.152,28,0.014,30,0.369,31,0.486,32,0.173,33,0.217,95,1.383,115,2.216,147,0.012,148,0.012,149,1.485,151,1.914,152,2.637,153,3.726,154,2.892,155,2.42,156,2.064,161,3.475,162,2.892,163,2.231,165,2.579,166,2.579,167,3.846,168,3.038,169,4.066,170,2.323,171,3.651,172,2.231,173,3.2,380,4.219,404,4.129,506,4.129,1731,5.919,1732,4.988,1733,4.988,1734,4.988,1735,5.328,1736,5.734,1737,4.988]],["title/modules/HomePageRoutingModule.html",[149,1.027,1735,2.654]],["body/modules/HomePageRoutingModule.html",[0,0.641,3,0.186,4,0.186,9,0.163,28,0.014,30,0.349,31,0.522,32,0.186,33,0.233,115,2,147,0.012,148,0.012,151,2.056,156,2.217,165,2.304,166,2.69,176,3.438,177,3.353,178,4.013,179,2.056,180,2.135,181,2.832,182,3.634,1735,4.81,1737,5.358,1738,6.16]],["title/injectables/HttpClientProvider.html",[450,1.065,599,2.654]],["body/injectables/HttpClientProvider.html",[3,0.103,4,0.103,9,0.09,20,0.337,21,0.845,24,1.226,27,1.143,28,0.014,29,1.263,30,0.223,31,0.288,32,0.103,33,0.129,50,2.9,101,0.886,147,0.008,148,0.008,205,1.227,240,0.789,241,1.226,242,1.135,284,1.378,295,1.645,301,1.29,327,4.416,424,3.974,442,3.246,447,2.819,450,1.309,451,1.458,455,1.376,456,1.322,599,3.263,684,1.635,688,2.788,689,5.811,780,2.058,784,3.328,1044,6.441,1083,5.096,1138,4.753,1141,4.416,1154,5.511,1635,5.12,1739,5.678,1740,2.956,1741,5.422,1742,5.742,1743,4.962,1744,2.956,1745,3.398,1746,6.573,1747,7.226,1748,4.242,1749,3.398,1750,4.242,1751,3.398,1752,2.956,1753,6.919,1754,6.657,1755,3.398,1756,5.704,1757,5.387,1758,2.956,1759,3.398,1760,2.956,1761,3.398,1762,2.956,1763,4.473,1764,4.962,1765,4.962,1766,3.398,1767,5.422,1768,4.489,1769,3.512]],["title/injectables/HttpClientWebProvider.html",[450,1.065,589,2.857]],["body/injectables/HttpClientWebProvider.html",[3,0.08,4,0.08,9,0.07,20,0.264,21,0.705,23,1.148,24,1.222,27,1.129,28,0.014,29,1.053,30,0.253,31,0.225,32,0.08,33,0.101,50,2.976,99,0.714,101,0.882,147,0.007,148,0.007,155,1.122,205,1.204,229,2.333,240,0.786,241,1.222,242,1.131,249,1.686,284,1.33,295,1.993,301,1.275,302,1.748,327,3.986,357,1.279,387,3.648,388,1.569,424,3.928,442,3.306,447,2.746,450,1.091,451,1.216,455,1.077,456,1.035,457,1.077,458,2.066,465,3.1,589,2.928,591,4.926,599,4.717,600,2.313,617,1.779,684,1.279,688,2.703,780,1.716,784,3.004,1044,6.456,1055,1.341,1083,4.707,1093,2.929,1138,4.29,1141,3.986,1154,5.453,1178,2.085,1189,2.72,1199,4.707,1261,1.779,1635,4.866,1739,4.336,1741,4.81,1742,5.182,1743,4.295,1744,2.313,1746,6.561,1747,7.182,1748,2.313,1750,3.537,1752,2.313,1753,6.988,1754,6.972,1757,5.529,1758,2.313,1760,2.313,1762,2.313,1763,3.871,1764,4.295,1765,4.295,1767,4.81,1768,3.982,1769,2.928,1770,2.313,1771,4.066,1772,4.937,1773,2.659,1774,2.659,1775,4.066,1776,4.066,1777,2.659,1778,6.283,1779,2.659,1780,2.659,1781,4.937,1782,2.659,1783,2.659,1784,2.659,1785,2.659,1786,2.659,1787,2.659,1788,2.659,1789,2.659,1790,4.066,1791,2.659,1792,4.937,1793,5.958,1794,2.659,1795,4.937,1796,2.659,1797,2.659,1798,4.066,1799,2.659,1800,4.066,1801,2.659,1802,2.659,1803,2.659,1804,2.313]],["title/components/IncidentDataPage.html",[0,0.413,117,1.144]],["body/components/IncidentDataPage.html",[0,0.773,1,1.01,2,1.545,3,0.202,4,0.106,5,1.214,6,1.214,7,1.214,8,1.214,9,0.093,11,1.603,12,2.088,13,1.01,14,2.797,15,2.695,16,1.727,18,1.727,20,0.347,21,0.863,22,2.364,23,1.47,24,1.157,27,0.738,28,0.014,29,1.291,30,0.289,31,0.297,32,0.106,33,0.133,45,2.554,46,2.94,47,1.766,48,1.766,49,2.64,50,2.103,57,3.055,58,2.35,63,1.955,64,3.238,66,2.781,68,2.906,69,2.64,71,2.705,72,1.685,73,2.292,83,1.855,87,3.355,88,2.791,90,1.214,91,1.611,94,1.855,95,0.844,96,1.727,97,1.727,98,1.214,99,1.696,100,1.214,101,0.869,102,1.214,103,1.01,104,1.214,105,1.047,106,1.214,107,1.047,108,1.086,109,1.727,110,1.047,111,1.169,112,1.214,113,1.01,114,2.011,115,0.974,116,1.214,117,1.823,118,2.091,119,1.047,120,1.96,121,1.603,122,1.727,123,1.047,124,1.047,125,1.086,126,1.727,127,1.047,128,1.169,129,1.214,130,1.01,131,1.047,132,1.214,133,1.047,134,1.086,135,1.01,136,1.214,137,1.047,138,0.907,139,1.214,140,1.047,141,1.524,142,1.01,143,1.047,144,1.086,145,1.214,146,1.214,147,0.008,148,0.008,179,1.169,185,2.64,188,0.931,196,1.603,198,4.183,199,5.442,202,1.118,205,0.799,216,1.89,223,2.94,228,2.513,229,2.103,230,4.335,231,1.727,232,3.908,233,4.335,234,4.335,240,0.627,241,0.863,242,0.799,249,0.94,262,0.966,272,1.855,284,0.863,295,1.01,296,2.292,301,0.93,302,1.387,314,2.522,342,3.589,347,1.855,351,1.955,352,1.611,353,2.64,356,1.855,361,2.668,364,2.64,367,1.766,370,2.292,371,2.194,372,1.542,374,1.766,479,2.194,552,1.685,553,2.398,558,2.522,652,4.643,724,2.292,759,1.939,764,2.398,780,2.103,812,3.334,819,2.343,882,3.908,966,4.549,967,3.908,1058,2.522,1103,1.955,1104,2.066,1105,2.066,1106,2.066,1107,1.955,1108,2.066,1109,2.066,1110,1.766,1113,3.589,1300,1.855,1718,4.095,1724,2.343,1728,3.908,1729,3.122,1805,4.998,1806,2.746,1807,5.046,1808,4.984,1809,3.047,1810,5.424,1811,4.984,1812,3.502,1813,4.984,1814,3.502,1815,5.498,1816,4.984,1817,3.502,1818,3.502,1819,3.047,1820,4.984,1821,3.047,1822,3.502,1823,4.335,1824,4.984,1825,4.984,1826,3.502,1827,3.502,1828,4.984,1829,4.984,1830,4.984,1831,4.984,1832,3.047,1833,4.335,1834,3.908,1835,2.746,1836,3.047]],["title/modules/IncidentDataPageModule.html",[149,1.027,1837,2.857]],["body/modules/IncidentDataPageModule.html",[3,0.169,4,0.169,9,0.148,28,0.014,30,0.373,31,0.473,32,0.169,33,0.211,95,1.345,117,2.282,118,1.755,147,0.011,148,0.011,149,1.445,151,1.862,152,2.565,153,3.682,154,2.813,155,2.354,156,2.008,161,3.418,162,2.813,163,2.171,165,2.536,166,2.536,167,3.783,168,2.955,169,3.999,170,2.26,171,3.591,172,2.171,173,3.114,196,1.795,262,1.082,387,3.783,388,3.291,389,3.495,390,4.246,391,3.114,392,3.114,393,3.783,394,4.017,407,3.732,408,3.114,409,3.114,410,3.495,411,3.495,652,3.732,1128,3.495,1805,4.017,1837,5.82,1838,4.853,1839,4.853,1840,4.853,1841,5.294,1842,4.853]],["title/modules/IncidentDataPageRoutingModule.html",[149,1.027,1841,2.654]],["body/modules/IncidentDataPageRoutingModule.html",[0,0.639,3,0.185,4,0.185,9,0.162,28,0.014,30,0.348,31,0.52,32,0.185,33,0.232,117,2.069,118,1.588,147,0.012,148,0.012,151,2.047,156,2.208,165,2.295,166,2.683,176,3.423,177,3.347,178,4.003,179,2.047,180,2.126,181,2.82,182,3.619,262,1.189,652,4.103,1128,3.842,1805,4.417,1841,4.798]],["title/components/IncidentsCircleGraphicComponent.html",[0,0.413,119,1.186]],["body/components/IncidentsCircleGraphicComponent.html",[0,0.8,1,1.176,2,1.718,3,0.167,4,0.123,5,1.413,6,1.413,7,1.413,8,1.413,9,0.108,11,1.782,12,2.265,13,1.176,14,2.841,15,2.737,16,1.92,18,1.92,20,0.404,21,0.96,22,2.525,23,1.57,24,1.169,27,0.604,28,0.014,29,1.056,30,0.309,31,0.345,32,0.123,33,0.154,58,1.652,65,2.728,71,1.652,95,1.336,96,1.92,97,1.92,98,1.413,99,1.812,100,1.413,101,0.787,102,1.413,103,1.176,104,1.413,105,1.219,106,1.413,107,1.219,108,1.265,109,1.92,110,1.219,111,1.361,112,1.413,113,1.176,114,2.18,115,1.135,116,1.413,117,1.176,118,1.435,119,2.018,120,2.382,121,2.624,122,1.92,123,1.219,124,1.219,125,1.265,126,1.92,127,1.219,128,1.361,129,1.413,130,1.176,131,1.219,132,1.413,133,1.219,134,1.265,135,1.176,136,1.413,137,1.219,138,1.056,139,1.413,140,1.219,141,1.627,142,1.176,143,1.219,144,1.265,145,1.413,146,1.413,147,0.009,148,0.009,180,1.92,188,1.035,196,2.171,197,4.063,202,1.243,205,0.654,212,2.849,213,3.268,214,3.989,215,2.793,216,2.177,217,3.47,236,2.665,240,0.624,241,0.707,242,0.654,262,1.412,300,2.937,301,0.888,302,1.541,451,1.219,452,2.276,458,1.656,479,2.439,584,2.62,616,2.525,718,2.056,759,2.156,827,3.268,842,2.728,882,3.198,972,3.198,978,4.934,999,3.092,1025,2.728,1112,4.344,1769,4.531,1843,5.534,1844,5.534,1845,3.198,1846,5.473,1847,4.819,1848,4.819,1849,4.078,1850,4.819,1851,4.819,1852,4.078,1853,3.547,1854,4.078,1855,4.078,1856,4.078,1857,4.078,1858,4.078,1859,5.54,1860,3.547,1861,4.819,1862,4.078,1863,3.547,1864,4.078,1865,3.547,1866,5.54,1867,5.54,1868,5.54,1869,3.547,1870,4.078,1871,3.547,1872,3.547,1873,3.547,1874,3.547,1875,3.547]],["title/components/IncidentsInfoComponent.html",[0,0.413,123,1.186]],["body/components/IncidentsInfoComponent.html",[0,0.745,1,0.872,2,1.388,3,0.206,4,0.091,5,1.047,6,1.047,7,1.047,8,1.047,9,0.08,11,1.44,12,1.92,13,0.872,14,2.75,15,2.648,16,1.552,18,1.552,20,0.3,21,0.776,22,2.206,23,1.241,24,1.296,27,0.873,28,0.014,29,1.527,30,0.244,31,0.256,32,0.091,33,0.114,45,1.971,46,2.348,47,1.524,48,1.524,49,1.601,50,1.275,51,2.629,52,1.601,55,1.893,57,2.596,58,1.224,61,2.995,63,1.687,64,1.687,68,2.453,69,3.615,71,2.389,73,2.453,76,2.176,83,1.601,84,1.524,85,1.783,87,3.085,88,1.454,90,1.047,91,1.39,94,1.601,95,0.729,96,1.552,97,1.552,98,1.047,99,1.583,100,1.047,101,0.854,102,1.047,103,0.872,104,1.047,105,0.904,106,1.047,107,0.904,108,0.937,109,1.552,110,0.904,111,1.009,112,1.047,113,0.872,114,1.848,115,0.841,116,1.047,117,0.872,118,1.708,119,0.904,120,2.22,121,1.44,122,1.552,123,1.763,124,0.904,125,0.937,126,1.552,127,0.904,128,1.009,129,1.047,130,0.872,131,0.904,132,1.047,133,0.904,134,0.937,135,0.872,136,1.047,137,0.904,138,0.783,139,1.047,140,0.904,141,1.518,142,0.872,143,0.904,144,0.937,145,1.047,146,1.047,147,0.008,148,0.008,180,1.848,188,0.837,196,2.343,202,1.005,205,1.01,216,1.339,223,2.642,236,2.154,240,0.722,241,1.091,242,1.01,249,0.811,257,3.511,284,1.182,292,1.971,295,0.872,301,0.946,302,1.484,347,2.372,351,1.687,352,2.059,353,1.601,361,2.059,369,2.629,370,2.059,371,1.33,372,1.33,374,2.258,430,2.154,442,2.596,457,1.224,465,2.059,479,2.596,481,3.841,537,3.224,543,2.37,544,2.37,552,1.454,553,2.566,560,3.895,617,1.44,705,2.16,724,3.223,744,2.176,745,4.182,746,3.511,747,4.182,748,3.511,751,3.511,752,2.995,753,2.995,756,3.511,757,3.511,758,2.629,759,1.742,760,3.895,761,3.895,762,5.352,765,2.37,766,3.945,768,2.629,769,2.37,770,4.95,771,2.37,773,4.182,774,4.937,775,5.171,776,4.534,777,3.511,778,2.772,780,1.89,781,2.805,793,3.511,794,2.176,795,3.511,797,2.37,798,2.995,800,2.37,803,2.37,804,2.37,813,3.224,817,3.511,827,2.642,1103,2.499,1118,2.629,1300,3.615,1488,2.022,1497,2.995,1718,3.147,1724,2.022,1729,2.805,1730,2.629,1763,2.37,1823,2.629,1843,5.925,1876,5.925,1877,6.297,1878,6.297,1879,4.477,1880,5.333,1881,3.022,1882,4.412,1883,4.477,1884,4.639,1885,2.629,1886,4.477,1887,3.022,1888,3.022,1889,4.477,1890,3.022,1891,5.897,1892,3.022,1893,2.629,1894,2.629,1895,4.477,1896,3.022,1897,4.477,1898,3.022,1899,4.477,1900,3.022,1901,2.629,1902,3.022,1903,3.022,1904,3.022,1905,3.022,1906,3.022,1907,2.37,1908,3.022,1909,2.629,1910,5.897,1911,3.511,1912,4.477,1913,4.477,1914,4.477,1915,4.477,1916,4.477,1917,3.022,1918,5.333,1919,3.022,1920,4.477,1921,3.022,1922,3.022,1923,3.022,1924,3.022,1925,4.477,1926,4.477,1927,3.022,1928,3.022,1929,3.022]],["title/injectables/IncidentsService.html",[450,1.065,1810,2.857]],["body/injectables/IncidentsService.html",[0,0.703,3,0.184,4,0.142,9,0.125,20,0.466,21,1.055,23,1.763,24,1.17,27,1,28,0.014,29,1.218,30,0.327,31,0.399,32,0.142,33,0.292,101,0.845,118,2.101,147,0.01,148,0.01,185,3.578,202,1.367,205,1.083,209,2.279,216,2.02,217,4.231,228,3.406,231,2.475,235,4.864,240,0.67,241,1.17,242,1.083,246,2.37,250,3.071,278,3.106,284,1.282,286,3.559,301,1.083,302,1.694,447,2.564,449,2.37,450,1.635,451,1.407,452,2.625,455,1.905,456,1.83,457,1.905,458,1.407,479,2.681,584,2.954,675,5.296,684,2.263,698,2.93,705,2.467,707,2.681,724,2.801,733,4.386,825,3.689,839,2.947,844,3.689,878,4.092,898,4.092,941,3.815,1021,2.893,1457,3.387,1718,4.472,1807,5.875,1810,4.386,1930,4.092,1931,6.09,1932,6.09,1933,4.704,1934,5.802,1935,5.802,1936,5.875,1937,5.875,1938,6.09,1939,4.704,1940,5.298,1941,6.09,1942,4.704,1943,4.704,1944,4.092,1945,4.704,1946,4.704,1947,6.09]],["title/injectables/LocalService.html",[450,1.065,477,2.857]],["body/injectables/LocalService.html",[0,0.749,3,0.163,4,0.163,9,0.143,12,1.938,20,0.534,23,1.868,24,1.335,27,0.797,28,0.014,30,0.304,31,0.456,32,0.163,33,0.204,58,2.181,101,0.674,147,0.011,148,0.011,188,1.239,197,4.481,202,1.488,205,0.863,209,2.482,211,2.912,213,4.241,215,3.625,216,2.15,239,3.514,240,0.764,241,0.933,242,0.863,249,1.929,250,3.625,284,1.149,295,1.553,301,0.863,302,1.845,450,1.78,455,2.181,456,2.095,457,2.181,477,4.776,489,6.042,494,3.345,571,4.776,684,2.59,780,2.799,949,6.253,1194,4.809,1948,4.683,1949,7.189,1950,5.384,1951,6.633,1952,7.189,1953,7.705,1954,5.384,1955,5.384,1956,5.384,1957,5.384,1958,5.384]],["title/components/LoginFormComponent.html",[0,0.413,124,1.186]],["body/components/LoginFormComponent.html",[0,0.65,1,1.159,2,1.7,3,0.189,4,0.121,5,1.392,6,1.392,7,1.392,8,1.392,9,0.106,11,1.764,12,2.247,13,1.159,14,2.837,15,2.733,16,1.9,18,1.9,20,0.398,21,0.95,22,2.509,23,0.934,24,1.216,27,0.812,28,0.014,29,1.42,30,0.307,31,0.34,32,0.121,33,0.152,45,1.768,46,2.414,47,2.026,48,2.026,57,1.768,68,1.847,71,2.844,72,1.933,73,1.847,77,2.37,83,2.128,87,1.768,94,2.128,95,0.968,96,1.9,97,1.9,98,1.392,99,1.8,100,1.392,101,0.781,102,1.392,103,1.159,104,1.392,105,1.201,106,1.392,107,1.201,108,1.246,109,1.9,110,1.201,111,1.341,112,1.392,113,1.159,114,2.164,115,1.118,116,1.392,117,1.159,118,1.04,119,1.201,120,1.7,121,1.764,122,1.9,123,1.201,124,2.167,125,2.341,126,1.9,127,1.201,128,1.341,129,1.392,130,1.159,131,1.201,132,1.392,133,1.201,134,1.246,135,1.159,136,1.392,137,1.201,138,1.04,139,1.392,140,1.201,141,1.617,142,1.159,143,1.201,144,1.246,145,1.392,146,1.392,147,0.009,148,0.009,170,1.627,179,1.341,188,1.025,196,2.491,200,2.128,205,0.644,216,1.64,240,0.619,241,0.696,242,0.644,252,2.128,256,3.949,261,1.847,266,2.026,298,2.026,301,0.644,352,1.847,353,2.128,356,2.128,357,3.817,361,2.871,367,2.026,370,2.522,371,2.414,372,1.768,384,5.683,397,2.37,449,2.134,457,1.627,552,1.933,553,1.933,617,1.292,753,3.668,759,2.134,766,4.177,770,4.202,798,3.668,1103,2.242,1104,2.37,1105,2.37,1106,2.37,1107,2.242,1108,2.37,1109,2.37,1110,2.026,1176,2.893,1206,3.949,1835,3.15,1959,6.304,1960,3.15,1961,5.431,1962,4.77,1963,4.83,1964,6.107,1965,2.893,1966,5.577,1967,4.77,1968,4.3,1969,4.017,1970,4.017,1971,3.668,1972,4.83,1973,4.77,1974,4.77,1975,4.496,1976,4.017,1977,2.893,1978,2.893,1979,2.893,1980,3.949,1981,3.494,1982,3.494,1983,4.77,1984,4.83,1985,4.77,1986,5.483,1987,3.494,1988,4.017,1989,4.017]],["title/interfaces/Media.html",[90,1.375,901,1.065]],["body/interfaces/Media.html",[3,0.15,4,0.15,9,0.199,20,0.493,21,0.861,27,0.934,28,0.014,30,0.317,32,0.191,33,0.188,90,2.707,99,1.693,147,0.011,148,0.011,188,1.179,207,3.035,211,2.013,216,1.886,218,3.113,221,2.285,231,1.722,240,0.746,262,1.223,263,2.097,264,2.932,274,3.113,276,2.632,277,2.391,284,1.41,301,1.012,364,2.632,421,3.578,444,2.013,447,2.665,449,2.455,451,1.486,457,2.013,458,1.486,584,2.624,587,4.22,588,3.897,593,3.722,616,2.728,617,1.598,688,1.722,701,2.773,759,1.934,778,3.051,839,3.113,901,1.334,902,2.188,916,3.578,948,2.932,1003,3.113,1021,2.953,1039,3.897,1055,3.676,1187,3.324,1189,3.324,1194,3.324,1214,4.947,1261,3.324,1328,3.578,1428,3.324,1473,3.113,1474,3.324,1475,4.22,1479,3.113,1491,3.952,1526,3.324,1555,4.637,1556,3.324,1645,3.324,1687,3.897,1689,4.322,1690,4.322,1691,4.322,1692,3.897,1693,3.897,1695,4.322,1696,4.322,1697,3.897,1698,4.322,1699,4.322,1700,4.322,1701,4.322,1702,4.322,1703,4.877,1704,4.877,1705,4.877,1706,4.877,1707,4.322,1708,4.322,1709,4.322,1710,4.322,1711,4.322,1712,4.322,1713,4.322,1714,4.322]],["title/injectables/MediaService.html",[450,1.065,593,2.341]],["body/injectables/MediaService.html",[3,0.175,4,0.175,9,0.153,20,0.575,21,1.202,24,1.004,27,1.027,28,0.014,30,0.318,31,0.491,32,0.175,33,0.22,90,2.666,101,0.725,147,0.012,148,0.012,205,0.929,240,0.575,241,1.004,242,0.929,276,3.675,301,0.929,447,2.767,450,1.862,451,1.733,455,2.348,456,2.255,593,4.092,684,2.788,688,2.573,689,5.54,694,4.092,701,3.871,948,4.092,1055,4.151,1473,4.345,1491,5.001,1693,5.439,1990,5.042,1991,5.796]],["title/components/ModalCategoryComponent.html",[0,0.413,127,1.186]],["body/components/ModalCategoryComponent.html",[0,0.794,1,0.961,2,1.491,3,0.17,4,0.101,5,1.155,6,1.155,7,1.155,8,1.155,9,0.088,11,1.547,12,2.031,13,0.961,14,2.782,15,2.68,16,1.667,18,1.667,20,0.33,21,0.833,22,2.311,23,1.437,24,1.291,27,0.97,28,0.014,29,1.696,30,0.283,31,0.282,32,0.101,33,0.126,45,1.467,46,2.117,47,1.68,48,1.68,68,1.532,71,2.764,72,2.313,73,1.532,84,1.68,85,1.966,94,1.765,95,0.803,96,1.667,97,1.667,98,1.155,99,1.658,100,1.155,101,0.854,102,1.155,103,0.961,104,1.155,105,0.996,106,1.155,107,0.996,108,1.033,109,1.667,110,0.996,111,1.112,112,1.155,113,0.961,114,1.955,115,0.927,116,1.155,117,0.961,118,0.863,119,0.996,120,1.491,121,1.547,122,1.667,123,0.996,124,0.996,125,1.033,126,1.667,127,1.847,128,2.649,129,1.155,130,0.961,131,0.996,132,1.155,133,0.996,134,1.033,135,0.961,136,1.155,137,0.996,138,0.863,139,1.155,140,0.996,141,1.489,142,0.961,143,0.996,144,1.033,145,1.155,146,1.155,147,0.008,148,0.008,170,1.35,172,1.297,188,0.899,196,2.527,202,1.079,205,0.905,216,1.847,223,3.645,229,2.03,231,2.438,240,0.698,241,0.978,242,0.991,249,0.894,262,0.933,284,1.248,292,2.484,295,0.961,301,0.991,302,1.338,352,2.211,356,1.765,357,3.53,361,2.595,367,1.68,370,2.211,371,2.117,372,1.467,374,1.68,552,1.603,553,1.603,648,5.374,707,2.117,752,3.217,759,1.871,763,3.804,780,2.88,785,5.365,799,2.229,806,3.217,807,4.183,865,1.68,912,3.771,976,4.566,980,4.183,983,3.771,1027,5.433,1080,4.424,1083,5.284,1099,5.374,1103,1.86,1104,1.966,1105,1.966,1106,1.966,1107,1.86,1108,1.966,1109,1.966,1110,1.68,1553,4.566,1963,4.449,1965,2.4,1966,5.284,1971,4.133,1972,3.463,1975,4.063,1977,2.4,1978,2.4,1979,2.4,1980,3.463,1984,4.449,1992,6.562,1993,2.899,1994,5.642,1995,4.809,1996,5.374,1997,4.183,1998,3.332,1999,4.183,2000,4.809,2001,4.809,2002,3.332,2003,3.332,2004,4.183,2005,5.374,2006,4.183,2007,4.183,2008,5.374,2009,3.332,2010,4.183,2011,3.332,2012,3.332,2013,3.332,2014,3.332,2015,3.332,2016,3.332,2017,3.332,2018,3.332,2019,3.332,2020,3.332,2021,2.899,2022,2.899,2023,5.374]],["title/interfaces/PaginatedData.html",[901,1.065,1160,2.341]],["body/interfaces/PaginatedData.html",[3,0.184,4,0.184,9,0.161,20,0.605,28,0.014,32,0.229,147,0.012,148,0.012,188,1.336,240,0.709,262,1.471,284,1.355,778,2.685,901,2.036,902,2.685,1021,2.47,1141,4.783,1160,4.218,1354,5.059,1703,4.08,1704,4.08,1705,4.08,1706,4.08,2024,4.392,2025,4.782,2026,4.782,2027,4.782,2028,4.782,2029,4.782,2030,4.782,2031,3.231]],["title/interfaces/Pagination.html",[901,1.065,1354,2.485]],["body/interfaces/Pagination.html",[3,0.181,4,0.181,9,0.158,20,0.593,28,0.014,32,0.227,147,0.012,148,0.012,188,1.32,240,0.771,284,1.347,433,4.198,778,3.623,901,2.019,902,2.633,1021,2.422,1160,3.528,1354,4.427,1355,6.543,1357,6.543,1358,6.543,1703,4.001,1704,4.001,1705,4.001,1706,4.001,2024,4.307,2025,4.69,2026,4.69,2027,4.69,2028,4.69,2029,4.69,2030,4.69,2031,3.168]],["title/classes/PasswordValidation.html",[33,0.15,2032,2.857]],["body/classes/PasswordValidation.html",[3,0.14,4,0.14,9,0.123,20,0.459,21,1.045,24,1.045,27,1.052,28,0.014,30,0.212,32,0.14,33,0.176,101,0.975,111,2.371,147,0.01,148,0.01,170,1.877,180,2.09,202,1.594,205,0.967,240,0.598,241,1.045,242,0.967,249,1.244,258,6.78,263,2.545,266,4.174,284,1.396,295,1.336,296,3.083,301,1.075,458,2.257,488,3.366,688,2.09,764,3.226,784,2.336,1163,2.903,1165,6.566,1168,6.178,1169,6.179,1170,5.246,1171,5.246,1172,6.687,1173,6.178,1174,6.178,1175,5.832,1176,4.343,1177,5.832,1178,3.633,1179,4.03,1180,4.03,1182,4.03,1559,5.114,1894,5.246,2032,4.343,2033,4.03,2034,7.363,2035,6.705,2036,4.633,2037,7.102,2038,4.633,2039,6.705,2040,6.031,2041,4.633,2042,6.031,2043,6.031,2044,4.633,2045,4.633,2046,4.633,2047,4.633,2048,4.633,2049,6.031,2050,4.633,2051,6.031,2052,4.633,2053,6.031,2054,4.633]],["title/interfaces/Photo.html",[901,1.065,2031,2.102]],["body/interfaces/Photo.html",[3,0.179,4,0.179,9,0.157,20,0.587,28,0.014,32,0.226,147,0.012,148,0.012,188,1.313,240,0.784,284,1.441,778,3.298,901,2.011,902,2.608,1021,3.138,1160,3.495,1354,3.71,1703,5.184,1704,5.184,1705,5.184,1706,5.184,2024,4.265,2025,4.645,2026,4.645,2027,4.645,2028,4.645,2029,4.645,2030,4.645,2031,3.722]],["title/components/PictureSelectableComponent.html",[0,0.413,130,1.144]],["body/components/PictureSelectableComponent.html",[0,0.772,1,0.79,2,1.29,3,0.126,4,0.083,5,0.95,6,0.95,7,0.95,8,0.95,9,0.168,11,1.338,12,1.81,13,0.79,14,2.715,15,2.615,16,1.442,18,1.442,20,0.272,21,0.721,22,2.101,23,0.637,24,1.319,27,1.052,28,0.014,29,1.956,30,0.257,31,0.232,32,0.126,33,0.104,45,1.832,46,1.832,49,1.452,50,2.122,53,1.617,54,1.973,55,3.782,57,1.206,58,2.446,59,2.384,63,2.807,64,2.807,66,2.322,77,1.617,82,1.973,83,1.452,84,2.832,87,1.832,88,2.002,91,1.26,95,0.661,96,1.946,97,1.946,98,0.95,99,1.706,100,0.95,101,0.889,102,0.95,103,0.79,104,0.95,105,0.819,106,0.95,107,0.819,108,0.85,109,1.442,110,0.819,111,0.915,112,0.95,113,0.79,114,1.743,115,0.762,116,0.95,117,0.79,118,0.71,119,0.819,120,1.29,121,1.338,122,1.442,123,0.819,124,0.819,125,0.85,126,1.442,127,0.819,128,2.015,129,0.95,130,1.905,131,2.415,132,0.95,133,0.819,134,1.872,135,0.79,136,0.95,137,0.819,138,0.71,139,0.95,140,0.819,141,1.003,142,0.79,143,0.819,144,0.85,145,0.95,146,0.95,147,0.007,148,0.007,155,1.756,170,1.11,172,1.066,180,0.95,188,0.777,202,1.527,205,1.091,207,1.318,223,2.455,229,1.756,240,0.705,241,1.231,242,1.091,246,1.619,249,2.027,271,4.044,278,1.913,284,0.973,292,1.832,295,1.741,296,1.913,301,1.118,302,1.399,351,2.807,352,2.582,367,2.098,371,1.206,372,1.206,409,1.529,427,2.455,433,1.529,442,3.068,444,2.274,451,0.819,457,1.11,465,2.582,480,3.619,484,2.606,500,4.885,558,1.973,617,2.242,688,1.743,716,4.138,730,3.262,770,4.832,780,1.756,830,2.098,918,3.619,976,4.252,1015,2.783,1107,3.134,1113,1.973,1195,3.982,1488,1.833,1551,1.833,1630,2.783,1692,4.403,1727,2.384,1909,3.619,1971,3.757,1999,3.619,2055,6.011,2056,5.52,2057,2.149,2058,3.944,2059,4.16,2060,5.029,2061,4.16,2062,5.029,2063,5.029,2064,6.356,2065,5.029,2066,4.16,2067,5.615,2068,4.16,2069,4.16,2070,4.16,2071,4.16,2072,4.16,2073,4.16,2074,2.74,2075,4.16,2076,5.029,2077,3.262,2078,4.16,2079,2.74,2080,6.356,2081,2.74,2082,2.74,2083,4.16,2084,4.16,2085,4.16,2086,4.16,2087,4.16,2088,4.16,2089,4.16,2090,4.16,2091,4.16,2092,2.74,2093,4.16,2094,5.615,2095,5.029,2096,2.74,2097,4.16,2098,5.615,2099,4.16,2100,4.16,2101,2.74,2102,4.16,2103,4.16,2104,2.74,2105,5.92,2106,4.885,2107,6.038,2108,4.16,2109,2.74,2110,4.16,2111,2.74,2112,2.74,2113,4.16,2114,2.74,2115,4.16,2116,5.615,2117,4.16,2118,2.74,2119,2.74,2120,4.16,2121,2.74,2122,2.74,2123,4.16,2124,4.16,2125,3.619,2126,2.74,2127,3.619,2128,2.384,2129,2.384,2130,2.74,2131,4.16,2132,2.74,2133,2.74,2134,2.74,2135,2.74,2136,2.74,2137,2.74,2138,2.74,2139,2.74,2140,2.74,2141,2.74,2142,2.74,2143,2.74,2144,2.74,2145,2.74,2146,2.74,2147,2.74,2148,2.74,2149,2.74,2150,2.74,2151,2.74,2152,2.74,2153,2.74,2154,2.74,2155,2.74,2156,2.74,2157,2.74,2158,2.74]],["title/components/RegisterFormComponent.html",[0,0.413,133,1.186]],["body/components/RegisterFormComponent.html",[0,0.592,1,0.975,2,1.506,3,0.172,4,0.102,5,1.171,6,1.171,7,1.171,8,1.171,9,0.089,11,1.563,12,2.047,13,0.975,14,2.786,15,2.684,16,1.683,18,1.683,20,0.335,21,0.842,22,2.326,23,0.786,24,1.188,27,0.719,28,0.014,29,1.258,30,0.302,31,0.286,32,0.102,33,0.128,45,2.138,46,2.138,47,1.704,48,1.704,57,2.138,68,1.554,71,2.668,72,1.626,73,1.554,83,1.79,87,1.488,90,1.171,91,1.554,94,1.79,95,0.815,96,1.683,97,1.683,98,1.171,99,1.669,100,1.171,101,0.824,102,1.171,103,0.975,104,1.171,105,1.01,106,1.171,107,1.01,108,1.048,109,1.683,110,1.01,111,1.128,112,1.171,113,0.975,114,1.971,115,0.94,116,1.171,117,0.975,118,0.875,119,1.01,120,1.506,121,1.563,122,1.683,123,1.01,124,1.01,125,1.048,126,1.683,127,1.01,128,1.128,129,1.171,130,0.975,131,1.01,132,1.171,133,2.051,134,2.283,135,0.975,136,1.171,137,1.01,138,0.875,139,1.171,140,1.01,141,1.499,142,0.975,143,1.01,144,1.048,145,1.171,146,1.171,147,0.008,148,0.008,170,1.369,188,0.908,196,2.632,205,0.542,216,1.453,231,1.683,240,0.564,241,0.585,242,0.542,249,0.907,261,2.234,266,2.449,269,1.886,275,3.498,295,0.975,296,2.234,298,1.704,301,0.542,347,2.573,348,2.939,352,1.554,353,1.79,356,2.573,357,3.786,361,2.615,367,1.704,370,2.234,371,2.138,372,1.488,386,5.54,449,1.89,457,1.369,479,2.138,552,1.626,553,1.626,617,1.087,753,3.25,759,1.89,766,3.805,770,3.895,798,3.25,806,3.25,819,2.261,1058,2.433,1103,1.886,1104,1.994,1105,1.994,1106,1.994,1107,1.886,1108,1.994,1109,1.994,1110,1.704,1162,2.433,1176,2.433,1206,3.498,1297,3.043,1300,2.573,1960,2.65,1961,4.947,1962,4.225,1963,4.477,1964,5.729,1965,2.433,1966,5.382,1967,2.939,1968,3.809,1971,3.25,1972,4.477,1973,4.225,1974,4.225,1975,4.095,1977,4.477,1978,2.433,1979,2.433,1980,4.938,1981,2.939,1982,2.939,1983,4.225,1984,5.382,1985,4.225,1987,2.939,2032,2.433,2159,6.146,2160,6.587,2161,4.858,2162,4.858,2163,3.379,2164,3.379,2165,3.379,2166,3.379,2167,3.379,2168,3.379,2169,4.858,2170,5.687,2171,3.379,2172,3.809,2173,4.858,2174,3.809,2175,4.858,2176,4.858,2177,4.858,2178,4.858,2179,4.858,2180,3.379]],["title/components/SettingsPage.html",[0,0.413,135,1.144]],["body/components/SettingsPage.html",[0,0.734,1,1.484,2,2,3,0.195,4,0.156,5,1.784,6,1.784,7,1.784,8,1.784,9,0.136,11,2.075,12,2.536,13,1.484,14,2.899,15,2.793,16,2.235,18,2.235,20,0.51,21,1.117,22,2.763,23,1.638,24,1.117,27,0.762,28,0.014,29,1.333,30,0.236,31,0.436,32,0.156,33,0.195,95,1.241,96,2.235,97,2.235,98,1.784,99,1.982,100,1.784,101,0.807,102,1.784,103,1.484,104,1.784,105,1.539,106,1.784,107,1.539,108,1.596,109,2.235,110,1.539,111,1.718,112,1.784,113,1.484,114,2.441,115,1.432,116,1.784,117,1.484,118,1.333,119,1.539,120,2,121,2.075,122,2.235,123,1.539,124,1.539,125,1.596,126,2.235,127,1.539,128,1.718,129,1.784,130,1.484,131,1.539,132,1.784,133,1.539,134,1.596,135,2.13,136,1.784,137,1.539,138,1.333,139,1.784,140,1.539,141,1.555,142,1.484,143,1.539,144,1.596,145,1.784,146,1.784,147,0.011,148,0.011,508,4.121,2181,4.477,2182,7.044,2183,6.45,2184,5.147,2185,5.147,2186,6.45]],["title/modules/SettingsPageModule.html",[149,1.027,2187,2.857]],["body/modules/SettingsPageModule.html",[3,0.176,4,0.176,9,0.154,28,0.014,30,0.366,31,0.494,32,0.176,33,0.221,95,1.407,135,2.306,147,0.012,148,0.012,149,1.511,151,1.948,152,2.683,153,3.754,154,2.942,155,2.463,156,2.1,161,3.512,162,2.942,163,2.271,165,2.606,166,2.606,167,3.887,168,3.091,169,4.109,170,2.363,171,3.689,172,2.271,173,3.257,508,3.257,2187,5.867,2188,5.076,2189,5.076,2190,5.076,2191,5.349,2192,5.835,2193,5.076]],["title/modules/SettingsPageRoutingModule.html",[149,1.027,2191,2.654]],["body/modules/SettingsPageRoutingModule.html",[0,0.641,3,0.186,4,0.186,9,0.163,28,0.014,30,0.349,31,0.522,32,0.186,33,0.233,135,2.074,147,0.012,148,0.012,151,2.056,156,2.217,165,2.304,166,2.69,176,3.438,177,3.353,178,4.013,179,2.056,180,2.135,181,2.832,182,3.634,2191,4.81,2193,5.358,2194,6.16]],["title/modules/SharedModule.html",[149,1.027,380,2.102]],["body/modules/SharedModule.html",[3,0.137,4,0.137,9,0.12,28,0.014,30,0.376,31,0.384,32,0.137,33,0.172,95,1.092,107,2.401,110,2.401,119,2.401,121,2.265,123,2.401,130,2.316,140,2.401,143,2.401,147,0.01,148,0.01,149,1.173,151,1.513,152,2.084,153,3.345,154,2.285,155,1.912,156,2.388,161,2.997,162,2.285,163,1.763,165,2.224,166,2.224,167,3.317,168,2.4,171,2.4,172,1.763,196,1.458,380,4.436,387,3.317,388,2.673,389,2.839,390,3.723,391,2.529,392,2.529,393,3.317,400,3.976,401,3.031,405,3.263,406,3.263,407,3.031,408,2.529,409,2.529,410,2.839,411,2.839,578,3.942,610,5.17,611,3.263,627,3.942,743,3.553,906,3.263,1026,3.942,1844,3.553,1876,3.553,2056,3.263,2195,3.942,2196,3.942,2197,3.942,2198,3.942,2199,5.249,2200,4.531,2201,4.531,2202,3.553,2203,6.633,2204,4.531,2205,4.531,2206,4.531,2207,4.531,2208,5.944,2209,4.531,2210,4.531,2211,5.944,2212,4.531,2213,4.531,2214,3.553,2215,5.944]],["title/pipes/ShortenTextPipe.html",[718,2.001,2199,2.654]],["body/pipes/ShortenTextPipe.html",[3,0.14,4,0.14,9,0.122,11,1.487,13,1.333,21,0.801,24,0.801,27,1.051,28,0.014,30,0.212,31,0.392,32,0.14,33,0.175,101,0.838,147,0.01,148,0.01,202,1.783,205,0.741,209,2.655,240,0.458,241,1.16,242,0.741,249,2.246,282,3.124,284,1.431,288,2.897,292,2.651,295,2.047,296,2.769,301,0.966,430,3.222,458,1.801,488,3.361,494,3.378,718,3.037,719,3.625,722,5.212,723,5.239,724,3.384,729,6.563,730,5.252,737,5.826,739,5.826,740,5.239,778,3.382,943,5.239,1242,5.239,1423,4.823,1483,4.337,1558,4.823,1657,5.899,1911,4.722,2199,4.029,2216,5.239,2217,4.022,2218,6.022,2219,8.308,2220,4.623,2221,6.022,2222,6.022,2223,7.876,2224,6.698,2225,6.698,2226,6.698,2227,6.022,2228,6.022,2229,4.623,2230,4.623]],["title/components/UpdateUserComponent.html",[0,0.413,137,1.186]],["body/components/UpdateUserComponent.html",[0,0.736,1,0.975,2,1.506,3,0.172,4,0.102,5,1.171,6,1.171,7,1.171,8,1.171,9,0.089,11,1.563,12,2.047,13,0.975,14,2.786,15,2.684,16,1.683,18,1.683,20,0.335,21,0.842,22,2.326,23,1.13,24,1.224,27,0.921,28,0.014,29,1.61,30,0.285,31,0.286,32,0.102,33,0.128,45,1.488,46,2.138,47,1.704,48,1.704,68,1.554,71,2.778,72,2.337,73,1.554,84,1.704,85,1.994,94,1.79,95,0.815,96,1.683,97,1.683,98,1.171,99,1.669,100,1.171,101,0.824,102,1.171,103,0.975,104,1.171,105,1.01,106,1.171,107,1.01,108,1.048,109,1.683,110,1.01,111,1.128,112,1.171,113,0.975,114,1.971,115,0.94,116,1.171,117,0.975,118,0.875,119,1.01,120,1.506,121,1.563,122,1.683,123,1.01,124,1.01,125,1.048,126,1.683,127,1.01,128,2.526,129,1.171,130,0.975,131,1.453,132,1.171,133,1.01,134,1.048,135,0.975,136,1.171,137,2.051,138,1.872,139,1.171,140,1.01,141,1.907,142,0.975,143,1.01,144,1.048,145,1.171,146,1.171,147,0.008,148,0.008,170,1.369,172,1.315,188,0.908,196,2.594,205,0.779,216,1.453,223,2.866,228,2.868,231,2.59,240,0.616,241,0.842,242,0.779,246,1.89,262,0.942,272,1.79,292,2.138,298,1.704,301,0.912,302,1.351,352,2.234,356,1.79,357,3.64,361,2.615,367,1.704,370,2.234,371,2.138,372,1.488,444,2.303,552,1.626,553,1.626,703,2.982,707,2.138,752,3.25,791,5.165,806,3.25,830,2.449,865,1.704,912,3.809,944,3.805,976,4.588,1103,1.886,1104,1.994,1105,1.994,1106,1.994,1107,1.886,1108,1.994,1109,1.994,1110,1.704,1297,2.117,1300,1.79,1553,2.261,1678,4.095,1729,2.117,1963,4.477,1965,2.433,1966,5.302,1968,3.809,1971,4.16,1972,3.498,1975,4.095,1977,2.433,1978,2.433,1979,2.433,1980,4.743,1984,4.938,1996,5.409,1997,4.225,2004,4.225,2005,5.409,2006,4.225,2007,4.225,2008,5.409,2010,4.225,2021,2.939,2022,2.939,2023,5.409,2077,3.809,2172,3.809,2174,3.809,2231,4.837,2232,6.289,2233,5.206,2234,2.939,2235,5.687,2236,4.858,2237,3.379,2238,4.858,2239,4.858,2240,5.687,2241,5.687,2242,3.379,2243,3.379,2244,3.379,2245,3.379,2246,3.379,2247,3.379,2248,3.379,2249,3.379,2250,3.379,2251,3.379,2252,3.379,2253,3.379,2254,4.225,2255,3.809,2256,3.809]],["title/components/UserCircleGraphicComponent.html",[0,0.413,140,1.186]],["body/components/UserCircleGraphicComponent.html",[0,0.797,1,1.157,2,1.699,3,0.166,4,0.121,5,1.391,6,1.391,7,1.391,8,1.391,9,0.106,11,1.763,12,2.246,13,1.157,14,2.837,15,2.733,16,1.899,18,1.899,20,0.398,21,0.949,22,2.509,23,1.56,24,1.162,27,0.594,28,0.014,29,1.039,30,0.307,31,0.34,32,0.121,33,0.152,58,1.626,65,2.685,71,1.626,95,1.321,96,1.899,97,1.899,98,1.391,99,1.8,100,1.391,101,0.781,102,1.391,103,1.157,104,1.391,105,1.2,106,1.391,107,1.2,108,1.245,109,1.899,110,1.2,111,1.34,112,1.391,113,1.157,114,2.163,115,1.117,116,1.391,117,1.157,118,1.039,119,1.2,120,1.699,121,2.619,122,1.899,123,1.2,124,1.2,125,1.245,126,1.899,127,1.2,128,1.34,129,1.391,130,1.157,131,1.2,132,1.391,133,1.2,134,1.245,135,1.157,136,1.391,137,1.2,138,1.039,139,1.391,140,2.005,141,1.9,142,1.157,143,1.2,144,1.245,145,1.391,146,1.391,147,0.009,148,0.009,180,1.899,188,1.024,196,2.157,197,4.043,202,1.23,205,0.644,212,2.83,213,3.233,214,3.946,215,2.763,216,2.166,217,3.433,236,2.636,240,0.619,241,0.695,242,0.644,262,1.405,300,2.89,301,0.879,302,1.525,451,1.2,452,2.24,458,1.866,479,2.412,584,2.608,616,2.509,718,2.024,759,2.132,827,3.233,842,3.666,936,3.491,972,3.147,978,4.893,999,3.058,1025,2.685,1112,4.297,1769,4.494,1845,3.147,1846,5.428,1847,4.767,1848,3.491,1850,4.767,1851,4.767,1853,4.767,1860,3.491,1861,4.767,1863,3.491,1865,3.491,1869,3.491,1871,3.491,1872,3.491,1873,3.491,1874,3.491,1875,3.491,2214,5.504,2257,6.105,2258,5.48,2259,4.013,2260,4.013,2261,4.013,2262,6.24,2263,4.013,2264,5.48,2265,6.24,2266,4.013,2267,5.48,2268,4.013,2269,4.013,2270,4.013,2271,4.013,2272,4.013,2273,4.013,2274,4.013,2275,4.013]],["title/interfaces/UserCredentials.html",[252,2.102,901,1.065]],["body/interfaces/UserCredentials.html",[3,0.18,4,0.18,9,0.158,20,0.59,28,0.014,30,0.273,32,0.227,101,0.882,131,1.781,147,0.012,148,0.012,188,1.317,240,0.699,252,3.735,261,3.643,262,1.155,266,3.787,269,3.324,272,3.735,284,1.455,298,3.003,703,2.412,865,3.003,901,2.016,902,2.622,903,3.731,1297,4.416,1300,3.735,2031,3.155,2276,4.67,2277,5.528]],["title/components/UserDataPage.html",[0,0.413,142,1.144]],["body/components/UserDataPage.html",[0,0.686,1,0.868,2,1.384,3,0.19,4,0.091,5,1.043,6,1.043,7,1.043,8,1.043,9,0.08,11,1.436,12,1.915,13,0.868,14,2.748,15,2.647,16,1.547,18,1.547,20,0.298,21,0.773,22,2.202,23,1.038,24,1.089,27,0.661,28,0.014,29,0.779,30,0.333,31,0.255,32,0.091,33,0.114,45,2.767,46,2.767,47,1.518,48,1.518,49,2.365,50,1.884,57,2.899,58,2.155,63,1.68,64,2.969,66,2.491,68,2.706,69,2.365,71,2.546,72,1.448,73,2.053,83,1.594,87,3.249,88,2.56,90,2.362,91,1.384,94,1.594,95,0.726,96,1.547,97,1.547,98,1.043,99,1.58,100,1.043,101,0.824,102,1.043,103,0.868,104,1.043,105,0.9,106,1.043,107,0.9,108,0.933,109,1.547,110,0.9,111,1.005,112,1.043,113,0.868,114,1.844,115,0.837,116,1.043,117,0.868,118,0.779,119,0.9,120,1.384,121,1.436,122,1.547,123,0.9,124,0.9,125,0.933,126,1.547,127,0.9,128,2.275,129,1.043,130,0.868,131,0.9,132,1.043,133,0.9,134,0.933,135,0.868,136,1.043,137,1.591,138,1.524,139,1.043,140,0.9,141,1.967,142,1.899,143,0.9,144,0.933,145,1.043,146,1.043,147,0.01,148,0.008,172,1.171,179,1.005,180,1.547,188,0.834,196,2.118,198,3.333,199,5.163,200,3.488,203,2.633,205,1.056,212,1.884,216,1.76,231,1.547,240,0.583,241,0.773,242,0.716,246,1.737,249,0.808,262,1.464,272,1.594,284,0.773,295,0.868,298,1.518,301,1.093,302,1.832,342,3.214,347,1.594,351,1.68,352,1.384,353,2.365,356,1.594,361,2.447,364,2.365,367,1.518,370,2.053,371,1.965,372,1.325,374,1.518,424,2.831,433,2.491,437,3.883,444,2.384,522,3.333,552,1.448,553,2.147,558,2.167,584,2.37,593,3.885,616,1.67,643,4.405,690,3.214,702,3.5,703,2.546,705,1.808,707,1.965,724,2.053,764,2.147,778,1.325,812,2.986,819,2.013,827,2.633,830,2.251,931,3.333,966,4.172,967,3.5,975,5.119,976,3.937,982,3.883,996,5.119,1020,3.559,1021,1.808,1025,2.013,1055,2.251,1058,2.167,1080,2.36,1081,2.618,1082,2.618,1084,2.618,1085,2.618,1086,2.618,1103,1.68,1104,1.776,1105,1.776,1106,1.776,1107,1.68,1108,1.776,1109,1.776,1110,1.518,1113,3.214,1169,3.5,1195,2.796,1300,1.594,1328,3.214,1407,2.167,1728,3.5,1729,2.796,1768,3.214,1806,2.36,1809,2.618,1819,2.618,1821,2.618,1832,2.618,1833,3.883,1834,3.5,1835,2.36,1836,2.618,1882,4.405,1884,5.119,1893,2.618,1907,3.5,1940,2.618,2077,3.5,2106,3.883,2231,4.405,2233,2.167,2255,3.5,2256,3.5,2278,5.885,2279,5.885,2280,4.464,2281,4.464,2282,4.464,2283,3.01,2284,4.464,2285,4.464,2286,4.464,2287,3.01,2288,3.883,2289,4.464,2290,3.01,2291,2.36,2292,3.01,2293,3.01,2294,2.618,2295,4.464,2296,3.01,2297,3.01,2298,3.01,2299,3.01,2300,3.01,2301,3.01,2302,3.01,2303,3.01,2304,3.01,2305,3.01,2306,3.01,2307,5.32,2308,3.01,2309,5.32,2310,5.32,2311,3.01,2312,3.883,2313,3.883,2314,4.464]],["title/modules/UserDataPageModule.html",[149,1.027,641,2.654]],["body/modules/UserDataPageModule.html",[3,0.155,4,0.155,9,0.136,28,0.014,30,0.379,31,0.435,32,0.155,33,0.194,95,1.238,137,2.319,138,1.33,141,1.553,142,2.236,147,0.011,148,0.011,149,1.33,151,1.714,152,2.361,153,3.548,154,2.589,155,2.167,156,1.848,161,3.247,162,2.589,163,1.998,165,2.409,166,2.409,167,3.594,168,2.72,169,3.799,170,2.08,171,3.412,172,1.998,173,2.866,196,1.652,229,2.167,262,0.996,357,2.47,380,4.108,382,5.05,387,3.594,388,3.029,389,3.216,390,4.034,391,2.866,392,2.866,393,3.594,394,3.697,395,5.05,396,4.026,397,3.029,398,5.05,399,4.026,400,4.308,401,3.435,402,5.05,403,4.026,404,3.697,407,3.435,408,2.866,409,2.866,410,3.216,411,3.216,412,4.026,641,5.467,643,3.435,1128,3.216,1131,5.602,1132,4.466,1135,4.466,1842,4.466,2231,3.435,2233,3.697,2294,4.466,2315,4.466,2316,4.466,2317,4.466,2318,5.188]],["title/modules/UserDataPageRoutingModule.html",[149,1.027,2318,2.654]],["body/modules/UserDataPageRoutingModule.html",[0,0.639,3,0.185,4,0.185,9,0.162,28,0.014,30,0.348,31,0.52,32,0.185,33,0.232,141,1.479,142,2.069,147,0.012,148,0.012,151,2.047,156,2.208,165,2.295,166,2.683,176,3.423,177,3.347,178,4.003,179,2.047,180,2.126,181,2.82,182,3.619,262,1.189,643,4.103,1128,3.842,2231,4.103,2318,4.798]],["title/interfaces/UserInfo.html",[703,1.607,901,1.065]],["body/interfaces/UserInfo.html",[3,0.171,4,0.171,9,0.15,20,0.56,28,0.014,30,0.259,32,0.222,101,0.978,131,2.281,147,0.011,148,0.011,188,1.277,240,0.796,241,1.322,252,2.994,261,3.592,262,1.096,269,3.154,272,4.138,284,1.466,298,2.85,703,2.767,865,3.847,901,1.971,902,2.488,903,3.541,1297,4.893,1300,4.138,2031,2.994,2276,4.432,2277,5.357]],["title/interfaces/UserRegisterInfo.html",[269,2.214,901,1.065]],["body/interfaces/UserRegisterInfo.html",[3,0.173,4,0.173,9,0.152,20,0.569,28,0.014,30,0.263,32,0.223,101,0.982,131,1.715,147,0.012,148,0.012,188,1.288,240,0.79,252,3.038,261,3.606,262,1.112,266,3.726,269,3.846,272,4.154,284,1.465,298,2.892,703,2.323,865,2.892,901,1.983,902,2.524,903,3.592,1297,4.913,1300,4.154,2031,3.038,2276,4.497,2277,5.404]],["title/components/UsersInfoComponent.html",[0,0.413,143,1.186]],["body/components/UsersInfoComponent.html",[0,0.562,1,0.89,2,1.97,3,0.192,4,0.093,5,1.07,6,1.07,7,1.07,8,1.07,9,0.082,11,1.463,12,1.944,13,0.89,14,2.757,15,2.655,16,1.576,18,1.576,20,0.306,21,0.788,22,2.229,23,1.477,24,1.247,27,0.882,28,0.014,29,1.543,30,0.247,31,0.262,32,0.093,33,0.252,52,2.861,53,1.821,54,2.223,57,2.377,61,2.065,66,1.723,68,1.42,69,3.365,71,1.842,72,2.188,73,1.42,77,1.821,84,3.203,87,3.169,88,1.485,90,1.576,91,2.091,95,0.744,96,1.576,97,1.576,98,1.07,99,1.599,100,1.07,101,0.86,102,1.07,103,0.89,104,1.07,105,0.923,106,1.07,107,0.923,108,0.957,109,1.576,110,0.923,111,1.03,112,1.07,113,0.89,114,1.871,115,0.859,116,1.07,117,0.89,118,0.799,119,0.923,120,1.41,121,1.463,122,1.576,123,0.923,124,0.923,125,0.957,126,1.576,127,0.923,128,1.03,129,1.07,130,0.89,131,0.923,132,1.07,133,0.923,134,0.957,135,0.89,136,1.07,137,0.923,138,0.799,139,1.07,140,0.923,141,1.602,142,0.89,143,1.782,144,2.302,145,1.07,146,1.07,147,0.008,148,0.008,179,1.03,188,0.85,196,2.526,200,4.019,202,1.021,205,1.019,209,2.229,221,2.483,225,2.723,229,2.279,235,3.889,240,0.714,241,1.101,242,1.019,249,0.829,250,2.293,254,2.538,262,0.599,263,1.919,282,2.002,284,1.101,292,2.002,295,0.89,298,1.557,301,0.955,302,1.767,347,2.409,361,1.42,368,3.275,370,2.483,371,1.359,372,1.359,373,2.065,374,1.557,430,2.188,442,2.623,449,1.77,457,1.25,465,2.091,481,3.889,505,4.697,537,2.223,549,3.275,552,1.485,553,1.485,617,0.993,674,3.956,703,2.187,705,2.187,724,3.16,744,2.223,745,4.234,746,3.566,747,4.234,748,3.566,751,3.566,752,3.043,753,3.043,756,3.566,757,3.566,762,4.981,764,2.188,765,2.421,766,3.986,767,3.956,769,2.421,770,4.65,771,2.421,773,4.234,774,4.981,775,5.211,776,4.574,777,3.566,778,2.796,780,1.919,781,2.849,786,3.956,793,3.566,794,2.223,795,3.566,797,2.421,798,3.043,800,2.421,803,2.421,804,2.421,806,3.043,811,4.697,812,2.065,813,2.223,814,2.685,815,3.956,816,3.956,817,3.566,819,2.065,820,2.685,1020,3.043,1021,1.842,1885,2.685,1907,4.672,1911,5.74,1934,3.566,1935,4.234,2172,3.566,2174,3.566,2202,5.74,2254,3.956,2255,4.672,2256,4.672,2312,5.183,2313,5.183,2319,6.367,2320,4.548,2321,5.4,2322,3.087,2323,4.548,2324,3.087,2325,4.548,2326,3.087,2327,3.087,2328,3.087,2329,4.548]],["title/injectables/UsersService.html",[450,1.065,1882,2.654]],["body/injectables/UsersService.html",[0,0.674,3,0.174,4,0.13,9,0.114,20,0.428,21,0.998,23,1.758,24,1.122,27,1.023,28,0.014,29,1.118,30,0.329,31,0.366,32,0.13,33,0.286,101,0.926,141,1.909,147,0.01,148,0.01,185,3.431,195,3.177,202,1.722,205,1.039,209,2.769,216,2.26,217,4.058,228,3.266,231,2.619,235,4.664,240,0.749,241,1.122,242,1.039,243,3.615,244,2.903,246,2.24,250,2.903,254,3.213,261,2.978,262,1.34,265,4.058,277,3.116,278,3.309,281,5.079,284,1.247,286,3.635,288,2.77,301,1.039,302,1.922,447,2.619,450,1.545,451,1.291,452,2.41,455,1.749,456,1.68,458,1.722,479,2.535,494,2.903,583,3.386,584,2.926,616,2.154,675,5.079,684,2.078,690,5.33,698,2.77,703,3.109,705,2.332,707,2.851,717,2.705,724,2.648,825,3.386,839,2.705,844,3.386,1020,4.815,1021,2.332,1227,5.634,1318,3.756,1436,4.146,1544,3.852,1600,4.664,1882,3.852,1934,5.643,1935,5.643,1936,5.634,1937,5.634,1944,3.756,2330,3.756,2331,6.909,2332,4.318,2333,5.758,2334,4.318,2335,5.758,2336,5.758,2337,4.318,2338,4.318,2339,4.318,2340,4.318,2341,4.318]],["title/coverage.html",[2342,4.729]],["body/coverage.html",[0,0.848,1,1.162,9,0.107,10,3.504,28,0.014,33,0.266,58,3.332,88,2.643,90,1.396,103,1.162,105,1.205,107,1.205,110,1.205,113,1.162,115,1.121,117,1.162,119,1.205,121,2.16,123,1.205,124,1.205,127,1.205,130,1.162,133,1.205,135,1.162,137,1.205,140,1.205,142,1.162,143,1.205,147,0.009,148,0.009,183,3.504,195,1.852,197,2.248,202,1.577,240,0.399,252,2.134,269,2.248,298,3.153,384,3.159,386,3.159,393,2.248,415,4.308,416,2.901,418,3.504,450,2.1,466,3.504,477,2.901,566,2.695,568,4.903,581,2.901,584,1.45,587,2.695,589,2.901,591,3.159,593,2.377,595,4.308,597,2.695,599,2.695,612,3.159,617,1.296,622,3.159,625,3.159,629,2.524,638,2.901,643,2.695,652,2.695,672,3.504,685,3.504,703,1.632,718,2.77,720,3.504,721,3.504,742,3.504,743,3.159,744,4.502,763,2.031,799,2.695,812,2.695,821,2.901,822,3.504,901,2.116,903,4.403,905,3.159,906,2.901,907,3.504,929,3.504,963,3.504,1027,2.901,1115,6.457,1137,3.504,1160,2.377,1162,2.901,1164,3.504,1187,4.493,1188,3.504,1259,2.524,1321,3.159,1322,3.504,1354,2.524,1373,2.695,1374,4.836,1408,2.695,1544,2.695,1687,4.308,1715,3.504,1718,2.377,1724,2.695,1739,4.308,1740,3.504,1770,3.504,1805,2.901,1806,4.308,1810,2.901,1834,4.308,1843,4.308,1844,3.159,1845,4.308,1876,3.159,1882,2.695,1930,3.504,1948,3.504,1959,3.504,1960,4.308,1990,3.504,1992,3.504,1993,3.504,2024,4.502,2031,2.134,2032,2.901,2033,3.504,2055,4.308,2056,3.956,2057,4.308,2058,3.159,2159,3.504,2181,3.504,2199,2.695,2202,3.159,2214,3.159,2216,3.504,2217,3.504,2231,3.675,2232,3.504,2233,2.901,2234,3.504,2257,3.504,2291,3.159,2319,3.504,2330,3.504,2342,3.504,2343,4.028,2344,4.028,2345,3.504,2346,6.716,2347,7.662,2348,4.028,2349,4.028,2350,7.253,2351,6.716,2352,3.504,2353,5.494,2354,6.252,2355,7.253,2356,4.028,2357,4.028,2358,4.028,2359,4.028,2360,4.028,2361,6.252,2362,6.252,2363,5.494,2364,4.028,2365,4.028,2366,4.028,2367,4.028,2368,5.494,2369,4.028,2370,4.028,2371,4.028,2372,4.028,2373,4.028,2374,4.028,2375,4.028,2376,4.028,2377,5.494,2378,5.494,2379,4.028,2380,5.494,2381,5.494,2382,3.504,2383,4.028,2384,4.028,2385,4.028,2386,4.028,2387,4.028,2388,4.028,2389,4.028,2390,5.494,2391,4.028,2392,4.028,2393,5.494,2394,4.028,2395,4.028,2396,4.028,2397,4.028,2398,3.504,2399,3.504,2400,4.028,2401,4.028]],["title/dependencies.html",[152,2.197,2402,2.873]],["body/dependencies.html",[28,0.014,31,0.476,80,4.891,147,0.011,148,0.011,152,2.585,168,2.979,170,2.277,172,2.188,179,1.877,391,4.089,392,3.138,408,3.138,451,1.681,549,4.049,570,5.924,571,4.904,603,5.924,604,4.891,605,4.891,616,2.103,2403,5.622,2404,8.093,2405,5.622,2406,6.811,2407,5.622,2408,5.622,2409,5.622,2410,5.622,2411,6.811,2412,5.622,2413,7.327,2414,5.622,2415,5.622,2416,5.622,2417,5.622,2418,5.622,2419,5.622,2420,5.622,2421,5.924,2422,5.622,2423,6.811,2424,5.622,2425,6.811,2426,5.622,2427,5.622,2428,5.622,2429,5.622,2430,5.622,2431,5.622,2432,5.622,2433,5.622,2434,5.622,2435,5.622,2436,5.622,2437,5.622,2438,5.622,2439,5.622,2440,5.622,2441,5.622,2442,5.622,2443,5.622,2444,5.622,2445,5.622]],["title/miscellaneous/functions.html",[2446,2.378,2447,4.156]],["body/miscellaneous/functions.html",[20,0.534,28,0.013,101,0.965,147,0.011,148,0.011,202,1.784,205,1.236,209,2.691,211,2.184,213,3.916,215,2.718,218,3.377,240,0.764,241,1.335,242,1.064,246,2.098,262,1.456,263,3.035,265,3.377,282,2.373,284,1.391,288,2.593,387,4.302,393,3.705,408,3.009,424,3.46,568,4.227,584,2.702,612,5.205,616,2.808,622,5.205,625,5.205,632,5.774,831,3.181,1000,4.689,1002,4.441,1055,3.785,1093,2.856,1157,3.606,1194,3.606,1206,3.882,1479,3.377,1531,3.882,1551,3.606,1630,3.606,1697,5.205,1746,5.205,1757,4.227,2105,6.705,2288,5.774,2291,6.044,2352,4.689,2382,4.689,2446,3.882,2447,4.689,2448,7.193,2449,5.391,2450,5.391,2451,5.391,2452,5.391,2453,5.391,2454,5.391,2455,5.391,2456,5.391,2457,6.638,2458,5.391,2459,5.391,2460,5.391,2461,5.391,2462,5.391]],["title/interfaces/incidentInfo.html",[901,1.065,1718,2.341]],["body/interfaces/incidentInfo.html",[3,0.173,4,0.173,9,0.152,20,0.569,28,0.014,30,0.316,32,0.173,147,0.012,148,0.012,188,1.288,240,0.805,242,1.229,262,1.112,284,1.436,364,4.061,442,3.506,865,3.866,901,1.539,902,2.524,903,3.592,1020,5.129,1393,4.129,1497,5.129,1718,4.066,1724,3.836,1815,6.668,1901,6.668,2031,4.061,2463,7.666,2464,7.666]],["title/index.html",[20,0.393,2465,3.451]],["body/index.html",[1,1.886,2,1.365,28,0.014,95,1.061,103,1.886,105,2.27,107,2.27,110,2.27,113,1.886,115,1.819,117,1.886,119,2.27,123,2.27,124,1.955,127,1.955,130,2.19,133,1.955,135,1.886,137,1.955,140,2.27,142,1.886,143,2.27,147,0.01,148,0.01,149,1.14,150,5.36,151,1.469,152,2.024,153,2.22,154,2.22,155,1.858,156,1.585,157,3.829,158,3.829,159,3.829,160,4.375,161,2.941,162,2.22,163,1.713,177,1.938,374,2.22,375,5.757,376,3.829,377,3.829,378,3.829,379,4.375,380,4.445,417,3.452,561,5.719,562,3.829,563,3.829,564,3.829,565,3.829,566,4.375,567,4.375,641,5.27,684,2.118,719,3.452,902,1.938,1122,5.757,1123,3.829,1124,3.829,1125,3.829,1126,4.375,1163,2.758,1729,3.653,1731,5.551,1732,3.829,1733,3.829,1734,3.829,1735,4.375,1837,5.36,1838,3.829,1839,3.829,1840,3.829,1841,4.375,2187,5.36,2188,3.829,2189,3.829,2190,3.829,2191,4.375,2195,3.829,2196,3.829,2197,3.829,2198,3.829,2199,4.657,2315,3.829,2316,3.829,2317,3.829,2318,4.375,2465,3.829,2466,4.402,2467,4.402,2468,4.402,2469,4.402,2470,4.402]],["title/modules.html",[151,1.815]],["body/modules.html",[28,0.012,147,0.012,148,0.012,150,4.236,151,1.964,160,3.936,375,4.236,379,3.936,380,3.116,561,4.236,567,3.936,571,5.911,641,3.936,1054,5.458,1122,4.236,1126,3.936,1731,4.236,1735,3.936,1837,4.236,1841,3.936,2187,4.236,2191,3.936,2318,3.936,2421,7.141,2471,8.209,2472,8.404,2473,8.158]],["title/properties.html",[188,0.893,2402,2.873]],["body/properties.html",[28,0.014,115,1.79,147,0.012,148,0.012,188,1.202,242,1.032,2474,6.435,2475,6.435,2476,7.375,2477,6.435,2478,6.435,2479,6.435,2480,6.435]],["title/routes.html",[177,2.394]],["body/routes.html",[28,0.013,147,0.013,148,0.013,177,2.893]],["title/miscellaneous/variables.html",[2446,2.378,2481,4.156]],["body/miscellaneous/variables.html",[20,0.552,28,0.014,34,6.879,130,1.605,147,0.011,148,0.011,240,0.752,249,2.037,263,2.856,295,2.189,296,3.112,409,3.106,465,2.559,595,5.951,629,4.24,1425,4.874,1429,4.874,1430,4.874,1431,4.874,1432,4.874,1433,4.874,1434,5.252,1435,4.874,1768,4.007,1804,4.84,2055,4.363,2056,4.007,2057,5.307,2058,5.307,2125,4.84,2127,4.84,2128,4.84,2129,4.84,2345,5.887,2398,4.84,2399,4.84,2446,4.007,2481,4.84,2482,5.565,2483,5.565,2484,5.565,2485,5.565,2486,5.565,2487,5.565,2488,5.565,2489,5.565,2490,5.565,2491,5.565,2492,6.768,2493,6.768,2494,6.768,2495,6.768,2496,6.768,2497,6.768,2498,6.768,2499,6.768,2500,6.768,2501,6.768]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":58,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/PictureSelectableComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2475,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":2445,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":820,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["0.24",{"_index":1921,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["0.25",{"_index":1120,"title":{},"body":{"components/DataPage.html":{}}}],["0.5rem",{"_index":369,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentsInfoComponent.html":{}}}],["0.8em",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2347,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2372,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2355,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2356,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2354,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2359,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2358,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2357,"title":{},"body":{"coverage.html":{}}}],["0f212d",{"_index":72,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["0px",{"_index":1118,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{}}}],["1",{"_index":65,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["1.6rem",{"_index":1836,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["1/1",{"_index":2353,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2377,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2379,"title":{},"body":{"coverage.html":{}}}],["10.10.0",{"_index":2433,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":2374,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":88,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["100px",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":83,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserDataPage.html":{}}}],["11",{"_index":2468,"title":{},"body":{"index.html":{}}}],["11.0.2",{"_index":2436,"title":{},"body":{"dependencies.html":{}}}],["11/17",{"_index":2397,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2469,"title":{},"body":{"index.html":{}}}],["12/14",{"_index":2387,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2226,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["15.0.0",{"_index":2428,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1918,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["17",{"_index":2466,"title":{},"body":{"index.html":{}}}],["17.0.2",{"_index":2404,"title":{},"body":{"dependencies.html":{}}}],["17.13.0",{"_index":2440,"title":{},"body":{"dependencies.html":{}}}],["17.3.3",{"_index":2406,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":2467,"title":{},"body":{"index.html":{}}}],["190px",{"_index":1923,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["1:770666336001:web:96e7751d6f04cea0b39500",{"_index":2499,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b3e56",{"_index":1106,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["1px",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["2",{"_index":1729,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"index.html":{}}}],["2.0.4",{"_index":2427,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2443,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":2351,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2393,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2384,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2386,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":2153,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["20px",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{}}}],["22/37",{"_index":2371,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":2470,"title":{},"body":{"index.html":{}}}],["24px",{"_index":1116,"title":{},"body":{"components/DataPage.html":{}}}],["250px",{"_index":1070,"title":{},"body":{"components/DataPage.html":{}}}],["28",{"_index":2385,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":1927,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["2px",{"_index":817,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["2rem",{"_index":1835,"title":{},"body":{"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/UserDataPage.html":{}}}],["3",{"_index":813,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["3/4",{"_index":2362,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2390,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":348,"title":{},"body":{"components/AccessPage.html":{},"components/RegisterFormComponent.html":{}}}],["300px",{"_index":1113,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["30px",{"_index":76,"title":{},"body":{"components/AboutPage.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["33",{"_index":2378,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":1989,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["36a2eb",{"_index":1867,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["4",{"_index":2304,"title":{},"body":{"components/UserDataPage.html":{}}}],["4.4.3",{"_index":2432,"title":{},"body":{"dependencies.html":{}}}],["4/5",{"_index":2360,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":2392,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2381,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1834,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["40px",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["42a5f5",{"_index":2271,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["46",{"_index":2394,"title":{},"body":{"coverage.html":{}}}],["49",{"_index":1832,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["495057",{"_index":1875,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["4px",{"_index":1104,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["5",{"_index":374,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["5.0.7",{"_index":2413,"title":{},"body":{"dependencies.html":{}}}],["5.0.8",{"_index":2417,"title":{},"body":{"dependencies.html":{}}}],["5.12.2",{"_index":2435,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":2438,"title":{},"body":{"dependencies.html":{}}}],["5.7.4",{"_index":2411,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":2363,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2365,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2389,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1115,"title":{},"body":{"components/DataPage.html":{},"coverage.html":{}}}],["50px",{"_index":536,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{}}}],["55",{"_index":2388,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":2380,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":2366,"title":{},"body":{"coverage.html":{}}}],["59",{"_index":2370,"title":{},"body":{"coverage.html":{}}}],["5rem",{"_index":93,"title":{},"body":{"components/AboutPage.html":{}}}],["6",{"_index":2227,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["6.5.2",{"_index":2423,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":2391,"title":{},"body":{"coverage.html":{}}}],["6/13",{"_index":2395,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2369,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":2383,"title":{},"body":{"coverage.html":{}}}],["6000",{"_index":344,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["600px",{"_index":92,"title":{},"body":{"components/AboutPage.html":{}}}],["60px",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["64",{"_index":2396,"title":{},"body":{"coverage.html":{}}}],["64b5f6",{"_index":2273,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["66",{"_index":2350,"title":{},"body":{"coverage.html":{}}}],["66bb6a",{"_index":2272,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["7.0.0",{"_index":2425,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2441,"title":{},"body":{"dependencies.html":{}}}],["7/12",{"_index":2367,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2376,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2349,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":358,"title":{},"body":{"components/AccessPage.html":{}}}],["700px",{"_index":373,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/UsersInfoComponent.html":{}}}],["71",{"_index":1920,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["75",{"_index":2361,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2348,"title":{},"body":{"coverage.html":{}}}],["770666336001",{"_index":2498,"title":{},"body":{"miscellaneous/variables.html":{}}}],["777777",{"_index":1109,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["8",{"_index":1058,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/RegisterFormComponent.html":{},"components/UserDataPage.html":{}}}],["8.0.0",{"_index":2430,"title":{},"body":{"dependencies.html":{}}}],["80",{"_index":812,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["80px",{"_index":1121,"title":{},"body":{"components/DataPage.html":{}}}],["80vh",{"_index":2158,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["81c784",{"_index":2274,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["83",{"_index":2364,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2368,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":1730,"title":{},"body":{"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["86.3vh",{"_index":56,"title":{},"body":{"components/AboutPage.html":{}}}],["87",{"_index":2375,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":1101,"title":{},"body":{"components/DataPage.html":{}}}],["9",{"_index":1185,"title":{},"body":{"classes/EmailValidation.html":{}}}],["9._",{"_index":1184,"title":{},"body":{"classes/EmailValidation.html":{}}}],["90",{"_index":2373,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":74,"title":{},"body":{"components/AboutPage.html":{}}}],["900px",{"_index":819,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentDataPage.html":{},"components/RegisterFormComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["90px",{"_index":70,"title":{},"body":{"components/AboutPage.html":{}}}],["_",{"_index":521,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{}}}],["__forms",{"_index":350,"title":{},"body":{"components/AccessPage.html":{}}}],["__image",{"_index":359,"title":{},"body":{"components/AccessPage.html":{}}}],["__status",{"_index":1925,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["__title",{"_index":1924,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["_app",{"_index":1409,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_auth",{"_index":1411,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{}}}],["_categories",{"_index":1419,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_categoryservice",{"_index":973,"title":{},"body":{"components/DataPage.html":{}}}],["_data",{"_index":312,"title":{},"body":{"components/AccessPage.html":{}}}],["_data.role",{"_index":310,"title":{},"body":{"components/AccessPage.html":{}}}],["_data:usercredentials",{"_index":331,"title":{},"body":{"components/AccessPage.html":{}}}],["_data:userregisterinfo",{"_index":309,"title":{},"body":{"components/AccessPage.html":{}}}],["_db",{"_index":1410,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_firebaseservice",{"_index":978,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["_firebasesvc",{"_index":2279,"title":{},"body":{"components/UserDataPage.html":{}}}],["_headers",{"_index":1800,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["_headers.set('accept",{"_index":1802,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["_incidents",{"_index":1417,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_info",{"_index":1285,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["_info.uuid",{"_index":1286,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["_islogged",{"_index":1413,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_language",{"_index":930,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["_logged",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["_picture",{"_index":2062,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["_router",{"_index":2278,"title":{},"body":{"components/UserDataPage.html":{}}}],["_user",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_users",{"_index":1415,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_webstorage",{"_index":1412,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["a4ef9",{"_index":2496,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a4ef9.appspot.com",{"_index":2497,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a4ef9.firebaseapp.com",{"_index":2495,"title":{},"body":{"miscellaneous/variables.html":{}}}],["about'},{'name",{"_index":102,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["about.page",{"_index":174,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{}}}],["about.page.html",{"_index":19,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":150,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["aboutpageroutingmodule",{"_index":160,"title":{"modules/AboutPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["absolute",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["abstract",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/MediaService.html":{}}}],["abstractcontrol",{"_index":1175,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["acc",{"_index":1860,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["acc[categoryname",{"_index":1859,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["acc[user.role",{"_index":2264,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["access",{"_index":185,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["access'},{'name",{"_index":104,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["access.page",{"_index":383,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{}}}],["access.page.html",{"_index":187,"title":{},"body":{"components/AccessPage.html":{}}}],["access.page.scss",{"_index":186,"title":{},"body":{"components/AccessPage.html":{}}}],["access.tologin",{"_index":346,"title":{},"body":{"components/AccessPage.html":{}}}],["access.toregister",{"_index":345,"title":{},"body":{"components/AccessPage.html":{}}}],["access.webp",{"_index":366,"title":{},"body":{"components/AccessPage.html":{}}}],["access__forms",{"_index":354,"title":{},"body":{"components/AccessPage.html":{}}}],["access__image",{"_index":2180,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["accessors",{"_index":1997,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["accesspage",{"_index":103,"title":{"components/AccessPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["accesspagemodule",{"_index":375,"title":{"modules/AccessPageModule.html":{}},"body":{"modules/AccessPageModule.html":{},"index.html":{},"modules.html":{}}}],["accesspageroutingmodule",{"_index":379,"title":{"modules/AccessPageRoutingModule.html":{}},"body":{"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["according",{"_index":2042,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["accordingly",{"_index":776,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["accordionmodule",{"_index":1133,"title":{},"body":{"modules/DataPageModule.html":{}}}],["account",{"_index":1647,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["action",{"_index":2004,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["actions",{"_index":818,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["activated",{"_index":434,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":199,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["activatedroutesnapshot",{"_index":426,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["activation",{"_index":677,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":146,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["actualizada",{"_index":870,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["actualizar",{"_index":896,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["add",{"_index":1529,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adddoc",{"_index":1381,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adddoc(collectionref",{"_index":1536,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adding",{"_index":943,"title":{},"body":{"injectables/CustomTranslateService.html":{},"pipes/ShortenTextPipe.html":{}}}],["additional",{"_index":678,"title":{},"body":{"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["address",{"_index":1646,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adds",{"_index":728,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["admin",{"_index":431,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/CategoryInfo.html":{}}}],["adminguard",{"_index":416,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminid",{"_index":904,"title":{},"body":{"interfaces/CategoryInfo.html":{}}}],["against",{"_index":1588,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["age",{"_index":1679,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["aizasydongue6cpcz6vkkf",{"_index":2493,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":874,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["align",{"_index":63,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["alldata",{"_index":1461,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldata[collectionname",{"_index":1466,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldocs",{"_index":1566,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldocs.docs.filter((doc",{"_index":1569,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["allowed",{"_index":1110,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["allowing",{"_index":1530,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["allows",{"_index":235,"title":{},"body":{"components/AccessPage.html":{},"injectables/IncidentsService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["already",{"_index":323,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["androidscheme",{"_index":2490,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":229,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"modules/UserDataPageModule.html":{},"components/UsersInfoComponent.html":{}}}],["angular's",{"_index":1936,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["angular/animations",{"_index":2403,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2405,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":168,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":388,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"injectables/HttpClientWebProvider.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/compiler",{"_index":2407,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":170,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"classes/EmailValidation.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"modules/SettingsPageModule.html":{},"components/UpdateUserComponent.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2408,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":401,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/dialog",{"_index":611,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":396,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/icon",{"_index":403,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/input",{"_index":399,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/select",{"_index":1132,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/tabs",{"_index":1130,"title":{},"body":{"modules/DataPageModule.html":{}}}],["angular/platform",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":179,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UsersInfoComponent.html":{},"dependencies.html":{}}}],["anonymously",{"_index":1623,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["api",{"_index":2124,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["apikey",{"_index":1429,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["app.component",{"_index":577,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":467,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":105,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["append",{"_index":2225,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["appends",{"_index":735,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["appid",{"_index":1434,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":225,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UsersInfoComponent.html":{}}}],["application/pdf",{"_index":1486,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["application/x",{"_index":1803,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["apply",{"_index":1590,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["appmodule",{"_index":561,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appname",{"_index":2487,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":567,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["argument",{"_index":2462,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arguments",{"_index":769,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["array",{"_index":1555,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["arrays",{"_index":1460,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["asociadas",{"_index":889,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["assigns",{"_index":674,"title":{},"body":{"guards/AuthGuard.html":{},"components/UsersInfoComponent.html":{}}}],["associated",{"_index":232,"title":{},"body":{"components/AccessPage.html":{},"guards/AuthGuard.html":{},"components/IncidentDataPage.html":{}}}],["assumes",{"_index":1340,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["async",{"_index":931,"title":{},"body":{"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserDataPage.html":{}}}],["async)?.name",{"_index":526,"title":{},"body":{"components/AppComponent.html":{}}}],["async)?.surname",{"_index":527,"title":{},"body":{"components/AppComponent.html":{}}}],["asynchronous",{"_index":1254,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["asynchronously",{"_index":1696,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["attempts",{"_index":1196,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth",{"_index":243,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["auth.service",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["auth.service.ts",{"_index":1188,"title":{},"body":{"classes/FirebaseAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:10",{"_index":1192,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["auth.service.ts:124",{"_index":1232,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["auth.user",{"_index":525,"title":{},"body":{"components/AppComponent.html":{}}}],["auth/email",{"_index":322,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/invalid",{"_index":334,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/operation",{"_index":1662,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/weak",{"_index":1664,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["authdomain",{"_index":1430,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":1650,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["authenticated",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":244,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/UsersService.html":{}}}],["authguard",{"_index":638,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":2479,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":245,"title":{},"body":{"components/AccessPage.html":{},"components/HomePage.html":{}}}],["authservice",{"_index":195,"title":{"injectables/AuthService.html":{}},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["authservice:10",{"_index":1202,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:11",{"_index":1201,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:12",{"_index":1203,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:153",{"_index":1222,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:178",{"_index":1216,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:189",{"_index":1248,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:44",{"_index":1204,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:83",{"_index":1239,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:9",{"_index":1200,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservicefactory",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authservicefactory(backend",{"_index":2451,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auto",{"_index":66,"title":{},"body":{"components/AboutPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["automatically",{"_index":1193,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["available",{"_index":1054,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules.html":{}}}],["avatar",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["await",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserDataPage.html":{}}}],["backend",{"_index":632,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["backend:string",{"_index":613,"title":{},"body":{"modules/AppModule.html":{}}}],["background",{"_index":361,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["backgroundcolor",{"_index":1865,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["bad",{"_index":333,"title":{},"body":{"components/AccessPage.html":{}}}],["bar",{"_index":2419,"title":{},"body":{"dependencies.html":{}}}],["base64",{"_index":2458,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":239,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LocalService.html":{}}}],["bbbbbb",{"_index":1929,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["bd1e1e",{"_index":1926,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["before",{"_index":736,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["behaviorsubject",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["behaviorsubject(false",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["behaviorsubject(null",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["being",{"_index":278,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/PictureSelectableComponent.html":{},"injectables/UsersService.html":{}}}],["between",{"_index":52,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["binary",{"_index":1480,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["blob",{"_index":1055,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["blob([csvcontent",{"_index":1056,"title":{},"body":{"components/DataPage.html":{}}}],["blobs",{"_index":1476,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["block",{"_index":82,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/DataPage.html":{},"components/PictureSelectableComponent.html":{}}}],["body",{"_index":1753,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["bold",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["boolean",{"_index":442,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["bootstrap",{"_index":154,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["border",{"_index":370,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["borrada",{"_index":893,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["borrar",{"_index":885,"title":{},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{}}}],["both",{"_index":1258,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["bottom",{"_index":77,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["box",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{}}}],["boxes",{"_index":979,"title":{},"body":{"components/DataPage.html":{}}}],["break",{"_index":326,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["browse",{"_index":2472,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":571,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":423,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["browser/animations",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["browser/animations/async",{"_index":580,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["browserlanguage",{"_index":1949,"title":{},"body":{"injectables/LocalService.html":{}}}],["browsermodule",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":1493,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["building",{"_index":1968,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["button",{"_index":367,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["button.picture",{"_index":2154,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["búsqueda",{"_index":1577,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["c.name",{"_index":849,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["calc((100vw",{"_index":1922,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["callback",{"_index":2105,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":1630,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["calling",{"_index":1217,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["calls",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{}}}],["campo",{"_index":1685,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["canactivate",{"_index":419,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":425,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["cancel",{"_index":912,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["capacitor.config.ts",{"_index":2345,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":2410,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":2412,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":2414,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":2415,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":2416,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":2418,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":2485,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalized",{"_index":738,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["capitalizeinitial",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{}}}],["capitalizeinitialpipe",{"_index":566,"title":{"pipes/CapitalizeInitialPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{},"index.html":{}}}],["capitalizes",{"_index":726,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["capitalizing",{"_index":1237,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["card",{"_index":1917,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["case",{"_index":321,"title":{},"body":{"components/AccessPage.html":{},"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["cases",{"_index":273,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch",{"_index":1468,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch((err",{"_index":960,"title":{},"body":{"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch((error",{"_index":1039,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["catch(async",{"_index":1524,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catcherror",{"_index":841,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["catcherror((err",{"_index":872,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categories",{"_index":108,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["categoriesinfocomponent",{"_index":107,"title":{"components/CategoriesInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["categoriesservice",{"_index":821,"title":{"injectables/CategoriesService.html":{}},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{},"coverage.html":{}}}],["category",{"_index":785,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"components/ModalCategoryComponent.html":{}}}],["category'},{'name",{"_index":129,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["category.admin",{"_index":860,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.adminid",{"_index":858,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.component",{"_index":1028,"title":{},"body":{"components/DataPage.html":{},"modules/DataPageModule.html":{}}}],["category.component.html",{"_index":1995,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.scss",{"_index":1994,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts",{"_index":1993,"title":{},"body":{"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:12",{"_index":2011,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:13",{"_index":2012,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:20",{"_index":2000,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:33",{"_index":2001,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:37",{"_index":1998,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:56",{"_index":2002,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:62",{"_index":2009,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:70",{"_index":2003,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.description",{"_index":810,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["category.name",{"_index":809,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{}}}],["category.uuid",{"_index":892,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category/modal",{"_index":1027,"title":{},"body":{"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["categorycounts",{"_index":1856,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["categoryinfo",{"_index":763,"title":{"interfaces/CategoryInfo.html":{}},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["categoryinfo(category",{"_index":2015,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["categoryname",{"_index":1858,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["categoría",{"_index":851,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["cccccc",{"_index":1108,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["center",{"_index":64,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["certain",{"_index":1653,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["chain",{"_index":1253,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["change",{"_index":2099,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changeform",{"_index":189,"title":{},"body":{"components/AccessPage.html":{}}}],["changepicture",{"_index":2066,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture",{"_index":2078,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changes",{"_index":1195,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["changing",{"_index":2097,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["character",{"_index":734,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["characters",{"_index":1667,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["chart",{"_index":1851,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["chart.js",{"_index":2431,"title":{},"body":{"dependencies.html":{}}}],["chartdata",{"_index":1872,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["chartmodule",{"_index":2211,"title":{},"body":{"modules/SharedModule.html":{}}}],["chato",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["checked",{"_index":2463,"title":{},"body":{"interfaces/incidentInfo.html":{}}}],["checking",{"_index":760,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["checks",{"_index":430,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{}}}],["checkscreensize",{"_index":748,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["checkscreensize(width",{"_index":777,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["children",{"_index":645,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["circle",{"_index":121,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["class",{"_index":33,"title":{"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"classes/PasswordValidation.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":1163,"title":{},"body":{"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"classes/PasswordValidation.html":{},"index.html":{}}}],["click",{"_index":1891,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["clicked",{"_index":786,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["client",{"_index":591,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["client.provider",{"_index":600,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{}}}],["client.provider.ts",{"_index":1740,"title":{},"body":{"injectables/HttpClientProvider.html":{},"coverage.html":{}}}],["client.provider.ts:16",{"_index":1751,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:26",{"_index":1749,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:37",{"_index":1759,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:53",{"_index":1761,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:69",{"_index":1755,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:84",{"_index":1745,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:94",{"_index":1766,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["close",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["closes",{"_index":918,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":157,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":158,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_imports",{"_index":159,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule",{"_index":376,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule_declarations",{"_index":378,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule_imports",{"_index":377,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":562,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":564,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":565,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":563,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_datapagemodule",{"_index":1123,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_datapagemodule_declarations",{"_index":1125,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_datapagemodule_imports",{"_index":1124,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":1732,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":1733,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_imports",{"_index":1734,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule",{"_index":1838,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule_declarations",{"_index":1839,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule_imports",{"_index":1840,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule",{"_index":2188,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule_declarations",{"_index":2189,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule_imports",{"_index":2190,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_sharedmodule",{"_index":2195,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2197,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_exports",{"_index":2196,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_imports",{"_index":2198,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule",{"_index":2315,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule_declarations",{"_index":2317,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule_imports",{"_index":2316,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["code",{"_index":1658,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["coincidan",{"_index":1575,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection",{"_index":1228,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection's",{"_index":1561,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection(this._db",{"_index":1465,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionname",{"_index":1463,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionname/documentid",{"_index":1332,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["collectionref",{"_index":1535,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionreference",{"_index":1392,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collections",{"_index":1424,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["color",{"_index":71,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["column",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["commonmodule",{"_index":167,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["complete",{"_index":1220,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["completed",{"_index":2461,"title":{},"body":{"miscellaneous/functions.html":{}}}],["completes",{"_index":1244,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["completing",{"_index":2087,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["completion",{"_index":1221,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["component_template",{"_index":100,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["componentprops",{"_index":1082,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["components/categories",{"_index":2209,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/confirm",{"_index":2210,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/incidents",{"_index":2208,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/picture",{"_index":2206,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/user",{"_index":2213,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/users",{"_index":2201,"title":{},"body":{"modules/SharedModule.html":{}}}],["con",{"_index":852,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["concatenated",{"_index":1496,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["condition",{"_index":1592,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["config",{"_index":629,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":1426,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["confirm",{"_index":111,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["confirmation",{"_index":1014,"title":{},"body":{"components/DataPage.html":{}}}],["confirmcontrolname",{"_index":2037,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["confirmdialogcomponent",{"_index":110,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["confirmed",{"_index":2289,"title":{},"body":{"components/UserDataPage.html":{}}}],["confirmpassword",{"_index":2049,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["connect",{"_index":1205,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["connectanonymously",{"_index":1629,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connected",{"_index":1224,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connects",{"_index":1641,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connectuserwithemailandpassword",{"_index":1271,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.error('error",{"_index":1604,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.error('failed",{"_index":1040,"title":{},"body":{"components/DataPage.html":{}}}],["console.error('no",{"_index":1053,"title":{},"body":{"components/DataPage.html":{}}}],["console.error(err",{"_index":961,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["console.log",{"_index":315,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log('object",{"_index":862,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["console.log('user",{"_index":2298,"title":{},"body":{"components/UserDataPage.html":{}}}],["console.log(`email",{"_index":1661,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(`error",{"_index":1663,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(err",{"_index":1266,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["console.log(error",{"_index":2147,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["console.log(error.message",{"_index":1670,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(id",{"_index":1725,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(incident",{"_index":1827,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["console.log(result",{"_index":1077,"title":{},"body":{"components/DataPage.html":{}}}],["console.log(results.data",{"_index":2301,"title":{},"body":{"components/UserDataPage.html":{}}}],["const",{"_index":180,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["construct",{"_index":1505,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject('firebase",{"_index":1421,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["constructor(_auth",{"_index":1719,"title":{},"body":{"components/HomePage.html":{}}}],["constructor(_firebaseservice",{"_index":972,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["constructor(auth",{"_index":194,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["constructor(dialogref",{"_index":913,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["constructor(firebase",{"_index":1323,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{}}}],["constructor(firebaseservice",{"_index":825,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["constructor(firebasesvc",{"_index":1191,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["constructor(formbuilder",{"_index":1965,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["constructor(httpclient",{"_index":1773,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["constructor(lang",{"_index":1950,"title":{},"body":{"injectables/LocalService.html":{}}}],["constructor(picturemodal",{"_index":2074,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["constructor(private",{"_index":457,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["constructor(protected",{"_index":1349,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["constructor(route",{"_index":1809,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["constructor(router",{"_index":2322,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["constructor(translate",{"_index":933,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["constructor(userservice",{"_index":1881,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["constructs",{"_index":759,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["contain",{"_index":1551,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["container",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["containing",{"_index":264,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["contains",{"_index":277,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/UsersService.html":{}}}],["content",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["contenttype",{"_index":1518,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["contrast",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":1169,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"components/UserDataPage.html":{}}}],["control.errors",{"_index":2054,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(confirmcontrolname)?.value",{"_index":2050,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(controlname)?.value",{"_index":1180,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["control.get(passwordcontrolname)?.value",{"_index":2048,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control?.errors",{"_index":2051,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control?.value",{"_index":1179,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["controller",{"_index":2282,"title":{},"body":{"components/UserDataPage.html":{}}}],["controlname",{"_index":1170,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["controls",{"_index":2162,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["controlvalueaccessor",{"_index":2126,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["converted",{"_index":1010,"title":{},"body":{"components/DataPage.html":{}}}],["converts",{"_index":1000,"title":{},"body":{"components/DataPage.html":{},"miscellaneous/functions.html":{}}}],["core",{"_index":2422,"title":{},"body":{"dependencies.html":{}}}],["core/guards/admin.guard",{"_index":640,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/auth.guard",{"_index":639,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/pipes/capitalize",{"_index":606,"title":{},"body":{"modules/AppModule.html":{}}}],["core/pipes/shorten",{"_index":2204,"title":{},"body":{"modules/SharedModule.html":{}}}],["core/services/auth.service",{"_index":511,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["core/services/data.service",{"_index":598,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/firebase/api/firebase",{"_index":582,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/firebase/firebase.service",{"_index":585,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/http/http",{"_index":590,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/media.service",{"_index":594,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/translate/local.service",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["core/translate/translate",{"_index":578,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["corresponding",{"_index":2286,"title":{},"body":{"components/UserDataPage.html":{}}}],["cover",{"_index":363,"title":{},"body":{"components/AccessPage.html":{}}}],["coverage",{"_index":2342,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creada",{"_index":868,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["crear",{"_index":875,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["create",{"_index":1093,"title":{},"body":{"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["createbody",{"_index":1771,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createbody(body",{"_index":1776,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createcategory",{"_index":823,"title":{},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{}}}],["createcategory(category",{"_index":828,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["created",{"_index":831,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["createdocument",{"_index":1528,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdocument(collectionname",{"_index":1533,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdocumentwithid",{"_index":1540,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createheaders",{"_index":1772,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createheaders(headers",{"_index":1779,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["creates",{"_index":830,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["createtranslateloader",{"_index":393,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":2454,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createuserwithemailandpassword",{"_index":1400,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createuserwithemailandpassword(info.email",{"_index":1283,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["creating",{"_index":983,"title":{},"body":{"components/DataPage.html":{},"injectables/DataService.html":{},"components/ModalCategoryComponent.html":{}}}],["credentials",{"_index":256,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{}}}],["credentials.email",{"_index":1272,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.password",{"_index":1273,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user",{"_index":1275,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user.user",{"_index":1276,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user.user.uid",{"_index":1277,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["criteria",{"_index":1565,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["criterio",{"_index":1576,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["cssclass",{"_index":2299,"title":{},"body":{"components/UserDataPage.html":{}}}],["csv",{"_index":991,"title":{},"body":{"components/DataPage.html":{}}}],["csvcontent",{"_index":992,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles",{"_index":1033,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles.hasownproperty(key",{"_index":1035,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles[key",{"_index":1036,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows",{"_index":1046,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows.join('\\r\\n",{"_index":1052,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows.unshift(headers.join",{"_index":1051,"title":{},"body":{"components/DataPage.html":{}}}],["current",{"_index":237,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["currently",{"_index":1230,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["cursor",{"_index":371,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["customtranslateservice",{"_index":197,"title":{"injectables/CustomTranslateService.html":{}},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["data",{"_index":262,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{}}}],["data'},{'name",{"_index":114,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["data)).pipe",{"_index":1363,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.categories",{"_index":805,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["data.create",{"_index":1099,"title":{},"body":{"components/DataPage.html":{},"components/ModalCategoryComponent.html":{}}}],["data.data",{"_index":1097,"title":{},"body":{"components/DataPage.html":{}}}],["data.data['email",{"_index":1310,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['name",{"_index":1307,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['picture",{"_index":1309,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['role",{"_index":1311,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['surname",{"_index":1308,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['username",{"_index":1312,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.download",{"_index":1098,"title":{},"body":{"components/DataPage.html":{}}}],["data.file",{"_index":1711,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["data.graphic",{"_index":1100,"title":{},"body":{"components/DataPage.html":{}}}],["data.id",{"_index":1313,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.length",{"_index":1356,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.map((doc",{"_index":1351,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.module",{"_index":644,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module').then",{"_index":653,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module').then(m",{"_index":666,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module.ts",{"_index":1842,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["data.page",{"_index":1128,"title":{},"body":{"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["data.page.html",{"_index":967,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.scss",{"_index":966,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts",{"_index":1806,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["data.page.ts:12",{"_index":1817,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:13",{"_index":1811,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:18",{"_index":2290,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.page.ts:19",{"_index":2280,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.page.ts:28",{"_index":1812,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:44",{"_index":2283,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.page.ts:52",{"_index":1814,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:65",{"_index":2287,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.service",{"_index":1348,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.service.ts",{"_index":1322,"title":{},"body":{"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["data.service.ts:6",{"_index":1324,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.update",{"_index":2314,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.users",{"_index":2329,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["data/:id",{"_index":650,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data/incident",{"_index":652,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"coverage.html":{}}}],["data/update",{"_index":2232,"title":{},"body":{"components/UpdateUserComponent.html":{},"coverage.html":{}}}],["data/user",{"_index":643,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"coverage.html":{}}}],["data:t",{"_index":2029,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["data:usercredentials",{"_index":330,"title":{},"body":{"components/AccessPage.html":{}}}],["data:userregisterinfo",{"_index":308,"title":{},"body":{"components/AccessPage.html":{}}}],["database",{"_index":1241,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dataobject",{"_index":1009,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject.hasownproperty(key",{"_index":1042,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject[key].length",{"_index":1043,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject[key].map((row",{"_index":1047,"title":{},"body":{"components/DataPage.html":{}}}],["datapage",{"_index":113,"title":{"components/DataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["datapagemodule",{"_index":1122,"title":{"modules/DataPageModule.html":{}},"body":{"modules/DataPageModule.html":{},"index.html":{},"modules.html":{}}}],["datapageroutingmodule",{"_index":1126,"title":{"modules/DataPageRoutingModule.html":{}},"body":{"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["dataservice",{"_index":597,"title":{"injectables/DataService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["dataservice:101",{"_index":1329,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:24",{"_index":1342,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:52",{"_index":1333,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:72",{"_index":1337,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:85",{"_index":1339,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataset",{"_index":1004,"title":{},"body":{"components/DataPage.html":{}}}],["datasets",{"_index":1863,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["dataurl",{"_index":2457,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob",{"_index":2291,"title":{},"body":{"components/UserDataPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":2456,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob(results.data.picture",{"_index":2305,"title":{},"body":{"components/UserDataPage.html":{}}}],["datauser",{"_index":2320,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["datauser(userid",{"_index":2325,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["date",{"_index":1901,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["date(this.incident.date",{"_index":1896,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["date.now",{"_index":1515,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["date.tolocaledatestring",{"_index":1903,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["date.tolocaletimestring",{"_index":1904,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["de",{"_index":41,"title":{},"body":{"components/AboutPage.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["declarations",{"_index":153,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["decorators",{"_index":794,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["default",{"_index":295,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":784,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{}}}],["delete(resource",{"_index":1139,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["delete(url",{"_index":1744,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["deletecategory",{"_index":749,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{}}}],["deletecategory(category",{"_index":782,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{}}}],["deletecategory(info",{"_index":984,"title":{},"body":{"components/DataPage.html":{}}}],["deleted",{"_index":787,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedoc",{"_index":1388,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedoc(docref",{"_index":1603,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedocument",{"_index":1597,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedocument('categoryinfo",{"_index":891,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["deletes",{"_index":834,"title":{},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deleteuser",{"_index":1401,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deleting",{"_index":1015,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["deletion",{"_index":2102,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["dependencies",{"_index":152,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":1934,"title":{},"body":{"injectables/IncidentsService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["depending",{"_index":1504,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deps",{"_index":411,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["description",{"_index":242,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"properties.html":{}}}],["designed",{"_index":1695,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["desired",{"_index":1609,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["destroyed",{"_index":2083,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["detail",{"_index":342,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["detailed",{"_index":1226,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["details",{"_index":281,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["dialog",{"_index":908,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{}}}],["dialog'},{'name",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["dialog.component",{"_index":1026,"title":{},"body":{"components/DataPage.html":{},"modules/SharedModule.html":{}}}],["dialog.component.html",{"_index":910,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.scss",{"_index":909,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":907,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:17",{"_index":920,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:19",{"_index":922,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:22",{"_index":919,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:27",{"_index":917,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:9",{"_index":915,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.delete",{"_index":926,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.no",{"_index":927,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.yes",{"_index":928,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog/confirm",{"_index":906,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":911,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":1076,"title":{},"body":{"components/DataPage.html":{}}}],["dialogs",{"_index":980,"title":{},"body":{"components/DataPage.html":{},"components/ModalCategoryComponent.html":{}}}],["different",{"_index":221,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"interfaces/Media.html":{},"components/UsersInfoComponent.html":{}}}],["direction",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["directive",{"_index":98,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["directives",{"_index":145,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["directly",{"_index":2460,"title":{},"body":{"miscellaneous/functions.html":{}}}],["directory",{"_index":1492,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["disabled",{"_index":1107,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["dismisses",{"_index":2005,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["display",{"_index":45,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["display:flex",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["displayed",{"_index":287,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{}}}],["displaying",{"_index":226,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["displays",{"_index":206,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["div",{"_index":1987,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["div.user",{"_index":2152,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["dividermodule",{"_index":608,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":1366,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc(this._db",{"_index":1547,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.data",{"_index":1353,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.id",{"_index":1352,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.id.includes(substring",{"_index":1570,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docid",{"_index":1543,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docref",{"_index":866,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap",{"_index":1581,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.data",{"_index":1585,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.exists",{"_index":1583,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.id",{"_index":1584,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["document",{"_index":1234,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["document.body.appendchild(link",{"_index":1065,"title":{},"body":{"components/DataPage.html":{}}}],["document.body.removechild(link",{"_index":1067,"title":{},"body":{"components/DataPage.html":{}}}],["document.createelement('a",{"_index":1061,"title":{},"body":{"components/DataPage.html":{}}}],["documentation",{"_index":2343,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":1375,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentos",{"_index":1574,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentpath",{"_index":1613,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentref",{"_index":1618,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentreference",{"_index":1389,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documents",{"_index":1327,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentsnapshot",{"_index":1390,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["download",{"_index":990,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["downloadcsv",{"_index":968,"title":{},"body":{"components/DataPage.html":{}}}],["downloadcsv(csvcontent",{"_index":986,"title":{},"body":{"components/DataPage.html":{}}}],["downloaded",{"_index":993,"title":{},"body":{"components/DataPage.html":{}}}],["downloads",{"_index":1001,"title":{},"body":{"components/DataPage.html":{}}}],["downloadurl",{"_index":1522,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["during",{"_index":274,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["dynamic",{"_index":2409,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":1648,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["each",{"_index":1003,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["edit",{"_index":790,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["editcategory",{"_index":750,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{}}}],["editcategory(category",{"_index":788,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["editcategory(info",{"_index":994,"title":{},"body":{"components/DataPage.html":{}}}],["edited",{"_index":791,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/UpdateUserComponent.html":{}}}],["editing",{"_index":996,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{}}}],["efficiently",{"_index":1256,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["el",{"_index":1454,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["element",{"_index":97,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["ellipsis",{"_index":2222,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["email",{"_index":261,"title":{},"body":{"components/AccessPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UsersService.html":{}}}],["email(controlname",{"_index":1166,"title":{},"body":{"classes/EmailValidation.html":{}}}],["email.match(/^[a",{"_index":1181,"title":{},"body":{"classes/EmailValidation.html":{}}}],["email:string",{"_index":2276,"title":{},"body":{"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["emailuser",{"_index":325,"title":{},"body":{"components/AccessPage.html":{}}}],["emailvalidation",{"_index":1162,"title":{"classes/EmailValidation.html":{}},"body":{"classes/EmailValidation.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["emailvalidation.email",{"_index":2168,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["emit",{"_index":1214,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["emits",{"_index":449,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["emitted",{"_index":1615,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["emitter",{"_index":1973,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["emitting",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/MediaService.html":{}}}],["empleados",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["empty",{"_index":732,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["en",{"_index":955,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["encapsulation",{"_index":964,"title":{},"body":{"components/DataPage.html":{}}}],["encoded",{"_index":1757,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["encontraron",{"_index":1573,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["end",{"_index":730,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{}}}],["enough",{"_index":1666,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ensures",{"_index":2084,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["environment",{"_index":595,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebaseconfig",{"_index":631,"title":{},"body":{"modules/AppModule.html":{}}}],["equality",{"_index":1591,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["err",{"_index":318,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{}}}],["err.code",{"_index":319,"title":{},"body":{"components/AccessPage.html":{}}}],["err.message",{"_index":877,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["error",{"_index":207,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{}}}],["error(\"not",{"_index":620,"title":{},"body":{"modules/AppModule.html":{}}}],["error('database",{"_index":1602,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error('error",{"_index":873,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{}}}],["error('una",{"_index":850,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["error('user",{"_index":1314,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["error(`error",{"_index":894,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["error(`failed",{"_index":1469,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error.code",{"_index":1660,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error.message",{"_index":1470,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["errors",{"_index":258,"title":{},"body":{"components/AccessPage.html":{},"classes/PasswordValidation.html":{}}}],["errors.emailerror",{"_index":2173,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["errors.repeaterror",{"_index":2178,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["errors.valid",{"_index":1984,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["errors['passwordmatch",{"_index":2053,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["es",{"_index":949,"title":{},"body":{"injectables/CustomTranslateService.html":{},"injectables/LocalService.html":{}}}],["este",{"_index":853,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["esto",{"_index":1075,"title":{},"body":{"components/DataPage.html":{}}}],["estás",{"_index":1071,"title":{},"body":{"components/DataPage.html":{}}}],["etc",{"_index":1503,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["event",{"_index":770,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["event.stoppropagation",{"_index":1909,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["eventemitter",{"_index":766,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["events",{"_index":481,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["example",{"_index":1494,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["example@example.com",{"_index":1649,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["executed",{"_index":2106,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["executes",{"_index":1156,"title":{},"body":{"injectables/DataService.html":{}}}],["exist",{"_index":1580,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["existe",{"_index":856,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["existing",{"_index":1151,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["existingcategories.some((c",{"_index":848,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["exists",{"_index":1225,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["exitosamente",{"_index":871,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["exportdata",{"_index":969,"title":{},"body":{"components/DataPage.html":{}}}],["exports",{"_index":156,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{}}}],["extends",{"_index":1189,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{}}}],["extension",{"_index":1498,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["factories",{"_index":635,"title":{},"body":{"modules/AppModule.html":{}}}],["failed",{"_index":1215,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["failregister",{"_index":328,"title":{},"body":{"components/AccessPage.html":{}}}],["fails",{"_index":1207,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["false",{"_index":465,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["falsy",{"_index":731,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["fetch",{"_index":1041,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fetches",{"_index":999,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["fetching",{"_index":1251,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ff6384",{"_index":1866,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["ffce56",{"_index":1868,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["fff",{"_index":814,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["ffffff",{"_index":1928,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["field",{"_index":397,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"modules/UserDataPageModule.html":{}}}],["fieldname",{"_index":1677,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldpath",{"_index":1391,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fields",{"_index":1678,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{}}}],["fieldupdate",{"_index":1682,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldvalue",{"_index":1680,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["fileloader",{"_index":2094,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.click",{"_index":2149,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files",{"_index":2139,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files?.length",{"_index":2140,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files[0",{"_index":2141,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.onchange",{"_index":2138,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["filename",{"_index":987,"title":{},"body":{"components/DataPage.html":{}}}],["filereader",{"_index":2143,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["files",{"_index":1002,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["fileupload",{"_index":1472,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filter",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["filtereddocs",{"_index":1568,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtereddocs.length",{"_index":1571,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtereddocs.map((doc",{"_index":1572,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtering/sorting",{"_index":1346,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["final",{"_index":1499,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["finally",{"_index":1238,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebase",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"interfaces/Media.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["firebase's",{"_index":1690,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["firebase.service",{"_index":1260,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebase/app",{"_index":1379,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase/auth",{"_index":1407,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserDataPage.html":{}}}],["firebase/firebase.service",{"_index":839,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/UsersService.html":{}}}],["firebase/firestore",{"_index":1393,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/incidentInfo.html":{}}}],["firebase/storage",{"_index":1399,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase:firebaseservice",{"_index":614,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseapp",{"_index":1378,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebaseauthservice",{"_index":581,"title":{"classes/FirebaseAuthService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"coverage.html":{}}}],["firebaseauthservice(firebase",{"_index":626,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseconfig",{"_index":1425,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["firebasedataservice",{"_index":1321,"title":{"classes/FirebaseDataService.html":{}},"body":{"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["firebasedocument",{"_index":1373,"title":{"interfaces/FirebaseDocument.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebasemediaservice",{"_index":587,"title":{"classes/FirebaseMediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["firebasemediaservice(firebase",{"_index":618,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseservice",{"_index":584,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["firebasestorage",{"_index":1398,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebasestoragefile",{"_index":1408,"title":{"interfaces/FirebaseStorageFile.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebasesvc",{"_index":1198,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebaseusercredential",{"_index":1259,"title":{"interfaces/FirebaseUserCredential.html":{}},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firestorage",{"_index":1510,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firestore",{"_index":1223,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["first",{"_index":445,"title":{},"body":{"guards/AdminGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["fixed",{"_index":1114,"title":{},"body":{"components/DataPage.html":{}}}],["fixedname",{"_index":1291,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname.charat(0).touppercase",{"_index":1294,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname.slice(1",{"_index":1295,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname[0",{"_index":1292,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname[0].touppercase",{"_index":1293,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["flag",{"_index":781,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["flex",{"_index":46,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["fn",{"_index":2107,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["followed",{"_index":739,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["following",{"_index":1235,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["font",{"_index":68,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["footer",{"_index":86,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["forkjoin",{"_index":1853,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["form",{"_index":357,"title":{},"body":{"components/AccessPage.html":{},"modules/DataPageModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"modules/UserDataPageModule.html":{}}}],["form'},{'name",{"_index":126,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["form.component",{"_index":385,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["form.component.html",{"_index":1962,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.scss",{"_index":1961,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts",{"_index":1960,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:17",{"_index":1976,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:18",{"_index":1967,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:19",{"_index":2165,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:21",{"_index":2161,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:31",{"_index":1969,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:38",{"_index":1970,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:52",{"_index":2163,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:59",{"_index":2164,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form/login",{"_index":384,"title":{},"body":{"modules/AccessPageModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form/register",{"_index":386,"title":{},"body":{"modules/AccessPageModule.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["format",{"_index":998,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["formatted",{"_index":1331,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["formattedday",{"_index":1877,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["formattedtime",{"_index":1878,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["formbuilder",{"_index":1966,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["formcontrol",{"_index":1176,"title":{},"body":{"classes/EmailValidation.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{}}}],["formdata",{"_index":1797,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["formgroup",{"_index":1975,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["forms",{"_index":1999,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["forms.actions",{"_index":808,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["forms.admin",{"_index":2255,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["forms.description",{"_index":807,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["forms.email",{"_index":1983,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["forms.login",{"_index":1986,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["forms.name",{"_index":806,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.password",{"_index":1985,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["forms.register",{"_index":2179,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["forms.reppassword",{"_index":2175,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["forms.role",{"_index":2254,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.surname",{"_index":2172,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.update",{"_index":2023,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["forms.user",{"_index":2256,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["forms.username",{"_index":2174,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["formsmodule",{"_index":169,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["fortawesome/fontawesome",{"_index":2420,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":2424,"title":{},"body":{"dependencies.html":{}}}],["forwardref",{"_index":2125,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":1940,"title":{},"body":{"injectables/IncidentsService.html":{},"components/UserDataPage.html":{}}}],["framework",{"_index":2480,"title":{},"body":{"properties.html":{}}}],["freeconnection",{"_index":1511,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["from(this.firebase.createdocument(resource",{"_index":1362,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["from(this.firebase.getdocuments(resource)).pipe",{"_index":1350,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["from(this.firebasesvc.signout(false",{"_index":1315,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fromobject",{"_index":1792,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["full",{"_index":657,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":202,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionalities",{"_index":421,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["functionality",{"_index":675,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["functions",{"_index":2447,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2500,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":353,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserDataPage.html":{}}}],["generate",{"_index":1850,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["generic",{"_index":1335,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["get(key",{"_index":937,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["get(resource",{"_index":1143,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["get(url",{"_index":1748,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getalldata",{"_index":1031,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getapp",{"_index":1377,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdoc",{"_index":1384,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdoc(docref",{"_index":1582,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs",{"_index":1386,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(collection(this._db",{"_index":1567,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(q",{"_index":1596,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocument",{"_index":1578,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocuments(collectionname",{"_index":1557,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsby",{"_index":1587,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsbysubstring",{"_index":1562,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl",{"_index":1396,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl(storageref",{"_index":1521,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfirestore",{"_index":1380,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfirestore(this._app",{"_index":1441,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getimage",{"_index":1741,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getimage(url",{"_index":1750,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getincidentbyid",{"_index":1931,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["getincidentbyid(incidentid",{"_index":1938,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["getstorage",{"_index":1394,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getstorage(this._app",{"_index":1443,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getuser",{"_index":1471,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getuserbyid",{"_index":2331,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid(userid",{"_index":2333,"title":{},"body":{"injectables/UsersService.html":{}}}],["given",{"_index":940,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["gives",{"_index":230,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["good",{"_index":316,"title":{},"body":{"components/AccessPage.html":{}}}],["graph",{"_index":2473,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":1112,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic'},{'name",{"_index":122,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["graphic.component",{"_index":2215,"title":{},"body":{"modules/SharedModule.html":{}}}],["graphic.component.html",{"_index":1847,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.scss",{"_index":1846,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts",{"_index":1845,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["graphic.component.ts:12",{"_index":1852,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["graphic.component.ts:13",{"_index":1848,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts:14",{"_index":2258,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts:29",{"_index":1849,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["graphic.component.ts:30",{"_index":2259,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["graphic/incidents",{"_index":1844,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["graphic/user",{"_index":2214,"title":{},"body":{"modules/SharedModule.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["graphics",{"_index":1111,"title":{},"body":{"components/DataPage.html":{}}}],["gray",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["greater",{"_index":2223,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["guard",{"_index":415,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":417,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"index.html":{}}}],["h1",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["handle",{"_index":1194,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["handler",{"_index":1971,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["handles",{"_index":257,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsInfoComponent.html":{}}}],["handling",{"_index":212,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{}}}],["hasincident",{"_index":880,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["hasincidentwithoriginalname",{"_index":895,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["hasvalue",{"_index":2063,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["having",{"_index":1655,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["header",{"_index":61,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["header__toolbar",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["headers",{"_index":1044,"title":{},"body":{"components/DataPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["height",{"_index":55,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["hidden",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["hide",{"_index":2160,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["hola",{"_index":2186,"title":{},"body":{"components/SettingsPage.html":{}}}],["home",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["home'},{'name",{"_index":116,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["home.page",{"_index":1737,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":1717,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1716,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":115,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["homepagemodule",{"_index":1731,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["homepageroutingmodule",{"_index":1735,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["hostlistener",{"_index":797,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hostlistener('window:resize",{"_index":795,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hostlisteners",{"_index":756,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hover",{"_index":552,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["hoverbackgroundcolor",{"_index":1869,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["html",{"_index":96,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["htmlinputelement",{"_index":2095,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["http",{"_index":1746,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["http:httpclient",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":387,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"injectables/HttpClientWebProvider.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":586,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientprovider",{"_index":599,"title":{"injectables/HttpClientProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientprovider:103",{"_index":1785,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:126",{"_index":1782,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:142",{"_index":1788,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:29",{"_index":1784,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:43",{"_index":1783,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:63",{"_index":1786,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:83",{"_index":1787,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientwebprovider",{"_index":589,"title":{"injectables/HttpClientWebProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientwebprovider(http",{"_index":624,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":1781,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpheaders(headers",{"_index":1801,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpparams",{"_index":1778,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpproviderfactory",{"_index":622,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httpproviderfactory(http",{"_index":2452,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https",{"_index":2491,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://ionicframework.com",{"_index":2478,"title":{},"body":{"properties.html":{}}}],["icon",{"_index":85,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["icons",{"_index":80,"title":{},"body":{"components/AboutPage.html":{},"dependencies.html":{}}}],["id",{"_index":1021,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["identified",{"_index":1550,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["identifier",{"_index":1544,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["identifies",{"_index":1675,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["identify",{"_index":1546,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ids",{"_index":1560,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["image",{"_index":364,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"components/UserDataPage.html":{},"interfaces/incidentInfo.html":{}}}],["image/jpeg",{"_index":1484,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["images",{"_index":1479,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["imageupload",{"_index":1525,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["imageupload(blob",{"_index":1526,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["img",{"_index":558,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["imgs",{"_index":1710,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["imgs.push(media",{"_index":1712,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["immediately",{"_index":1617,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["implementation",{"_index":1344,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["implemented",{"_index":621,"title":{},"body":{"modules/AppModule.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["import('./pages/about/about.module').then",{"_index":668,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/access/access.module').then",{"_index":658,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/data/data.module').then(m",{"_index":662,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then",{"_index":647,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/incident",{"_index":651,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/settings/settings.module').then",{"_index":660,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/user",{"_index":665,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1488,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["imports",{"_index":165,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["incidencias",{"_index":888,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["incident",{"_index":118,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["incident.categoryname",{"_index":882,"title":{},"body":{"injectables/CategoriesService.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{}}}],["incident.checked",{"_index":1824,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.description",{"_index":1830,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.find((incident",{"_index":1946,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident.resolved",{"_index":1826,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.title",{"_index":1828,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.username",{"_index":1829,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.uuid",{"_index":1947,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident?.title",{"_index":1910,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidentdatapage",{"_index":117,"title":{"components/IncidentDataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentdatapagemodule",{"_index":1837,"title":{"modules/IncidentDataPageModule.html":{}},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["incidentdatapageroutingmodule",{"_index":1841,"title":{"modules/IncidentDataPageRoutingModule.html":{}},"body":{"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["incidentid",{"_index":1807,"title":{},"body":{"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["incidentinfo",{"_index":1718,"title":{"interfaces/incidentInfo.html":{}},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["incidentinfo(id",{"_index":1721,"title":{},"body":{"components/HomePage.html":{}}}],["incidents",{"_index":120,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["incidents.anonymous",{"_index":1916,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.day",{"_index":1913,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.hour",{"_index":1914,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.reduce((acc",{"_index":1857,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["incidents.resolved",{"_index":1831,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incidents.some",{"_index":881,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["incidents.unresolved",{"_index":1912,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.user",{"_index":1915,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidentscirclegraphiccomponent",{"_index":119,"title":{"components/IncidentsCircleGraphicComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentsinfo",{"_index":1457,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{}}}],["incidentsinfocomponent",{"_index":123,"title":{"components/IncidentsInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentsservice",{"_index":1810,"title":{"injectables/IncidentsService.html":{}},"body":{"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"coverage.html":{}}}],["includes",{"_index":438,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["including",{"_index":1213,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"miscellaneous/variables.html":{}}}],["indexeddblocalpersistence",{"_index":1405,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["indicates",{"_index":1626,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["indicating",{"_index":484,"title":{},"body":{"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["inesperado",{"_index":1303,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["info'},{'name",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["info.component",{"_index":2203,"title":{},"body":{"modules/SharedModule.html":{}}}],["info.component.html",{"_index":746,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.scss",{"_index":745,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts",{"_index":744,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:17",{"_index":796,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:18",{"_index":765,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:19",{"_index":768,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:20",{"_index":1885,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:21",{"_index":767,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:22",{"_index":758,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:23",{"_index":1892,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:24",{"_index":1883,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:32",{"_index":792,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:35",{"_index":2327,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:39",{"_index":783,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:41",{"_index":1888,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:42",{"_index":2326,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:48",{"_index":789,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:52",{"_index":2323,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:58",{"_index":772,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:61",{"_index":2324,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:64",{"_index":1890,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:67",{"_index":779,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:75",{"_index":1886,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:84",{"_index":1887,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.email",{"_index":1302,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.name",{"_index":1090,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{}}}],["info.password",{"_index":1284,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.role",{"_index":1299,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.surname",{"_index":1298,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.ts",{"_index":903,"title":{},"body":{"interfaces/CategoryInfo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["info.username",{"_index":1301,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.uuid",{"_index":1290,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info/categories",{"_index":743,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/incidents",{"_index":1876,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/users",{"_index":2202,"title":{},"body":{"modules/SharedModule.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["information",{"_index":231,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":1199,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{}}}],["init",{"_index":932,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["init(firebaseconfig",{"_index":1437,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initial",{"_index":761,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["initial.pipe",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["initial.pipe.ts",{"_index":721,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{}}}],["initial.pipe.ts:17",{"_index":725,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["initialize",{"_index":1427,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeapp",{"_index":1376,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeapp(firebaseconfig",{"_index":1439,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth",{"_index":1404,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth(getapp",{"_index":1445,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initialized",{"_index":2284,"title":{},"body":{"components/UserDataPage.html":{}}}],["initializes",{"_index":479,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/RegisterFormComponent.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["initiates",{"_index":989,"title":{},"body":{"components/DataPage.html":{}}}],["inject",{"_index":923,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["inject(mat_dialog_data",{"_index":921,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["injectable",{"_index":450,"title":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["injected",{"_index":217,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["injection",{"_index":1935,"title":{},"body":{"injectables/IncidentsService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["inline",{"_index":81,"title":{},"body":{"components/AboutPage.html":{}}}],["inner",{"_index":2157,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["input",{"_index":292,"title":{},"body":{"components/AccessPage.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["inputs",{"_index":752,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["inside",{"_index":680,"title":{},"body":{"guards/AuthGuard.html":{}}}],["instance",{"_index":246,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/IncidentsService.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":1178,"title":{},"body":{"classes/EmailValidation.html":{},"injectables/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{}}}],["instances",{"_index":2238,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["intentar",{"_index":900,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["interact",{"_index":1689,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["interacting",{"_index":1328,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/UserDataPage.html":{}}}],["interactions",{"_index":1325,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["interface",{"_index":901,"title":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{}},"body":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["interfaces",{"_index":902,"title":{},"body":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{},"index.html":{}}}],["interfaces/category",{"_index":845,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["interfaces/data",{"_index":1161,"title":{},"body":{"injectables/DataService.html":{}}}],["interfaces/incidents",{"_index":1943,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["interfaces/user",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["invalid",{"_index":260,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["io.ionic.starter",{"_index":2486,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":84,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["ionic",{"_index":2476,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":172,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":171,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["ionicmodule.forroot",{"_index":627,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["ionicons",{"_index":2434,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":575,"title":{},"body":{"modules/AppModule.html":{}}}],["ionmenu",{"_index":498,"title":{},"body":{"components/AppComponent.html":{}}}],["isactive",{"_index":470,"title":{},"body":{"components/AppComponent.html":{}}}],["isactive(url",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["isdisabled",{"_index":2064,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["islogged",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isscreensmall",{"_index":747,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["issplash",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["issue",{"_index":1681,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserconnected",{"_index":1634,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserconnectedanonymously",{"_index":1638,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["item",{"_index":534,"title":{},"body":{"components/AppComponent.html":{},"injectables/DataService.html":{}}}],["item.active",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["items",{"_index":351,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["items:center",{"_index":556,"title":{},"body":{"components/AppComponent.html":{}}}],["itself",{"_index":439,"title":{},"body":{"guards/AdminGuard.html":{}}}],["join",{"_index":1050,"title":{},"body":{"components/DataPage.html":{}}}],["jpeg",{"_index":1485,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["jpg",{"_index":1501,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["json",{"_index":1008,"title":{},"body":{"components/DataPage.html":{}}}],["json.stringify(row[fieldname",{"_index":1049,"title":{},"body":{"components/DataPage.html":{}}}],["jsontocsv",{"_index":970,"title":{},"body":{"components/DataPage.html":{}}}],["jsontocsv(dataobject",{"_index":1005,"title":{},"body":{"components/DataPage.html":{}}}],["justify",{"_index":49,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["key",{"_index":339,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["key}.csv",{"_index":1038,"title":{},"body":{"components/DataPage.html":{}}}],["kinds",{"_index":1532,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["la",{"_index":876,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["label",{"_index":816,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["labels",{"_index":1861,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["lang",{"_index":1953,"title":{},"body":{"injectables/LocalService.html":{}}}],["language",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"injectables/LocalService.html":{}}}],["languages",{"_index":222,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{}}}],["lastvaluefrom",{"_index":952,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["lastvaluefrom(this.translate.use(language",{"_index":957,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["leaks",{"_index":2091,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["left",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["legacy",{"_index":1765,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["legend",{"_index":95,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["length",{"_index":1657,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["letter",{"_index":727,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["life",{"_index":343,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["lightgray",{"_index":550,"title":{},"body":{"components/AppComponent.html":{}}}],["limit",{"_index":2219,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["limits",{"_index":2221,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["line",{"_index":1117,"title":{},"body":{"components/DataPage.html":{}}}],["link",{"_index":1060,"title":{},"body":{"components/DataPage.html":{}}}],["link.click",{"_index":1066,"title":{},"body":{"components/DataPage.html":{}}}],["link.download",{"_index":1063,"title":{},"body":{"components/DataPage.html":{}}}],["link.href",{"_index":1062,"title":{},"body":{"components/DataPage.html":{}}}],["link.style.display",{"_index":1064,"title":{},"body":{"components/DataPage.html":{}}}],["list",{"_index":811,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["listens",{"_index":773,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["literal",{"_index":1006,"title":{},"body":{"components/DataPage.html":{}}}],["load",{"_index":2285,"title":{},"body":{"components/UserDataPage.html":{}}}],["loadchildren",{"_index":646,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":233,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["loader",{"_index":408,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["loading",{"_index":2455,"title":{},"body":{"miscellaneous/functions.html":{}}}],["local",{"_index":1250,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["localization",{"_index":224,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{}}}],["locallang",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["localservice",{"_index":477,"title":{"injectables/LocalService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LocalService.html":{},"coverage.html":{}}}],["locate",{"_index":1599,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["located",{"_index":1674,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["location",{"_index":1489,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["logged",{"_index":446,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{}}}],["login",{"_index":125,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["login(credentials",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["loginerror",{"_index":335,"title":{},"body":{"components/AccessPage.html":{}}}],["loginformcomponent",{"_index":124,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginuser",{"_index":190,"title":{},"body":{"components/AccessPage.html":{}}}],["loginuser(data",{"_index":251,"title":{},"body":{"components/AccessPage.html":{}}}],["logo",{"_index":355,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{}}}],["logout",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["logs",{"_index":255,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["los",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["lottie",{"_index":603,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lottiefiles/lottie",{"_index":2426,"title":{},"body":{"dependencies.html":{}}}],["m",{"_index":648,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ModalCategoryComponent.html":{}}}],["m.aboutpagemodule",{"_index":669,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.accesspagemodule",{"_index":659,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.datapagemodule",{"_index":663,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":649,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.incidentdatapagemodule",{"_index":654,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.settingspagemodule",{"_index":661,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.userdatapagemodule",{"_index":667,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["manage",{"_index":2281,"title":{},"body":{"components/UserDataPage.html":{}}}],["managing",{"_index":223,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{}}}],["manipulating",{"_index":422,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["map",{"_index":452,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["map((data",{"_index":1306,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["map((doc",{"_index":1361,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["map((fieldname",{"_index":1048,"title":{},"body":{"components/DataPage.html":{}}}],["map((incident",{"_index":1945,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["map((incidents",{"_index":1855,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["map((user",{"_index":460,"title":{},"body":{"guards/AdminGuard.html":{}}}],["map((users",{"_index":2339,"title":{},"body":{"injectables/UsersService.html":{}}}],["map(translations",{"_index":2269,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["map(users",{"_index":2261,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["mapfunction",{"_index":1608,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapfunction(doc.data",{"_index":1611,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapped",{"_index":1606,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["maps",{"_index":1334,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["margin",{"_index":57,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["marked",{"_index":1816,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["mat",{"_index":1988,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["mat_dialog_data",{"_index":924,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["matbuttonmodule",{"_index":400,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["match",{"_index":1559,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/PasswordValidation.html":{}}}],["matches",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":148,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":974,"title":{},"body":{"components/DataPage.html":{}}}],["matdialogmodule",{"_index":610,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["matdialogref",{"_index":914,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["material",{"_index":412,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matformfieldmodule",{"_index":395,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["maticonmodule",{"_index":402,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matinputmodule",{"_index":398,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matselectmodule",{"_index":1131,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["mattabsmodule",{"_index":1129,"title":{},"body":{"modules/DataPageModule.html":{}}}],["max",{"_index":91,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["maximum",{"_index":2228,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["measurementid",{"_index":1435,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["mechanism",{"_index":1937,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["media",{"_index":90,"title":{"interfaces/Media.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/RegisterFormComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["media.service",{"_index":588,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["media.service.ts",{"_index":1687,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["media.service.ts:13",{"_index":1688,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["media[0",{"_index":2308,"title":{},"body":{"components/UserDataPage.html":{}}}],["mediaservice",{"_index":593,"title":{"injectables/MediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["mediaservice:32",{"_index":1694,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["mediaservicefactory",{"_index":612,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mediaservicefactory(backend",{"_index":2453,"title":{},"body":{"miscellaneous/functions.html":{}}}],["meet",{"_index":1652,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["memory",{"_index":2090,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["menu",{"_index":501,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.about",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.close",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.graphics",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.home",{"_index":529,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.logout",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.settings",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["menucontroller",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":208,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["messages",{"_index":220,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["messageservice",{"_index":184,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["messagingsenderid",{"_index":1433,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["method",{"_index":444,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["mimetype",{"_index":1481,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["min",{"_index":1833,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["minimum",{"_index":1656,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["miscellaneous",{"_index":2446,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1243,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["mobile",{"_index":1102,"title":{},"body":{"components/DataPage.html":{}}}],["mod",{"_index":1080,"title":{},"body":{"components/DataPage.html":{},"components/ModalCategoryComponent.html":{},"components/UserDataPage.html":{}}}],["mod.ondiddismiss",{"_index":1085,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{}}}],["mod.present",{"_index":1084,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{}}}],["modal",{"_index":128,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["modal.auto",{"_index":2156,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["modalcategorycomponent",{"_index":127,"title":{"components/ModalCategoryComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["modalcontroller",{"_index":976,"title":{},"body":{"components/DataPage.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["modaldesign",{"_index":2300,"title":{},"body":{"components/UserDataPage.html":{}}}],["mode",{"_index":1083,"title":{},"body":{"components/DataPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/ModalCategoryComponent.html":{}}}],["mode(m",{"_index":2019,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["modifies",{"_index":1236,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["modify",{"_index":1676,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["module",{"_index":149,"title":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["modules",{"_index":151,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["moment",{"_index":679,"title":{},"body":{"guards/AuthGuard.html":{}}}],["msg",{"_index":1509,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["multi",{"_index":2129,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["mymodal",{"_index":975,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{}}}],["name",{"_index":101,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["native",{"_index":2155,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["navigate",{"_index":505,"title":{},"body":{"components/AppComponent.html":{},"components/UsersInfoComponent.html":{}}}],["navigates",{"_index":486,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"components/HomePage.html":{}}}],["navigating",{"_index":238,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"components/HomePage.html":{}}}],["navigation",{"_index":437,"title":{},"body":{"guards/AdminGuard.html":{},"components/UserDataPage.html":{}}}],["navigationend",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":1242,"title":{},"body":{"classes/FirebaseAuthService.html":{},"pipes/ShortenTextPipe.html":{}}}],["need",{"_index":1955,"title":{},"body":{"injectables/LocalService.html":{}}}],["needed",{"_index":1233,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["needs",{"_index":1600,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["new",{"_index":617,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["newly",{"_index":1247,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["next",{"_index":314,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/IncidentDataPage.html":{}}}],["ng_value_accessor",{"_index":2127,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":166,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["ngondestroy",{"_index":2067,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["ngx",{"_index":391,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["nocheck",{"_index":1763,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{}}}],["nombre",{"_index":854,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["none",{"_index":356,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["notadmin",{"_index":210,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{}}}],["notification",{"_index":294,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["notifications",{"_index":227,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["null",{"_index":764,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"classes/PasswordValidation.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["number",{"_index":778,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"pipes/ShortenTextPipe.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["numbers",{"_index":1669,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["obj",{"_index":2116,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["object",{"_index":263,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"classes/PasswordValidation.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign(errors",{"_index":2052,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["object.keys(categorycounts",{"_index":1862,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["object.keys(dataobject[key][0",{"_index":1045,"title":{},"body":{"components/DataPage.html":{}}}],["object.keys(rolescount",{"_index":2266,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["object.values(categorycounts",{"_index":1864,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["objects",{"_index":1556,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["objeto",{"_index":1684,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["obs.error(error",{"_index":1714,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["obs.next(imgs",{"_index":1713,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["observable",{"_index":447,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}}}],["observable((obs",{"_index":1707,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["observable((subscr",{"_index":1269,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["observables",{"_index":1212,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["occurs",{"_index":1702,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["oncancel",{"_index":1996,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["once",{"_index":2288,"title":{},"body":{"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["onchangepicture",{"_index":2068,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event",{"_index":2093,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture",{"_index":2069,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event",{"_index":2100,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["oneditclicked",{"_index":754,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["onincidentclick",{"_index":1879,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["onincidentclick(event",{"_index":1889,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["onincidentclicked",{"_index":1880,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["onresize",{"_index":751,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onresize(event",{"_index":793,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onsnapshot",{"_index":1383,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsub",{"_index":1963,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["onsubmit",{"_index":1964,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["ontrashclicked",{"_index":755,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["onuserclicked",{"_index":2321,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["opendialog",{"_index":971,"title":{},"body":{"components/DataPage.html":{}}}],["opendialog(category",{"_index":1012,"title":{},"body":{"components/DataPage.html":{}}}],["opens",{"_index":982,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{}}}],["operation",{"_index":1157,"title":{},"body":{"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["operations",{"_index":827,"title":{},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{}}}],["operators",{"_index":1252,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["optional",{"_index":241,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":1622,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["options",{"_index":1769,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["original",{"_index":838,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseDataService.html":{}}}],["originalname",{"_index":836,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["otherwise",{"_index":733,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"injectables/IncidentsService.html":{}}}],["out",{"_index":163,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DataPageModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["outlet",{"_index":234,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["output",{"_index":798,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["outputs",{"_index":753,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["overflow",{"_index":59,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{}}}],["overview",{"_index":2465,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":2402,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":352,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["page",{"_index":433,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"components/HomePage.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["page:number",{"_index":2025,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["pagecount",{"_index":1357,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["pagecount:number",{"_index":2027,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["pages/user",{"_index":642,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pagesize",{"_index":1355,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["pagesize:number",{"_index":2026,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["paginated",{"_index":1158,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["paginateddata",{"_index":1160,"title":{"interfaces/PaginatedData.html":{}},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["pagination",{"_index":1354,"title":{"interfaces/Pagination.html":{}},"body":{"classes/FirebaseDataService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["pagination:pagination",{"_index":2030,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["papaparse",{"_index":2437,"title":{},"body":{"dependencies.html":{}}}],["para",{"_index":37,"title":{},"body":{"components/AboutPage.html":{}}}],["param",{"_index":301,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["parameter",{"_index":209,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":205,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1154,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["params.get('id",{"_index":1821,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["params['error",{"_index":304,"title":{},"body":{"components/AccessPage.html":{}}}],["parent",{"_index":2008,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["particularly",{"_index":1691,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["pass",{"_index":1531,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["passes",{"_index":2010,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["passing",{"_index":2007,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["password",{"_index":266,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{}}}],["password.match(/^(?=.*[a",{"_index":2044,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["password:string",{"_index":2277,"title":{},"body":{"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["passwordcontrolname",{"_index":2039,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch",{"_index":2034,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch(passwordcontrolname",{"_index":2036,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto",{"_index":2035,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto(controlname",{"_index":2040,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation",{"_index":2032,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["passwordvalidation.passwordmatch('password",{"_index":2171,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["passwordvalidation.passwordproto",{"_index":2169,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["patch",{"_index":1742,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["patch(url",{"_index":1752,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["path",{"_index":181,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["pathmatch",{"_index":656,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":2043,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["pdf",{"_index":1487,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["performs",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["period",{"_index":729,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["persistence",{"_index":1446,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["photo",{"_index":2031,"title":{"interfaces/Photo.html":{}},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["picture",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{}}}],["picture_selectable_value_accessor",{"_index":2058,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picturemodal",{"_index":2076,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["pictureselectablecomponent",{"_index":130,"title":{"components/PictureSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pinned",{"_index":1764,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["pipe",{"_index":718,"title":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}},"body":{"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["pipe(map",{"_index":899,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["pipe(map((_",{"_index":1372,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["pipe(switchmap((doc",{"_index":1369,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["pipes",{"_index":719,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{},"index.html":{}}}],["pipetransform",{"_index":740,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["platform",{"_index":576,"title":{},"body":{"modules/AppModule.html":{}}}],["player",{"_index":604,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["plugins",{"_index":1874,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["png",{"_index":1502,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["pointer",{"_index":372,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["pointing",{"_index":1698,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["populates",{"_index":2241,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["porque",{"_index":886,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["position",{"_index":53,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["post",{"_index":327,"title":{},"body":{"components/AccessPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["post(resource",{"_index":1147,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["post(url",{"_index":1758,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["postregister",{"_index":1190,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["postregister(info",{"_index":1231,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["potential",{"_index":2089,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["prefix",{"_index":1495,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["preloadallmodules",{"_index":637,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":671,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preventing",{"_index":2088,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["primary",{"_index":540,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng",{"_index":2439,"title":{},"body":{"dependencies.html":{}}}],["primeng/accordion",{"_index":1134,"title":{},"body":{"modules/DataPageModule.html":{}}}],["primeng/api",{"_index":297,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["primeng/chart",{"_index":2212,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/divider",{"_index":609,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/toast",{"_index":406,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/SharedModule.html":{}}}],["private",{"_index":302,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["problemas",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["process",{"_index":276,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["production",{"_index":2492,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1227,"title":{},"body":{"classes/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["project",{"_index":2477,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":1431,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":440,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise((resolve",{"_index":1534,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise(async",{"_index":1506,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["propagatechange",{"_index":2065,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["propagating",{"_index":2123,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["properly",{"_index":2085,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["properties",{"_index":188,"title":{"properties.html":{}},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"interfaces/incidentInfo.html":{},"properties.html":{}}}],["property",{"_index":250,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["protected",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{}}}],["provide",{"_index":409,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":579,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":228,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"components/UpdateUserComponent.html":{},"injectables/UsersService.html":{}}}],["providedin",{"_index":455,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}}}],["providelottieoptions",{"_index":602,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":1775,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["providers",{"_index":155,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"modules/IncidentDataPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["provides",{"_index":218,"title":{},"body":{"components/AccessPage.html":{},"guards/AuthGuard.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["providing",{"_index":1326,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["public",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{}}}],["puede",{"_index":884,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["put",{"_index":1138,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["put(resource",{"_index":1149,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["put(url",{"_index":1760,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["q",{"_index":1594,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["que",{"_index":1073,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query",{"_index":204,"title":{},"body":{"components/AccessPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query(resource",{"_index":1153,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["queryparams",{"_index":464,"title":{},"body":{"guards/AdminGuard.html":{}}}],["querysnapshot",{"_index":1464,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["querysnapshot.docs.map((doc",{"_index":1467,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["quieres",{"_index":1074,"title":{},"body":{"components/DataPage.html":{}}}],["radius",{"_index":1103,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["raw",{"_index":1478,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reactive",{"_index":1135,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["reactiveformsmodule",{"_index":382,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["reader",{"_index":2142,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onerror",{"_index":2146,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onload",{"_index":2144,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.readasdataurl(file",{"_index":2148,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["readonly",{"_index":1789,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["real",{"_index":1607,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["received",{"_index":1210,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["recent",{"_index":1614,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["redirects",{"_index":432,"title":{},"body":{"guards/AdminGuard.html":{}}}],["redirectto",{"_index":655,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":1395,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ref(this._webstorage",{"_index":1517,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reference",{"_index":916,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["refers",{"_index":1482,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reflect",{"_index":1245,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["refreshed",{"_index":1257,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["refreshes",{"_index":1249,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["register",{"_index":134,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["register(info",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["registered",{"_index":279,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{}}}],["registerformcomponent",{"_index":133,"title":{"components/RegisterFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["registeronchange",{"_index":2070,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["registeronchange(fn",{"_index":2103,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["registerontouched",{"_index":2071,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["registerontouched(fn",{"_index":2108,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["registers",{"_index":271,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/PictureSelectableComponent.html":{}}}],["registeruser",{"_index":191,"title":{},"body":{"components/AccessPage.html":{}}}],["registeruser(data",{"_index":268,"title":{},"body":{"components/AccessPage.html":{}}}],["registration",{"_index":275,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{}}}],["reject",{"_index":1508,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject('document",{"_index":1586,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(err",{"_index":1539,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(error",{"_index":1514,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["rejected",{"_index":1671,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["rejects",{"_index":1579,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["related",{"_index":236,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["relative",{"_index":54,"title":{},"body":{"components/AboutPage.html":{},"components/CategoriesInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["relevant",{"_index":280,"title":{},"body":{"components/AccessPage.html":{}}}],["remarks",{"_index":1029,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["removed",{"_index":1601,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["repeat",{"_index":362,"title":{},"body":{"components/AccessPage.html":{}}}],["reppassword",{"_index":2170,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["represent",{"_index":1477,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["representing",{"_index":948,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["represents",{"_index":288,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["request",{"_index":1747,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["requested",{"_index":1336,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["required",{"_index":1651,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reset",{"_index":162,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["resets",{"_index":1974,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["resize",{"_index":775,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["resolutions",{"_index":1700,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["resolve",{"_index":1507,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(deleteuser(this._user",{"_index":1672,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(docref.id",{"_index":1538,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(false",{"_index":1636,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(null",{"_index":1659,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(this._auth!.currentuser",{"_index":1637,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolved",{"_index":1815,"title":{},"body":{"components/IncidentDataPage.html":{},"interfaces/incidentInfo.html":{}}}],["resolves",{"_index":441,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resource",{"_index":1142,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["resource.split('/')[0",{"_index":1368,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["resource.split('/')[1",{"_index":1360,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["resources",{"_index":2459,"title":{},"body":{"miscellaneous/functions.html":{}}}],["respectively",{"_index":1197,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["response",{"_index":1635,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["responsetype",{"_index":1791,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["result",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["resulting",{"_index":1159,"title":{},"body":{"injectables/DataService.html":{}}}],["results",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.data",{"_index":1086,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{}}}],["results.data.picture",{"_index":2307,"title":{},"body":{"components/UserDataPage.html":{}}}],["results?.data",{"_index":1087,"title":{},"body":{"components/DataPage.html":{}}}],["results?.data?.picture",{"_index":2302,"title":{},"body":{"components/UserDataPage.html":{}}}],["results?.data?.picture?.substring(0",{"_index":2303,"title":{},"body":{"components/UserDataPage.html":{}}}],["retrieve",{"_index":941,"title":{},"body":{"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{}}}],["retrieved",{"_index":1146,"title":{},"body":{"injectables/DataService.html":{}}}],["retrieves",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["return",{"_index":458,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"classes/PasswordValidation.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LocalService.html":{},"pipes/ShortenTextPipe.html":{},"injectables/UsersService.html":{}}}],["returning",{"_index":448,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["rgba(0",{"_index":1119,"title":{},"body":{"components/DataPage.html":{}}}],["rgba(71",{"_index":1919,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["right",{"_index":535,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{}}}],["rni3rcpqs7xmtbh4",{"_index":2494,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":272,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"classes/FirebaseAuthService.html":{},"components/IncidentDataPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["roles",{"_index":2265,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["roles.map(role",{"_index":2267,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["rolescount",{"_index":2262,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["rolescount[role",{"_index":2270,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["root",{"_index":456,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":106,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["route",{"_index":198,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["router",{"_index":200,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["routereusestrategy",{"_index":572,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":178,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":182,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":670,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":428,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":177,"title":{"routes.html":{}},"body":{"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":173,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["routing.module.ts",{"_index":176,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["row",{"_index":349,"title":{},"body":{"components/AccessPage.html":{},"components/HomePage.html":{}}}],["rxjs",{"_index":451,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/PictureSelectableComponent.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":840,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["rxjs/operators",{"_index":453,"title":{},"body":{"guards/AdminGuard.html":{}}}],["same",{"_index":1699,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["save",{"_index":1542,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["screen",{"_index":762,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["se",{"_index":883,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["search",{"_index":1563,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["searching",{"_index":1593,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["security",{"_index":1654,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["seems",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["seguro",{"_index":1072,"title":{},"body":{"components/DataPage.html":{}}}],["selectable",{"_index":2059,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable'},{'name",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["selectable.component",{"_index":2207,"title":{},"body":{"modules/SharedModule.html":{}}}],["selectable.component.html",{"_index":2061,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.scss",{"_index":2060,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts",{"_index":2057,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable.component.ts:116",{"_index":2101,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:124",{"_index":2081,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:19",{"_index":2118,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:20",{"_index":2121,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:21",{"_index":2119,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:22",{"_index":2075,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:35",{"_index":2082,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:39",{"_index":2092,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:44",{"_index":2122,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:50",{"_index":2114,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:61",{"_index":2104,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:69",{"_index":2109,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:75",{"_index":2112,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:83",{"_index":2079,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:94",{"_index":2096,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable/picture",{"_index":2056,"title":{},"body":{"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":2080,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["server",{"_index":1768,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/UserDataPage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":216,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["services",{"_index":214,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["services/auth.service",{"_index":454,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["set",{"_index":1553,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["setcategoryinfo(category",{"_index":2013,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["setdisabledstate",{"_index":2072,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":2111,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":2134,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["setdoc",{"_index":1385,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setdoc(docref",{"_index":1548,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setmode(m",{"_index":2014,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["setresolvedincident",{"_index":1808,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["setresolvedincident(incident",{"_index":1813,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["sets",{"_index":780,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["setservertrustmode",{"_index":1743,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["setservertrustmode(mode",{"_index":1762,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["setter",{"_index":2240,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["setting",{"_index":944,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{}}}],["settings",{"_index":508,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{}}}],["settings'},{'name",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["settings.page",{"_index":2193,"title":{},"body":{"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{}}}],["settings.page.html",{"_index":2183,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page.scss",{"_index":2182,"title":{},"body":{"components/SettingsPage.html":{}}}],["settingspage",{"_index":135,"title":{"components/SettingsPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["settingspagemodule",{"_index":2187,"title":{"modules/SettingsPageModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"index.html":{},"modules.html":{}}}],["settingspageroutingmodule",{"_index":2191,"title":{"modules/SettingsPageRoutingModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["setuserinfo(user",{"_index":2246,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["severity",{"_index":341,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["shadow",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{}}}],["shared",{"_index":413,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["shared/shared.module",{"_index":601,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":380,"title":{"modules/SharedModule.html":{}},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["shortentext",{"_index":1911,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{}}}],["shortentextpipe",{"_index":2199,"title":{"pipes/ShortenTextPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"coverage.html":{},"index.html":{}}}],["showerror",{"_index":192,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["showerror(text",{"_index":283,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["showsuccess",{"_index":193,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["showsuccess(text",{"_index":289,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["sign",{"_index":1219,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signed",{"_index":1627,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanon",{"_index":1625,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanon=false",{"_index":1624,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously",{"_index":1402,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth",{"_index":1513,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth!).catch((error",{"_index":1644,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signing",{"_index":1628,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinwithemailandpassword",{"_index":1403,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout",{"_index":1218,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(signinanon",{"_index":1631,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(this._auth",{"_index":1523,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signs",{"_index":1621,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["single",{"_index":1145,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["size",{"_index":69,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["slogan",{"_index":75,"title":{},"body":{"components/AboutPage.html":{}}}],["snapshot",{"_index":435,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["snapshot.data",{"_index":1619,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["social",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["solid",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{},"dependencies.html":{}}}],["solucionar",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["solución",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["something",{"_index":1500,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["space",{"_index":51,"title":{},"body":{"components/AboutPage.html":{},"components/IncidentsInfoComponent.html":{}}}],["span",{"_index":560,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["special",{"_index":1668,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["specific",{"_index":259,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["specified",{"_index":488,"title":{},"body":{"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/PasswordValidation.html":{},"pipes/ShortenTextPipe.html":{}}}],["specifies",{"_index":1483,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["specify",{"_index":1589,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["split",{"_index":1341,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["src/.../app.module.ts",{"_index":2448,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../blob.ts",{"_index":2450,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":2482,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2483,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../picture",{"_index":2484,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../translate.ts",{"_index":2449,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":636,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":466,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:14",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:51",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:58",{"_index":503,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:72",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:79",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:90",{"_index":499,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":568,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":418,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:16",{"_index":420,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:42",{"_index":429,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":672,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:15",{"_index":673,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:41",{"_index":676,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/helpers/blob",{"_index":2292,"title":{},"body":{"components/UserDataPage.html":{}}}],["src/app/core/helpers/blob.ts",{"_index":2352,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/interfaces/category",{"_index":799,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/CategoryInfo.html":{},"components/DataPage.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["src/app/core/interfaces/data",{"_index":1347,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["src/app/core/interfaces/data.ts",{"_index":2024,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["src/app/core/interfaces/incidents",{"_index":1724,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["src/app/core/interfaces/user",{"_index":298,"title":{},"body":{"components/AccessPage.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["src/app/core/pipes/capitalize",{"_index":720,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/shorten",{"_index":2216,"title":{},"body":{"pipes/ShortenTextPipe.html":{},"coverage.html":{}}}],["src/app/core/services/api/categories.service",{"_index":1024,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/core/services/api/categories.service.ts",{"_index":822,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/app/core/services/api/categories.service.ts:112",{"_index":837,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:19",{"_index":826,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:33",{"_index":829,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:76",{"_index":833,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/incidents.service",{"_index":1818,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["src/app/core/services/api/incidents.service.ts",{"_index":1930,"title":{},"body":{"injectables/IncidentsService.html":{},"coverage.html":{}}}],["src/app/core/services/api/incidents.service.ts:27",{"_index":1939,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/incidents.service.ts:41",{"_index":1942,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/incidents.service.ts:9",{"_index":1933,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/users.service",{"_index":1893,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UserDataPage.html":{}}}],["src/app/core/services/api/users.service.ts",{"_index":2330,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/core/services/api/users.service.ts:10",{"_index":2332,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:32",{"_index":2334,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:46",{"_index":2337,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/auth.service",{"_index":299,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/HomePage.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:10",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:11",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:12",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:19",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:26",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:31",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:44",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:9",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/data.service.ts",{"_index":1137,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/core/services/data.service.ts:15",{"_index":1155,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:25",{"_index":1144,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:33",{"_index":1148,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:41",{"_index":1150,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:48",{"_index":1140,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/firebase/api/firebase",{"_index":1187,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["src/app/core/services/firebase/firebase.service",{"_index":1025,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{}}}],["src/app/core/services/firebase/firebase.service.ts",{"_index":1374,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["src/app/core/services/http/http",{"_index":1739,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["src/app/core/services/media.service",{"_index":2293,"title":{},"body":{"components/UserDataPage.html":{}}}],["src/app/core/services/media.service.ts",{"_index":1990,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["src/app/core/services/media.service.ts:13",{"_index":1991,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/core/services/translate/local.service.ts",{"_index":1948,"title":{},"body":{"injectables/LocalService.html":{},"coverage.html":{}}}],["src/app/core/services/translate/local.service.ts:8",{"_index":1951,"title":{},"body":{"injectables/LocalService.html":{}}}],["src/app/core/services/translate/translate.service",{"_index":300,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["src/app/core/services/translate/translate.service.ts",{"_index":929,"title":{},"body":{"injectables/CustomTranslateService.html":{},"coverage.html":{}}}],["src/app/core/services/translate/translate.service.ts:11",{"_index":935,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:26",{"_index":942,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:37",{"_index":946,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:53",{"_index":938,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:8",{"_index":950,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/translate/translate",{"_index":394,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["src/app/core/translate/translate.ts",{"_index":2382,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/validators/email",{"_index":2166,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["src/app/core/validators/email.ts",{"_index":1164,"title":{},"body":{"classes/EmailValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/email.ts:14",{"_index":1167,"title":{},"body":{"classes/EmailValidation.html":{}}}],["src/app/core/validators/password",{"_index":2167,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["src/app/core/validators/password.ts",{"_index":2033,"title":{},"body":{"classes/PasswordValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/password.ts:13",{"_index":2041,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/core/validators/password.ts:35",{"_index":2038,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/pages/about/about",{"_index":175,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":164,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/about/about.page.ts:12",{"_index":26,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:8",{"_index":25,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/access/access",{"_index":414,"title":{},"body":{"modules/AccessPageRoutingModule.html":{}}}],["src/app/pages/access/access.module.ts",{"_index":381,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["src/app/pages/access/access.page.ts",{"_index":183,"title":{},"body":{"components/AccessPage.html":{},"coverage.html":{}}}],["src/app/pages/access/access.page.ts:101",{"_index":253,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:121",{"_index":290,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:138",{"_index":285,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:16",{"_index":201,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:52",{"_index":267,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:58",{"_index":247,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:70",{"_index":270,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/login",{"_index":1959,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/pages/access/register",{"_index":2159,"title":{},"body":{"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["src/app/pages/data/data",{"_index":1136,"title":{},"body":{"modules/DataPageRoutingModule.html":{}}}],["src/app/pages/data/data.module.ts",{"_index":1127,"title":{},"body":{"modules/DataPageModule.html":{}}}],["src/app/pages/data/data.page.ts",{"_index":963,"title":{},"body":{"components/DataPage.html":{},"coverage.html":{}}}],["src/app/pages/data/data.page.ts:104",{"_index":988,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:126",{"_index":1013,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:145",{"_index":1019,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:154",{"_index":995,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:179",{"_index":981,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:204",{"_index":985,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:21",{"_index":977,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:217",{"_index":1017,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:237",{"_index":1016,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:39",{"_index":1022,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:43",{"_index":1011,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:53",{"_index":997,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:74",{"_index":1007,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/modal",{"_index":1992,"title":{},"body":{"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/home",{"_index":1738,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":1736,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1715,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:12",{"_index":1720,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:23",{"_index":1723,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:31",{"_index":1722,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/incident",{"_index":1805,"title":{},"body":{"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings",{"_index":2194,"title":{},"body":{"modules/SettingsPageRoutingModule.html":{}}}],["src/app/pages/settings/settings.module.ts",{"_index":2192,"title":{},"body":{"modules/SettingsPageModule.html":{}}}],["src/app/pages/settings/settings.page.ts",{"_index":2181,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings.page.ts:12",{"_index":2185,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:8",{"_index":2184,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/user",{"_index":2231,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/shared/components/categories",{"_index":742,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/confirm",{"_index":905,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"coverage.html":{}}}],["src/app/shared/components/incidents",{"_index":1843,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/picture",{"_index":2055,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/user",{"_index":2257,"title":{},"body":{"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/users",{"_index":2319,"title":{},"body":{"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module",{"_index":404,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/UserDataPageModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2200,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":596,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":2398,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2399,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":2218,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["start",{"_index":1727,"title":{},"body":{"components/HomePage.html":{},"components/PictureSelectableComponent.html":{}}}],["state",{"_index":427,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["statements",{"_index":2344,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1165,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["status",{"_index":1598,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["storage",{"_index":1474,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["storagebucket",{"_index":1432,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["storageref",{"_index":1516,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["store",{"_index":1541,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stored",{"_index":1338,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stores",{"_index":1240,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stream",{"_index":2335,"title":{},"body":{"injectables/UsersService.html":{}}}],["string",{"_index":284,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{}}}],["strong",{"_index":1665,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["structure",{"_index":1343,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["su",{"_index":897,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["subheader",{"_index":815,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["subject",{"_index":947,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(mapfunction(data",{"_index":1620,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(snapshot.docs.map((doc",{"_index":1610,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["submission",{"_index":1972,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["subscr.complete",{"_index":1281,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.error('cannot",{"_index":1278,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.error(err",{"_index":1282,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.next(_info",{"_index":1289,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.next(data",{"_index":1280,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscribe",{"_index":313,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribe((chartdata",{"_index":1870,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["subscribe(chartdata",{"_index":2275,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["subscribers",{"_index":1616,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribes",{"_index":203,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserDataPage.html":{}}}],["subscribetocollection",{"_index":1605,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetodocument",{"_index":1612,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscriptions",{"_index":480,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["substring",{"_index":1558,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["success",{"_index":291,"title":{},"body":{"components/AccessPage.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["successful",{"_index":1211,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["successfully",{"_index":832,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["such",{"_index":265,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["super",{"_index":1261,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{}}}],["support",{"_index":2471,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":1297,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["svg",{"_index":2421,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["switch",{"_index":320,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["switch(backend",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["switchmap",{"_index":842,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["switchmap((doc",{"_index":1364,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["switchmap((docref",{"_index":864,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["switchmap((existingcategories",{"_index":847,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["switchmap((incidents",{"_index":879,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["t",{"_index":1141,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/PaginatedData.html":{}}}],["table",{"_index":2401,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2400,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":844,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["take(1",{"_index":1944,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["takes",{"_index":282,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["tap",{"_index":681,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{}}}],["tap((logged",{"_index":683,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tasks",{"_index":1255,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["terminated",{"_index":2086,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["text",{"_index":62,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{}}}],["text.pipe",{"_index":2205,"title":{},"body":{"modules/SharedModule.html":{}}}],["text.pipe.ts",{"_index":2217,"title":{},"body":{"pipes/ShortenTextPipe.html":{},"coverage.html":{}}}],["text.pipe.ts:23",{"_index":2220,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["text/csv;charset=utf",{"_index":1057,"title":{},"body":{"components/DataPage.html":{}}}],["tfcchato",{"_index":2488,"title":{},"body":{"miscellaneous/variables.html":{}}}],["then((_",{"_index":958,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["then((credentials",{"_index":1274,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["then((data",{"_index":1709,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["then((dataobject",{"_index":1032,"title":{},"body":{"components/DataPage.html":{}}}],["then((docref",{"_index":1537,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["then(async",{"_index":1520,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._app",{"_index":1438,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth",{"_index":1444,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth!.currentuser",{"_index":1639,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth!.currentuser.isanonymous",{"_index":1640,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.currentuser",{"_index":1512,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.onauthstatechanged(async",{"_index":1447,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.signout",{"_index":1632,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categories",{"_index":1456,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categories.asobservable",{"_index":1420,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categoryservice",{"_index":1088,"title":{},"body":{"components/DataPage.html":{}}}],["this._categoryservice.createcategory(results?.data).subscribe",{"_index":1094,"title":{},"body":{"components/DataPage.html":{}}}],["this._categoryservice.deletecategory(info).subscribe",{"_index":1095,"title":{},"body":{"components/DataPage.html":{}}}],["this._db",{"_index":1440,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._firebaseservice",{"_index":1030,"title":{},"body":{"components/DataPage.html":{}}}],["this._firebaseservice.incidents",{"_index":1854,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["this._firebaseservice.users$.pipe",{"_index":2260,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["this._incidents",{"_index":1458,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._incidents.asobservable",{"_index":1418,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.asobservable",{"_index":1414,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(false",{"_index":1459,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(true",{"_index":1451,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._language.asobservable",{"_index":951,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._language.next(language",{"_index":959,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._logged.asobservable",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["this._logged.next(false",{"_index":1267,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._logged.next(true",{"_index":1265,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._picture.asobservable",{"_index":2120,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.complete",{"_index":2130,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(obj",{"_index":2132,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(picture",{"_index":2136,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._router.navigate(['/data",{"_index":2310,"title":{},"body":{"components/UserDataPage.html":{}}}],["this._user",{"_index":1448,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._user.asobservable",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["this._user.next(data",{"_index":1264,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.next(null",{"_index":1268,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.next(user",{"_index":1320,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.value?.uuid",{"_index":1319,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._users",{"_index":1453,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._users.asobservable",{"_index":1416,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._webstorage",{"_index":1442,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.auth.islogged$.pipe",{"_index":682,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.islogged$.subscribe((logged",{"_index":515,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.login",{"_index":332,"title":{},"body":{"components/AccessPage.html":{}}}],["this.auth.logout",{"_index":462,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.auth.logout().subscribe(async",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.register",{"_index":311,"title":{},"body":{"components/AccessPage.html":{}}}],["this.auth.updateuser(data).subscribe",{"_index":2341,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.auth.user$.pipe",{"_index":459,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.browserlanguage",{"_index":1956,"title":{},"body":{"injectables/LocalService.html":{}}}],["this.changepicture",{"_index":2150,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.changepicture(reader.result",{"_index":2145,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.checkscreensize(event.target.innerwidth",{"_index":803,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.checkscreensize(window.innerwidth",{"_index":800,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.connectanonymously",{"_index":1633,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.createbody(body",{"_index":1795,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.createheaders(headers",{"_index":1793,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.data",{"_index":1871,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["this.deletecategory(category",{"_index":1078,"title":{},"body":{"components/DataPage.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1069,"title":{},"body":{"components/DataPage.html":{}}}],["this.dialogref.close",{"_index":925,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.downloadcsv(csvcontent",{"_index":1037,"title":{},"body":{"components/DataPage.html":{}}}],["this.fileupload(blob",{"_index":1527,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.firebase",{"_index":1708,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["this.firebase.deletedocument",{"_index":1371,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.getdocument(resource.split('/')[0",{"_index":1359,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.updatedocument",{"_index":1367,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebaseservice",{"_index":890,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.categories$.pipe",{"_index":846,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.createdocument('categoryinfo",{"_index":863,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.incidents$.pipe",{"_index":878,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["this.firebaseservice.updatedocument",{"_index":898,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["this.firebaseservice.updatedocument('categoryinfo",{"_index":867,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user",{"_index":857,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user.email",{"_index":861,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user.uid",{"_index":859,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.users$.pipe",{"_index":2338,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.firebasesvc",{"_index":1270,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.createdocumentwithid",{"_index":1296,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.getdocument('userinfo",{"_index":1304,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.islogged$.subscribe((logged",{"_index":1262,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.updatedocument('userinfo",{"_index":1316,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.user.uid",{"_index":1305,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.user?.uid",{"_index":1287,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.form",{"_index":1978,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.form.controls['description'].setvalue(category.description",{"_index":2017,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['name'].setvalue(category.name",{"_index":2016,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['name'].setvalue(user.name",{"_index":2249,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['picture'].setvalue(user.picture",{"_index":2248,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['role'].setvalue(user.role",{"_index":2253,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['surname'].setvalue(user.surname",{"_index":2250,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['username'].setvalue(user.username",{"_index":2251,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['uuid'].setvalue(category.uuid",{"_index":2018,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['uuid'].setvalue(user.uuid",{"_index":2252,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.reset",{"_index":1982,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.formattedday",{"_index":1897,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.formattedtime",{"_index":1899,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.formbuilder.group",{"_index":1979,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.get(resource",{"_index":1365,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.get(resource).pipe",{"_index":1370,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.hasvalue",{"_index":2131,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.httpclient.delete(url",{"_index":1799,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.get(url",{"_index":1790,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.patch(url",{"_index":1798,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.post(url",{"_index":1794,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.put(url",{"_index":1796,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.incident",{"_index":1823,"title":{},"body":{"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{}}}],["this.incident.date",{"_index":1895,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.incidentid",{"_index":1820,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.getincidentbyid(this.incidentid).subscribe",{"_index":1822,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.updateincident(incident",{"_index":1825,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.init",{"_index":953,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.init(config",{"_index":1422,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.isdisabled",{"_index":2135,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.isscreensmall",{"_index":804,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.isuserconnected",{"_index":1642,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.isuserconnectedanonymously",{"_index":1643,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.jsontocsv(dataobject",{"_index":1034,"title":{},"body":{"components/DataPage.html":{}}}],["this.lang.use(this.browserlanguage",{"_index":1958,"title":{},"body":{"injectables/LocalService.html":{}}}],["this.login",{"_index":307,"title":{},"body":{"components/AccessPage.html":{}}}],["this.me().subscribe",{"_index":1263,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.me().subscribe((data",{"_index":1279,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.media.upload(blob).subscribe((media",{"_index":2306,"title":{},"body":{"components/UserDataPage.html":{}}}],["this.messageservice.add",{"_index":338,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["this.mod",{"_index":2020,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.modal.dismiss(null",{"_index":2022,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.modal.dismiss(this.form.value",{"_index":2021,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.mymodal.create",{"_index":1081,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{}}}],["this.oneditclicked.emit(category",{"_index":802,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["this.onincidentclicked.emit(this.incident?.uuid",{"_index":1908,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.onsubmit.emit(this.form?.value",{"_index":1981,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.ontrashclicked.emit(category",{"_index":801,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["this.onuserclicked.emit(userid",{"_index":2328,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.options",{"_index":1873,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["this.picturemodal?.dismiss",{"_index":2151,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.postregister(_info).subscribe((data",{"_index":1288,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.propagatechange",{"_index":2133,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.propagatechange(picture",{"_index":2137,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.route.parammap.subscribe((params",{"_index":1819,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["this.route.queryparams.subscribe(params",{"_index":303,"title":{},"body":{"components/AccessPage.html":{}}}],["this.router.navigate(['/about",{"_index":523,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/access",{"_index":463,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["this.router.navigate(['/data",{"_index":519,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home",{"_index":516,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home/incident",{"_index":1726,"title":{},"body":{"components/HomePage.html":{}}}],["this.router.navigate(['/settings",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate([`/data/user/${userid",{"_index":1079,"title":{},"body":{"components/DataPage.html":{}}}],["this.router.url.includes(url",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["this.showerror",{"_index":305,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('cant",{"_index":1092,"title":{},"body":{"components/DataPage.html":{}}}],["this.showsuccess",{"_index":317,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showsuccess('good",{"_index":1091,"title":{},"body":{"components/DataPage.html":{}}}],["this.subscribetocollection",{"_index":1455,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetocollection('userinfo",{"_index":1452,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.translate.addlangs(['es",{"_index":954,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.get",{"_index":337,"title":{},"body":{"components/AccessPage.html":{}}}],["this.translate.get(`forms.${role",{"_index":2268,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["this.translate.get(key",{"_index":962,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.get(message).subscribe",{"_index":1096,"title":{},"body":{"components/DataPage.html":{}}}],["this.translate.setdefaultlang(this._language.value",{"_index":956,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.user",{"_index":2297,"title":{},"body":{"components/UserDataPage.html":{}}}],["this.userid",{"_index":2295,"title":{},"body":{"components/UserDataPage.html":{}}}],["this.username",{"_index":1906,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.userservice.getuserbyid(this.incident.userid).subscribe((user",{"_index":1905,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.userservice.getuserbyid(this.userid).subscribe((user",{"_index":2296,"title":{},"body":{"components/UserDataPage.html":{}}}],["this.userservice.updateuser(results.data",{"_index":2309,"title":{},"body":{"components/UserDataPage.html":{}}}],["through",{"_index":1206,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"miscellaneous/functions.html":{}}}],["throw",{"_index":619,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["throwerror",{"_index":843,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["throws",{"_index":1229,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["thumbnails",{"_index":1701,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["tiene",{"_index":887,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["time",{"_index":436,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["timestamp",{"_index":1497,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["timestamp.todate",{"_index":1902,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["timestamp.tolocaledatestring",{"_index":1898,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["timestamp.tolocaletimestring",{"_index":1900,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["title",{"_index":2464,"title":{},"body":{"interfaces/incidentInfo.html":{}}}],["tl",{"_index":340,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["toabout",{"_index":472,"title":{},"body":{"components/AppComponent.html":{}}}],["toabout(menu",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":293,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["toast.${text",{"_index":336,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["toastmodule",{"_index":405,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/SharedModule.html":{}}}],["todata",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["toggles",{"_index":248,"title":{},"body":{"components/AccessPage.html":{}}}],["tohome",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbar",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":347,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["tosettings",{"_index":475,"title":{},"body":{"components/AppComponent.html":{}}}],["total",{"_index":1358,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["total:number",{"_index":2028,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["touched",{"_index":2110,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["transform",{"_index":722,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["transform(value",{"_index":723,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["transformed",{"_index":737,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["translate",{"_index":196,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UsersInfoComponent.html":{}}}],["translate.service",{"_index":1954,"title":{},"body":{"injectables/LocalService.html":{}}}],["translate/core",{"_index":392,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2429,"title":{},"body":{"dependencies.html":{}}}],["translated",{"_index":939,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translateloader",{"_index":390,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule",{"_index":389,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule.forchild",{"_index":407,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule.forroot",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":934,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translating",{"_index":219,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{}}}],["translation",{"_index":213,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/UserCircleGraphicComponent.html":{},"miscellaneous/functions.html":{}}}],["translations",{"_index":936,"title":{},"body":{"injectables/CustomTranslateService.html":{},"components/UserCircleGraphicComponent.html":{}}}],["transparent",{"_index":368,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["triggering",{"_index":2098,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["true",{"_index":296,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"classes/EmailValidation.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"miscellaneous/variables.html":{}}}],["truncate",{"_index":2224,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["trust",{"_index":1767,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["try",{"_index":1462,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["tslib",{"_index":2442,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["tus",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["type",{"_index":240,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":1894,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"classes/PasswordValidation.html":{}}}],["typescript",{"_index":254,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["typically",{"_index":1428,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["uid",{"_index":1209,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["un",{"_index":1683,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unauthenticated",{"_index":1246,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["undefined",{"_index":724,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"pipes/ShortenTextPipe.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["unique",{"_index":1436,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["uniquely",{"_index":1545,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unknown",{"_index":329,"title":{},"body":{"components/AccessPage.html":{}}}],["unsubscribe",{"_index":1387,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["up",{"_index":1423,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["update",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UsersInfoComponent.html":{}}}],["updatecategory",{"_index":824,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategory(category",{"_index":835,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategory(results?.data",{"_index":1089,"title":{},"body":{"components/DataPage.html":{}}}],["updated",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["updatedoc",{"_index":1382,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(doc(collectionref",{"_index":1554,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(documentref",{"_index":1686,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocument",{"_index":1549,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocumentfield",{"_index":1673,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updateincident",{"_index":1932,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["updateincident(incident",{"_index":1941,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["updates",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["updateuser",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["updateuser(data",{"_index":2336,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(user",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/UserDataPage.html":{}}}],["updateusercomponent",{"_index":137,"title":{"components/UpdateUserComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["updating",{"_index":1152,"title":{},"body":{"injectables/DataService.html":{}}}],["upload",{"_index":1491,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["upload(blob",{"_index":1693,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["uploadbytes",{"_index":1397,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploadbytes(storageref",{"_index":1519,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploaded",{"_index":1475,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["uploading",{"_index":1692,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{}}}],["uploads",{"_index":1473,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["upon",{"_index":1330,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["url",{"_index":424,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["url('../../../assets/images/vectorial",{"_index":365,"title":{},"body":{"components/AccessPage.html":{}}}],["url.createobjecturl(blob",{"_index":1059,"title":{},"body":{"components/DataPage.html":{}}}],["url.revokeobjecturl(url",{"_index":1068,"title":{},"body":{"components/DataPage.html":{}}}],["url_large",{"_index":1705,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_medium",{"_index":1704,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_small",{"_index":1703,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_thumbnail",{"_index":1706,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["urlencoded",{"_index":1754,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["urls",{"_index":1697,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["urltree",{"_index":443,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["use",{"_index":324,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["use(language",{"_index":945,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["useclass",{"_index":634,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":211,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":2128,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":410,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["user",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["user!.uuid",{"_index":1317,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["user's",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user'},{'name",{"_index":139,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.component",{"_index":2294,"title":{},"body":{"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{}}}],["user.component.html",{"_index":2236,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.scss",{"_index":2235,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts",{"_index":2234,"title":{},"body":{"components/UpdateUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:12",{"_index":2245,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:19",{"_index":2239,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:28",{"_index":2237,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:49",{"_index":2242,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:55",{"_index":2244,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:63",{"_index":2243,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.email",{"_index":1450,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.name",{"_index":1907,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.picture",{"_index":2311,"title":{},"body":{"components/UserDataPage.html":{}}}],["user.role",{"_index":461,"title":{},"body":{"guards/AdminGuard.html":{}}}],["user.surname",{"_index":2312,"title":{},"body":{"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.uid",{"_index":1449,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.username",{"_index":2313,"title":{},"body":{"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.uuid",{"_index":1318,"title":{},"body":{"classes/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["user/:id",{"_index":664,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user/update",{"_index":2233,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"coverage.html":{}}}],["usercirclegraphiccomponent",{"_index":140,"title":{"components/UserCircleGraphicComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["usercredential",{"_index":1406,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["usercredentials",{"_index":252,"title":{"interfaces/UserCredentials.html":{}},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["userdatapage",{"_index":142,"title":{"components/UserDataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["userdatapagemodule",{"_index":641,"title":{"modules/UserDataPageModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["userdatapageroutingmodule",{"_index":2318,"title":{"modules/UserDataPageRoutingModule.html":{}},"body":{"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["userid",{"_index":1020,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["userinfo",{"_index":703,"title":{"interfaces/UserInfo.html":{}},"body":{"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userinfo(user",{"_index":2247,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["userinfo(userid",{"_index":1018,"title":{},"body":{"components/DataPage.html":{}}}],["username",{"_index":1300,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["userregisterinfo",{"_index":269,"title":{"interfaces/UserRegisterInfo.html":{}},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["users",{"_index":144,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["users.find((user",{"_index":2340,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.reduce((acc",{"_index":2263,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["userservice",{"_index":1884,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UserDataPage.html":{}}}],["usersinfocomponent",{"_index":143,"title":{"components/UsersInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["usersservice",{"_index":1882,"title":{"injectables/UsersService.html":{}},"body":{"components/IncidentsInfoComponent.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uses",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{}}}],["usevalue",{"_index":630,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue:'firebase",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":286,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["utilized",{"_index":1345,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["uuid",{"_index":865,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{}}}],["valid",{"_index":1208,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["validate",{"_index":1171,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validates",{"_index":1168,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validation",{"_index":1174,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validationerrors",{"_index":1177,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validator",{"_index":1173,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validatorfn",{"_index":1172,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validators",{"_index":1977,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["validators.required",{"_index":1980,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["value",{"_index":249,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["value!.length",{"_index":2229,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["value!.substring(0",{"_index":2230,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["value.charat(0).touppercase",{"_index":741,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["values",{"_index":1552,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["var",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["variable",{"_index":2346,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2481,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1645,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["version",{"_index":2474,"title":{},"body":{"properties.html":{}}}],["viewencapsulation",{"_index":1023,"title":{},"body":{"components/DataPage.html":{}}}],["viewencapsulation.none",{"_index":965,"title":{},"body":{"components/DataPage.html":{}}}],["views",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["visibility",{"_index":2177,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["visibility_off",{"_index":2176,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["waitadmin",{"_index":306,"title":{},"body":{"components/AccessPage.html":{}}}],["want",{"_index":1490,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["web",{"_index":605,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["web.provider",{"_index":592,"title":{},"body":{"modules/AppModule.html":{}}}],["web.provider.ts",{"_index":1770,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["web.provider.ts:12",{"_index":1774,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["web.provider.ts:153",{"_index":1780,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["web.provider.ts:170",{"_index":1777,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["webdir",{"_index":2489,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":73,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["where(field",{"_index":1595,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["whether",{"_index":485,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["white",{"_index":1105,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["whose",{"_index":1564,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["width",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["width:99",{"_index":360,"title":{},"body":{"components/AccessPage.html":{}}}],["window",{"_index":774,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["window.navigator.language",{"_index":1952,"title":{},"body":{"injectables/LocalService.html":{}}}],["window.navigator.language.split",{"_index":1957,"title":{},"body":{"injectables/LocalService.html":{}}}],["window:resize",{"_index":757,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["window:resize(event",{"_index":771,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["windows",{"_index":2077,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["within",{"_index":215,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/UserCircleGraphicComponent.html":{},"miscellaneous/functions.html":{}}}],["without",{"_index":2006,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["wrap",{"_index":1728,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["writes",{"_index":2115,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["writevalue",{"_index":2073,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["writevalue(obj",{"_index":2113,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["written",{"_index":2117,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["www",{"_index":1804,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":869,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["ya",{"_index":855,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["yes",{"_index":1756,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["z0",{"_index":1183,"title":{},"body":{"classes/EmailValidation.html":{}}}],["z70ncw6nln",{"_index":2501,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z\\d]{8",{"_index":2047,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z])(?=.*[a",{"_index":2045,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z])(?=.*\\d)[a",{"_index":2046,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z]{2",{"_index":1186,"title":{},"body":{"classes/EmailValidation.html":{}}}],["za",{"_index":1182,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["zone.js",{"_index":2444,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":161,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/about/about.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      CHATO\n      \n        Tu solución para solucionar los problemas de tus empleados\n      \n      \n        \n        \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                .container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: relative;\n    height: 86.3vh;\n    margin: 0;\n    overflow: hidden;\n}\n\n.header {\n    text-align: center;\n    flex: 1;\n    overflow: auto;\n}\n\nh1 {\n    font-size: 90px;\n    color: #0f212d;\n    font-weight: 900;\n}\n\n.slogan {\n    font-size: 30px;\n    color: #0f212d;\n    margin-bottom: 20px;\n}\n\n.social-icons a {\n    display: inline-block;\n    margin: 0 10px;\n\n    ion-icon {\n        color: #0f212d;\n    }\n}\n\n.footer {\n    width: 100%;\n    position: absolute;\n    bottom: 0;\n}\n\n\n@media (max-width: 600px) {\n    .container {\n        height: 100%;\n        .header {\n            h1 {\n                font-size: 5rem;\n            }\n            \n            .slogan {\n                font-size: 1rem;\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            CHATO              Tu solución para solucionar los problemas de tus empleados                                                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AboutPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPageRoutingModule } from './about-routing.module';\n\nimport { AboutPage } from './about.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AboutPageRoutingModule\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccessPage.html":{"url":"components/AccessPage.html","title":"component - AccessPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/access.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-access\n            \n\n\n\n            \n                styleUrls\n                ./access.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./access.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeForm\n                            \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, translate: CustomTranslateService, messageService: MessageService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/access.page.ts:16\n                            \n                        \n\n                \n                    \n                            The constructor function subscribes to query parameters and displays an error message if the\n'error' parameter is 'notAdmin'.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\nMessageService. It is likely used for displaying messages or notifications to the user within\nthe application.\nservice provided by Angular that gives access to information about a route associated with a\ncomponent loaded in an outlet. It allows you to access route parameters, query parameters, and\nother information related to the current route.\nservice. It is used for navigating between different components in your Angular application based\non the defined routes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService - a service for handling authentication and user authorization.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The translate parameter in the constructor is of type CustomTranslateService.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The messageService parameter in the constructor is of type\nMessageService. It is likely used for displaying messages or notifications to the user within\nthe application.\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The route parameter in the constructor is of type ActivatedRoute, which is a\nservice provided by Angular that gives access to information about a route associated with a\ncomponent loaded in an outlet. It allows you to access route parameters, query parameters, and\nother information related to the current route.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different components in your Angular application based\non the defined routes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeForm\n                        \n                    \n                \n            \n            \n                \nchangeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:58\n                        \n                    \n\n\n            \n                \n                        The function toggles the value of the login property.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(data: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:101\n                        \n                    \n\n\n            \n                \n                        The loginUser function in TypeScript logs in a user with provided credentials and handles\nerrors, displaying a specific error message for invalid email.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    UserCredentials object containing user login information, such as email and password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(data: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:70\n                        \n                    \n\n\n            \n                \n                        The function registerUser registers a user with the role 'user' and handles different error\ncases during the registration process.\nThis parameter likely contains information about a user that is being registered, such as their\nemail, password, and any other relevant details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The registerUser function takes in a parameter data of type UserRegisterInfo.\nThis parameter likely contains information about a user that is being registered, such as their\nemail, password, and any other relevant details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:138\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:121\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/access.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { UserCredentials, UserRegisterInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-access',\n  templateUrl: './access.page.html',\n  styleUrls: ['./access.page.scss'],\n  providers: [MessageService]\n})\nexport class AccessPage implements OnInit {\n\n  login = true;\n\n  /**\n  * The constructor function subscribes to query parameters and displays an error message if the\n  * 'error' parameter is 'notAdmin'.\n  * \n  * @param auth AuthService - a service for handling authentication and user authorization.\n  * @param translate The `translate` parameter in the constructor is of type `CustomTranslateService`.\n  * It is used for handling translation services within the component or service where it is injected.\n  * This service likely provides methods for translating text or messages into different languages or\n  * for managing localization in the application.\n  * @param messageService The `messageService` parameter in the constructor is of type\n  * `MessageService`. It is likely used for displaying messages or notifications to the user within\n  * the application.\n  * @param route The `route` parameter in the constructor is of type `ActivatedRoute`, which is a\n  * service provided by Angular that gives access to information about a route associated with a\n  * component loaded in an outlet. It allows you to access route parameters, query parameters, and\n  * other information related to the current route.\n  * @param router The `router` parameter in the constructor is an instance of the Angular Router\n  * service. It is used for navigating between different components in your Angular application based\n  * on the defined routes.\n  */\n  constructor(\n    private auth: AuthService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    private route: ActivatedRoute, \n    private router: Router\n  ) {\n    this.route.queryParams.subscribe(params => {\n      if (params['error'] === 'notAdmin') {\n        this.showError( 'waitAdmin' );\n      }\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  /**\n  * The function toggles the value of the `login` property.\n  */\n  changeForm(){\n    this.login = !this.login\n  }\n\n  /**\n  * The function `registerUser` registers a user with the role 'user' and handles different error\n  * cases during the registration process.\n  * \n  * @param data The `registerUser` function takes in a parameter `data` of type `UserRegisterInfo`.\n  * This parameter likely contains information about a user that is being registered, such as their\n  * email, password, and any other relevant details.\n  */\n  registerUser( data:UserRegisterInfo ){\n    let _data:UserRegisterInfo = { ...data };\n    _data.role = 'user';\n    this.auth.register( _data ).subscribe({\n      next:( data )=>{\n        console.log( 'ALL WAS GOOD' );\n        this.showSuccess( 'waitAdmin' );\n      },\n      error:( err )=>{\n        if ( err.code ) {\n          switch ( err.code ) {\n            case 'auth/email-already-in-use':\n              this.showError( 'emailUser' );\n              break;\n            case 'post-registration-error':\n              this.showError( 'failRegister' );\n              break;\n          }\n        } else {\n          this.showError( 'Unknown registration error' );\n        }\n      }\n    });\n  }\n\n  /**\n  * The `loginUser` function in TypeScript logs in a user with provided credentials and handles\n  * errors, displaying a specific error message for invalid email.\n  * \n  * @param data UserCredentials object containing user login information, such as email and password\n  */\n  loginUser( data:UserCredentials ){\n    let _data:UserCredentials = { ...data };\n    this.auth.login( _data ).subscribe({\n      next:( data )=>{\n        console.log( 'ALL WAS GOOD' );\n      },\n      error:( err )=>{\n        console.log( 'BAD', err );\n        if( err.code === 'auth/invalid-email' )\n          this.showError( 'loginError' )\n      }\n    })\n  }\n\n  /**\n  * The function `showSuccess` displays a success message after translating the input text.\n  * \n  * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n  * message to be displayed as a success toast notification.\n  */\n  showSuccess(text: string) {\n    let message = `toast.${text}`\n    this.translate.get( message ).subscribe({\n      next: ( text: string ) => {\n        this.messageService.add({ key: 'tl', severity: 'info', detail: text });\n        this.login = true;\n      }\n    });\n  }\n\n  /**\n  * The function `showError` displays an error message using a translation service and a message\n  * service.\n  * \n  * @param text The `text` parameter in the `showError` function is a string that represents the error\n  * message to be displayed.\n  */\n  showError(text: string) {\n    let message = `toast.${text}`\n    this.translate.get( message ).subscribe({\n      next: ( text: string ) => {\n        this.messageService.add({ key: 'tl', severity: 'error', detail: text, life: 6000 });\n        this.login = true;\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n\n      \n      \n      {{'access.toRegister' | translate}}\n    \n      {{'access.toLogin' | translate}}\n    \n\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./access.page.scss\n                \n                ion-content {\n    margin-top: 30%;\n}\n\n.access {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n\n    &__forms {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        padding: 20px;\n        gap: 20px;\n\n        .access__forms--logo {\n            display: none;\n            width: 30%;\n        }\n\n        app-login-form,\n        app-register-form {\n            width: 70%;\n        }\n    }\n\n    &__image {\n        flex: 1;\n        width:99%;\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: cover;\n        background-image: url('../../../assets/images/vectorial-access.webp');\n    }\n\n    button {\n        background-color: transparent;\n        padding: 0.5rem;\n        border: none;\n        cursor: pointer;\n    }\n}\n\n@media (max-width: 700px) {\n    .access {\n        flex-direction: column;\n    \n        &__forms {  \n            .access__forms--logo {\n                display: block;\n                width: 30%;\n            }\n    \n            app-login-form {\n                width: 100%;\n            }\n\n            app-register-form {\n                margin-top: -5%;\n                width: 100%;\n            }\n        }\n    \n        &__image {\n            display: none;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{\\'access.toRegister\\' | translate}}          {{\\'access.toLogin\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccessPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccessPageModule.html":{"url":"modules/AccessPageModule.html","title":"module - AccessPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AccessPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccessPageModule\n\n\n\ncluster_AccessPageModule_imports\n\n\n\ncluster_AccessPageModule_declarations\n\n\n\n\nAccessPage\n\nAccessPage\n\n\n\nAccessPageModule\n\nAccessPageModule\n\nAccessPageModule -->\n\nAccessPage->AccessPageModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAccessPageModule -->\n\nLoginFormComponent->AccessPageModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAccessPageModule -->\n\nRegisterFormComponent->AccessPageModule\n\n\n\n\n\nAccessPageRoutingModule\n\nAccessPageRoutingModule\n\nAccessPageModule -->\n\nAccessPageRoutingModule->AccessPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAccessPageModule -->\n\nSharedModule->AccessPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/access/access.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccessPage\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            RegisterFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccessPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AccessPageRoutingModule } from './access-routing.module';\n\nimport { AccessPage } from './access.page';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccessPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n     // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    // Shared\n    SharedModule,\n    ToastModule\n  ],\n  declarations: [\n    AccessPage,\n    LoginFormComponent,\n    RegisterFormComponent\n  ]\n})\nexport class AccessPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccessPageRoutingModule.html":{"url":"modules/AccessPageRoutingModule.html","title":"module - AccessPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccessPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/access/access-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccessPage } from './access.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccessPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccessPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:16\n                            \n                        \n\n                \n                    \n                            The constructor function takes AuthService and Router as parameters.\nhandling authentication-related functionalities in the application.\nnavigating between different components in an Angular application by manipulating the browser's\nURL.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is an instance of the AuthService class, which is used for\nhandling authentication-related functionalities in the application.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter is an instance of the Angular Router service. It is used for\nnavigating between different components in an Angular application by manipulating the browser's\nURL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/admin.guard.ts:42\n                        \n                    \n\n\n            \n                \n                        The function canActivate checks if the user is an admin and returns true, logs out the user and\nredirects to an access page with an error message if not.\nrepresents the activated route snapshot at the time of navigation. It contains information about\nthe route, its parameters, and related data.\nthe current router state snapshot, which includes information about the current activated route,\nthe URL, and the router state itself. It is of type RouterStateSnapshot.\nPromise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\nchecks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\nIf the user is logged in but not an admin, it logs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe route parameter in the canActivate method\nrepresents the activated route snapshot at the time of navigation. It contains information about\nthe route, its parameters, and related data.\n\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe state parameter in the canActivate method represents\nthe current router state snapshot, which includes information about the current activated route,\nthe URL, and the router state itself. It is of type RouterStateSnapshot.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                The canActivate method is returning an Observable that emits a boolean or UrlTree, a\nPromise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\nchecks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\nIf the user is logged in but not an admin, it logs\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  /**\n   * The constructor function takes AuthService and Router as parameters.\n   *\n   * @param auth The `auth` parameter is an instance of the `AuthService` class, which is used for\n   * handling authentication-related functionalities in the application.\n   * @param router The `router` parameter is an instance of the Angular Router service. It is used for\n   * navigating between different components in an Angular application by manipulating the browser's\n   * URL.\n   */\n  constructor(private auth: AuthService, private router: Router) {}\n\n  /**\n   * The function `canActivate` checks if the user is an admin and returns true, logs out the user and\n   * redirects to an access page with an error message if not.\n   * @param {ActivatedRouteSnapshot} route - The `route` parameter in the `canActivate` method\n   * represents the activated route snapshot at the time of navigation. It contains information about\n   * the route, its parameters, and related data.\n   * @param {RouterStateSnapshot} state - The `state` parameter in the `canActivate` method represents\n   * the current router state snapshot, which includes information about the current activated route,\n   * the URL, and the router state itself. It is of type `RouterStateSnapshot`.\n   * @returns The `canActivate` method is returning an Observable that emits a boolean or UrlTree, a\n   * Promise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\n   * checks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\n   * If the user is logged in but not an admin, it logs\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.auth.user$.pipe(\n      map((user) => {\n        if (user && user.role === 'admin') {\n          return true;\n        }\n        if (user) this.auth.logout();\n        this.router.navigate(['/access'], {\n          queryParams: { error: 'notAdmin' },\n        });\n        return false;\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isSplash\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                logOut\n                            \n                            \n                                toAbout\n                            \n                            \n                                toData\n                            \n                            \n                                toHome\n                            \n                            \n                                toSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router, localLang: LocalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:14\n                            \n                        \n\n                \n                    \n                            The constructor initializes subscriptions to authentication and router events in a TypeScript\nclass.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\nprivate property that is used to access the LocalService service within the class. This service\nis likely used for handling localization or language-related functionalities in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\n\n                                                        \n                                                \n                                                \n                                                        localLang\n                                                  \n                                                        \n                                                                        LocalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The localLang parameter in the constructor is of type LocalService. It is a\nprivate property that is used to access the LocalService service within the class. This service\nis likely used for handling localization or language-related functionalities in the application.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:51\n                        \n                    \n\n\n            \n                \n                        The function isActive checks if the current URL includes a specified URL string and returns a\nboolean value.\nused to check if the current URL matches the provided url parameter.\nspecified URL string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The isActive function takes a url parameter of type string. This function is likely\nused to check if the current URL matches the provided url parameter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                A boolean value is being returned, indicating whether the current URL contains the\nspecified URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:79\n                        \n                    \n\n\n            \n                \n                        The logOut function calls the logout method of the auth object.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAbout\n                        \n                    \n                \n            \n            \n                \ntoAbout(menu: IonMenu)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:90\n                        \n                    \n\n\n            \n                \n                        The toAbout function navigates to the '/about' route using the Angular router and close the menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                        IonMenu\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The menu\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toData\n                        \n                    \n                \n            \n            \n                \ntoData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:72\n                        \n                    \n\n\n            \n                \n                        The toData function navigates to the '/data' route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toHome\n                        \n                    \n                \n            \n            \n                \ntoHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:58\n                        \n                    \n\n\n            \n                \n                        The toHome function uses the Angular router to navigate to the '/home' route.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSettings\n                        \n                    \n                \n            \n            \n                \ntoSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:65\n                        \n                    \n\n\n            \n                \n                        The toSettings function navigates to the settings route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isSplash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { LocalService } from './core/services/translate/local.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AuthService } from './core/services/auth.service';\nimport { filter } from 'rxjs';\nimport { IonMenu, MenuController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent {\n  isSplash: boolean = false;\n\n  /**\n   * The constructor initializes subscriptions to authentication and router events in a TypeScript\n   * class.\n   *\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   * @param router The `router` parameter in the constructor is an instance of the Angular Router\n   * service. It is used for navigating between different views in the Angular application based on the\n   * specified routes.\n   * @param localLang The `localLang` parameter in the constructor is of type `LocalService`. It is a\n   * private property that is used to access the `LocalService` service within the class. This service\n   * is likely used for handling localization or language-related functionalities in the application.\n   */\n  constructor(\n    protected auth: AuthService,\n    private router: Router,\n    private localLang: LocalService\n  ) {\n    this.auth.isLogged$.subscribe((logged) => {\n      if (logged) this.router.navigate(['/home']);\n      else this.router.navigate(['/access']);\n    });\n  }\n\n  /**\n   * The function `isActive` checks if the current URL includes a specified URL string and returns a\n   * boolean value.\n   *\n   * @param url The `isActive` function takes a `url` parameter of type string. This function is likely\n   * used to check if the current URL matches the provided `url` parameter.\n   * @return A boolean value is being returned, indicating whether the current URL contains the\n   * specified URL string.\n   */\n  isActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  /**\n   * The `toHome` function uses the Angular router to navigate to the '/home' route.\n   */\n  toHome() {\n    this.router.navigate(['/home']);\n  }\n\n  /**\n   * The `toSettings` function navigates to the settings route using the Angular router.\n   */\n  toSettings() {\n    this.router.navigate(['/settings']);\n  }\n\n  /**\n   * The `toData` function navigates to the '/data' route using the Angular router.\n   */\n  toData() {\n    this.router.navigate(['/data']);\n  }\n\n  /**\n   * The `logOut` function calls the `logout` method of the `auth` object.\n   */\n  logOut() {\n    this.auth.logout().subscribe(async (_) => {\n      await this.router.navigate(['/access']);\n    });\n  }\n\n  /**\n   * The `toAbout` function navigates to the '/about' route using the Angular router and close the menu.\n   *\n   * @param menu The menu\n   */\n  toAbout(menu: IonMenu) {\n    this.router.navigate(['/about']);\n    menu.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n    \n  \n  \n  \n    \n    \n      \n        \n          \n        \n        \n          {{(auth.user$ | async)?.name }} {{ (auth.user$ | async)?.surname | capitalizeInitial}}\n        \n      \n    \n  \n    \n\n    \n      \n        \n\n          \n            \n            {{'menu.home' | translate}}\n          \n\n          \n            \n            {{'menu.settings' | translate}}\n          \n          \n          \n            \n            {{'menu.graphics' | translate}}\n          \n\n          \n            \n            {{'menu.logOut' | translate}}\n          \n          \n        \n      \n      \n        {{'menu.about' | translate}}\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                ion-item {\n    cursor: pointer;\n}\n\nion-icon {\n    margin-right: 20px;\n}\n\nion-menu-button {\n    --color: #0F212D;\n    font-size: 50px;\n    margin-left: 100px;\n}\n\nion-item.active {\n    --background: #0F212D;\n    --color: var(--ion-color-primary-contrast);\n    \n    ion-icon {\n      color: var(--ion-color-primary-contrast);\n    }\n}\n\nion-header {\n    --background: transparent;\n    ion-toolbar {\n        --background: transparent;\n        border: none;\n        box-shadow: none;\n        \n        .app-logo {\n          height: 100px;\n          margin-right: 40px;\n        }\n    }\n\n}\n\n.menu-footer {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    text-align: center;\n    padding: 10px;\n    font-size: 0.8em;\n    color: gray;\n    border-top: 1px solid lightgray;\n  \n    p {\n      margin: 0;\n    }\n\n    &:hover {\n        cursor: pointer;\n        p {\n            font-weight: bold;\n        }\n    }\n}\n\n\n.menu--header__toolbar {\n    margin-top: 5%;\n    display:flex;\n    align-items:center;\n    justify-content: center;\n    gap: 20px;\n\n    ion-avatar {\n        img {\n            width: 60px;\n        }\n    }\n\n    span {\n        font-weight: bold;\n    }\n}\n    \n\n@media (max-width: 700px) {\n    ion-menu-button{\n        font-size: 40px;\n        margin-left: 10px;\n    }\n\n    ion-header {\n        ion-toolbar {\n            .app-logo {\n              margin-right: 10px;\n            }\n        }\n    }\n    \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    {{(auth.user$ | async)?.name }} {{ (auth.user$ | async)?.surname | capitalizeInitial}}                                                                            {{\\'menu.home\\' | translate}}                                            {{\\'menu.settings\\' | translate}}                                                      {{\\'menu.graphics\\' | translate}}                                            {{\\'menu.logOut\\' | translate}}                                                {{\\'menu.about\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCapitalizeInitialPipe\n\nCapitalizeInitialPipe\n\nAppModule -->\n\nCapitalizeInitialPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CapitalizeInitialPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { IonicModule, IonicRouteStrategy, Platform } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { createTranslateLoader } from './core/translate/translate';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\nimport { FirebaseAuthService } from './core/services/firebase/api/firebase-auth.service';\nimport { FirebaseService } from './core/services/firebase/firebase.service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FirebaseMediaService } from './core/services/firebase/api/firebase-media.service';\nimport { HttpClientWebProvider } from './core/services/http/http-client-web.provider';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { MediaService } from './core/services/media.service';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './core/services/auth.service';\nimport { DataService } from './core/services/data.service';\nimport { HttpClientProvider } from './core/services/http/http-client.provider';\nimport { ToastModule } from 'primeng/toast';\nimport { SharedModule } from './shared/shared.module';\n\nimport { provideLottieOptions } from 'ngx-lottie';\nimport player from 'lottie-web';\nimport { CapitalizeInitialPipe } from './core/pipes/capitalize-initial.pipe';\nimport { DividerModule } from 'primeng/divider';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\n\nexport function MediaServiceFactory(\n  backend:string,\n  firebase:FirebaseService){\n  switch(backend){\n    case 'Firebase':\n      return new FirebaseMediaService(firebase);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\nexport function httpProviderFactory(\n  http:HttpClient) {\n  return new HttpClientWebProvider(http);\n}\n\nexport function AuthServiceFactory(\n  backend:string,\n  firebase:FirebaseService\n) {\n  switch(backend){\n    case 'Firebase':\n      return new FirebaseAuthService(firebase);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CapitalizeInitialPipe,\n  ],\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n    SharedModule,\n    DividerModule,\n  ],\n  providers: [\n    provideLottieOptions({\n      player: () => player,\n    }),\n    {\n      provide: 'firebase-config',\n      useValue: environment.firebaseConfig\n    },\n    {\n      provide: 'backend',\n      useValue:'Firebase'\n    },\n    { \n      provide: RouteReuseStrategy, \n      useClass: IonicRouteStrategy \n    },\n    // Factories\n    {\n      provide: HttpClientProvider,\n      deps: [HttpClient, Platform],\n      useFactory: httpProviderFactory,  \n    },\n    {\n      provide: AuthService,\n      deps: ['backend', FirebaseService],\n      useFactory: AuthServiceFactory,  \n    },\n    {\n      provide: MediaService,\n      deps: ['backend', FirebaseService],\n      useFactory: MediaServiceFactory,  \n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { AdminGuard } from './core/guards/admin.guard';\nimport { UserDataPageModule } from './pages/user-data/user-data.module';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./pages/home/home.module').then( m => m.HomePageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n      {\n        path: 'incident-data/:id',\n        loadChildren: () => \"import('./pages/incident-data/incident-data.module').then( m => m.IncidentDataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: 'access',\n    pathMatch: 'full'\n  },\n  {\n    path: 'access',\n    loadChildren: () => \"import('./pages/access/access.module').then( m => m.AccessPageModule)\"\n  },\n  {\n    path: 'settings',\n    loadChildren: () => \"import('./pages/settings/settings.module').then( m => m.SettingsPageModule)\",\n    canActivate: [AuthGuard, AdminGuard]\n  },\n  {\n    path: 'data',\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./pages/data/data.module').then(m => m.DataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n      {\n        path: 'user/:id',\n        loadChildren: () => \"import('./pages/user-data/user-data.module').then(m => m.UserDataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n    ]\n  },\n  {\n    path: 'about',\n    loadChildren: () => \"import('./pages/about/about.module').then( m => m.AboutPageModule)\",\n    canActivate: [AuthGuard, AdminGuard],\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:15\n                            \n                        \n\n                \n                    \n                            The constructor function takes AuthService and Router as parameters and assigns them to private\nproperties.\nfor handling authentication-related functionality in the application.\nnavigating between different components in an Angular application by manipulating the browser's\nURL.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is an instance of the AuthService class, which is likely used\nfor handling authentication-related functionality in the application.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter is an instance of the Angular Router service. It is used for\nnavigating between different components in an Angular application by manipulating the browser's\nURL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth.guard.ts:41\n                        \n                    \n\n\n            \n                \n                        The canActivate function checks if a user is logged in and navigates to the access page if not.\nrepresents the activated route snapshot at the time of activation. It contains information about\nthe route, its parameters, and additional data associated with the route.\nthe current state of the router. It provides information about the current route being activated\nand the state of the router at that moment. This parameter is of type RouterStateSnapshot.\nPromise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. Inside the method,\nit is using the isLogged$ observable from the auth service to check if the user is logged in.\nIf the user is not logged in, it navigates to the\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe route parameter in the canActivate method\nrepresents the activated route snapshot at the time of activation. It contains information about\nthe route, its parameters, and additional data associated with the route.\n\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe state parameter in the canActivate method represents\nthe current state of the router. It provides information about the current route being activated\nand the state of the router at that moment. This parameter is of type RouterStateSnapshot.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                The canActivate method is returning an Observable that emits a boolean or UrlTree, a\nPromise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. Inside the method,\nit is using the isLogged$ observable from the auth service to check if the user is logged in.\nIf the user is not logged in, it navigates to the\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable, tap } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  /**\n   * The constructor function takes AuthService and Router as parameters and assigns them to private\n   * properties.\n   *\n   * @param auth The `auth` parameter is an instance of the `AuthService` class, which is likely used\n   * for handling authentication-related functionality in the application.\n   * @param router The `router` parameter is an instance of the Angular Router service. It is used for\n   * navigating between different components in an Angular application by manipulating the browser's\n   * URL.\n   */\n  constructor(private auth: AuthService, private router: Router) {}\n\n  /**\n   * The `canActivate` function checks if a user is logged in and navigates to the access page if not.\n   * @param {ActivatedRouteSnapshot} route - The `route` parameter in the `canActivate` method\n   * represents the activated route snapshot at the time of activation. It contains information about\n   * the route, its parameters, and additional data associated with the route.\n   * @param {RouterStateSnapshot} state - The `state` parameter in the `canActivate` method represents\n   * the current state of the router. It provides information about the current route being activated\n   * and the state of the router at that moment. This parameter is of type `RouterStateSnapshot`.\n   * @returns The `canActivate` method is returning an Observable that emits a boolean or UrlTree, a\n   * Promise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. Inside the method,\n   * it is using the `isLogged$` observable from the `auth` service to check if the user is logged in.\n   * If the user is not logged in, it navigates to the\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.auth.isLogged$.pipe(\n      tap((logged) => {\n        if (!logged) this.router.navigate(['/access']);\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                login\n                            \n                            \n                                    Public\n                                    Abstract\n                                logout\n                            \n                            \n                                    Public\n                                    Abstract\n                                me\n                            \n                            \n                                    Public\n                                    Abstract\n                                register\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Performs user login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser credentials for login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable emitting the authenticated user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Logs out the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Retrieves information about the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting information about the current user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Registers a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser information for registration.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the registration process.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Updates the user's information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUpdated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the update process.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UserInfo, UserCredentials } from '../interfaces/user-info';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class AuthService {\n  protected _logged = new BehaviorSubject(false);\n  public isLogged$ = this._logged.asObservable();\n  protected _user = new BehaviorSubject(null);\n  public user$ = this._user.asObservable();\n\n  /**\n   * Performs user login.\n   * @param {Object} credentials - User credentials for login.\n   * @returns {Observable} Observable emitting the authenticated user.\n   */\n  public abstract login(credentials: Object): Observable;\n\n  /**\n   * Registers a new user.\n   * @param {Object} info - User information for registration.\n   * @returns {Observable} Observable emitting the result of the registration process.\n   */\n  public abstract register(info: Object): Observable;\n\n  /**\n   * Logs out the current user.\n   */\n  public abstract logout(): Observable;\n\n  /**\n   * Retrieves information about the current user.\n   * @returns {Observable} Observable emitting information about the current user.\n   */\n  public abstract me(): Observable;\n\n  /**\n   * Updates the user's information.\n   * @param {UserInfo} user - Updated user information.\n   * @returns {Observable} Observable emitting the result of the update process.\n   */\n  public abstract updateUser(user: UserInfo): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizeInitialPipe.html":{"url":"pipes/CapitalizeInitialPipe.html","title":"pipe - CapitalizeInitialPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizeInitialPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/capitalize-initial.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        capitalizeInitial\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/capitalize-initial.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        The function takes a string as input, capitalizes the first letter, and adds a period at the end.\nvalue is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\nfirst character of the string and appends a period at the end before returning the transformed\nstring.\nof the value is capitalized and followed by a period.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value parameter in the transform function is a string or undefined. If the\nvalue is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\nfirst character of the string and appends a period at the end before returning the transformed\nstring.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                An empty string is being returned if the value is falsy. Otherwise, the first character\nof the value is capitalized and followed by a period.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalizeInitial',\n})\nexport class CapitalizeInitialPipe implements PipeTransform {\n  /**\n   * The function takes a string as input, capitalizes the first letter, and adds a period at the end.\n   *\n   * @param value The `value` parameter in the `transform` function is a string or undefined. If the\n   * `value` is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\n   * first character of the string and appends a period at the end before returning the transformed\n   * string.\n   * @return An empty string is being returned if the `value` is falsy. Otherwise, the first character\n   * of the `value` is capitalized and followed by a period.\n   */\n  transform(value: string | undefined): string {\n    if (!value) {\n      return '';\n    }\n    return value.charAt(0).toUpperCase() + '.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesInfoComponent.html":{"url":"components/CategoriesInfoComponent.html","title":"component - CategoriesInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/categories-info/categories-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories-info\n            \n\n\n\n            \n                styleUrls\n                ./categories-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categories-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScreenSmall\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                editCategory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onEditClicked\n                            \n                            \n                                onTrashClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/categories-info/categories-info.component.ts:22\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\nInitializes the component by checking the initial screen size.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categories\n                    \n                \n                \n                    \n                        Type :         CategoryInfo[] | null | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onEditClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onTrashClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:19\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:39\n                        \n                    \n\n\n            \n                \n                        Emits an event when the delete icon for a category is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCategory\n                        \n                    \n                \n            \n            \n                \neditCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Emits an event when the edit icon for a category is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/categories-info/categories-info.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\n\n@Component({\n  selector: 'app-categories-info',\n  templateUrl: './categories-info.component.html',\n  styleUrls: ['./categories-info.component.scss'],\n})\nexport class CategoriesInfoComponent implements OnInit {\n  isScreenSmall: boolean = false;\n  @Input() categories: CategoryInfo[] | null | undefined;\n  @Output() onTrashClicked: EventEmitter =\n    new EventEmitter();\n  @Output() onEditClicked: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * Constructs a component constructor function.\n   * Initializes the component by checking the initial screen size.\n   */\n  constructor() {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Emits an event when the delete icon for a category is clicked.\n   *\n   * @param category CategoryInfo - the category to be deleted.\n   */\n  deleteCategory(category: CategoryInfo) {\n    this.onTrashClicked.emit(category);\n  }\n\n  /**\n   * Emits an event when the edit icon for a category is clicked.\n   *\n   * @param category CategoryInfo - the category to be edited.\n   */\n  editCategory(category: CategoryInfo) {\n    this.onEditClicked.emit(category);\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n  \n\n  \n    {{'forms.name' | translate }}\n    {{'forms.description' | translate }}\n     \n    {{'forms.actions' | translate }}\n  \n\n  \n    {{category.name}}\n    {{category.description}}\n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./categories-info.component.scss\n                \n                ion-list {\n    width: 80%;\n    margin: 3% auto;\n\n    ion-list-header {\n        --background: #0F212D;\n        --color: #fff;\n    }\n\n    .subheader {\n        ion-label {\n          font-weight: bold;\n        }\n    }\n\n    .data {\n        position: relative;\n        border-top: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n\n        &:hover {\n            border-color: #0F212D;\n        }\n\n        #actions {\n            display: flex;\n            gap: 20px;\n            cursor: pointer;\n\n        }\n    }\n}\n\n@media (max-width: 900px) {\n    .subheader {\n        ion-label {\n          margin-left: 0.2%;\n        }\n    }\n}\n\n@media (max-width: 700px) {\n    ion-list {\n        width: 100%;\n        margin-top: 5%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}        {{\\'forms.name\\' | translate }}    {{\\'forms.description\\' | translate }}         {{\\'forms.actions\\' | translate }}        {{category.name}}    {{category.description}}                                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/categories.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCategory\n                        \n                    \n                \n            \n            \n                \ncreateCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Creates a new category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is created successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Deletes a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is deleted successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategory\n                        \n                    \n                \n            \n            \n                \nupdateCategory(category: CategoryInfo, originalName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:112\n                        \n                    \n\n\n            \n                \n                        Updates a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the updated category information.\n\n                                            \n                                        \n                                        \n                                                originalName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the original name of the category.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is updated successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {\n  catchError,\n  first,\n  map,\n  switchMap,\n  throwError,\n  of,\n  from,\n  take,\n} from 'rxjs';\nimport { CategoryInfo } from '../../interfaces/category-info';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoriesService {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param firebaseService FirebaseService - a service for handling Firebase-related operations.\n   */\n  constructor(private firebaseService: FirebaseService) {}\n\n  /**\n   * Creates a new category.\n   *\n   * @param category CategoryInfo - the category information to be created.\n   * @returns An Observable that emits a success message if the category is created successfully, otherwise emits an error message.\n   */\n  createCategory(category: CategoryInfo): Observable {\n    return this.firebaseService.categories$.pipe(\n      first(),\n      switchMap((existingCategories) => {\n        if (existingCategories.some((c) => c.name === category.name)) {\n          return throwError(\n            () => new Error('Una categoría con este nombre ya existe.')\n          );\n        }\n        if (this.firebaseService.user) {\n          category.adminId = this.firebaseService.user.uid || '';\n          category.admin = this.firebaseService.user.email || '';\n        }\n        console.log('object');\n        return from(\n          this.firebaseService.createDocument('categoryInfo', category)\n        ).pipe(\n          switchMap((docRef) => {\n            const uuid = docRef;\n            return from(\n              this.firebaseService.updateDocument('categoryInfo', uuid, {\n                uuid,\n              })\n            ).pipe(\n              map(() => 'Categoría creada y actualizada exitosamente con UUID.')\n            );\n          })\n        );\n      }),\n      catchError((err) =>\n        throwError(\n          () => new Error('Error al crear la categoría: ' + err.message)\n        )\n      )\n    );\n  }\n\n  /**\n   * Deletes a category.\n   *\n   * @param category CategoryInfo - the category information to be deleted.\n   * @returns An Observable that emits a success message if the category is deleted successfully, otherwise emits an error message.\n   */\n  deleteCategory(category: CategoryInfo): Observable {\n    return this.firebaseService.incidents$.pipe(\n      first(),\n      switchMap((incidents) => {\n        const hasIncident = incidents.some(\n          (incident) => incident.categoryName === category.name\n        );\n        if (hasIncident) {\n          return throwError(\n            () =>\n              new Error(\n                'No se puede borrar la categoría porque tiene incidencias asociadas'\n              )\n          );\n        }\n        return this.firebaseService\n          .deleteDocument('categoryInfo', category.uuid)\n          .then(() => {\n            return 'Categoría borrada exitosamente.';\n          });\n      }),\n      catchError((err) => {\n        return throwError(\n          () => new Error(`Error al borrar la categoría: ${err.message}`)\n        );\n      })\n    );\n  }\n\n  /**\n   * Updates a category.\n   *\n   * @param category CategoryInfo - the updated category information.\n   * @param originalName string - the original name of the category.\n   * @returns An Observable that emits a success message if the category is updated successfully, otherwise emits an error message.\n   */\n  updateCategory(\n    category: CategoryInfo,\n    originalName: string\n  ): Observable {\n    return this.firebaseService.incidents$.pipe(\n      first(),\n      switchMap((incidents) => {\n        const hasIncidentWithOriginalName = incidents.some(\n          (incident) => incident.categoryName === originalName\n        );\n        if (hasIncidentWithOriginalName) {\n          return throwError(\n            () =>\n              new Error(\n                'No se puede actualizar la categoría porque tiene incidencias asociadas con su nombre original'\n              )\n          );\n        }\n        return from(\n          this.firebaseService.updateDocument(\n            'categoryInfo',\n            category.uuid,\n            category\n          )\n        ).pipe(map(() => 'Categoría actualizada exitosamente.'));\n      }),\n      catchError((err) =>\n        throwError(\n          () =>\n            new Error(\n              `Error al intentar actualizar la categoría: ${err.message}`\n            )\n        )\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryInfo.html":{"url":"interfaces/CategoryInfo.html","title":"interface - CategoryInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoryInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/category-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            adminId\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CategoryInfo {\n    name: string;\n    admin: string;\n    adminId: string;\n    description: string;\n    uuid: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n\n\n            \n                styleUrls\n                ./confirm-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, message: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:9\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialogRef - a reference to the dialog component.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                string - the message to be displayed in the dialog.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:27\n                        \n                    \n\n\n            \n                \n                        Closes the dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:17\n                        \n                    \n\n            \n                \n                    MatDialogRef - a reference to the dialog component.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:19\n                        \n                    \n\n            \n                \n                    string - the message to be displayed in the dialog.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param dialogRef MatDialogRef - a reference to the dialog component.\n   * @param message string - the message to be displayed in the dialog.\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA)\n    public message: string\n  ) {}\n\n  ngOnInit() {}\n\n  /**\n   * Closes the dialog.\n   */\n  cancel() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  {{'dialog.delete' | translate}}\n\n\n  {{'dialog.no' | translate}}\n  {{'dialog.yes' | translate}}\n\n\n    \n\n    \n                \n                    ./confirm-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{\\'dialog.delete\\' | translate}}  {{\\'dialog.no\\' | translate}}  {{\\'dialog.yes\\' | translate}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomTranslateService.html":{"url":"injectables/CustomTranslateService.html","title":"injectable - CustomTranslateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomTranslateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/translate/translate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _language\n                            \n                            \n                                    Public\n                                language$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                    Private\n                                    Async\n                                init\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/translate/translate.service.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor initializes the TranslateService and calls the init() method.\nTranslateService class, which is likely used for handling translations in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe translate parameter is an instance of the\nTranslateService class, which is likely used for handling translations in the application.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:53\n                        \n                    \n\n\n            \n                \n                        The function get returns an Observable that retrieves a translated string based on a given key.\ntranslation value from the translation service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key parameter is a string that represents the key used to retrieve a\ntranslation value from the translation service.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable of type string is being returned.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:26\n                        \n                    \n\n\n            \n                \n                        The init function initializes language settings by adding languages and setting a default\nlanguage.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(language: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:37\n                        \n                    \n\n\n            \n                \n                        The function use in TypeScript sets the language for translation and updates the language\nsubject accordingly.\nrepresenting the language to be used for translation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe use function takes a language parameter, which is a string\nrepresenting the language to be used for translation.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _language\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    'es'\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/translate.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        language$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._language.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/translate.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, lastValueFrom, tap } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomTranslateService {\n  private _language: BehaviorSubject = new BehaviorSubject(\n    'es'\n  );\n  public language$ = this._language.asObservable();\n\n  /**\n   * The constructor initializes the TranslateService and calls the init() method.\n   * @param {TranslateService} translate - The `translate` parameter is an instance of the\n   * `TranslateService` class, which is likely used for handling translations in the application.\n   */\n  constructor(private translate: TranslateService) {\n    this.init();\n  }\n\n  /**\n   * The `init` function initializes language settings by adding languages and setting a default\n   * language.\n   */\n  private async init() {\n    this.translate.addLangs(['es', 'en']);\n    this.translate.setDefaultLang(this._language.value);\n  }\n\n  /**\n   * The function `use` in TypeScript sets the language for translation and updates the language\n   * subject accordingly.\n   * @param {string} language - The `use` function takes a `language` parameter, which is a string\n   * representing the language to be used for translation.\n   */\n  use(language: string) {\n    lastValueFrom(this.translate.use(language))\n      .then((_) => {\n        this._language.next(language);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  /**\n   * The function `get` returns an Observable that retrieves a translated string based on a given key.\n   * @param {string} key - The `key` parameter is a string that represents the key used to retrieve a\n   * translation value from the translation service.\n   * @returns An Observable of type string is being returned.\n   */\n  get(key: string): Observable {\n    return this.translate.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataPage.html":{"url":"components/DataPage.html","title":"component - DataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/data/data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-data\n            \n\n\n\n            \n                styleUrls\n                ./data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                    Public\n                                downloadCSV\n                            \n                            \n                                    Async\n                                editCategory\n                            \n                            \n                                exportData\n                            \n                            \n                                    Public\n                                jsonToCSV\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, router: Router, _categoryService: CategoriesService, translate: CustomTranslateService, messageService: MessageService, dialog: MatDialog, myModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/data/data.page.ts:21\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router - an instance of the Angular Router service used for navigating between different components.\n\n                                                        \n                                                \n                                                \n                                                        _categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CategoriesService - a service for managing categories.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MessageService - a service for displaying messages or notifications to the user within the application.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog - a service for displaying dialog boxes.\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ModalController - a service for managing modal dialogs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:179\n                        \n                    \n\n\n            \n                \n                        Opens a modal dialog for creating a new category.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(info: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:204\n                        \n                    \n\n\n            \n                \n                        Deletes a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        downloadCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadCSV(csvContent: string, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:104\n                        \n                    \n\n\n            \n                \n                        Initiates the download of a CSV file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                csvContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe CSV content to be downloaded.\n\n\n                                            \n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the CSV file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    editCategory(info: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:154\n                        \n                    \n\n\n            \n                \n                        Opens a modal dialog for editing a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportData\n                        \n                    \n                \n            \n            \n                \nexportData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:53\n                        \n                    \n\n\n            \n                \n                        Method to export data to CSV format.\nFetches data from Firebase, converts it to CSV format, and initiates CSV file downloads.\nThis method retrieves data from Firebase using the FirebaseService, converts it to CSV format,\nand initiates the download of CSV files for each dataset.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        jsonToCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    jsonToCSV(dataObject: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:74\n                        \n                    \n\n\n            \n                \n                        Converts JSON data to CSV format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataObject\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JSON data object to be converted to CSV.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                An object containing CSV content for each dataset.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:126\n                        \n                    \n\n\n            \n                \n                        Opens a confirmation dialog for deleting a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:237\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:217\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n            \n                \nuserInfo(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:145\n                        \n                    \n\n\n            \n                \n                        Navigates to the user information page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/data.page.ts:39\n                        \n                    \n\n            \n                \n                    MatDialog - a service for displaying dialog boxes.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\nimport { ModalController } from '@ionic/angular';\nimport { ModalCategoryComponent } from './modal-category/modal-category.component';\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.page.html',\n  styleUrls: ['./data.page.scss'],\n  providers: [MessageService],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DataPage implements OnInit {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param router Router - an instance of the Angular Router service used for navigating between different components.\n   * @param _categoryService CategoriesService - a service for managing categories.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   * @param messageService MessageService - a service for displaying messages or notifications to the user within the application.\n   * @param dialog MatDialog - a service for displaying dialog boxes.\n   * @param myModal ModalController - a service for managing modal dialogs.\n   */\n  constructor(\n    protected _firebaseService: FirebaseService,\n    private router: Router,\n    private _categoryService: CategoriesService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    public dialog: MatDialog,\n    private myModal: ModalController\n  ) {}\n\n  ngOnInit() {}\n\n  /**\n   * Method to export data to CSV format.\n   * Fetches data from Firebase, converts it to CSV format, and initiates CSV file downloads.\n   *\n   * @remarks\n   * This method retrieves data from Firebase using the FirebaseService, converts it to CSV format,\n   * and initiates the download of CSV files for each dataset.\n   */\n  exportData(): void {\n    this._firebaseService\n      .getAllData()\n      .then((dataObject) => {\n        const csvFiles = this.jsonToCSV(dataObject);\n        for (const key in csvFiles) {\n          if (csvFiles.hasOwnProperty(key)) {\n            const csvContent = csvFiles[key];\n            this.downloadCSV(csvContent, `${key}.csv`);\n          }\n        }\n      })\n      .catch((error) => console.error('Failed to fetch data', error));\n  }\n\n  /**\n   * Converts JSON data to CSV format.\n   *\n   * @param dataObject - The JSON data object to be converted to CSV.\n   * @returns An object containing CSV content for each dataset.\n   */\n  public jsonToCSV(dataObject: { [key: string]: any[] }): {\n    [key: string]: string;\n  } {\n    const csvFiles: { [key: string]: string } = {};\n\n    for (const key in dataObject) {\n      if (dataObject.hasOwnProperty(key) && dataObject[key].length > 0) {\n        const headers = Object.keys(dataObject[key][0]);\n        const csvRows = dataObject[key].map((row) =>\n          headers\n            .map((fieldName) =>\n              JSON.stringify(row[fieldName], (key, value) =>\n                value == null ? '' : value\n              )\n            )\n            .join(',')\n        );\n        csvRows.unshift(headers.join(','));\n        csvFiles[key] = csvRows.join('\\r\\n');\n      }\n    }\n    return csvFiles;\n  }\n\n  /**\n   * Initiates the download of a CSV file.\n   *\n   * @param csvContent - The CSV content to be downloaded.\n   * @param filename - The name of the CSV file.\n   */\n  public downloadCSV(csvContent: string, filename: string): void {\n    if (!csvContent) {\n      console.error('No CSV content available for download.');\n      return;\n    }\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens a confirmation dialog for deleting a category.\n   *\n   * @param category CategoryInfo - the category information to be deleted.\n   */\n  openDialog(category: CategoryInfo): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      data: { message: '¿Estás seguro de que quieres borrar esto?' },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      console.log(result);\n      if (result) {\n        this.deleteCategory(category);\n      }\n    });\n  }\n\n  /**\n   * Navigates to the user information page.\n   *\n   * @param userId string - the ID of the user.\n   */\n  userInfo(userId: string) {\n    this.router.navigate([`/data/user/${userId}`]);\n  }\n\n  /**\n   * Opens a modal dialog for editing a category.\n   *\n   * @param info CategoryInfo - the category information to be edited.\n   */\n  async editCategory(info: CategoryInfo) {\n    const mod = await this.myModal.create({\n      component: ModalCategoryComponent,\n      componentProps: {\n        categoryInfo: info,\n        mode: 'update',\n      },\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results?.data) {\n        this._categoryService\n          .updateCategory(results?.data, info.name)\n          .subscribe({\n            next: (_) => this.showSuccess('good'),\n            error: (_) => this.showError('cant'),\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens a modal dialog for creating a new category.\n   */\n  async createCategory() {\n    const mod = await this.myModal.create({\n      component: ModalCategoryComponent,\n      componentProps: {\n        categoryInfo: null,\n        mode: 'create',\n      },\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results?.data) {\n        this._categoryService.createCategory(results?.data).subscribe({\n          next: (_) => this.showSuccess('good'),\n          error: (_) => this.showError('cant'),\n        });\n      }\n    }\n  }\n\n  /**\n   * Deletes a category.\n   *\n   * @param info CategoryInfo - the category to delete.\n   */\n  deleteCategory(info: CategoryInfo) {\n    this._categoryService.deleteCategory(info).subscribe({\n      next: (_) => this.showSuccess('good'),\n      error: (_) => this.showError('cant'),\n    });\n  }\n\n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'success',\n          detail: text,\n        });\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        {{'data.data' | translate}}\n      \n\n      \n        {{ \"data.download\" | translate }}\n      \n\n      \n\n      \n        {{ \"data.create\" | translate }}\n      \n\n      \n\n      \n        +\n      \n    \n  \n    \n      \n      \n        \n        {{'data.graphic' | translate}}\n      \n\n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./data.page.scss\n                \n                ion-icon {\n    margin-right: 8px;\n}\n\n.category-mobile {\n    display: none;\n\n    button {\n        padding: 1rem;\n        border: none;\n        border-radius: 4px;\n        background-color: #0F212D;\n        color: white;\n        font-weight: bold;\n        cursor: pointer;\n\n        &:hover {\n            background-color: #1b3e56;\n        }\n\n        &:disabled {\n            background-color: #cccccc;\n            color: #777777;\n            cursor: not-allowed;\n        }\n    }\n}\n\n.graphics {\n    margin-top: 3%;\n}\n\napp-user-circle-graphic {\n    display: block;\n    max-width: 300px;\n    margin: 0 auto;\n    height: auto;\n}\n\napp-incidents-circle-graphic {\n    display: block;\n    max-width: 300px;\n    margin: 0 auto;\n    height: auto;\n}\n\n.category-button {\n    position: fixed;\n    bottom: 10px;\n    right: 20px;\n    width: 50px;\n    height: 50px;\n    padding: 0;\n    background-color: #0F212D;\n    color: white;\n    border-radius: 50%;\n    cursor: pointer;\n    font-size: 24px;\n    line-height: 50px;\n    text-align: center;\n\n    &:hover {\n        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);\n    }\n}\n\n.download-data {\n    margin-top: 30px;\n    display: flex;\n    justify-content: center;\n\n    button {\n        padding: 1rem;\n        border: none;\n        border-radius: 4px;\n        background-color: #0F212D;\n        color: white;\n        font-weight: bold;\n        cursor: pointer;\n\n        &:hover {\n            background-color: #1b3e56;\n        }\n\n        &:disabled {\n            background-color: #cccccc;\n            color: #777777;\n            cursor: not-allowed;\n        }\n    }\n}\n\n\n@media (max-width: 700px) {\n    .category-mobile {\n        margin-top: 80px;\n        margin-bottom: -10px;\n        display: flex;\n        justify-content: center;\n    }\n\n    .category-button {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{\\'data.data\\' | translate}}                    {{ \"data.download\" | translate }}                          {{ \"data.create\" | translate }}                          +                                            {{\\'data.graphic\\' | translate}}                                                                                                          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataPageModule.html":{"url":"modules/DataPageModule.html","title":"module - DataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    DataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataPageModule\n\n\n\ncluster_DataPageModule_imports\n\n\n\ncluster_DataPageModule_declarations\n\n\n\n\nDataPage\n\nDataPage\n\n\n\nDataPageModule\n\nDataPageModule\n\nDataPageModule -->\n\nDataPage->DataPageModule\n\n\n\n\n\nModalCategoryComponent\n\nModalCategoryComponent\n\nDataPageModule -->\n\nModalCategoryComponent->DataPageModule\n\n\n\n\n\nDataPageRoutingModule\n\nDataPageRoutingModule\n\nDataPageModule -->\n\nDataPageRoutingModule->DataPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DataPage\n                        \n                        \n                            ModalCategoryComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DataPageRoutingModule } from './data-routing.module';\n\nimport { DataPage } from './data.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { ToastModule } from 'primeng/toast';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ModalCategoryComponent } from './modal-category/modal-category.component';\nimport { AccordionModule } from 'primeng/accordion';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    // Reactive form\n    ReactiveFormsModule,\n    IonicModule,\n    DataPageRoutingModule,\n    SharedModule,\n    MatTabsModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n    // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    SharedModule,\n    AccordionModule\n  ],\n  declarations: [\n    DataPage,\n    ModalCategoryComponent\n  ]\n})\nexport class DataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataPageRoutingModule.html":{"url":"modules/DataPageRoutingModule.html","title":"module - DataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/data/data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DataPage } from './data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:48\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deletes an item from a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to delete the item from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the deleted item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a single item from a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to retrieve the item from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the retrieved item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Creates a new item on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to create the item on.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData for creating the item.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the created item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Updates an existing item on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to update the item on.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData for updating the item.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the updated item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:15\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Executes a query operation on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to query.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nParameters for the query.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Observable emitting the paginated data resulting from the query.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PaginatedData } from '../interfaces/data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class DataService {\n  /**\n   * Executes a query operation on a resource.\n   * @param {string} resource - The resource to query.\n   * @param {any} params - Parameters for the query.\n   * @returns {Observable>} Observable emitting the paginated data resulting from the query.\n   */\n  public abstract query(\n    resource: string,\n    params: any\n  ): Observable>;\n\n  /**\n   * Retrieves a single item from a resource.\n   * @param {string} resource - The resource to retrieve the item from.\n   * @returns {Observable} Observable emitting the retrieved item.\n   */\n  public abstract get(resource: string): Observable;\n\n  /**\n   * Creates a new item on a resource.\n   * @param {string} resource - The resource to create the item on.\n   * @param {any} data - Data for creating the item.\n   * @returns {Observable} Observable emitting the created item.\n   */\n  public abstract post(resource: string, data: any): Observable;\n\n  /**\n   * Updates an existing item on a resource.\n   * @param {string} resource - The resource to update the item on.\n   * @param {any} data - Data for updating the item.\n   * @returns {Observable} Observable emitting the updated item.\n   */\n  public abstract put(resource: string, data: any): Observable;\n\n  /**\n   * Deletes an item from a resource.\n   * @param {string} resource - The resource to delete the item from.\n   * @returns {Observable} Observable emitting the deleted item.\n   */\n  public abstract delete(resource: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailValidation.html":{"url":"classes/EmailValidation.html","title":"class - EmailValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/email.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        email\n                        \n                    \n                \n            \n            \n                \n                        \n                    email(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/email.ts:14\n                        \n                    \n\n\n            \n                \n                        Validates an email control.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe name of the control to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for email validation.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbstractControl,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\n\nexport class EmailValidation {\n  /**\n   * Validates an email control.\n   * @param {string} controlName - The name of the control to validate.\n   * @returns {ValidatorFn} Validator function for email validation.\n   */\n  public static email(controlName: string = ''): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      let email = '';\n      if (control instanceof FormControl) email = control?.value;\n      else email = control.get(controlName)?.value;\n      if (\n        email &&\n        !email.match(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)\n      ) {\n        return { email: true };\n      } else {\n        return null;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseAuthService.html":{"url":"classes/FirebaseAuthService.html","title":"class - FirebaseAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                me\n                            \n                            \n                                    Private\n                                postRegister\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseSvc: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseAuthService class. It subscribes to the isLogged$ observable from the FirebaseService to\nautomatically handle changes in the authentication state. If the user is logged in, it attempts to fetch the user's data.\nIf not logged in, it sets _logged and _user to false and null, respectively.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:44\n\n                        \n                    \n\n\n            \n                \n                        Logs in a user using their credentials. Attempts to connect the user through Firebase using email and password.\nIf authentication fails or if a valid UID for the user is not received, it emits an error. If successful, it retrieves\nthe user information and updates the _user and _logged observables.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe credentials of the user, including email and password.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that may emit the logged-in user or an error in case of failed authentication.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:178\n\n                        \n                    \n\n\n            \n                \n                        Logs out the current user by calling the signOut method from FirebaseService. The method returns an Observable\nthat resolves when the sign-out process is complete.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable indicating the completion of the logout process.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:153\n\n                        \n                    \n\n\n            \n                \n                        Fetches the current user's information from Firestore based on their UID. If the user is connected (UID exists),\nretrieves their detailed profile from the 'userInfo' collection. Throws an error if no user is currently connected.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Returns an Observable that emits the user's detailed information or throws an error if the user is not connected.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    postRegister(info: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/firebase/api/firebase-auth.service.ts:124\n                        \n                    \n\n\n            \n                \n                        The function postRegister takes a User object, capitalizes the first letter of the name\nproperty if needed, and then creates a document in Firebase with the user information.\ncontains the following properties:\nparameter, checks if the uuid property exists in the info object, and then modifies the name\nproperty by capitalizing the first letter if it is not already capitalized. Finally, it creates a\ndocument in the 'userInfo' collection in Firebase with the provided user information and the\nspecified\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The info parameter in the postRegister function is an object of type UserInfo that\ncontains the following properties:\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable is being returned. The function postRegister takes a User object as a\nparameter, checks if the uuid property exists in the info object, and then modifies the name\nproperty by capitalizing the first letter if it is not already capitalized. Finally, it creates a\ndocument in the 'userInfo' collection in Firebase with the provided user information and the\nspecified\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:83\n\n                        \n                    \n\n\n            \n                \n                        Registers a new user using registration info. Creates a user in Firebase and, if successful, stores additional\nuser information in the database. If the registration fails to create a user or if necessary user details (like UID) are\nmissing, it emits an error. Otherwise, it completes the registration, updates user-related observables to reflect\nthe unauthenticated state, and emits the new user information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe registration info of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that may emit null or detailed information of the newly registered user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:189\n\n                        \n                    \n\n\n            \n                \n                        Updates the current user's information in Firestore and refreshes the local user data by fetching updated info after the update.\nUses RxJS operators to chain these asynchronous tasks efficiently.\nuser data is refreshed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new user data to be updated in Firestore.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that emits the updated user data after both the Firestore document is updated and the local\nuser data is refreshed.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, from, map, switchMap, tap } from 'rxjs';\nimport {\n  UserInfo,\n  UserCredentials,\n  UserRegisterInfo,\n} from '../../../interfaces/user-info';\nimport { FirebaseService, FirebaseUserCredential } from '../firebase.service';\nimport { AuthService } from '../../auth.service';\n\nexport class FirebaseAuthService extends AuthService {\n  /**\n   * Constructs the FirebaseAuthService class. It subscribes to the `isLogged$` observable from the FirebaseService to\n   * automatically handle changes in the authentication state. If the user is logged in, it attempts to fetch the user's data.\n   * If not logged in, it sets `_logged` and `_user` to `false` and `null`, respectively.\n   */\n  constructor(private firebaseSvc: FirebaseService) {\n    super();\n\n    this.firebaseSvc.isLogged$.subscribe((logged) => {\n      if (logged) {\n        this.me().subscribe({\n          next: (data) => {\n            this._user.next(data);\n            this._logged.next(true);\n          },\n          error: (err) => {\n            console.log(err);\n          },\n        });\n      } else {\n        this._logged.next(false);\n        this._user.next(null);\n      }\n    });\n  }\n\n  /**\n   * Logs in a user using their credentials. Attempts to connect the user through Firebase using email and password.\n   * If authentication fails or if a valid UID for the user is not received, it emits an error. If successful, it retrieves\n   * the user information and updates the `_user` and `_logged` observables.\n   * @param {UserCredentials} credentials - The credentials of the user, including email and password.\n   * @returns Returns an Observable that may emit the logged-in user or an error in case of failed authentication.\n   */\n  public login(credentials: UserCredentials): Observable {\n    return new Observable((subscr) => {\n      this.firebaseSvc\n        .connectUserWithEmailAndPassword(\n          credentials.email,\n          credentials.password\n        )\n        .then((credentials: FirebaseUserCredential | null) => {\n          if (\n            !credentials ||\n            !credentials.user ||\n            !credentials.user.user ||\n            !credentials.user.user.uid\n          ) {\n            subscr.error('Cannot login');\n          }\n          if (credentials) {\n            this.me().subscribe((data) => {\n              this._user.next(data);\n              this._logged.next(true);\n              subscr.next(data);\n              subscr.complete();\n            });\n          }\n        })\n        .catch((err) => {\n          subscr.error(err);\n        });\n    });\n  }\n\n  /**\n   * Registers a new user using registration info. Creates a user in Firebase and, if successful, stores additional\n   * user information in the database. If the registration fails to create a user or if necessary user details (like UID) are\n   * missing, it emits an error. Otherwise, it completes the registration, updates user-related observables to reflect\n   * the unauthenticated state, and emits the new user information.\n   * @param {UserRegisterInfo} info - The registration info of the user.\n   * @returns Returns an Observable that may emit null or detailed information of the newly registered user.\n   */\n  public register(info: UserRegisterInfo): Observable {\n    return new Observable((subscr) => {\n      this.firebaseSvc\n        .createUserWithEmailAndPassword(info.email, info.password)\n        .then((credentials: FirebaseUserCredential | null) => {\n          if (\n            !credentials ||\n            !credentials.user ||\n            !credentials.user.user ||\n            !credentials.user.user.uid\n          )\n            subscr.error('Cannot register');\n          if (credentials) {\n            var _info: UserInfo = { ...info };\n            _info.uuid = this.firebaseSvc.user?.uid;\n            this.postRegister(_info).subscribe((data) => {\n              this._user.next(null);\n              this._logged.next(false);\n              subscr.next(_info);\n              subscr.complete();\n            });\n          }\n        })\n        .catch((err) => {\n          subscr.error(err);\n        });\n    });\n  }\n\n  /**\n   * The function `postRegister` takes a `User` object, capitalizes the first letter of the `name`\n   * property if needed, and then creates a document in Firebase with the user information.\n   *\n   * @param info The `info` parameter in the `postRegister` function is an object of type `UserInfo` that\n   * contains the following properties:\n   * @return An Observable is being returned. The function `postRegister` takes a `User` object as a\n   * parameter, checks if the `uuid` property exists in the `info` object, and then modifies the `name`\n   * property by capitalizing the first letter if it is not already capitalized. Finally, it creates a\n   * document in the 'userInfo' collection in Firebase with the provided user information and the\n   * specified\n   */\n  private postRegister(info: UserInfo): Observable {\n    if (info.uuid) {\n      let fixedName = info.name;\n      if (fixedName[0] !== fixedName[0].toUpperCase()) {\n        fixedName = fixedName.charAt(0).toUpperCase() + fixedName.slice(1);\n      }\n      return from(\n        this.firebaseSvc.createDocumentWithId(\n          'userInfo',\n          {\n            name: fixedName,\n            surname: info.surname,\n            role: info.role,\n            username: info.username,\n            email: info.email,\n            uuid: info.uuid,\n          },\n          info.uuid\n        )\n      );\n    }\n    throw new Error('Error inesperado');\n  }\n\n  /**\n   * Fetches the current user's information from Firestore based on their UID. If the user is connected (UID exists),\n   * retrieves their detailed profile from the 'userInfo' collection. Throws an error if no user is currently connected.\n   * @returns Returns an Observable that emits the user's detailed information or throws an error if the user is not connected.\n   */\n  public me(): Observable {\n    if (this.firebaseSvc.user?.uid)\n      return from(\n        this.firebaseSvc.getDocument('userInfo', this.firebaseSvc.user.uid)\n      ).pipe(\n        map((data) => {\n          return {\n            name: data.data['name'],\n            surname: data.data['surname'],\n            picture: data.data['picture'] ?? '',\n            email: data.data['email'],\n            role: data.data['role'],\n            username: data.data['username'],\n            uuid: data.id,\n          };\n        })\n      );\n    else throw new Error('User is not connected');\n  }\n\n  /**\n   * Logs out the current user by calling the `signOut` method from FirebaseService. The method returns an Observable\n   * that resolves when the sign-out process is complete.\n   * @returns Returns an Observable indicating the completion of the logout process.\n   */\n  public logout(): Observable {\n    return from(this.firebaseSvc.signOut(false));\n  }\n\n  /**\n   * Updates the current user's information in Firestore and refreshes the local user data by fetching updated info after the update.\n   * Uses RxJS operators to chain these asynchronous tasks efficiently.\n   * @param {UserInfo} user - The new user data to be updated in Firestore.\n   * @returns Returns an Observable that emits the updated user data after both the Firestore document is updated and the local\n   * user data is refreshed.\n   */\n  public updateUser(user: UserInfo): Observable {\n    return from(\n      this.firebaseSvc.updateDocument('userInfo', user!.uuid!, user)\n    ).pipe(\n      tap(() => {\n        if (user.uuid === this._user.value?.uuid) {\n          this._user.next(user);\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseDataService.html":{"url":"classes/FirebaseDataService.html","title":"class - FirebaseDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            DataService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-data.service.ts:6\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseDataService with a reference to FirebaseService.\nThis service handles all interactions with Firebase, providing methods to get, create, update,\nand delete documents in a Firestore database.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides methods for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:101\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deletes a document from Firebase and returns the document that was deleted.\nRetrieves the document first, then deletes it from Firestore, emitting the original document upon completion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, formatted as 'collectionName/documentId'.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the document that was deleted as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:52\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a single document from Firebase based on a resource path which includes collection name and document ID.\nMaps the Firestore document to a generic type T.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, formatted as 'collectionName/documentId'.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the requested document as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Creates a new document in a specified Firebase collection and retrieves the newly created document.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the Firestore collection where the document will be created.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be stored in the new document.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the newly created document as type T, after fetching it using its ID.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:85\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Updates an existing document in Firebase and retrieves the updated document.\nAssumes the resource string is formatted as 'collectionName/documentId'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, which is split to get collection name and document ID.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new data for the document.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the updated document as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:24\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Fetches a collection of documents from Firebase and maps them to a PaginatedData structure.\nThis method is generic and can be used for any type of collection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the Firestore collection to query.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nQuery parameters (currently not used in implementation but can be utilized for filtering/sorting).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \nAn observable that emits the paginated data of the specified type.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, from, map, switchMap } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { PaginatedData } from 'src/app/core/interfaces/data';\nimport { DataService } from '../../data.service';\n\nexport class FirebaseDataService extends DataService {\n  /**\n   * Constructs the FirebaseDataService with a reference to FirebaseService.\n   * This service handles all interactions with Firebase, providing methods to get, create, update,\n   * and delete documents in a Firestore database.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(protected firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Fetches a collection of documents from Firebase and maps them to a PaginatedData structure.\n   * This method is generic and can be used for any type of collection.\n   * @param {string} resource - The name of the Firestore collection to query.\n   * @param {any} params - Query parameters (currently not used in implementation but can be utilized for filtering/sorting).\n   * @returns {Observable>} - An observable that emits the paginated data of the specified type.\n   */\n  public query(resource: string, params: any): Observable> {\n    return from(this.firebase.getDocuments(resource)).pipe(\n      map((data) => {\n        return {\n          data: data.map((doc) => {\n            return {\n              id: 0,\n              uuid: doc.id,\n              ...doc.data,\n            } as T;\n          }),\n          pagination: {\n            page: 0,\n            pageSize: data.length,\n            pageCount: 1,\n            total: data.length,\n          },\n        };\n      })\n    );\n  }\n\n  /**\n   * Retrieves a single document from Firebase based on a resource path which includes collection name and document ID.\n   * Maps the Firestore document to a generic type T.\n   * @param {string} resource - The path to the document, formatted as 'collectionName/documentId'.\n   * @returns {Observable} - An observable that emits the requested document as type T.\n   */\n  public get(resource: string): Observable {\n    return from(\n      this.firebase.getDocument(resource.split('/')[0], resource.split('/')[1])\n    ).pipe(\n      map((doc) => {\n        return {\n          id: 0,\n          uuid: doc.id,\n          ...doc.data,\n        } as T;\n      })\n    );\n  }\n\n  /**\n   * Creates a new document in a specified Firebase collection and retrieves the newly created document.\n   * @param {string} resource - The name of the Firestore collection where the document will be created.\n   * @param {any} data - The data to be stored in the new document.\n   * @returns {Observable} - An observable that emits the newly created document as type T, after fetching it using its ID.\n   */\n  public post(resource: string, data: any): Observable {\n    return from(this.firebase.createDocument(resource, data)).pipe(\n      switchMap((doc) => this.get(resource + '/' + doc))\n    );\n  }\n\n  /**\n   * Updates an existing document in Firebase and retrieves the updated document.\n   * Assumes the resource string is formatted as 'collectionName/documentId'.\n   * @param {string} resource - The path to the document, which is split to get collection name and document ID.\n   * @param {any} data - The new data for the document.\n   * @returns {Observable} - An observable that emits the updated document as type T.\n   */\n  public put(resource: string, data: any): Observable {\n    return from(\n      this.firebase.updateDocument(\n        resource.split('/')[0],\n        resource.split('/')[1],\n        data\n      )\n    ).pipe(switchMap((doc) => this.get(resource)));\n  }\n\n  /**\n   * Deletes a document from Firebase and returns the document that was deleted.\n   * Retrieves the document first, then deletes it from Firestore, emitting the original document upon completion.\n   * @param {string} resource - The path to the document, formatted as 'collectionName/documentId'.\n   * @returns {Observable} - An observable that emits the document that was deleted as type T.\n   */\n  public delete(resource: string): Observable {\n    return this.get(resource).pipe(\n      switchMap((doc) => {\n        return from(\n          this.firebase.deleteDocument(\n            resource.split('/')[0],\n            resource.split('/')[1]\n          )\n        ).pipe(map((_) => doc));\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseDocument.html":{"url":"interfaces/FirebaseDocument.html","title":"interface - FirebaseDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     DocumentData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseMediaService.html":{"url":"classes/FirebaseMediaService.html","title":"class - FirebaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MediaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-media.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseMediaService with a reference to FirebaseService.\nThis service will be used to interact with Firebase's functionalities, particularly for uploading images.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides methods for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         MediaService:32\n\n                        \n                    \n\n\n            \n                \n                        Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\nThe method is designed to handle the upload process asynchronously and emit the result as an array of Media.\nEach Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\nIf an error occurs during upload, the observable will emit an error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file data to be uploaded, typically an image file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable that emits an array containing the uploaded media information.\nIf an error occurs during upload, the observable will emit an error.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { MediaService } from '../../media.service';\n\nexport interface Media {\n  id: number;\n  url_small: string;\n  url_medium: string;\n  url_large: string;\n  url_thumbnail: string;\n}\n\nexport class FirebaseMediaService extends MediaService {\n  /**\n   * Constructs the FirebaseMediaService with a reference to FirebaseService.\n   * This service will be used to interact with Firebase's functionalities, particularly for uploading images.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(private firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\n   * The method is designed to handle the upload process asynchronously and emit the result as an array of Media.\n   * Each Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\n   *\n   * @param {Blob} blob - The file data to be uploaded, typically an image file.\n   * @returns {Observable} - An observable that emits an array containing the uploaded media information.\n   * If an error occurs during upload, the observable will emit an error.\n   */\n  public upload(blob: Blob): Observable {\n    return new Observable((obs) => {\n      this.firebase\n        .imageUpload(blob)\n        .then((data) => {\n          var imgs = [];\n          var media: any = data.file;\n          imgs.push(media);\n          obs.next(imgs);\n        })\n        .catch((error) => obs.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseStorageFile.html":{"url":"interfaces/FirebaseStorageFile.html","title":"interface - FirebaseStorageFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseStorageFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseUserCredential.html":{"url":"interfaces/FirebaseUserCredential.html","title":"interface - FirebaseUserCredential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseUserCredential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     UserCredential\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserCredential\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                firebaseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                incidentInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService, router: Router, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:12\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService - a service for handling authentication and user authorization.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router - an instance of the Angular Router service used for navigating between different components.\n\n                                                        \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        incidentInfo\n                        \n                    \n                \n            \n            \n                \nincidentInfo(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:31\n                        \n                    \n\n\n            \n                \n                        Navigates to the incident data page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the incident.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebaseService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:23\n                        \n                    \n\n            \n                \n                    FirebaseService - a service for handling Firebase-related operations.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _auth AuthService - a service for handling authentication and user authorization.\n   * @param router Router - an instance of the Angular Router service used for navigating between different components.\n   * @param firebaseService FirebaseService - a service for handling Firebase-related operations.\n   */\n  constructor(\n    private _auth: AuthService,\n    private router: Router,\n    public firebaseService: FirebaseService\n  ) {}\n\n  /**\n   * Navigates to the incident data page.\n   *\n   * @param id string - the ID of the incident.\n   */\n  incidentInfo(id: string) {\n    if (id) {\n      console.log(id);\n      this.router.navigate(['/home/incident-data', id]);\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n    \n\n    \n                \n                    home.page.scss\n                \n                .incidents {\n  justify-content: flex-start;\n  display: flex;\n  flex-wrap: wrap;\n  row-gap: 20px;\n  column-gap: 30px;\n  width: 100%;\n  margin: 5% auto;\n  padding: 2%;\n\n\n  @media (max-width: 850px) {\n    flex-direction: column;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    SharedModule\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientProvider.html":{"url":"injectables/HttpClientProvider.html","title":"injectable - HttpClientProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                getImage\n                            \n                            \n                                    Public\n                                    Abstract\n                                patch\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:84\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        delete\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        get\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:16\n                        \n                    \n\n\n            \n                \n                        getImage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:69\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        patch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:37\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        post\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:53\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        put\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:94\n                        \n                    \n\n\n            \n                \n                        Sets the trust mode for the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n// rxjs\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport abstract class HttpClientProvider {\n  /**\n   * getImage\n   *\n   * @param url http request url\n   * @param options http request options\n   * @returns observable with http response\n   */\n  public abstract getImage(url: string): Observable;\n\n  /**\n   * get\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public abstract get(url: string, params: any, headers: any): Observable;\n\n  /**\n   * post\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract post(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * put\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract put(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * patch\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract patch(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * delete\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public abstract delete(\n    url: string,\n    params: any,\n    headers: any\n  ): Observable;\n\n  /**\n   * Sets the trust mode for the server\n   * @param mode server trust mode\n   */\n  public abstract setServerTrustMode(\n    mode: 'default' | 'nocheck' | 'pinned' | 'legacy'\n  ): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientWebProvider.html":{"url":"injectables/HttpClientWebProvider.html","title":"injectable - HttpClientWebProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientWebProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client-web.provider.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            HttpClientProvider\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBody\n                            \n                            \n                                    Private\n                                createHeaders\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getImage\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/http/http-client-web.provider.ts:12\n                            \n                        \n\n                \n                    \n                            provider constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                angular http client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBody\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBody(body: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:170\n                        \n                    \n\n\n            \n                \n                        create http request body\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any | HttpParams\n\n                        \n                            \n                                http request body\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    createHeaders(headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:153\n                        \n                    \n\n\n            \n                \n                        create http headers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                angular http headers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:126\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        delete\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:43\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        get\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:29\n\n                        \n                    \n\n\n            \n                \n                        getImage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:103\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        patch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:63\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        post\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:83\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        put\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:142\n\n                        \n                    \n\n\n            \n                \n                        Sets the trust mode for the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// rxjs\nimport { Observable } from 'rxjs';\n\n// providers\nimport { HttpClientProvider } from './http-client.provider';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpClientWebProvider extends HttpClientProvider {\n  /**\n   * provider constructor\n   *\n   * @param httpClient angular http client\n   */\n  constructor(private readonly httpClient: HttpClient) {\n    super();\n  }\n\n  /**\n   * getImage\n   *\n   * @param url http request url\n   * @param options http request options\n   * @returns observable with http response\n   */\n  public getImage(url: string): Observable {\n    return this.httpClient.get(url, {\n      responseType: 'blob',\n    });\n  }\n\n  /**\n   * get\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public get(\n    url: string,\n    params: any = {},\n    headers: any = {}\n  ): Observable {\n    return this.httpClient.get(url, {\n      params: new HttpParams({ fromObject: params }),\n      headers: this.createHeaders(headers),\n    });\n  }\n\n  /**\n   * post\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public post(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    return this.httpClient.post(url, this.createBody(body, urlEncoded), {\n      headers: this.createHeaders(headers, urlEncoded),\n    });\n  }\n\n  /**\n   * put\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public put(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    return this.httpClient.put(url, this.createBody(body, urlEncoded), {\n      headers: this.createHeaders(headers, urlEncoded),\n    });\n  }\n\n  /**\n   * patch\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public patch(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    if (body instanceof FormData) {\n      return this.httpClient.patch(url, body, { headers: headers });\n    } else {\n      return this.httpClient.patch(url, this.createBody(body, urlEncoded), {\n        headers: this.createHeaders(headers, urlEncoded),\n      });\n    }\n  }\n\n  /**\n   * delete\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public delete(\n    url: string,\n    params: any = {},\n    headers: any = {}\n  ): Observable {\n    return this.httpClient.delete(url, {\n      params: new HttpParams({ fromObject: params }),\n      headers: this.createHeaders(headers),\n    });\n  }\n\n  /**\n   * Sets the trust mode for the server\n   *\n   * @param mode server trust mode\n   */\n  public setServerTrustMode(\n    mode: 'default' | 'nocheck' | 'pinned' | 'legacy'\n  ): void {}\n\n  /**\n   * create http headers\n   *\n   * @param headers http headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns angular http headers\n   */\n  private createHeaders(\n    headers: any,\n    urlEncoded: boolean = false\n  ): HttpHeaders {\n    var _headers = new HttpHeaders(headers);\n    if (urlEncoded)\n      _headers.set('Accept', ' application/x-www-form-urlencoded');\n    return _headers;\n  }\n\n  /**\n   * create http request body\n   *\n   * @param body http request body\n   * @param urlEncoded http request as url encoded content-type\n   * @returns http request body\n   */\n  private createBody(body: any, urlEncoded: boolean): any | HttpParams {\n    return urlEncoded ? new HttpParams({ fromObject: body }) : body;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentDataPage.html":{"url":"components/IncidentDataPage.html","title":"component - IncidentDataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentDataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/incident-data/incident-data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-incident-data\n            \n\n\n\n            \n                styleUrls\n                ./incident-data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./incident-data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                incident\n                            \n                            \n                                incidentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setResolvedIncident\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, incidentsService: IncidentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute - a service provided by Angular that gives access to information about a route associated with a component loaded in an outlet.\n\n                                                        \n                                                \n                                                \n                                                        incidentsService\n                                                  \n                                                        \n                                                                        IncidentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                IncidentsService - a service for managing incidents.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:28\n                        \n                    \n\n\n            \n                \n                        Initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setResolvedIncident\n                        \n                    \n                \n            \n            \n                \nsetResolvedIncident(incident: incidentInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:52\n                        \n                    \n\n\n            \n                \n                        Sets an incident as resolved.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incident\n                                            \n                                                            incidentInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    incidentInfo - the incident to be marked as resolved.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        incident\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incidentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { IncidentsService } from 'src/app/core/services/api/incidents.service';\n\n@Component({\n  selector: 'app-incident-data',\n  templateUrl: './incident-data.page.html',\n  styleUrls: ['./incident-data.page.scss'],\n})\nexport class IncidentDataPage implements OnInit {\n  incidentId: string | null = '';\n  incident: any | undefined;\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param route ActivatedRoute - a service provided by Angular that gives access to information about a route associated with a component loaded in an outlet.\n   * @param incidentsService IncidentsService - a service for managing incidents.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private incidentsService: IncidentsService\n  ) {}\n\n  /**\n   * Initializes the component.\n   */\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.incidentId = params.get('id');\n      if (this.incidentId) {\n        this.incidentsService.getIncidentById(this.incidentId).subscribe({\n          next: (incident) => {\n            if (incident) {\n              this.incident = incident;\n              if (!incident.checked) {\n                incident.checked = true;\n                this.incidentsService.updateIncident(incident);\n              }\n            }\n          },\n        });\n      }\n    });\n  }\n\n  /**\n   * Sets an incident as resolved.\n   *\n   * @param incident incidentInfo - the incident to be marked as resolved.\n   */\n  setResolvedIncident(incident: incidentInfo) {\n    incident.resolved = true;\n    this.incident = incident;\n    this.incidentsService.updateIncident(incident);\n    console.log(incident);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n\n        {{incident.title}}\n\n        {{incident.categoryName}}\n\n        {{incident.userName}}\n\n        {{incident.description}}\n\n        {{\"incidents.resolved\" | translate}}\n       \n    \n  \n\n\n    \n\n    \n                \n                    ./incident-data.page.scss\n                \n                .user {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--username {\n        margin: 0;\n    }\n\n    &--role {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n    \n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{incident.title}}        {{incident.categoryName}}        {{incident.userName}}        {{incident.description}}        {{\"incidents.resolved\" | translate}}             '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentDataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IncidentDataPageModule.html":{"url":"modules/IncidentDataPageModule.html","title":"module - IncidentDataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    IncidentDataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IncidentDataPageModule\n\n\n\ncluster_IncidentDataPageModule_declarations\n\n\n\ncluster_IncidentDataPageModule_imports\n\n\n\n\nIncidentDataPage\n\nIncidentDataPage\n\n\n\nIncidentDataPageModule\n\nIncidentDataPageModule\n\nIncidentDataPageModule -->\n\nIncidentDataPage->IncidentDataPageModule\n\n\n\n\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageModule -->\n\nIncidentDataPageRoutingModule->IncidentDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/incident-data/incident-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IncidentDataPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IncidentDataPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IncidentDataPageRoutingModule } from './incident-data-routing.module';\n\nimport { IncidentDataPage } from './incident-data.page';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IncidentDataPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n  ],\n  declarations: [IncidentDataPage]\n})\nexport class IncidentDataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IncidentDataPageRoutingModule.html":{"url":"modules/IncidentDataPageRoutingModule.html","title":"module - IncidentDataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    IncidentDataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/incident-data/incident-data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IncidentDataPage } from './incident-data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IncidentDataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IncidentDataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentsCircleGraphicComponent.html":{"url":"components/IncidentsCircleGraphicComponent.html","title":"component - IncidentsCircleGraphicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentsCircleGraphicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-incidents-circle-graphic\n            \n\n\n\n            \n                styleUrls\n                ./incidents-circle-graphic.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./incidents-circle-graphic.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Initializes the component and fetches user data from Firebase to generate a chart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map, switchMap, forkJoin } from 'rxjs';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-incidents-circle-graphic',\n  templateUrl: './incidents-circle-graphic.component.html',\n  styleUrls: ['./incidents-circle-graphic.component.scss'],\n})\nexport class IncidentsCircleGraphicComponent implements OnInit {\n  data: any;\n  options: any;\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private translate: CustomTranslateService\n  ) {}\n\n  /**\n   * Initializes the component and fetches user data from Firebase to generate a chart.\n   */\n  ngOnInit() {\n    this._firebaseService.incidents$\n      .pipe(\n        map((incidents) => {\n          const categoryCounts = incidents.reduce((acc: any, incident: any) => {\n            const categoryName = incident.categoryName;\n            acc[categoryName] = (acc[categoryName] || 0) + 1;\n            return acc;\n          }, {});\n\n          return {\n            labels: Object.keys(categoryCounts),\n            datasets: [\n              {\n                data: Object.values(categoryCounts),\n                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n                hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n              },\n            ],\n          };\n        })\n      )\n      .subscribe((chartData) => {\n        this.data = chartData;\n        this.options = {\n          plugins: {\n            legend: {\n              labels: {\n                color: '#495057',\n              },\n            },\n          },\n        };\n      });\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./incidents-circle-graphic.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentsCircleGraphicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentsInfoComponent.html":{"url":"components/IncidentsInfoComponent.html","title":"component - IncidentsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/incidents-info/incidents-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-incidents-info\n            \n\n\n\n            \n                styleUrls\n                ./incidents-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./incidents-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formattedDay\n                            \n                            \n                                formattedTime\n                            \n                            \n                                isScreenSmall\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onIncidentClick\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                incident\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onIncidentClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:24\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\nInitializes the component by checking the initial screen size.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                UsersService - a service for managing user-related operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        incident\n                    \n                \n                \n                    \n                        Type :         incidentInfo | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onIncidentClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:20\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:41\n                        \n                    \n\n\n            \n                \n                        Initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onIncidentClick\n                        \n                    \n                \n            \n            \n                \nonIncidentClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Handles the click event on the incident.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event - the click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formattedDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formattedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { UsersService } from 'src/app/core/services/api/users.service';\n\n@Component({\n  selector: 'app-incidents-info',\n  templateUrl: './incidents-info.component.html',\n  styleUrls: ['./incidents-info.component.scss'],\n})\nexport class IncidentsInfoComponent implements OnInit {\n  isScreenSmall: boolean = false;\n  @Input() incident: incidentInfo | undefined;\n  @Output() onIncidentClicked: EventEmitter =\n    new EventEmitter();\n  formattedTime: string | undefined;\n  formattedDay: string | undefined;\n  userName: string | undefined;\n\n  /**\n   * Constructs a component constructor function.\n   * Initializes the component by checking the initial screen size.\n   *\n   * @param userService UsersService - a service for managing user-related operations.\n   */\n\n  constructor(private userService: UsersService) {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  /**\n   * Initializes the component.\n   */\n\n  ngOnInit() {\n    if (this.incident) {\n      if (typeof this.incident.date === 'string') {\n        const timestamp = new Date(this.incident.date);\n        this.formattedDay = timestamp.toLocaleDateString();\n        this.formattedTime = timestamp.toLocaleTimeString();\n      } else {\n        const timestamp = this.incident.date;\n        const date = timestamp.toDate();\n        this.formattedDay = date.toLocaleDateString();\n        this.formattedTime = date.toLocaleTimeString();\n      }\n      this.userService.getUserById(this.incident.userId).subscribe((user) => {\n        this.userName = user ? user.name : '';\n      });\n    }\n  }\n\n  /**\n   * Handles the click event on the incident.\n   *\n   * @param event Event - the click event.\n   */\n  onIncidentClick(event: Event) {\n    this.onIncidentClicked.emit(this.incident?.uuid);\n    event.stopPropagation();\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{incident?.title}}\n    {{incident?.title | shortenText}}\n    \n      {{'incidents.unresolved' | translate}}\n    \n  \n\n  \n    \n      \n      \n        {{'incidents.day' |translate}}: {{formattedDay}}\n      \n    \n    \n      \n      \n        {{'incidents.hour' |translate}}: {{formattedTime}}\n      \n    \n    \n      \n      \n        {{'incidents.user' |translate}}: {{userName ? userName : ('incidents.anonymous' | translate)}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./incidents-info.component.scss\n                \n                .card {\n  padding: 15px;\n  border-radius: 0.5rem;\n  box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n  width: calc((100vw / 3) - (30px * 2) + 10px);\n  height: 190px;\n\n  &--header {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    &__title {\n      font-weight: bold;\n    }\n\n    &__status {\n      background-color: #bd1e1e;\n      padding: 2% 5%;\n      border-radius: 2em;\n\n      span {\n        color: #ffffff;\n        font-weight: bold;\n      }\n    }\n  }\n\n  ion-icon {\n    color: #bd1e1e;\n  }\n\n  &--info {\n    margin-top: 5%;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n\n    span {\n      margin-left: 3%;\n      font-weight: bold;\n    }\n  }\n\n  &:hover {\n    cursor: pointer;\n  }\n\n  @media (max-width: 850px) {\n    width: 100% !important;\n\n    &--header {\n      &__status {\n        margin-left: 1rem;\n      }\n    }\n\n    &--info {\n      margin-top: 0;\n    }\n  }\n}\n\n.noCheck {\n  background-color: #BBBBBB;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{incident?.title}}    {{incident?.title | shortenText}}          {{\\'incidents.unresolved\\' | translate}}                                {{\\'incidents.day\\' |translate}}: {{formattedDay}}                                  {{\\'incidents.hour\\' |translate}}: {{formattedTime}}                                  {{\\'incidents.user\\' |translate}}: {{userName ? userName : (\\'incidents.anonymous\\' | translate)}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IncidentsService.html":{"url":"injectables/IncidentsService.html","title":"injectable - IncidentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IncidentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/incidents.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIncidentById\n                            \n                            \n                                updateIncident\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/incidents.service.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor function initializes a private firebaseService property using dependency\ninjection.\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The firebaseService parameter is an instance of the FirebaseService\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIncidentById\n                        \n                    \n                \n            \n            \n                \ngetIncidentById(incidentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/incidents.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Retrieves an incident by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incidentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the incident to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the incident information if found, otherwise undefined.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIncident\n                        \n                    \n                \n            \n            \n                \nupdateIncident(incident: incidentInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/incidents.service.ts:41\n                        \n                    \n\n\n            \n                \n                        Updates an incident.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incident\n                                            \n                                                            incidentInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    incidentInfo - the updated incident information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { incidentInfo } from '../../interfaces/incidents-info';\nimport { Observable, map, take } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IncidentsService {\n  /**\n   * The constructor function initializes a private firebaseService property using dependency\n   * injection.\n   *\n   * @param firebaseService The `firebaseService` parameter is an instance of the `FirebaseService`\n   * class that is being injected into the constructor using Angular's dependency injection mechanism.\n   * This allows the component or service to have access to the functionality provided by the\n   * `FirebaseService` class.\n   */\n  constructor(private firebaseService: FirebaseService) {}\n\n  /**\n   * Retrieves an incident by its ID.\n   *\n   * @param incidentId string - the ID of the incident to retrieve.\n   * @returns An Observable that emits the incident information if found, otherwise undefined.\n   */\n  getIncidentById(incidentId: string): Observable {\n    return this.firebaseService.incidents$.pipe(\n      take(1),\n      map((incident) =>\n        incident.find((incident) => incident.uuid === incidentId)\n      )\n    );\n  }\n\n  /**\n   * Updates an incident.\n   *\n   * @param incident incidentInfo - the updated incident information.\n   */\n  updateIncident(incident: incidentInfo) {\n    this.firebaseService.updateDocument(\n      'incidentsInfo',\n      incident.uuid,\n      incident\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalService.html":{"url":"injectables/LocalService.html","title":"injectable - LocalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/translate/local.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browserLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lang: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/translate/local.service.ts:8\n                            \n                        \n\n                \n                    \n                            The constructor function sets the browser language based on the value returned by\nwindow.navigator.language.\nproperty of type CustomTranslateService. It is used to handle language translation within the\ncomponent or service where this constructor is defined.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe lang parameter in the constructor is a private\nproperty of type CustomTranslateService. It is used to handle language translation within the\ncomponent or service where this constructor is defined.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        browserLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/local.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { CustomTranslateService } from './translate.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalService {\n  browserLanguage: string = '';\n\n  /**\n   * The constructor function sets the browser language based on the value returned by\n   * window.navigator.language.\n   * @param {CustomTranslateService} lang - The `lang` parameter in the constructor is a private\n   * property of type `CustomTranslateService`. It is used to handle language translation within the\n   * component or service where this constructor is defined.\n   */\n  constructor(private lang: CustomTranslateService) {\n    // window.navigator.language returns 'es-ES', we only need 'es'\n    this.browserLanguage = window.navigator.language.split('-')[0];\n    this.lang.use(this.browserLanguage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/login-form/login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n\n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            Constructs the LoginFormComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder service for building the form.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/access/login-form/login-form.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/login-form/login-form.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/login-form/login-form.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Event handler for form submission.\nEmits the user credentials through the onsubmit event emitter.\nResets the form after submission.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/login-form/login-form.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserCredentials } from 'src/app/core/interfaces/user-info';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent implements OnInit {\n  form: FormGroup;\n  @Output() onsubmit = new EventEmitter();\n\n  /**\n   * Constructs the LoginFormComponent.\n   * @param {FormBuilder} formBuilder - FormBuilder service for building the form.\n   */\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for form submission.\n   * Emits the user credentials through the onsubmit event emitter.\n   * Resets the form after submission.\n   */\n  onSub() {\n    this.onsubmit.emit(this.form?.value);\n    this.form.reset();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{'forms.email' | translate}}\n      \n      {{'errors.valid' | translate}}\n    \n  \n    \n      {{'forms.password' | translate}}\n      \n      {{'errors.valid' | translate}}\n    \n  \n    {{\"forms.logIn\" | translate}}\n  \n  \n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                div {\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    \n    \n    .mat-form-field {\n      width: 350px;\n      margin-bottom: 2rem;\n    }\n\n    button {\n      padding: 1rem;\n      border: none;\n      border-radius: 4px;\n      background-color: #0F212D;\n      color: white;\n      font-weight: bold;\n      cursor: pointer;\n      \n      &:hover {\n        background-color: #1b3e56;\n      }\n    \n      &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{\\'forms.email\\' | translate}}            {{\\'errors.valid\\' | translate}}                {{\\'forms.password\\' | translate}}            {{\\'errors.valid\\' | translate}}          {{\"forms.logIn\" | translate}}    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url_large\n                                        \n                                \n                                \n                                        \n                                            url_medium\n                                        \n                                \n                                \n                                        \n                                            url_small\n                                        \n                                \n                                \n                                        \n                                            url_thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_large:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_medium:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_small:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { MediaService } from '../../media.service';\n\nexport interface Media {\n  id: number;\n  url_small: string;\n  url_medium: string;\n  url_large: string;\n  url_thumbnail: string;\n}\n\nexport class FirebaseMediaService extends MediaService {\n  /**\n   * Constructs the FirebaseMediaService with a reference to FirebaseService.\n   * This service will be used to interact with Firebase's functionalities, particularly for uploading images.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(private firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\n   * The method is designed to handle the upload process asynchronously and emit the result as an array of Media.\n   * Each Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\n   *\n   * @param {Blob} blob - The file data to be uploaded, typically an image file.\n   * @returns {Observable} - An observable that emits an array containing the uploaded media information.\n   * If an error occurs during upload, the observable will emit an error.\n   */\n  public upload(blob: Blob): Observable {\n    return new Observable((obs) => {\n      this.firebase\n        .imageUpload(blob)\n        .then((data) => {\n          var imgs = [];\n          var media: any = data.file;\n          imgs.push(media);\n          obs.next(imgs);\n        })\n        .catch((error) => obs.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/media.service.ts:13\n                        \n                    \n\n\n            \n                \n                        Uploads a media blob.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe blob representing the media to upload.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the upload process.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class MediaService {\n  /**\n   * Uploads a media blob.\n   * @param {Blob} blob - The blob representing the media to upload.\n   * @returns {Observable} Observable emitting the result of the upload process.\n   */\n  public abstract upload(blob: Blob): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalCategoryComponent.html":{"url":"components/ModalCategoryComponent.html","title":"component - ModalCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/data/modal-category/modal-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-category\n            \n\n\n\n            \n                styleUrls\n                ./modal-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                mod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryInfo\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    categoryInfo\n                                \n                                \n                                    mode\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:37\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder - a service for creating and managing Angular forms.\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ModalController - a service for managing modal dialogs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryInfo\n                    \n                \n                \n                    \n                        Type :         CategoryInfo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:20\n                            \n                        \n                \n                    \n                        Sets the category information for the form.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:33\n                            \n                        \n                \n                    \n                        Sets the mode for the component.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Handler for cancel action.\nDismisses the modal without passing any data to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Handler for form submission.\nDismisses the modal and passes the updated user information to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        categoryInfo\n                    \n                \n\n\n                \n                    \n                        setcategoryInfo(category: CategoryInfo)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:20\n                                \n                            \n                    \n                        \n                                Sets the category information for the form.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                            \n                                                                            CategoryInfo\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    CategoryInfo - the category information to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n\n\n                \n                    \n                        setmode(m: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:33\n                                \n                            \n                    \n                        \n                                Sets the mode for the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            m\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    string - the mode to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\n\n@Component({\n  selector: 'app-modal-category',\n  templateUrl: './modal-category.component.html',\n  styleUrls: ['./modal-category.component.scss'],\n})\nexport class ModalCategoryComponent implements OnInit {\n  form: FormGroup;\n  mod: string = '';\n  \n  /**\n   * Sets the category information for the form.\n   *\n   * @param category CategoryInfo - the category information to be set.\n   */\n  @Input() set categoryInfo(category: CategoryInfo) {\n    if (category) {\n      this.form.controls['name'].setValue(category.name);\n      this.form.controls['description'].setValue(category.description);\n      this.form.controls['uuid'].setValue(category.uuid);\n    }\n  }\n\n  /**\n   * Sets the mode for the component.\n   *\n   * @param m string - the mode to be set.\n   */\n  @Input() set mode(m: string) {\n    if (m) {\n      this.mod = m;\n    }\n  }\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param formBuilder FormBuilder - a service for creating and managing Angular forms.\n   * @param modal ModalController - a service for managing modal dialogs.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      uuid: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Handler for form submission.\n   * Dismisses the modal and passes the updated user information to the parent component.\n   */\n  onSub() {\n    this.modal.dismiss(this.form.value);\n  }\n\n  /**\n   * Handler for cancel action.\n   * Dismisses the modal without passing any data to the parent component.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n    \n      {{'forms.update' | translate}}\n    \n    \n      {{'data.create' | translate}}\n    \n  \n\n\n\n  \n\n    \n      \n        {{ 'forms.name' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n    \n      \n        {{ 'forms.description' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      {{'forms.update' | translate}}\n      {{'data.create' | translate}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./modal-category.component.scss\n                \n                ion-icon {\n    color: #0f212d;\n  }\n  .form {\n    display: flex;\n    flex-direction: column;\n    padding: 5%;\n  \n    button {\n      padding: 1rem;\n      border: none;\n      border-radius: 4px;\n      background-color: #0f212d;\n      color: white;\n      font-weight: bold;\n      cursor: pointer;\n  \n      &:hover {\n        background-color: #1b3e56;\n      }\n  \n      &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n      }\n    }\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\\'forms.update\\' | translate}}              {{\\'data.create\\' | translate}}                          {{ \\'forms.name\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                                {{ \\'forms.description\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                    {{\\'forms.update\\' | translate}}      {{\\'data.create\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedData.html":{"url":"interfaces/PaginatedData.html","title":"interface - PaginatedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         Pagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pagination\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pageCount\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                passwordMatch\n                            \n                            \n                                    Static\n                                passwordProto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordMatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordMatch(passwordControlName: string, confirmControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:35\n                        \n                    \n\n\n            \n                \n                        Validates if password and confirm password match.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                passwordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the password control.\n\n\n                                            \n                                        \n                                        \n                                                confirmControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the confirm password control.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for password match validation.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordProto\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordProto(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:13\n                        \n                    \n\n\n            \n                \n                        Validates password according to a specified pattern.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe name of the control to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for password validation.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbstractControl,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\nexport class PasswordValidation {\n  /**\n   * Validates password according to a specified pattern.\n   * @param {string} controlName - The name of the control to validate.\n   * @returns {ValidatorFn} Validator function for password validation.\n   */\n  public static passwordProto(controlName: string = ''): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      let password = '';\n      if (control instanceof FormControl) password = control?.value;\n      else password = control.get(controlName)?.value;\n      if (\n        password &&\n        !password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,}$/)\n      ) {\n        return { passwordProto: true };\n      } else {\n        return null;\n      }\n    };\n  }\n\n  /**\n   * Validates if password and confirm password match.\n   * @param {string} passwordControlName - The name of the password control.\n   * @param {string} confirmControlName - The name of the confirm password control.\n   * @returns {ValidatorFn} Validator function for password match validation.\n   */\n  public static passwordMatch(\n    passwordControlName: string,\n    confirmControlName: string\n  ): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const password = control.get(passwordControlName)?.value;\n      const confirmPassword = control.get(confirmControlName)?.value;\n\n      if (password != confirmPassword) {\n        let errors = control?.errors;\n        if (errors && typeof errors === 'object') {\n          Object.assign(errors, {\n            passwordMatch: true,\n          });\n        } else {\n          errors = {\n            passwordMatch: true,\n          };\n        }\n        return errors;\n      } else {\n        let errors = control?.errors;\n        if (errors && typeof errors === 'object') {\n          if (errors['passwordMatch']) delete errors['passwordMatch'];\n        }\n        return control.errors;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Photo.html":{"url":"interfaces/Photo.html","title":"interface - Photo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url_large\n                                        \n                                \n                                \n                                        \n                                            url_medium\n                                        \n                                \n                                \n                                        \n                                            url_small\n                                        \n                                \n                                \n                                        \n                                            url_thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_large:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_medium:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_small:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PictureSelectableComponent.html":{"url":"components/PictureSelectableComponent.html","title":"component - PictureSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PictureSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PICTURE_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-picture-selectable\n            \n\n\n\n            \n                styleUrls\n                ./picture-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./picture-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _picture\n                            \n                            \n                                hasValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                picture$\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePicture\n                            \n                            \n                                close\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePicture\n                            \n                            \n                                onDeletePicture\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pictureModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of PictureSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pictureModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for managing modal windows.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePicture\n                        \n                    \n                \n            \n            \n                \nchangePicture(picture: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Changes the selected picture.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new picture value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Closes the picture modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:35\n                        \n                    \n\n\n            \n                \n                        This method is called when the component is being destroyed. It ensures\nthat any subscriptions to the BehaviorSubject for the selected picture are properly\nterminated by completing the BehaviorSubject, preventing potential memory leaks.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangePicture\n                        \n                    \n                \n            \n            \n                \nonChangePicture(event: Event, fileLoader: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Event handler for changing the picture by uploading a file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event triggering the picture change.\n\n\n                                            \n                                        \n                                        \n                                                fileLoader\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HTML input element for file uploading.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeletePicture\n                        \n                    \n                \n            \n            \n                \nonDeletePicture(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Event handler for deleting the selected picture.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event triggering the picture deletion.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating if the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _picture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        picture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._picture.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:44\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const PICTURE_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-picture-selectable',\n  templateUrl: './picture-selectable.component.html',\n  styleUrls: ['./picture-selectable.component.scss'],\n  providers: [PICTURE_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class PictureSelectableComponent implements OnInit {\n  private _picture = new BehaviorSubject('');\n  public picture$ = this._picture.asObservable();\n  isDisabled: boolean = false;\n  hasValue: boolean = false;\n\n  /**\n   * Creates an instance of PictureSelectableComponent.\n   * @param pictureModal - The ModalController for managing modal windows.\n   */\n  constructor(private pictureModal: ModalController) {}\n\n  /**\n   * This method is called when the component is being destroyed. It ensures\n   * that any subscriptions to the BehaviorSubject for the selected picture are properly\n   * terminated by completing the BehaviorSubject, preventing potential memory leaks.\n   */\n  ngOnDestroy(): void {\n    this._picture.complete();\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Writes a new value to the component.\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.hasValue = true;\n      this._picture.next(obj);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   * @param isDisabled - Boolean value indicating if the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  /**\n   * Changes the selected picture.\n   * @param picture - The new picture value.\n   */\n  changePicture(picture: string) {\n    this.hasValue = picture != '';\n    this._picture.next(picture);\n    this.propagateChange(picture);\n  }\n\n  /**\n   * Event handler for changing the picture by uploading a file.\n   * @param event - The event triggering the picture change.\n   * @param fileLoader - The HTML input element for file uploading.\n   */\n  onChangePicture(event: Event, fileLoader: HTMLInputElement) {\n    event.stopPropagation();\n    fileLoader.onchange = () => {\n      if (fileLoader.files && fileLoader.files?.length > 0) {\n        var file = fileLoader.files[0];\n        var reader = new FileReader();\n        reader.onload = () => {\n          this.changePicture(reader.result as string);\n        };\n        reader.onerror = (error) => {\n          console.log(error);\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    fileLoader.click();\n  }\n\n  /**\n   * Event handler for deleting the selected picture.\n   * @param event - The event triggering the picture deletion.\n   */\n  onDeletePicture(event: Event) {\n    event.stopPropagation();\n    this.changePicture('');\n  }\n\n  /**\n   * Closes the picture modal.\n   */\n  close() {\n    this.pictureModal?.dismiss();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n        \n    \n    \n        \n    \n  \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./picture-selectable.component.scss\n                \n                div.user-picture {\n    height: 200px;\n    width: 300px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  \n    ion-img {\n      width: 100%;\n      height: 100%;\n      align-items: center;\n      cursor: pointer;\n    }\n  \n    ion-button.picture-button {\n      margin: 0;\n      --padding-start: 0;\n      --padding-end: 0;\n  \n      .button-native {\n        padding: 0 !important;\n      }\n    }\n  }\n  \n  ion-modal.auto-height {\n    &.bottom {\n      align-items: flex-end;\n    }\n  \n    --height: auto;\n  \n    .ion-page {\n      position: relative;\n      display: block;\n      contain: content;\n  \n      .inner-content {\n        max-height: 80vh;\n        overflow: auto;\n        padding: 10px;\n      }\n    }\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PictureSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterFormComponent.html":{"url":"components/RegisterFormComponent.html","title":"component - RegisterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/register-form/register-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-form\n            \n\n\n\n            \n                styleUrls\n                ./register-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                hide\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:21\n                            \n                        \n\n                \n                    \n                            Constructs the RegisterFormComponent.\nInitializes the form with form controls and validators.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder service for building the form.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/access/register-form/register-form.component.ts:21\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/register-form/register-form.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/register-form/register-form.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Event handler for form submission.\nEmits the user registration information through the onsubmit event emitter.\nResets the form after submission.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { UserRegisterInfo } from 'src/app/core/interfaces/user-info';\nimport { EmailValidation } from 'src/app/core/validators/email';\nimport { PasswordValidation } from 'src/app/core/validators/password';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss'],\n})\nexport class RegisterFormComponent implements OnInit {\n  form: FormGroup;\n  hide = true;\n\n  @Output() onsubmit = new EventEmitter();\n\n  /**\n   * Constructs the RegisterFormComponent.\n   * Initializes the form with form controls and validators.\n   * @param {FormBuilder} formBuilder - FormBuilder service for building the form.\n   */\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group(\n      {\n        name: ['', [Validators.required]],\n        surname: ['', [Validators.required]],\n        email: ['', [Validators.required, EmailValidation.email()]],\n        username: ['', [Validators.required]],\n        password: [\n          '',\n          [Validators.required, PasswordValidation.passwordProto()],\n        ],\n        repPassword: [\n          '',\n          [Validators.required, PasswordValidation.passwordProto()],\n        ],\n      },\n      {\n        validators: [\n          PasswordValidation.passwordMatch('password', 'repPassword'),\n        ],\n      }\n    );\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for form submission.\n   * Emits the user registration information through the onsubmit event emitter.\n   * Resets the form after submission.\n   */\n  onSub() {\n    this.onsubmit.emit(this.form?.value);\n    this.form.reset({\n      name: '',\n      surname: '',\n      email: '',\n      username: '',\n      password: '',\n      repPassword: '',\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'forms.name' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.surname' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.email' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n    \n      {{ 'errors.emailError' | translate }}\n    \n  \n\n  \n    {{ 'forms.username' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.password' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n  \n  \n    {{ 'forms.repPassword' | translate }}\n    \n    \n      {{ hide ? 'visibility_off' : 'visibility' }}\n    \n    \n      {{ 'errors.repeatError' | translate }}\n    \n  \n\n  {{ \"forms.register\" | translate }}\n\n    \n\n    \n                \n                    ./register-form.component.scss\n                \n                form {\n  margin-top: 8%;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  .register--button {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n  }\n}\n\n@media (max-width: 900px) {\n  div {\n    margin-top: 30%;\n  }\n  .access__image {\n      display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'forms.name\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.surname\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.email\\' | translate }}              {{ \\'errors.valid\\' | translate }}              {{ \\'errors.emailError\\' | translate }}            {{ \\'forms.username\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.password\\' | translate }}              {{ \\'errors.valid\\' | translate }}              {{ \\'forms.repPassword\\' | translate }}              {{ hide ? \\'visibility_off\\' : \\'visibility\\' }}              {{ \\'errors.repeatError\\' | translate }}        {{ \"forms.register\" | translate }}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/settings/settings.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/settings/settings.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  HOLA SETTINGS\n\n\n    \n\n    \n                \n                    ./settings.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  HOLA SETTINGS'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageModule.html":{"url":"modules/SettingsPageModule.html","title":"module - SettingsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\ncluster_SettingsPageModule_imports\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nSettingsPageRoutingModule\n\nSettingsPageRoutingModule\n\nSettingsPageModule -->\n\nSettingsPageRoutingModule->SettingsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageRoutingModule.html":{"url":"modules/SettingsPageRoutingModule.html","title":"module - SettingsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\n\nCategoriesInfoComponent\n\nCategoriesInfoComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCategoriesInfoComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nIncidentsCircleGraphicComponent\n\nIncidentsCircleGraphicComponent\n\nSharedModule -->\n\nIncidentsCircleGraphicComponent->SharedModule\n\n\n\n\n\nIncidentsInfoComponent\n\nIncidentsInfoComponent\n\nSharedModule -->\n\nIncidentsInfoComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nUserCircleGraphicComponent\n\nUserCircleGraphicComponent\n\nSharedModule -->\n\nUserCircleGraphicComponent->SharedModule\n\n\n\n\n\nUsersInfoComponent\n\nUsersInfoComponent\n\nSharedModule -->\n\nUsersInfoComponent->SharedModule\n\n\n\n\n\nCategoriesInfoComponent \n\nCategoriesInfoComponent \n\nCategoriesInfoComponent  -->\n\nSharedModule->CategoriesInfoComponent \n\n\n\n\n\nConfirmDialogComponent \n\nConfirmDialogComponent \n\nConfirmDialogComponent  -->\n\nSharedModule->ConfirmDialogComponent \n\n\n\n\n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent  -->\n\nSharedModule->IncidentsCircleGraphicComponent \n\n\n\n\n\nIncidentsInfoComponent \n\nIncidentsInfoComponent \n\nIncidentsInfoComponent  -->\n\nSharedModule->IncidentsInfoComponent \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent  -->\n\nSharedModule->UserCircleGraphicComponent \n\n\n\n\n\nUsersInfoComponent \n\nUsersInfoComponent \n\nUsersInfoComponent  -->\n\nSharedModule->UsersInfoComponent \n\n\n\n\n\nShortenTextPipe\n\nShortenTextPipe\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategoriesInfoComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            IncidentsCircleGraphicComponent\n                        \n                        \n                            IncidentsInfoComponent\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            UserCircleGraphicComponent\n                        \n                        \n                            UsersInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ShortenTextPipe\n                        \n                        \n                            ShortenTextPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoriesInfoComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            IncidentsCircleGraphicComponent\n                        \n                        \n                            IncidentsInfoComponent\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            UserCircleGraphicComponent\n                        \n                        \n                            UsersInfoComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { IonicModule } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from '../core/translate/translate';\nimport { UsersInfoComponent } from './components/users-info/users-info.component';\nimport { ShortenTextPipe } from '../core/pipes/shorten-text.pipe';\nimport { PictureSelectableComponent } from './components/picture-selectable/picture-selectable.component';\nimport { IncidentsInfoComponent } from './components/incidents-info/incidents-info.component';\nimport { CategoriesInfoComponent } from './components/categories-info/categories-info.component';\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ChartModule } from 'primeng/chart';\nimport { UserCircleGraphicComponent } from './components/user-circle-graphic/user-circle-graphic.component';\nimport { IncidentsCircleGraphicComponent } from './components/incidents-circle-graphic/incidents-circle-graphic.component';\n\n\n@NgModule({\n  declarations: [\n    UsersInfoComponent,\n    PictureSelectableComponent,\n    IncidentsInfoComponent,\n    CategoriesInfoComponent,\n    ConfirmDialogComponent,\n    UserCircleGraphicComponent,\n    IncidentsCircleGraphicComponent\n  ],\n  imports: [\n    CommonModule,\n    ChartModule,\n    IonicModule.forRoot(), \n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ShortenTextPipe,\n    ShortenTextPipe,\n    MatDialogModule,\n    MatButtonModule\n  ],\n  exports: [\n    UsersInfoComponent,\n    PictureSelectableComponent,\n    IncidentsInfoComponent,\n    CategoriesInfoComponent,\n    ConfirmDialogComponent,\n    UserCircleGraphicComponent,\n    IncidentsCircleGraphicComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShortenTextPipe.html":{"url":"pipes/ShortenTextPipe.html","title":"pipe - ShortenTextPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ShortenTextPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/shorten-text.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        shortenText\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | undefined, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/shorten-text.pipe.ts:23\n                        \n                    \n\n\n            \n                \n                        The function \"transform\" takes a string value and limits its length to a specified number, adding\nellipsis if necessary.\ntransformed.\nreturned by the transform function. If the length of the value string is greater than the\nlimit, the function will truncate the string to the limit length and append a period ('.') at\nthe end\ndefault value of 15. It checks if the length of the value is greater than the limit. If it is,\nit returns a substring of the value up to the limit followed by a period. If the length of the\nvalue is not greater than the\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The value parameter is a string that represents the input value that will be\ntransformed.\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    6\n                                            \n\n                                            \n                                                    The limit parameter specifies the maximum length of the string that will be\nreturned by the transform function. If the length of the value string is greater than the\nlimit, the function will truncate the string to the limit length and append a period ('.') at\nthe end\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                The function transform takes a string value and an optional number limit with a\ndefault value of 15. It checks if the length of the value is greater than the limit. If it is,\nit returns a substring of the value up to the limit followed by a period. If the length of the\nvalue is not greater than the\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'shortenText',\n  standalone: true,\n})\nexport class ShortenTextPipe implements PipeTransform {\n  /**\n   * The function \"transform\" takes a string value and limits its length to a specified number, adding\n   * ellipsis if necessary.\n   *\n   * @param value The `value` parameter is a string that represents the input value that will be\n   * transformed.\n   * @param limit The `limit` parameter specifies the maximum length of the string that will be\n   * returned by the `transform` function. If the length of the `value` string is greater than the\n   * `limit`, the function will truncate the string to the `limit` length and append a period ('.') at\n   * the end\n   * @return The function `transform` takes a string `value` and an optional number `limit` with a\n   * default value of 15. It checks if the length of the `value` is greater than the `limit`. If it is,\n   * it returns a substring of the `value` up to the `limit` followed by a period. If the length of the\n   * `value` is not greater than the\n   */\n  transform(value: string | undefined, limit: number = 6): string | undefined {\n    return value!.length > limit ? value!.substring(0, limit) + '...' : value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateUserComponent.html":{"url":"components/UpdateUserComponent.html","title":"component - UpdateUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-data/update-user/update-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-user\n            \n\n\n\n            \n                styleUrls\n                ./update-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userInfo\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:28\n                            \n                        \n\n                \n                    \n                            Creates an instance of UpdateUserComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FormBuilder service for building form instances.\n\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for managing modal windows.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userInfo\n                    \n                \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/user-data/update-user/update-user.component.ts:19\n                            \n                        \n                \n                    \n                        Setter method for setting user information to be edited.\nPopulates the form fields with the provided user information.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Handler for cancel action.\nDismisses the modal without passing any data to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Handler for form submission.\nDismisses the modal and passes the updated user information to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userInfo\n                    \n                \n\n\n                \n                    \n                        setuserInfo(user: UserInfo)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/user-data/update-user/update-user.component.ts:19\n                                \n                            \n                    \n                        \n                                Setter method for setting user information to be edited.\nPopulates the form fields with the provided user information.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            user\n                                                    \n                                                            \n                                                                            UserInfo\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe user information to be edited.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.scss'],\n})\nexport class UpdateUserComponent implements OnInit {\n  form: FormGroup;\n\n  /**\n   * Setter method for setting user information to be edited.\n   * Populates the form fields with the provided user information.\n   * @param user - The user information to be edited.\n   */\n  @Input() set userInfo(user: UserInfo) {\n    if (user) {\n      this.form.controls['picture'].setValue(user.picture);\n      this.form.controls['name'].setValue(user.name);\n      this.form.controls['surname'].setValue(user.surname);\n      this.form.controls['username'].setValue(user.username);\n      this.form.controls['uuid'].setValue(user.uuid);\n      this.form.controls['role'].setValue(user.role);\n    }\n  }\n\n  /**\n   * Creates an instance of UpdateUserComponent.\n   * @param formBuilder - The FormBuilder service for building form instances.\n   * @param modal - The ModalController for managing modal windows.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController\n  ) {\n    this.form = this.formBuilder.group({\n      picture: ['', [Validators.required]],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      username: ['', [Validators.required]],\n      role: ['', [Validators.required]],\n      uuid: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Handler for form submission.\n   * Dismisses the modal and passes the updated user information to the parent component.\n   */\n  onSub() {\n    this.modal.dismiss(this.form.value);\n  }\n\n  /**\n   * Handler for cancel action.\n   * Dismisses the modal without passing any data to the parent component.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n    \n      {{'forms.update' | translate}}\n    \n  \n\n\n\n  \n      \n\n    \n      \n        {{ 'forms.name' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n    \n      \n        {{ 'forms.surname' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      \n        {{ 'forms.username' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      \n        {{'forms.role' | translate}}\n        \n          {{'forms.admin' | translate}}\n          {{'forms.user' | translate}}\n        \n      \n\n      {{'forms.update' | translate}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./update-user.component.scss\n                \n                ion-icon {\n  color: #0F212D;\n}\n.form {\n  display: flex;\n  flex-direction: column;\n  padding: 2%;\n\n\n  button {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\\'forms.update\\' | translate}}                                {{ \\'forms.name\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                                {{ \\'forms.surname\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                            {{ \\'forms.username\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                            {{\\'forms.role\\' | translate}}                  {{\\'forms.admin\\' | translate}}          {{\\'forms.user\\' | translate}}                    {{\\'forms.update\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCircleGraphicComponent.html":{"url":"components/UserCircleGraphicComponent.html","title":"component - UserCircleGraphicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserCircleGraphicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-circle-graphic\n            \n\n\n\n            \n                styleUrls\n                ./user-circle-graphic.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-circle-graphic.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:14\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Initializes the component and fetches user data from Firebase to generate a chart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { forkJoin, map, switchMap } from 'rxjs';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-user-circle-graphic',\n  templateUrl: './user-circle-graphic.component.html',\n  styleUrls: ['./user-circle-graphic.component.scss'],\n})\nexport class UserCircleGraphicComponent  implements OnInit {\n\n  data: any;\n  options: any;\n\n  /**\n  * Constructs a component constructor function.\n  * \n  * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n  * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n  */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private translate: CustomTranslateService\n  ) { }\n\n  /**\n  * Initializes the component and fetches user data from Firebase to generate a chart.\n  */\n  ngOnInit() {\n    this._firebaseService.users$.pipe(\n      map(users => {\n        const rolesCount = users.reduce((acc: any, user: any) => {\n          acc[user.role] = (acc[user.role] || 0) + 1;\n          return acc;\n        }, {});\n        const roles = Object.keys(rolesCount);\n        return { roles, rolesCount };\n      }),\n      switchMap(({ roles, rolesCount }) => {\n        return forkJoin(\n          roles.map(role => this.translate.get(`forms.${role}`))\n        ).pipe(\n          map(translations => ({\n            labels: translations,\n            datasets: [{\n              data: roles.map(role => rolesCount[role]),\n              backgroundColor: ['#42A5F5', '#66BB6A'],\n              hoverBackgroundColor: ['#64B5F6', '#81C784']\n            }]\n          }))\n        );\n      })\n    ).subscribe(chartData => {\n      this.data = chartData;\n      this.options = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#495057'\n            }\n          }\n        }\n      };\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./user-circle-graphic.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserCircleGraphicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCredentials.html":{"url":"interfaces/UserCredentials.html","title":"interface - UserCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDataPage.html":{"url":"components/UserDataPage.html","title":"component - UserDataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserDataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-data/user-data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-data\n            \n\n\n\n            \n                styleUrls\n                ./user-data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, userService: UsersService, _router: Router, myModal: ModalController, media: MediaService, _firebaseSvc: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-data/user-data.page.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserDataPage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ActivatedRoute service to get URL parameters.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService to manage user data.\n\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Router service for page navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe modal controller to display and control modal windows.\n\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe MediaService for handling media operations.\n\n\n                                                        \n                                                \n                                                \n                                                        _firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/user-data.page.ts:44\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nSubscribes to changes in URL parameters to get the user ID\nand load corresponding user data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/user-data.page.ts:65\n                        \n                    \n\n\n            \n                \n                        Method to update user data.\nOpens a modal for editing user data and updates the data\non the server once the editing is confirmed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/user-data.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/user-data.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { User } from 'firebase/auth';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { MediaService } from 'src/app/core/services/media.service';\nimport { UpdateUserComponent } from './update-user/update-user.component';\n\n@Component({\n  selector: 'app-user-data',\n  templateUrl: './user-data.page.html',\n  styleUrls: ['./user-data.page.scss'],\n})\nexport class UserDataPage implements OnInit {\n  userId: string | null = '';\n  user: any | undefined;\n\n  /**\n   * Creates an instance of UserDataPage.\n   * @param route - The ActivatedRoute service to get URL parameters.\n   * @param userService - The UsersService to manage user data.\n   * @param _router - The Router service for page navigation.\n   * @param myModal - The modal controller to display and control modal windows.\n   * @param media - The MediaService for handling media operations.\n   * @param _firebaseSvc - The FirebaseService for interacting with Firebase.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UsersService,\n    private _router: Router,\n    private myModal: ModalController,\n    private media: MediaService,\n    private _firebaseSvc: FirebaseService\n  ) {}\n\n  /**\n   * Method executed when the component is initialized.\n   * Subscribes to changes in URL parameters to get the user ID\n   * and load corresponding user data.\n   */\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.userId = params.get('id');\n      if (this.userId) {\n        this.userService.getUserById(this.userId).subscribe((user) => {\n          if (user) {\n            this.user = user;\n          } else {\n            console.log('User not found!');\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Method to update user data.\n   * Opens a modal for editing user data and updates the data\n   * on the server once the editing is confirmed.\n   * @param user - The updated user information.\n   */\n  async updateUser(user: UserInfo) {\n    const mod = await this.myModal.create({\n      component: UpdateUserComponent,\n      componentProps: {\n        userInfo: user,\n      },\n      cssClass: 'modalDesign',\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      console.log(results.data);\n      if (results?.data?.picture) {\n        if (results?.data?.picture?.substring(0, 4) == 'data') {\n          dataURLtoBlob(results.data.picture, (blob: Blob) => {\n            this.media.upload(blob).subscribe((media: number[]) => {\n              results.data.picture = media[0];\n              this.userService.updateUser(results.data);\n            });\n          });\n          this._router.navigate(['/data']);\n        } else {\n          results.data.picture = user.picture;\n          this.userService.updateUser(results.data);\n          this._router.navigate(['/data']);\n        }\n      } else {\n        results.data.picture = '';\n        this.userService.updateUser(results.data);\n        this._router.navigate(['/data']);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n\n        {{user.name}} {{user.surname}}\n\n        {{user.username}}\n\n        {{'forms.user' | translate}}\n        {{'forms.admin' | translate}}\n\n        {{\"data.update\" | translate}}\n       \n    \n  \n\n    \n\n    \n                \n                    ./user-data.page.scss\n                \n                .user {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--username {\n        margin: 0;\n    }\n\n    &--role {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n    \n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{user.name}} {{user.surname}}        {{user.username}}        {{\\'forms.user\\' | translate}}        {{\\'forms.admin\\' | translate}}        {{\"data.update\" | translate}}             '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserDataPageModule.html":{"url":"modules/UserDataPageModule.html","title":"module - UserDataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    UserDataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserDataPageModule\n\n\n\ncluster_UserDataPageModule_imports\n\n\n\ncluster_UserDataPageModule_declarations\n\n\n\n\nUpdateUserComponent\n\nUpdateUserComponent\n\n\n\nUserDataPageModule\n\nUserDataPageModule\n\nUserDataPageModule -->\n\nUpdateUserComponent->UserDataPageModule\n\n\n\n\n\nUserDataPage\n\nUserDataPage\n\nUserDataPageModule -->\n\nUserDataPage->UserDataPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUserDataPageModule -->\n\nSharedModule->UserDataPageModule\n\n\n\n\n\nUserDataPageRoutingModule\n\nUserDataPageRoutingModule\n\nUserDataPageModule -->\n\nUserDataPageRoutingModule->UserDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/user-data/user-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UpdateUserComponent\n                        \n                        \n                            UserDataPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UserDataPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserDataPageRoutingModule } from './user-data-routing.module';\n\nimport { UserDataPage } from './user-data.page';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    // Reactive form\n    ReactiveFormsModule,\n    IonicModule,\n    UserDataPageRoutingModule, \n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    SharedModule\n  ],\n  declarations: [\n    UserDataPage,\n    UpdateUserComponent\n  ]\n})\nexport class UserDataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserDataPageRoutingModule.html":{"url":"modules/UserDataPageRoutingModule.html","title":"module - UserDataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserDataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/user-data/user-data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserDataPage } from './user-data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserDataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserDataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRegisterInfo.html":{"url":"interfaces/UserRegisterInfo.html","title":"interface - UserRegisterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRegisterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersInfoComponent.html":{"url":"components/UsersInfoComponent.html","title":"component - UsersInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/users-info/users-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-info\n            \n\n\n\n            \n                styleUrls\n                ./users-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScreenSmall\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                dataUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:21\n                            \n                        \n\n                \n                    \n                            The constructor function takes a Router object as a parameter and assigns it to a private property\nin a TypeScript class.\ninjection that allows the class to navigate between different components in the Angular\napplication.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is of type Router. It is a dependency\ninjection that allows the class to navigate between different components in the Angular\napplication.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        users\n                    \n                \n                \n                    \n                        Type :         UserInfo[] | null | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/users-info/users-info.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onUserClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/users-info/users-info.component.ts:21\n                            \n                        \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataUser\n                        \n                    \n                \n            \n            \n                \ndataUser(userId: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Emits an event when a user is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string | undefined - the ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\n\n@Component({\n  selector: 'app-users-info',\n  templateUrl: './users-info.component.html',\n  styleUrls: ['./users-info.component.scss'],\n})\nexport class UsersInfoComponent implements OnInit {\n  isScreenSmall: boolean = false;\n\n  @Input() users: UserInfo[] | null | undefined;\n  @Output() onUserClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * The constructor function takes a Router object as a parameter and assigns it to a private property\n   * in a TypeScript class.\n   *\n   * @param router The `router` parameter in the constructor is of type `Router`. It is a dependency\n   * injection that allows the class to navigate between different components in the Angular\n   * application.\n   */\n  constructor(private router: Router) {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Emits an event when a user is clicked.\n   *\n   * @param userId string | undefined - the ID of the user.\n   */\n  dataUser(userId: string | undefined) {\n    this.onUserClicked.emit(userId);\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n  \n\n  \n    {{'forms.name' | translate }}\n    {{'forms.surname' | translate }}\n    {{'forms.username' | translate }}\n    {{'forms.role' | translate }}\n  \n\n  \n    {{ user.name | shortenText }}\n    {{ user.name }}\n\n    {{ user.surname | shortenText }}\n    {{ user.surname }}\n\n    {{ user.username | shortenText }}\n    {{ user.username }}\n\n    {{'forms.user' | translate}}\n    {{'forms.user' | translate | shortenText }}\n\n    {{'forms.admin' | translate}}\n    {{'forms.admin' | translate | shortenText }}\n\n  \n\n    \n\n    \n                \n                    ./users-info.component.scss\n                \n                ion-list {\n    width: 80%;\n    margin: 3% auto;\n\n    ion-list-header {\n        --background: #0F212D;\n        --color: #fff;\n    }\n\n    .subheader {\n        ion-label {\n          font-weight: bold;\n        }\n    }\n\n    .data {\n        cursor: pointer;\n        position: relative;\n        border-top: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n\n        &:hover {\n            border-color: #0F212D;\n        }\n    }\n}\n\n@media (max-width: 900px) {\n    .subheader {\n        ion-label {\n          margin-left: 0.2%;\n        }\n    }\n}\n\n@media (max-width: 700px) {\n    ion-list {\n        width: 100%;\n        margin-top: 5%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}        {{\\'forms.name\\' | translate }}    {{\\'forms.surname\\' | translate }}    {{\\'forms.username\\' | translate }}    {{\\'forms.role\\' | translate }}        {{ user.name | shortenText }}    {{ user.name }}    {{ user.surname | shortenText }}    {{ user.surname }}    {{ user.username | shortenText }}    {{ user.username }}    {{\\'forms.user\\' | translate}}    {{\\'forms.user\\' | translate | shortenText }}    {{\\'forms.admin\\' | translate}}    {{\\'forms.admin\\' | translate | shortenText }}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserById\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor function initializes a private firebaseService property using dependency\ninjection.\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The firebaseService parameter is an instance of the FirebaseService\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:32\n                        \n                    \n\n\n            \n                \n                        The function getUserById retrieves user information by user ID from a Firebase service and\nreturns it as an observable stream.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The userId parameter is a string that represents the unique identifier of a user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable of type UserInfo or undefined is being returned.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(data: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:46\n                        \n                    \n\n\n            \n                \n                        The updateUser function in TypeScript updates user information using an authentication service.\ncontains information about the user that needs to be updated, such as their name, email, or other\nprofile details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data parameter in the updateUser function is of type UserInfo. It likely\ncontains information about the user that needs to be updated, such as their name, email, or other\nprofile details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserInfo } from '../../interfaces/user-info';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { take, map, Observable } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  /**\n   * The constructor function initializes a private firebaseService property using dependency\n   * injection.\n   *\n   * @param firebaseService The `firebaseService` parameter is an instance of the `FirebaseService`\n   * class that is being injected into the constructor using Angular's dependency injection mechanism.\n   * This allows the component or service to have access to the functionality provided by the\n   * `FirebaseService` class.\n   */\n  constructor(\n    private firebaseService: FirebaseService,\n    private auth: AuthService\n  ) {}\n\n  /**\n   * The function `getUserById` retrieves user information by user ID from a Firebase service and\n   * returns it as an observable stream.\n   *\n   * @param userId The `userId` parameter is a string that represents the unique identifier of a user.\n   * @return An Observable of type UserInfo or undefined is being returned.\n   */\n  getUserById(userId: string): Observable {\n    return this.firebaseService.users$.pipe(\n      take(1),\n      map((users) => users.find((user) => user.uuid === userId))\n    );\n  }\n\n  /**\n   * The `updateUser` function in TypeScript updates user information using an authentication service.\n   *\n   * @param data The `data` parameter in the `updateUser` function is of type `UserInfo`. It likely\n   * contains information about the user that needs to be updated, such as their name, email, or other\n   * profile details.\n   */\n  updateUser(data: UserInfo) {\n    this.auth.updateUser(data).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            AuthServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            httpProviderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            MediaServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/helpers/blob.ts\n            \n            function\n            dataURLtoBlob\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/category-info.ts\n            \n            interface\n            CategoryInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            PaginatedData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            Photo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/incidents-info.ts\n            \n            interface\n            incidentInfo\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserCredentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserRegisterInfo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/pipes/capitalize-initial.pipe.ts\n            \n            pipe\n            CapitalizeInitialPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/shorten-text.pipe.ts\n            \n            pipe\n            ShortenTextPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/core/services/api/incidents.service.ts\n            \n            injectable\n            IncidentsService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/services/api/users.service.ts\n            \n            injectable\n            UsersService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-auth.service.ts\n            \n            class\n            FirebaseAuthService\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-data.service.ts\n            \n            class\n            FirebaseDataService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-media.service.ts\n            \n            class\n            FirebaseMediaService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-media.service.ts\n            \n            interface\n            Media\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            injectable\n            FirebaseService\n            \n                59 %\n                (22/37)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseDocument\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseStorageFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseUserCredential\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client-web.provider.ts\n            \n            injectable\n            HttpClientWebProvider\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client.provider.ts\n            \n            injectable\n            HttpClientProvider\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/services/media.service.ts\n            \n            injectable\n            MediaService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/services/translate/local.service.ts\n            \n            injectable\n            LocalService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/services/translate/translate.service.ts\n            \n            injectable\n            CustomTranslateService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/core/translate/translate.ts\n            \n            function\n            createTranslateLoader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/email.ts\n            \n            class\n            EmailValidation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/password.ts\n            \n            class\n            PasswordValidation\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/access/access.page.ts\n            \n            component\n            AccessPage\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/pages/access/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/pages/access/register-form/register-form.component.ts\n            \n            component\n            RegisterFormComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/pages/data/data.page.ts\n            \n            component\n            DataPage\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/pages/data/modal-category/modal-category.component.ts\n            \n            component\n            ModalCategoryComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/pages/incident-data/incident-data.page.ts\n            \n            component\n            IncidentDataPage\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/pages/settings/settings.page.ts\n            \n            component\n            SettingsPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/user-data/update-user/update-user.component.ts\n            \n            component\n            UpdateUserComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/pages/user-data/user-data.page.ts\n            \n            component\n            UserDataPage\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/categories-info/categories-info.component.ts\n            \n            component\n            CategoriesInfoComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts\n            \n            component\n            IncidentsCircleGraphicComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/incidents-info/incidents-info.component.ts\n            \n            component\n            IncidentsInfoComponent\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            component\n            PictureSelectableComponent\n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            variable\n            PICTURE_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts\n            \n            component\n            UserCircleGraphicComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/users-info/users-info.component.ts\n            \n            component\n            UsersInfoComponent\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.2\n        \n            @angular/cdk : ^17.3.3\n        \n            @angular/common : ^17.0.2\n        \n            @angular/compiler : ^17.0.2\n        \n            @angular/core : ^17.0.2\n        \n            @angular/forms : ^17.0.2\n        \n            @angular/material : ^17.3.3\n        \n            @angular/platform-browser : ^17.0.2\n        \n            @angular/platform-browser-dynamic : ^17.0.2\n        \n            @angular/router : ^17.0.2\n        \n            @capacitor/android : 5.7.4\n        \n            @capacitor/app : 5.0.7\n        \n            @capacitor/core : 5.7.4\n        \n            @capacitor/haptics : 5.0.7\n        \n            @capacitor/keyboard : 5.0.8\n        \n            @capacitor/status-bar : 5.0.7\n        \n            @fortawesome/fontawesome-svg-core : ^6.5.2\n        \n            @fortawesome/free-solid-svg-icons : ^6.5.2\n        \n            @ionic/angular : ^7.0.0\n        \n            @lottiefiles/lottie-player : ^2.0.4\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            chart.js : ^4.4.3\n        \n            firebase : ^10.10.0\n        \n            ionicons : ^7.0.0\n        \n            lottie-web : ^5.12.2\n        \n            ngx-lottie : ^11.0.2\n        \n            papaparse : ^5.4.1\n        \n            primeng : ^17.13.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../translate.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../blob.ts)\n                        \n                        \n                            httpProviderFactory   (src/.../app.module.ts)\n                        \n                        \n                            MediaServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthServiceFactory\n                        \n                    \n                \n            \n            \n                \nAuthServiceFactory(backend: string, firebase: FirebaseService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpProviderFactory\n                        \n                    \n                \n            \n            \n                \nhttpProviderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MediaServiceFactory\n                        \n                    \n                \n            \n            \n                \nMediaServiceFactory(backend: string, firebase: FirebaseService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/translate/translate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n                        Function to create a loader for translation files.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nHttpClient instance used for loading translation files.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/helpers/blob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataUrl: string, callback)\n                \n            \n\n\n\n\n            \n                \n                        The function dataURLtoBlob converts a data URL to a Blob object and provides the Blob through a\ncallback function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The dataUrl parameter in the dataURLtoBlob function is a string that represents a\ndata URL. Data URLs are URLs that contain data, such as base64 encoded images or other resources,\ndirectly within the URL string.\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The callback parameter is a function that will be called once the operation is\ncompleted. It takes a Blob object as its argument. You can pass a function to the dataURLtoBlob\nfunction as the callback parameter to handle the Blob object once it is created\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/incidentInfo.html":{"url":"interfaces/incidentInfo.html","title":"interface - incidentInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  incidentInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/incidents-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            resolved\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         Photo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resolved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\nimport { Photo } from \"./data\";\n\nexport interface incidentInfo {\n    checked: boolean,\n    date: Timestamp,\n    description: string,\n    image: Photo,\n    resolved: boolean,\n    title: string,\n    userId: string,\n    uuid: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\ncluster_AccessPageModule\n\n\n\ncluster_AccessPageModule_declarations\n\n\n\ncluster_AccessPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DataPageModule\n\n\n\ncluster_DataPageModule_declarations\n\n\n\ncluster_DataPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_IncidentDataPageModule\n\n\n\ncluster_IncidentDataPageModule_declarations\n\n\n\ncluster_IncidentDataPageModule_imports\n\n\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\ncluster_SettingsPageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_UserDataPageModule\n\n\n\ncluster_UserDataPageModule_declarations\n\n\n\ncluster_UserDataPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nAccessPage\n\nAccessPage\n\n\n\nAccessPageModule\n\nAccessPageModule\n\nAccessPageModule -->\n\nAccessPage->AccessPageModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAccessPageModule -->\n\nLoginFormComponent->AccessPageModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAccessPageModule -->\n\nRegisterFormComponent->AccessPageModule\n\n\n\n\n\nAccessPageRoutingModule\n\nAccessPageRoutingModule\n\nAccessPageModule -->\n\nAccessPageRoutingModule->AccessPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAccessPageModule -->\n\nSharedModule->AccessPageModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDataPageModule\n\nDataPageModule\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\nCategoriesInfoComponent \n\nCategoriesInfoComponent \n\nCategoriesInfoComponent  -->\n\nSharedModule->CategoriesInfoComponent \n\n\n\n\n\nConfirmDialogComponent \n\nConfirmDialogComponent \n\nConfirmDialogComponent  -->\n\nSharedModule->ConfirmDialogComponent \n\n\n\n\n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent  -->\n\nSharedModule->IncidentsCircleGraphicComponent \n\n\n\n\n\nIncidentsInfoComponent \n\nIncidentsInfoComponent \n\nIncidentsInfoComponent  -->\n\nSharedModule->IncidentsInfoComponent \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent  -->\n\nSharedModule->UserCircleGraphicComponent \n\n\n\n\n\nUsersInfoComponent \n\nUsersInfoComponent \n\nUsersInfoComponent  -->\n\nSharedModule->UsersInfoComponent \n\n\n\n\n\nUserDataPageModule\n\nUserDataPageModule\n\nUserDataPageModule -->\n\nSharedModule->UserDataPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCapitalizeInitialPipe\n\nCapitalizeInitialPipe\n\nAppModule -->\n\nCapitalizeInitialPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDataPage\n\nDataPage\n\nDataPageModule -->\n\nDataPage->DataPageModule\n\n\n\n\n\nModalCategoryComponent\n\nModalCategoryComponent\n\nDataPageModule -->\n\nModalCategoryComponent->DataPageModule\n\n\n\n\n\nDataPageRoutingModule\n\nDataPageRoutingModule\n\nDataPageModule -->\n\nDataPageRoutingModule->DataPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nIncidentDataPage\n\nIncidentDataPage\n\n\n\nIncidentDataPageModule\n\nIncidentDataPageModule\n\nIncidentDataPageModule -->\n\nIncidentDataPage->IncidentDataPageModule\n\n\n\n\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageModule -->\n\nIncidentDataPageRoutingModule->IncidentDataPageModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nSettingsPageRoutingModule\n\nSettingsPageRoutingModule\n\nSettingsPageModule -->\n\nSettingsPageRoutingModule->SettingsPageModule\n\n\n\n\n\nCategoriesInfoComponent\n\nCategoriesInfoComponent\n\nSharedModule -->\n\nCategoriesInfoComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nIncidentsCircleGraphicComponent\n\nIncidentsCircleGraphicComponent\n\nSharedModule -->\n\nIncidentsCircleGraphicComponent->SharedModule\n\n\n\n\n\nIncidentsInfoComponent\n\nIncidentsInfoComponent\n\nSharedModule -->\n\nIncidentsInfoComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nUserCircleGraphicComponent\n\nUserCircleGraphicComponent\n\nSharedModule -->\n\nUserCircleGraphicComponent->SharedModule\n\n\n\n\n\nUsersInfoComponent\n\nUsersInfoComponent\n\nSharedModule -->\n\nUsersInfoComponent->SharedModule\n\n\n\n\n\nShortenTextPipe\n\nShortenTextPipe\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\n\n\nUpdateUserComponent\n\nUpdateUserComponent\n\nUserDataPageModule -->\n\nUpdateUserComponent->UserDataPageModule\n\n\n\n\n\nUserDataPage\n\nUserDataPage\n\nUserDataPageModule -->\n\nUserDataPage->UserDataPageModule\n\n\n\n\n\nUserDataPageRoutingModule\n\nUserDataPageRoutingModule\n\nUserDataPageModule -->\n\nUserDataPageRoutingModule->UserDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    19 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        24 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccessPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccessPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IncidentDataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IncidentDataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserDataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserDataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PICTURE_SELECTABLE_VALUE_ACCESSOR   (src/.../picture-selectable.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'TFCChato',\n  webDir: 'www',\n  server: {\n    androidScheme: 'https'\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDOnguE6cpcz6VKkf-RnI3RcpqS7Xmtbh4\",\n    authDomain: \"chato-a4ef9.firebaseapp.com\",\n    projectId: \"chato-a4ef9\",\n    storageBucket: \"chato-a4ef9.appspot.com\",\n    messagingSenderId: \"770666336001\",\n    appId: \"1:770666336001:web:96e7751d6f04cea0b39500\",\n    measurementId: \"G-Z70NCW6NLN\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDOnguE6cpcz6VKkf-RnI3RcpqS7Xmtbh4\",\n    authDomain: \"chato-a4ef9.firebaseapp.com\",\n    projectId: \"chato-a4ef9\",\n    storageBucket: \"chato-a4ef9.appspot.com\",\n    messagingSenderId: \"770666336001\",\n    appId: \"1:770666336001:web:96e7751d6f04cea0b39500\",\n    measurementId: \"G-Z70NCW6NLN\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PICTURE_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
