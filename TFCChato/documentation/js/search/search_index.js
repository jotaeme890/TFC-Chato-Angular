var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.248,1,0.971]],["body/components/AboutPage.html",[0,0.416,1,1.73,2,1.611,3,0.16,4,0.123,5,1.313,6,1.313,7,1.313,8,1.271,9,0.107,10,4.103,11,1.56,12,1.914,13,1.119,14,2.409,15,2.332,16,1.718,17,6.848,18,1.718,19,6.145,20,0.396,21,0.886,22,2.03,23,1.343,24,0.886,25,4.697,26,4.697,27,0.583,28,0.013,29,1.016,30,0.185,31,0.339,32,0.123,33,0.153,34,5.367,35,6.145,36,6.145,37,6.145,38,6.145,39,6.145,40,6.145,41,4.473,42,6.145,43,6.145,44,6.145,45,2.495,46,2.781,47,2.141,48,2.141,49,2.23,50,1.839,51,3.419,52,2.433,53,3.695,54,3.419,55,3.913,56,4.697,57,2.781,58,2.587,59,5.367,60,4.697,61,4.167,62,2.825,63,2.327,64,2.23,65,2.825,66,2.433,67,6.145,68,3.061,69,3.449,70,4.697,71,2.497,72,3,73,1.907,74,4.697,75,6.145,76,3.419,77,3.335,78,2.679,79,4.697,80,4.103,81,4.697,82,3.419,83,2.327,84,2.433,85,2.825,86,4.103,87,2.495,88,2.692,89,4.103,90,1.599,91,1.98,92,4.103,93,4.697,94,2.433,95,0.952,96,1.718,97,1.718,98,1.313,99,1.622,100,1.313,101,0.649,102,1.313,103,1.119,104,1.313,105,1.155,106,1.313,107,1.155,108,1.192,109,1.718,110,1.119,111,1.611,112,1.914,113,1.119,114,1.56,115,1.914,116,1.155,117,1.271,118,1.313,119,1.119,120,1.914,121,1.155,122,1.313,123,1.155,124,1.231,125,1.083,126,1.313,127,1.119,128,1.016,129,1.155,130,1.56,131,1.611,132,1.718,133,1.155,134,1.155,135,1.611,136,1.718,137,1.155,138,1.718,139,1.155,140,1.192,141,1.718,142,1.155,143,1.271,144,1.119,145,1.155,146,1.155,147,1.192,148,1.119,149,1.313,150,1.155,151,1.016,152,1.155,153,1.425,154,1.119,155,1.119,156,1.119,157,1.155,158,1.192,159,1.313,160,1.313,161,0.009,162,0.009]],["title/modules/AboutPageModule.html",[163,1.139,164,2.967]],["body/modules/AboutPageModule.html",[1,1.967,3,0.16,4,0.16,9,0.14,28,0.013,30,0.325,31,0.442,32,0.16,33,0.2,95,1.241,161,0.011,162,0.011,163,1.711,164,6.12,165,2.156,166,2.906,167,3.999,168,3.171,169,2.232,170,2.312,171,5.346,172,5.346,173,5.346,174,5.602,175,3.754,176,2.79,177,2.485,178,6.121,179,2.837,180,2.837,181,4.133,182,3.322,183,4.358,184,2.015,185,3.934,186,1.949,187,3.491,188,5.346]],["title/modules/AboutPageRoutingModule.html",[163,1.139,174,2.764]],["body/modules/AboutPageRoutingModule.html",[0,0.389,1,1.772,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,161,0.011,162,0.011,165,2.257,170,2.419,174,5.048,179,2.508,180,2.914,188,5.595,189,6.405,190,3.653,191,3.447,192,4.245,193,2.181,194,1.679,195,3.041,196,3.852]],["title/components/AccessPage.html",[0,0.248,103,0.971]],["body/components/AccessPage.html",[0,0.425,1,0.616,2,1.566,3,0.144,4,0.068,5,0.723,6,0.723,7,0.723,8,0.7,9,0.059,11,1.017,12,1.371,13,0.616,14,2.29,15,2.239,16,1.12,18,1.12,20,0.218,21,0.861,22,1.544,23,1.449,24,1.048,27,0.784,28,0.013,29,1.367,30,0.26,31,0.187,32,0.068,33,0.085,45,2.426,46,2.676,47,2.235,48,1.826,49,1.229,50,1.569,52,2.541,53,1.556,55,1.648,57,1.627,62,4.672,63,1.282,64,2.329,65,2.41,69,1.229,71,0.944,78,2.286,82,1.883,84,1.34,87,2.676,88,2.419,90,0.881,91,1.091,95,0.524,96,1.12,97,1.12,98,0.723,99,1.234,100,0.723,101,0.696,102,0.723,103,1.315,104,0.723,105,0.636,106,0.723,107,0.636,108,0.657,109,1.12,110,0.616,111,1.05,112,1.371,113,0.616,114,1.017,115,1.371,116,0.636,117,0.7,118,0.723,119,0.616,120,1.371,121,0.636,122,0.723,123,0.636,124,0.678,125,0.597,126,0.723,127,0.616,128,0.56,129,0.636,130,1.017,131,1.05,132,1.12,133,0.636,134,0.636,135,1.05,136,1.12,137,0.636,138,1.12,139,0.636,140,1.814,141,1.12,142,0.636,143,0.7,144,0.616,145,0.636,146,0.636,147,1.245,148,0.616,149,0.723,150,0.636,151,0.56,152,0.636,153,1.561,154,0.616,155,0.616,156,0.616,157,0.636,158,0.657,159,0.723,160,0.723,161,0.006,162,0.006,169,1.461,191,2.148,193,0.881,197,2.26,198,6.038,199,3.878,200,4.905,201,4.007,202,0.599,203,5.523,204,5.523,205,6.32,206,4.993,207,4.993,208,1.883,209,2.664,210,1.757,211,3.131,212,4.867,213,4.993,214,3.825,215,4.007,216,1.692,217,1.986,218,3.805,219,0.965,220,4.993,221,3.042,222,4.053,223,2.871,224,4.284,225,2.737,226,2.034,227,3.243,228,3.123,229,3.001,230,2.333,231,2.797,232,3.123,233,4.349,234,3.8,235,3.234,236,3.875,237,2.43,238,3.875,239,3.32,240,3.593,241,3.875,242,2.96,243,2.666,244,4.284,245,2.395,246,4.284,247,4.284,248,4.284,249,3.326,250,2.235,251,2.43,252,3.123,253,2.235,254,0.6,255,0.83,256,0.771,257,2.43,258,1.826,259,3.5,260,1.276,261,2.587,262,4.007,263,1.168,264,1.627,265,4.007,266,3.578,267,2.587,268,2.175,269,2.41,270,2.917,271,4.364,272,3.5,273,2.917,274,2.917,275,3.234,276,1.145,277,1.755,278,1.826,279,3.805,280,3.095,281,2.587,282,4.007,283,3.759,284,2.587,285,2.286,286,2.076,287,2.917,288,2.552,289,4.02,290,2.175,291,2.541,292,2.43,293,4.284,294,4.905,295,3.875,296,1.903,297,3.166,298,1.184,299,2.587,300,1.986,301,4.6,302,2.328,303,3.166,304,2.587,305,3.408,306,1.364,307,3.875,308,3.875,309,0.597,310,2.014,311,2.044,312,1.282,313,1.648,314,1.556,315,1.883,316,1.883,317,1.755,318,0.902,319,1.292,320,2.587,321,2.587,322,2.587,323,5.523,324,4.007,325,2.587,326,2.587,327,2.998,328,2.419,329,4.007,330,4.007,331,2.587,332,2.617,333,4.349,334,4.349,335,3.166,336,4.284,337,4.905,338,1.755,339,2.552,340,1.883,341,1.755,342,1.755,343,2.587,344,3.57,345,2.917,346,1.755,347,2.587,348,2.587,349,2.587,350,2.587,351,1.883,352,2.587,353,3.166,354,2.917,355,3.166,356,2.41,357,3.166,358,3.166,359,2.718,360,2.044,361,2.044,362,4.007,363,4.007,364,2.076,365,4.284,366,2.044,367,4.007,368,1.282,369,1.689,370,1.229,371,4.007,372,3.5,373,2.43,374,2.419,375,2.26,376,4.007,377,2.587,378,2.426,379,4.007,380,2.587,381,1.34,382,2.587,383,2.587,384,1.179,385,1.883,386,1.883,387,1.051,388,1.051,389,1.133,390,1.755,391,1.34]],["title/modules/AccessPageModule.html",[163,1.139,392,2.967]],["body/modules/AccessPageModule.html",[3,0.141,4,0.141,9,0.124,28,0.013,30,0.337,31,0.39,32,0.141,33,0.176,95,1.095,103,1.91,139,1.972,140,1.371,146,1.972,147,1.371,161,0.01,162,0.01,163,1.509,165,1.902,166,2.564,167,3.787,168,2.797,169,1.969,170,2.04,175,3.479,176,2.461,177,2.193,179,2.629,180,2.629,181,3.831,182,2.931,183,4.039,184,1.778,185,3.646,186,1.72,187,3.08,199,2.931,210,1.328,243,2.114,392,6.18,393,4.717,394,4.717,395,4.717,396,5.439,397,4.353,398,5.4,399,4.889,400,4.717,401,4.267,402,6.717,403,4.267,404,3.479,405,2.931,406,3.08,407,3.831,408,2.797,409,2.797,410,3.479,411,3.439,412,5.307,413,4.267,414,2.676,415,5.307,416,4.267,417,4.555,418,3.662,419,5.307,420,4.267,421,3.931,422,4.555,423,3.662,424,3.247,425,2.797,426,2.366,427,3.08,428,3.08,429,4.267,430,5.4]],["title/modules/AccessPageRoutingModule.html",[163,1.139,396,2.764]],["body/modules/AccessPageRoutingModule.html",[0,0.389,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,103,1.772,161,0.011,162,0.011,165,2.257,170,2.419,179,2.508,180,2.914,190,3.653,191,3.447,192,4.245,193,2.181,194,1.679,195,3.041,196,3.852,396,5.048,400,5.595,431,6.405]],["title/guards/AdminGuard.html",[432,3.221,433,2.967]],["body/guards/AdminGuard.html",[2,1.702,3,0.11,4,0.11,9,0.097,11,1.072,20,0.356,21,0.825,23,1.274,24,0.825,27,0.952,28,0.013,30,0.287,31,0.305,32,0.11,33,0.212,52,3.364,101,0.604,153,1.623,161,0.008,162,0.008,177,2.324,193,1.438,199,3.107,208,3.074,209,3.29,212,5.243,214,4.36,216,1.506,219,0.99,221,2.542,222,2.965,223,2.846,224,3.689,225,2.725,226,2.211,230,1.707,235,3.083,239,3.562,243,2.849,245,2.47,250,3.419,251,3.717,252,4.135,254,0.583,255,0.796,256,0.738,257,3.605,258,2.96,260,2.217,263,1.546,269,4.376,276,1.041,286,3.364,291,3.364,296,2.718,302,3.067,310,2.736,318,0.898,319,0.913,433,4.167,434,3.337,435,3.689,436,6.469,437,4.223,438,4.135,439,6.494,440,6.494,441,3.717,442,3.689,443,6.356,444,3.429,445,6.818,446,4.223,447,3.605,448,7.105,449,5,450,3.442,451,6.553,452,5.088,453,4.727,454,5.131,455,4.135,456,6.494,457,4.935,458,4.404,459,3.021,460,7.051,461,2.36,462,4.404,463,4.512,464,2.396,465,3.882,466,2.162,467,1.549,468,1.219,469,2.092,470,4.223,471,3.689,472,1.715,473,1.653,474,1.85,475,1.815,476,4.223,477,4.223,478,4.223,479,4.223,480,3.689,481,4.223,482,1.488]],["title/components/AppComponent.html",[0,0.248,105,1.002]],["body/components/AppComponent.html",[0,0.315,1,0.674,2,1.125,3,0.112,4,0.074,5,0.791,6,0.791,7,0.791,8,0.766,9,0.065,11,1.09,12,1.449,13,0.674,14,2.312,15,2.249,16,1.2,18,1.2,20,0.238,21,0.619,22,1.618,23,1.459,24,1.055,27,0.891,28,0.013,29,1.471,30,0.268,31,0.204,32,0.074,33,0.214,49,1.344,50,1.108,52,2.686,53,1.702,55,1.802,57,2.762,58,1.621,61,2.911,62,1.702,63,2.126,64,2.038,68,2.526,69,2.462,71,2.388,72,1.88,73,1.743,77,1.536,78,2.448,83,2.569,84,3.951,85,2.581,86,2.472,87,2.105,88,1.239,89,2.472,90,0.963,91,1.193,95,0.574,96,1.2,97,1.2,98,0.791,99,1.462,100,0.791,101,0.657,102,0.791,103,0.674,104,0.791,105,1.423,106,0.791,107,0.696,108,0.718,109,1.2,110,0.674,111,1.125,112,1.449,113,0.674,114,1.09,115,1.449,116,0.696,117,0.766,118,0.791,119,0.674,120,1.449,121,0.696,122,0.791,123,0.696,124,1.125,125,0.653,126,0.791,127,0.674,128,0.612,129,0.696,130,1.09,131,1.125,132,1.2,133,0.696,134,0.696,135,1.359,136,1.2,137,0.696,138,1.2,139,0.696,140,0.718,141,1.2,142,0.696,143,0.766,144,0.674,145,0.696,146,0.696,147,0.718,148,0.674,149,0.791,150,0.696,151,0.612,152,0.696,153,1.335,154,0.674,155,0.674,156,0.674,157,0.696,158,0.718,159,0.791,160,0.791,161,0.006,162,0.006,186,0.901,191,2.271,193,0.963,199,2.814,202,0.641,208,2.06,209,2.76,210,1.799,212,4.463,214,4.193,216,1.694,217,2.569,219,0.669,223,2.712,225,3.016,226,2.118,229,2.462,230,2.14,235,2.462,238,4.097,239,3.407,242,2.569,243,2.986,250,2.984,251,3.371,252,3.302,253,2.363,254,0.587,255,0.721,256,0.669,257,3.371,258,2.835,260,1.367,263,1.709,264,2.659,268,2.33,276,0.688,277,1.88,291,2.223,292,2.126,296,2.038,298,1.173,300,3.244,309,0.99,310,1.032,315,2.06,316,2.06,317,1.919,318,0.802,319,1.345,332,1.88,333,2.06,334,2.06,344,2.06,364,2.223,369,1.193,370,1.344,372,3.749,373,2.126,378,2.105,384,1.956,385,3.124,387,1.743,388,1.743,389,1.88,390,1.919,391,1.466,438,4.169,441,3.955,447,2.126,455,2.733,459,2.809,461,1.28,463,3.48,464,2.156,466,1.958,468,0.817,473,1.68,475,1.2,480,2.472,482,2.039,483,2.472,484,5.185,485,4.292,486,5.185,487,5.185,488,6.548,489,5.537,490,5.787,491,6.548,492,6.548,493,6.548,494,6.548,495,5.223,496,4.292,497,1.68,498,3.749,499,2.911,500,4.097,501,2.957,502,2.954,503,3.222,504,4.867,505,5.185,506,3.63,507,3.774,508,4.292,509,2.83,510,5.185,511,5.185,512,2.223,513,2.83,514,3.749,515,2.83,516,4.292,517,5.787,518,2.83,519,3.749,520,7.317,521,2.83,522,2.83,523,3.391,524,3.749,525,2.911,526,2.83,527,2.038,528,2.83,529,2.83,530,2.83,531,2.472,532,2.83,533,1.802,534,2.83,535,4.292,536,2.83,537,3.749,538,2.83,539,2.83,540,2.83,541,2.83,542,2.83,543,2.83,544,2.236,545,2.83,546,2.83,547,5.787,548,4.292,549,4.292,550,3.749,551,4.292,552,4.292,553,4.292,554,4.292,555,4.292,556,4.529,557,2.236,558,2.911,559,4.292,560,2.83,561,4.292,562,4.292,563,4.292,564,1.919,565,1.919,566,3.749,567,2.83,568,2.83,569,2.83,570,1.919,571,2.83,572,3.749,573,1.344,574,1.809,575,2.83,576,2.83,577,2.83,578,2.83,579,1.919,580,2.236,581,2.472]],["title/modules/AppModule.html",[163,1.139,582,2.967]],["body/modules/AppModule.html",[3,0.121,4,0.121,9,0.106,15,1.256,28,0.013,30,0.339,31,0.335,32,0.189,33,0.151,95,0.94,105,2.029,161,0.009,162,0.009,163,1.297,165,1.634,166,2.203,167,3.526,168,3.526,169,2.222,170,1.752,175,3.157,176,2.114,177,1.884,179,2.386,180,2.386,185,2.518,186,1.477,187,2.646,193,1.579,209,2.569,216,1.472,309,1.406,339,3.881,397,4.183,404,3.526,405,2.518,406,2.646,407,3.476,408,3.157,409,2.403,410,3.157,417,3.146,418,3.146,422,4.133,423,3.146,425,2.403,426,3.441,427,4.123,428,4.123,475,1.903,531,4.052,582,6.04,583,4.052,584,4.052,585,4.052,586,4.052,587,5.227,588,5.227,589,3.665,590,6.095,591,5.945,592,3.376,593,6.095,594,6.095,595,4.639,596,6.095,597,6.095,598,4.639,599,4.052,600,4.639,601,4.639,602,3.376,603,6.095,604,3.665,605,2.097,606,4.639,607,6.095,608,3.146,609,3.665,610,3.376,611,6.095,612,3.665,613,4.639,614,3.476,615,4.639,616,3.665,617,4.639,618,3.146,619,4.639,620,4.133,621,4.052,622,4.639,623,6.095,624,5.323,625,5.945,626,4.052,627,4.639,628,4.639,629,6.095,630,4.639,631,4.052,632,3.146,633,6.095,634,4.639,635,4.815,636,6.095,637,6.095,638,6.095,639,2.168,640,1.846,641,4.639,642,4.133,643,6.095,644,6.095,645,4.815,646,4.639,647,4.639,648,4.815,649,4.639,650,4.052,651,4.639,652,2.954,653,4.639,654,4.639,655,4.334,656,4.639,657,4.639,658,4.639]],["title/modules/AppRoutingModule.html",[163,1.139,588,2.764]],["body/modules/AppRoutingModule.html",[3,0.144,4,0.144,9,0.126,28,0.013,30,0.312,31,0.398,32,0.144,33,0.18,128,1.191,161,0.01,162,0.01,165,1.94,170,2.081,179,2.156,180,2.662,190,3.142,191,3.231,192,3.878,193,1.875,194,1.444,195,3.974,199,3.691,276,0.883,433,5.945,436,6.368,525,3.736,527,2.615,588,4.611,659,5.508,660,6.8,661,5.945,662,5.508,663,5.508,664,3.736,665,5.508,666,4.611,667,5.508,668,6.8,669,8.167,670,5.508,671,6.911,672,5.508,673,5.508,674,5.508,675,3.736,676,5.508,677,5.508,678,5.508,679,5.508,680,5.508,681,5.508,682,5.508,683,5.508,684,5.508,685,5.508,686,5.508,687,5.508,688,5.508,689,5.508,690,5.508,691,5.508,692,5.508,693,5.508,694,5.508]],["title/guards/AuthGuard.html",[432,3.221,661,2.967]],["body/guards/AuthGuard.html",[3,0.137,4,0.137,8,1.784,9,0.12,11,1.33,20,0.441,21,0.95,23,1.293,24,0.95,27,0.818,28,0.013,30,0.298,31,0.378,32,0.137,33,0.171,101,0.696,153,1.293,161,0.01,162,0.01,193,1.783,199,2.843,202,0.783,208,3.813,209,3.355,212,4.965,214,4.349,219,0.85,254,0.528,255,0.916,256,0.85,257,3.572,258,3.003,260,2.099,298,1.056,318,0.976,319,1.721,434,4.139,436,6.383,441,3.265,442,4.575,443,6.609,444,3.355,445,6.609,447,3.265,449,5.756,451,5.756,452,5.131,454,5.207,457,5.131,459,2.858,460,6.298,463,4.336,464,2.567,467,1.784,468,1.512,469,2.595,471,4.575,472,2.127,473,2.051,475,2.015,525,3.552,661,5.507,695,4.575,696,6.59,697,6.59,698,5.238,699,2.489,700,5.207,701,4.196,702,4.797,703,5.238,704,4.196,705,3.129,706,3.414,707,4.196,708,4.139,709,5.238,710,5.238,711,5.238,712,5.238]],["title/injectables/AuthService.html",[209,1.718,467,1.103]],["body/injectables/AuthService.html",[3,0.19,4,0.123,9,0.108,20,0.398,21,0.89,24,1.167,27,1.004,28,0.013,30,0.271,31,0.342,32,0.123,33,0.155,101,0.726,140,1.967,147,1.567,151,1.335,153,1.678,161,0.009,162,0.009,177,2.507,202,0.922,209,2.602,219,0.886,245,2.688,251,3.839,254,0.551,255,0.955,256,0.886,263,1.735,266,2.568,269,3.712,270,5.302,277,3.506,285,3.521,289,5.302,290,3.954,309,1.68,318,0.886,464,2.817,467,1.671,468,1.366,472,1.921,473,1.852,489,5.755,501,3.919,533,4.934,640,1.905,701,3.931,706,3.773,713,2.246,714,4.132,715,6.003,716,4.133,717,2.627,718,6.129,719,4.187,720,5.392,721,4.731,722,6.174,723,3.648,724,6.174,725,4.731,726,4.731,727,2.704,728,5.392,729,4.731,730,4.494,731,3.068,732,4.731,733,2.417,734,2.602,735,5.392,736,4.731,737,4.878,738,4.731,739,5.392,740,4.731,741,5.392,742,4.731,743,2.845,744,3.013]],["title/pipes/CapitalizeInitialPipe.html",[587,2.764,745,2.02]],["body/pipes/CapitalizeInitialPipe.html",[3,0.141,4,0.141,9,0.124,11,1.371,13,1.286,21,0.778,24,0.778,27,0.949,28,0.013,30,0.213,31,0.39,32,0.141,33,0.176,101,0.772,161,0.01,162,0.01,216,1.759,219,0.696,223,2.449,254,0.433,255,0.751,256,0.696,263,2.015,292,3.328,296,3.189,298,1.379,306,2.287,318,0.696,462,5.515,465,4.958,475,2.043,512,3.479,550,5.867,587,4.555,745,3.328,746,4.267,747,5.867,748,4.717,749,4.958,750,5.867,751,2.799,752,5.4,753,6.872,754,5.867,755,6.717,756,7.179,757,5.726,758,7.867,759,5.726,760,5.726,761,7.867,762,7.311,763,5.321,764,6.386,765,6.386,766,6.386,767,5.867,768,5.4]],["title/components/CategoriesInfoComponent.html",[0,0.248,107,1.002]],["body/components/CategoriesInfoComponent.html",[0,0.459,1,0.815,2,1.295,3,0.176,4,0.089,5,0.956,6,0.956,7,0.956,8,0.926,9,0.078,11,1.254,12,1.621,13,0.815,14,2.353,15,2.279,16,1.381,18,1.381,20,0.288,21,0.712,22,1.775,23,1.321,24,1.118,27,0.836,28,0.013,29,1.456,30,0.195,31,0.247,32,0.089,33,0.112,45,1.389,46,1.389,53,2.058,54,2.491,57,2.354,61,2.321,66,1.773,68,1.389,69,3.434,71,1.802,72,2.164,73,1.389,77,1.857,78,1.952,84,3.488,85,4.453,87,3.063,88,1.499,90,1.682,91,2.083,95,0.694,96,1.381,97,1.381,98,0.956,99,1.418,100,0.956,101,0.764,102,0.956,103,0.815,104,0.956,105,0.841,106,0.956,107,1.561,108,1.969,109,1.381,110,0.815,111,2.156,112,1.621,113,0.815,114,1.254,115,1.621,116,0.841,117,0.926,118,0.956,119,0.815,120,1.621,121,0.841,122,0.956,123,0.841,124,0.897,125,0.789,126,0.956,127,0.815,128,0.74,129,0.841,130,1.254,131,1.295,132,1.381,133,0.841,134,0.841,135,1.295,136,1.381,137,0.841,138,1.381,139,0.841,140,0.869,141,1.381,142,0.841,143,0.926,144,0.815,145,0.841,146,0.841,147,0.869,148,0.815,149,0.956,150,0.841,151,0.74,152,0.841,153,1.246,154,0.815,155,0.815,156,0.815,157,0.841,158,0.869,159,0.956,160,0.956,161,0.007,162,0.007,202,0.738,210,1.821,216,1.068,219,0.868,245,1.626,254,0.594,255,0.936,256,0.868,263,0.815,264,2.849,276,0.549,302,2.957,306,2.162,309,0.789,318,0.819,319,1.254,364,2.559,370,1.625,378,1.389,385,3.596,387,2.354,388,1.389,389,1.499,390,2.321,391,1.773,447,2.448,459,2.398,466,2.398,482,1.74,497,1.934,499,4.905,558,2.321,570,3.35,573,1.625,574,1.442,640,1.215,700,3.904,704,4.288,723,2.894,733,2.27,751,1.682,769,6.848,770,6.194,771,2.491,772,4.581,773,3.904,774,4.581,775,3.904,776,3.904,777,4.315,778,3.904,779,2.448,780,2.682,781,5.798,782,5.798,783,3.904,784,3.904,785,3.422,786,2.006,787,3.596,788,5.715,789,4.098,790,2.083,791,2.989,792,3.146,793,3.297,794,2.989,795,3.926,796,6.349,797,5.022,798,2.989,799,4.94,800,2.704,801,3.605,802,2.704,803,4.94,804,4.581,805,5.32,806,5.544,807,3.904,808,2.949,809,3.422,810,1.802,811,3.146,812,4.315,813,3.422,814,2.559,815,2.818,816,4.94,817,3.422,818,3.904,819,3.422,820,3.904,821,2.491,822,3.904,823,3.422,824,2.704,825,2.321,826,2.704,827,3.422,828,3.422,829,2.704,830,2.704,831,3.904,832,3.35,833,4.315,834,4.94,835,4.315,836,4.94,837,3.692,838,2.058,839,2.179,840,2.321,841,4.315,842,4.315,843,3.146,844,2.704,845,2.179,846,2.989]],["title/injectables/CategoriesService.html",[467,1.103,847,2.596]],["body/injectables/CategoriesService.html",[0,0.332,3,0.143,4,0.103,9,0.09,20,0.332,21,0.788,23,1.23,24,1.024,27,0.935,28,0.013,30,0.28,31,0.285,32,0.103,33,0.129,101,0.796,111,2.232,128,1.182,161,0.008,162,0.008,194,1.643,216,1.182,219,0.916,221,3.09,222,4.166,226,1.86,230,1.63,245,2.42,250,2.49,254,0.569,255,0.987,256,0.873,298,1.231,305,4.192,318,0.916,462,4.588,464,2.667,466,3.038,467,1.479,468,1.139,469,2.707,472,1.602,473,1.545,474,1.729,475,2.265,605,2.403,639,1.74,640,1.889,699,2.064,713,1.874,733,2.139,734,2.852,745,2.707,760,5.35,776,4.317,786,2.219,789,4.285,812,4.773,815,3.859,835,4.773,847,3.48,848,3.447,849,4.773,850,5.464,851,6.268,852,3.118,853,3.946,854,2.594,855,5.464,856,3.946,857,4.069,858,4.984,859,3.946,860,3.286,861,5.464,862,3.946,863,5.464,864,3.946,865,7.104,866,3.946,867,5.475,868,2.513,869,3.946,870,3.447,871,2.676,872,6.582,873,3.118,874,3.946,875,3.946,876,3.946,877,3.946,878,3.946,879,3.946,880,3.946,881,7.798,882,4.562,883,3.946,884,5.464,885,3.946,886,3.946,887,3.946,888,3.946,889,3.946,890,3.946,891,3.946,892,3.946,893,3.946,894,3.946,895,3.505,896,2.872,897,3.946,898,3.946,899,3.946,900,5.464,901,6.268,902,5.475,903,3.447,904,6.268,905,2.872,906,7.104,907,5.475,908,4.317,909,5.464,910,5.464,911,5.464,912,3.977,913,3.977,914,5.464,915,5.464,916,5.464,917,5.464,918,5.464,919,5.464,920,3.946,921,3.946,922,5.464,923,3.946,924,3.946,925,5.464,926,3.977,927,3.946,928,3.946,929,3.946,930,3.946]],["title/interfaces/CategoryInfo.html",[789,2.111,931,1.177]],["body/interfaces/CategoryInfo.html",[3,0.164,4,0.164,9,0.144,20,0.53,28,0.012,32,0.164,101,0.85,161,0.011,162,0.011,202,1.1,254,0.658,256,1.039,298,1.386,448,7.033,789,3.815,825,4.266,895,4.171,931,1.816,932,2.867,933,4.005,934,8.052]],["title/components/CategorySelectableComponent.html",[0,0.248,110,0.971]],["body/components/CategorySelectableComponent.html",[0,0.481,1,0.631,2,1.07,3,0.107,4,0.069,5,0.741,6,0.741,7,0.741,8,0.717,9,0.061,11,1.036,12,1.392,13,0.631,14,2.296,15,2.224,16,1.141,18,1.141,20,0.223,21,0.588,22,1.564,23,0.801,24,1.161,27,0.944,28,0.013,29,1.661,30,0.238,31,0.191,32,0.107,33,0.087,95,0.537,96,1.141,97,1.141,98,0.741,99,1.249,100,0.741,101,0.803,102,0.741,103,0.631,104,0.741,105,0.652,106,0.741,107,0.652,108,1.949,109,1.141,110,1.439,111,2.205,112,1.392,113,0.631,114,1.42,115,1.392,116,0.652,117,0.717,118,0.741,119,0.631,120,1.392,121,0.652,122,0.741,123,0.652,124,1.743,125,0.611,126,0.741,127,0.631,128,0.573,129,0.652,130,1.036,131,1.07,132,1.141,133,0.652,134,0.652,135,1.07,136,1.141,137,0.652,138,1.141,139,0.652,140,0.673,141,1.141,142,0.652,143,0.717,144,0.631,145,0.652,146,0.652,147,1.534,148,0.631,149,0.741,150,0.652,151,0.573,152,0.652,153,1.097,154,0.631,155,0.631,156,0.631,157,0.652,158,0.673,159,0.741,160,0.741,161,0.006,162,0.006,169,1.489,184,0.873,186,0.844,194,0.695,202,0.61,210,1.004,216,1.485,219,0.958,221,1.598,226,1.695,240,3.364,243,1.598,253,1.861,254,0.634,255,1.057,256,0.958,260,1.3,263,1.911,276,0.798,278,1.861,285,3.19,298,1.023,306,2.398,309,1.472,310,2.203,318,0.99,319,1.38,327,1.439,328,3.085,332,1.161,414,2.772,426,1.161,444,1.721,459,2.805,461,1.983,482,1.438,502,2.656,503,2.898,605,2.115,639,2.243,640,1.569,655,2.6,699,1.542,705,1.938,717,1.966,751,2.264,779,2.023,790,2.968,793,3.03,801,2.908,810,1.489,831,3.226,837,4.063,847,4.371,854,2.364,935,5.888,936,5.888,937,1.797,938,3.934,939,3.934,940,3.226,941,4.349,942,5.277,943,2.803,944,3.377,945,2.972,946,4.072,947,2.972,948,3.566,949,2.972,950,4.072,951,2.769,952,2.769,953,4.349,954,2.769,955,2.769,956,3.624,957,2.328,958,2.315,959,3.566,960,3.566,961,2.703,962,3.566,963,3.171,964,2.579,965,4.4,966,2.315,967,2.216,968,2.6,969,2.972,970,4.072,971,2.972,972,4.645,973,2.65,974,4.072,975,4.128,976,2.65,977,2.972,978,5.326,979,2.65,980,2.972,981,2.115,982,4.397,983,2.972,984,2.65,985,2.328,986,2.65,987,3.162,988,2.115,989,3.566,990,2.65,991,2.772,992,2.972,993,2.972,994,2.65,995,2.972,996,2.972,997,2.315,998,2.972,999,2.769,1000,2.65,1001,4.371,1002,2.549,1003,4.097,1004,2.769,1005,2.65,1006,2.769,1007,2.315,1008,4.839,1009,2.315,1010,2.972,1011,2.503,1012,2.972,1013,2.769,1014,1.797,1015,2.65,1016,3.377,1017,2.769,1018,2.65,1019,2.769,1020,3.794,1021,2.769,1022,2.315,1023,2.315,1024,2.315,1025,2.315,1026,2.315,1027,2.769,1028,2.6,1029,2.769,1030,2.315,1031,3.566,1032,2.315,1033,2.6,1034,2.6,1035,2.094,1036,1.313,1037,1.688,1038,1.688,1039,1.258,1040,2.315,1041,1.594,1042,2.315,1043,2.315,1044,1.594,1045,1.594,1046,1.797,1047,2.315,1048,4.349,1049,2.315,1050,2.315,1051,1.797,1052,1.797,1053,1.929,1054,1.929,1055,1.929,1056,1.929,1057,2.315,1058,2.972,1059,1.929,1060,1.929,1061,2.315,1062,3.566]],["title/components/CategorySelectableMobileComponent.html",[0,0.248,113,0.971]],["body/components/CategorySelectableMobileComponent.html",[0,0.478,1,0.614,2,1.048,3,0.104,4,0.067,5,0.721,6,0.721,7,0.721,8,0.698,9,0.059,11,1.015,12,1.368,13,0.614,14,2.29,15,2.217,16,1.118,18,1.118,20,0.217,21,0.576,22,1.541,23,0.784,24,1.157,27,0.939,28,0.013,29,1.652,30,0.235,31,0.186,32,0.104,33,0.084,95,0.523,96,1.118,97,1.118,98,0.721,99,1.232,100,0.721,101,0.798,102,0.721,103,0.614,104,0.721,105,0.634,106,0.721,107,0.634,108,1.939,109,1.118,110,0.614,111,2.2,112,1.368,113,1.421,114,2.162,115,1.368,116,0.634,117,0.698,118,0.721,119,0.614,120,1.368,121,0.634,122,0.721,123,0.634,124,1.726,125,0.595,126,0.721,127,0.614,128,0.558,129,0.634,130,1.015,131,1.048,132,1.118,133,0.634,134,0.634,135,1.048,136,1.118,137,0.634,138,1.118,139,0.634,140,0.655,141,1.118,142,0.634,143,0.698,144,0.614,145,0.634,146,0.634,147,1.515,148,0.614,149,0.721,150,0.634,151,0.558,152,0.634,153,1.082,154,0.614,155,0.614,156,0.614,157,0.634,158,0.655,159,0.721,160,0.721,161,0.006,162,0.006,169,1.458,184,0.849,186,0.822,194,0.676,202,0.597,210,0.983,216,1.472,219,0.952,221,1.565,226,1.667,240,3.316,243,1.565,253,1.822,254,0.631,255,1.051,256,0.952,260,1.273,263,1.904,276,0.785,278,1.822,285,3.145,298,1.012,306,2.379,309,1.456,310,2.176,318,0.985,319,1.365,327,1.4,328,3.06,332,1.13,414,2.732,426,1.13,444,1.685,459,2.787,461,1.964,482,1.408,502,2.618,503,2.856,605,2.097,639,2.225,640,1.552,655,2.546,699,1.51,705,1.898,717,1.945,751,2.242,779,1.981,790,2.945,793,3.001,801,2.877,810,1.458,831,3.159,837,4.019,847,4.333,854,2.324,935,5.868,941,4.276,942,5.212,943,2.775,944,3.32,945,2.91,946,4.014,947,2.91,948,3.492,949,2.91,950,4.014,951,2.711,952,2.711,953,4.276,954,2.711,955,2.711,956,3.563,957,2.28,958,2.253,960,3.492,961,2.657,963,3.117,964,2.536,965,4.37,967,2.17,968,2.546,969,2.91,970,4.014,971,2.91,972,4.594,974,4.014,975,4.092,977,2.91,978,5.29,980,2.91,981,2.071,982,4.343,983,2.91,985,2.28,987,3.127,988,2.071,989,3.492,991,2.732,992,2.91,993,2.91,995,2.91,996,2.91,998,2.91,999,2.711,1001,4.333,1002,2.513,1003,4.046,1004,2.711,1006,2.711,1007,2.253,1008,4.792,1010,2.91,1011,2.481,1012,2.91,1013,2.711,1014,1.749,1016,3.32,1017,2.711,1019,2.711,1020,3.74,1021,2.711,1027,2.711,1028,2.546,1029,2.711,1030,2.253,1031,3.492,1033,2.546,1034,2.546,1035,2.038,1036,1.278,1037,1.643,1038,1.643,1039,1.225,1040,2.253,1041,1.551,1042,2.253,1043,2.253,1044,1.551,1045,1.551,1046,1.749,1047,2.253,1048,4.276,1049,2.253,1050,2.253,1051,1.749,1052,1.749,1053,1.878,1054,1.878,1055,1.878,1056,1.878,1057,2.253,1058,2.91,1059,1.878,1060,1.878,1061,2.253,1062,3.492,1063,5.868,1064,1.749,1065,3.868,1066,2.711,1067,3.868,1068,3.159,1069,3.492,1070,3.492,1071,2.253,1072,2.58,1073,2.58,1074,2.58,1075,2.58,1076,2.58,1077,2.58,1078,2.58,1079,2.253,1080,2.253,1081,2.58,1082,2.253,1083,2.58,1084,2.58,1085,2.253,1086,2.253,1087,2.253,1088,2.253,1089,2.253]],["title/components/ConfirmDialogComponent.html",[0,0.248,116,1.002]],["body/components/ConfirmDialogComponent.html",[0,0.482,1,1.075,2,1.569,3,0.156,4,0.118,5,1.262,6,1.262,7,1.262,8,1.222,9,0.103,11,1.52,12,1.877,13,1.075,14,2.402,15,2.326,16,1.673,18,1.673,20,0.38,21,0.863,22,1.999,23,1.403,24,1.073,27,0.743,28,0.013,29,1.295,30,0.265,31,0.326,32,0.118,33,0.147,62,3.6,95,0.915,96,1.673,97,1.673,98,1.262,99,1.597,100,1.262,101,0.709,102,1.262,103,1.075,104,1.262,105,1.11,106,1.262,107,1.11,108,1.146,109,1.673,110,1.075,111,1.569,112,1.877,113,1.075,114,1.52,115,1.877,116,1.759,117,2.145,118,1.262,119,1.075,120,1.877,121,1.11,122,1.262,123,1.11,124,1.183,125,1.041,126,1.262,127,1.075,128,0.976,129,1.11,130,1.52,131,1.569,132,1.673,133,1.11,134,1.11,135,1.569,136,1.673,137,1.11,138,1.673,139,1.11,140,1.146,141,1.673,142,1.11,143,1.222,144,1.075,145,1.11,146,1.11,147,1.146,148,1.075,149,1.262,150,1.11,151,0.976,152,1.11,153,1.403,154,1.075,155,1.075,156,1.075,157,1.11,158,1.146,159,1.262,160,1.262,161,0.009,162,0.009,202,0.894,210,1.919,211,3.544,216,1.295,219,0.582,222,4.258,254,0.538,255,0.627,256,0.582,298,1.146,301,4.889,314,2.715,318,0.772,319,0.976,327,2.451,354,3.286,632,3.062,717,2.357,786,2.431,821,3.286,1090,5.567,1091,5.187,1092,3.943,1093,6.399,1094,6.716,1095,5.986,1096,5.88,1097,5.206,1098,4.515,1099,7.924,1100,4.515,1101,4.889,1102,4.515,1103,5.229,1104,4.515,1105,4.515,1106,5.986,1107,4.515,1108,3.286,1109,4.515,1110,4.515,1111,4.515,1112,4.515,1113,4.515,1114,5.986,1115,5.986]],["title/injectables/CustomTranslateService.html",[211,2.02,467,1.103]],["body/injectables/CustomTranslateService.html",[3,0.12,4,0.12,9,0.105,20,0.387,21,0.872,23,1.328,24,1.129,27,0.972,28,0.013,29,0.993,30,0.267,31,0.332,32,0.12,33,0.235,101,0.715,161,0.009,162,0.009,202,0.904,210,1.84,211,2.999,216,1.72,219,0.873,223,2.802,225,3.113,226,2.306,227,4.443,230,2.019,236,4.782,239,3.215,253,2.758,254,0.616,255,0.941,256,0.873,260,1.927,263,1.782,268,3.285,292,2.999,296,2.874,298,1.353,302,2.551,309,1.66,318,0.873,319,1.662,328,2.966,342,5.211,356,4.782,408,2.378,409,2.378,461,1.805,464,2.58,467,1.638,468,1.325,472,1.864,473,1.797,474,2.011,475,1.692,497,2.818,507,6.146,512,3.135,514,5.286,527,2.874,537,4.009,640,1.488,704,3.854,705,3.215,708,3.627,713,2.179,717,2.086,727,2.651,733,2.369,743,4.5,810,2.207,964,3.135,1116,4.009,1117,6.771,1118,7.199,1119,5.788,1120,4.59,1121,8.122,1122,6.052,1123,5.915,1124,6.052,1125,4.59,1126,6.052,1127,6.052,1128,3.639,1129,4.59,1130,4.59,1131,5.286,1132,6.052,1133,4.59,1134,4.405,1135,5.286,1136,4.59,1137,6.052,1138,4.59,1139,4.59,1140,4.59,1141,4.59,1142,4.59,1143,4.59,1144,4.59,1145,4.59,1146,3.113,1147,4.59,1148,4.59]],["title/components/DataPage.html",[0,0.248,119,0.971]],["body/components/DataPage.html",[0,0.404,1,0.523,2,1.322,3,0.168,4,0.057,5,0.614,6,0.614,7,0.614,8,0.595,9,0.142,11,0.894,12,1.233,13,0.523,14,2.247,15,2.189,16,0.985,18,0.985,20,0.185,21,0.508,22,1.41,23,0.99,24,1.037,27,0.879,28,0.013,29,1.505,30,0.284,31,0.159,32,0.115,33,0.072,45,2.393,46,1.43,49,1.673,50,2.424,52,1.825,53,1.321,55,3.212,57,2.514,58,2.226,62,4.44,63,1.089,64,2.094,66,2.613,68,1.791,69,1.043,71,2.584,72,1.932,73,1.43,76,1.599,77,1.912,78,1.253,82,2.564,83,1.745,84,1.138,85,1.321,87,2.242,90,0.748,91,1.859,94,1.825,95,0.445,96,0.985,97,0.985,98,0.614,99,1.127,100,0.614,101,0.76,102,0.614,103,0.523,104,0.614,105,0.54,106,0.614,107,0.54,108,1.12,109,0.985,110,0.523,111,2.045,112,1.233,113,0.523,114,0.894,115,1.233,116,0.866,117,0.595,118,0.614,119,1.201,120,1.233,121,0.54,122,0.614,123,0.54,124,0.576,125,0.507,126,0.614,127,0.523,128,0.475,129,0.54,130,1.12,131,1.322,132,0.985,133,0.54,134,0.54,135,0.923,136,0.985,137,0.54,138,0.985,139,0.54,140,0.558,141,0.985,142,1.24,143,1.742,144,0.523,145,0.54,146,0.54,147,0.558,148,0.523,149,0.614,150,0.54,151,0.762,152,0.54,153,1.365,154,0.523,155,0.523,156,0.523,157,0.54,158,0.558,159,0.614,160,0.614,161,0.009,162,0.005,169,1.285,186,0.7,193,0.748,194,1.936,198,5.598,202,0.526,206,4.657,207,4.657,209,0.926,210,1.742,211,2.92,214,3.67,216,1.473,219,0.856,220,3.986,221,2.599,222,3.825,223,1.84,225,1.379,226,1.718,227,2.738,228,2.243,229,2.395,230,2.314,231,2.009,233,2.564,234,2.118,235,1.673,237,2.5,239,1.673,240,3.321,241,2.784,243,1.379,245,1.94,250,1.606,252,2.243,254,0.585,255,0.923,256,0.856,260,1.122,263,1.05,276,1.184,277,2.21,278,1.606,297,2.784,298,1.284,300,2.5,301,4.29,302,2.127,303,2.784,305,3.361,306,1.199,307,3.484,308,3.484,311,1.736,313,1.399,314,1.321,315,1.599,316,1.599,317,1.49,318,0.962,319,1.194,327,2.997,328,2.983,332,2.983,333,3.672,334,3.672,335,2.784,344,2.564,353,2.784,354,2.564,355,2.784,356,3.87,357,2.784,358,2.784,359,2.389,360,1.736,361,1.736,364,2.284,369,1.859,373,2.736,378,2.514,384,2.299,387,2.242,388,2.242,389,1.932,390,1.49,441,1.745,450,2.118,461,1.504,475,0.985,504,2.389,533,1.399,544,4.657,556,3.077,557,3.484,564,1.49,565,1.49,573,2.094,574,1.485,605,1.983,632,1.49,639,1.877,640,1.084,706,1.138,717,2.045,727,1.543,731,1.43,776,2.784,777,3.077,786,1.43,789,3.936,790,1.485,814,2.284,815,2.009,818,2.784,825,1.49,839,1.399,847,3.753,849,4.406,854,1.673,860,2.118,943,1.485,1011,1.285,1035,1.736,1036,1.089,1066,2.389,1090,1.599,1091,1.49,1093,5.834,1096,1.736,1149,1.919,1150,3.523,1151,3.523,1152,3.484,1153,2.784,1154,3.523,1155,5.045,1156,3.523,1157,3.523,1158,1.599,1159,5.045,1160,5.621,1161,3.672,1162,3.361,1163,2.197,1164,3.21,1165,3.852,1166,2.564,1167,2.197,1168,4.657,1169,2.389,1170,3.523,1171,2.197,1172,3.523,1173,5.522,1174,2.197,1175,5.893,1176,4.29,1177,7.844,1178,5.045,1179,3.523,1180,3.523,1181,2.197,1182,3.077,1183,2.197,1184,4.684,1185,2.009,1186,5.148,1187,3.523,1188,2.389,1189,3.212,1190,5.045,1191,3.523,1192,4.41,1193,2.197,1194,5.045,1195,4.41,1196,3.523,1197,2.197,1198,3.523,1199,2.197,1200,3.523,1201,2.389,1202,2.197,1203,2.197,1204,3.523,1205,2.197,1206,2.009,1207,2.197,1208,2.197,1209,1.736,1210,1.49,1211,1.599,1212,1.599,1213,2.197,1214,1.599,1215,2.197,1216,5.045,1217,2.197,1218,2.197,1219,3.523,1220,2.197,1221,2.197,1222,1.736,1223,2.197,1224,1.49,1225,2.197,1226,2.197,1227,2.784,1228,2.197,1229,2.197,1230,2.197,1231,2.197,1232,2.197,1233,2.197,1234,2.197,1235,2.197,1236,2.197,1237,1.49,1238,1.089,1239,2.197,1240,2.197,1241,1.49,1242,2.197,1243,2.197,1244,2.197,1245,2.197,1246,2.197,1247,2.197,1248,2.197,1249,2.197,1250,2.197,1251,2.197,1252,1.919,1253,1.919,1254,2.197,1255,2.197,1256,2.197,1257,2.389,1258,2.564,1259,2.784,1260,2.564,1261,2.564,1262,2.564,1263,2.564,1264,3.523,1265,2.197,1266,2.197,1267,1.919,1268,1.599,1269,3.852,1270,4.41,1271,1.193,1272,2.197,1273,2.197,1274,3.523,1275,3.523,1276,3.077,1277,3.523,1278,2.784,1279,2.094,1280,2.515,1281,2.515,1282,2.009,1283,1.825,1284,1.825,1285,1.606,1286,2.197,1287,2.784,1288,2.389,1289,2.197,1290,1.919,1291,2.197,1292,1.919,1293,1.599,1294,2.197,1295,2.197,1296,2.197]],["title/modules/DataPageModule.html",[163,1.139,1297,2.967]],["body/modules/DataPageModule.html",[3,0.139,4,0.139,9,0.122,28,0.013,30,0.338,31,0.386,32,0.139,33,0.175,95,1.083,119,1.905,142,1.967,143,1.447,161,0.01,162,0.01,163,1.494,165,1.883,166,2.538,167,3.769,168,2.769,169,1.949,170,2.019,175,3.457,176,2.436,177,2.17,179,2.613,180,2.613,181,3.806,182,2.901,183,4.013,184,1.76,185,3.623,186,1.702,187,3.049,210,1.314,243,2.092,276,0.857,374,2.341,397,4.491,399,4.858,404,3.457,405,2.901,406,3.049,407,3.806,408,2.769,409,2.769,410,3.457,411,3.404,412,5.273,413,4.223,414,2.648,415,5.273,416,4.223,417,4.526,418,3.625,419,5.273,420,4.223,421,3.891,422,4.526,423,3.625,424,3.214,425,2.769,426,2.341,427,3.049,428,3.049,429,4.223,1210,3.625,1211,3.891,1297,6.173,1298,4.669,1299,4.669,1300,4.669,1301,5.425,1302,5.345,1303,3.404,1304,6.674,1305,5.345,1306,5.829,1307,4.669,1308,5.829,1309,4.669,1310,4.669]],["title/modules/DataPageRoutingModule.html",[163,1.139,1301,2.764]],["body/modules/DataPageRoutingModule.html",[0,0.389,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,119,1.772,161,0.011,162,0.011,165,2.257,170,2.419,179,2.508,180,2.914,190,3.653,191,3.447,192,4.245,193,2.181,194,1.679,195,3.041,196,3.852,1301,5.048,1303,4.079,1311,6.405]],["title/injectables/DataService.html",[467,1.103,618,2.764]],["body/injectables/DataService.html",[3,0.119,4,0.119,9,0.104,20,0.383,21,0.867,24,1.075,27,1.007,28,0.013,30,0.266,31,0.329,32,0.119,33,0.149,101,0.788,135,2.252,151,1.301,161,0.009,162,0.009,218,5.205,219,1.061,254,0.65,255,1.037,256,0.962,276,1.333,298,1.359,318,1.024,346,4.081,464,2.821,467,1.629,468,1.314,472,1.848,473,1.781,618,4.081,640,1.48,699,2.273,707,3.832,713,2.16,717,2.573,718,6.102,723,3.696,727,2.636,733,2.356,734,2.537,814,3.716,815,3.432,857,3.619,860,3.619,1128,3.619,1169,4.081,1271,3.266,1312,3.974,1313,4.38,1314,5.256,1315,4.55,1316,5.06,1317,7.527,1318,5.256,1319,4.55,1320,5.256,1321,6.017,1322,5.256,1323,4.55,1324,5.256,1325,4.55,1326,5.256,1327,5.256,1328,3.974,1329,5.222,1330,4.55,1331,6.017,1332,5.256,1333,6.017,1334,2.736,1335,4.55]],["title/classes/EmailValidation.html",[33,0.133,1336,2.967]],["body/classes/EmailValidation.html",[3,0.152,4,0.152,9,0.133,20,0.49,21,1.013,24,0.838,27,0.872,28,0.013,30,0.229,32,0.152,33,0.19,101,0.798,161,0.01,162,0.01,184,1.914,216,1.52,219,0.75,254,0.466,255,0.808,256,0.75,263,1.385,275,4.024,298,1.258,309,1.341,310,2.12,318,0.75,475,2.111,717,1.792,790,2.963,1336,5.116,1337,3.703,1338,5.079,1339,6.598,1340,7.028,1341,5.814,1342,6.139,1343,6.451,1344,6.139,1345,6.139,1346,6.854,1347,6.139,1348,6.139,1349,6.139,1350,4.226,1351,6.139,1352,4.594,1353,5.079,1354,5.079,1355,5.814,1356,6.598,1357,7.028,1358,5.814,1359,5.814,1360,5.814]],["title/components/FilterComponent.html",[0,0.248,121,1.002]],["body/components/FilterComponent.html",[0,0.415,1,0.842,2,1.326,3,0.132,4,0.092,5,0.989,6,0.989,7,0.989,8,0.958,9,0.081,11,1.285,12,1.651,13,0.842,14,2.36,15,2.292,16,1.414,18,1.414,20,0.298,21,0.729,22,1.802,23,0.694,24,1.096,27,0.847,28,0.013,29,1.475,30,0.233,31,0.256,32,0.092,33,0.116,45,2.055,46,2.881,47,1.612,48,1.612,49,2.403,50,1.981,51,2.575,52,1.832,57,2.399,58,1.336,63,2.507,64,2.403,65,2.127,66,1.832,68,2.399,69,1.68,71,2.587,72,1.55,73,2.055,77,1.92,78,3.677,83,2.927,87,2.966,88,2.824,90,1.204,91,2.49,95,0.717,96,1.414,97,1.414,98,0.989,99,1.44,100,0.989,101,0.624,102,0.989,103,0.842,104,0.989,105,0.87,106,0.989,107,0.87,108,0.898,109,1.414,110,0.842,111,1.548,112,1.651,113,0.842,114,1.637,115,1.651,116,0.87,117,0.958,118,0.989,119,0.842,120,1.651,121,1.745,122,0.989,123,0.87,124,2.148,125,0.816,126,0.989,127,0.842,128,0.765,129,0.87,130,1.285,131,1.326,132,1.414,133,0.87,134,0.87,135,1.326,136,1.414,137,0.87,138,1.414,139,0.87,140,0.898,141,1.414,142,0.87,143,0.958,144,0.842,145,0.87,146,0.87,147,0.898,148,0.842,149,0.989,150,0.87,151,0.765,152,0.87,153,1.338,154,0.842,155,0.842,156,0.842,157,0.87,158,0.898,159,0.989,160,0.989,161,0.007,162,0.007,176,2.692,184,1.165,194,0.927,202,0.756,210,1.585,217,3.194,219,0.456,237,2.507,251,2.507,254,0.517,255,0.492,256,0.456,260,1.611,309,1.167,318,0.456,368,2.507,369,2.49,370,2.403,374,3.421,378,2.399,384,2.692,386,2.575,387,2.055,388,1.436,444,3.149,461,1.509,474,1.55,482,2.081,497,2.524,527,3.061,558,2.399,564,2.399,565,2.399,574,2.133,580,2.795,640,2.006,699,1.911,704,3.222,723,2.306,733,1.981,751,1.723,757,2.575,780,2.746,787,3.683,793,3.329,795,3.206,801,2.306,838,2.127,840,3.431,843,3.222,844,2.795,943,1.491,968,3.222,985,2.886,987,2.507,988,2.621,1002,3.234,1206,3.677,1278,2.795,1279,2.403,1283,1.832,1284,1.832,1285,1.612,1293,2.575,1350,2.127,1361,3.09,1362,5.907,1363,5.06,1364,5.631,1365,5.631,1366,5.631,1367,5.631,1368,5.16,1369,5.16,1370,3.538,1371,4.843,1372,5.06,1373,3.538,1374,3.998,1375,5.06,1376,3.538,1377,3.538,1378,3.538,1379,3.538,1380,3.683,1381,3.222,1382,3.538,1383,3.998,1384,3.538,1385,4.267,1386,2.253,1387,2.399,1388,2.795,1389,4.105,1390,4.372,1391,5.094,1392,4.693,1393,5.094,1394,4.372,1395,4.42,1396,3.09,1397,4.42,1398,3.09,1399,3.09,1400,3.09,1401,3.09,1402,3.09,1403,3.09,1404,4.42,1405,3.09,1406,3.538,1407,3.09,1408,4.42,1409,2.575,1410,3.09,1411,4.42,1412,4.42,1413,4.42,1414,4.42,1415,2.886,1416,2.795,1417,2.795,1418,3.998,1419,2.795,1420,2.795,1421,2.795,1422,3.09,1423,3.09,1424,2.575,1425,2.253,1426,2.795,1427,3.09]],["title/components/FilterMobileComponent.html",[0,0.248,123,1.002]],["body/components/FilterMobileComponent.html",[0,0.41,1,0.816,2,1.296,3,0.129,4,0.089,5,0.958,6,0.958,7,0.958,8,0.927,9,0.078,11,1.255,12,1.622,13,0.816,14,2.353,15,2.279,16,1.382,18,1.382,20,0.289,21,0.713,22,1.776,23,0.97,24,1.104,27,0.871,28,0.013,29,1.518,30,0.25,31,0.247,32,0.089,33,0.112,45,2.356,46,2.938,47,2.644,48,2.644,49,2.348,50,1.936,57,1.391,64,2.348,65,2.06,68,2.356,69,1.627,71,2.56,72,1.501,73,2.008,77,1.86,78,3.623,87,2.356,88,2.542,91,1.444,95,0.694,96,1.382,97,1.382,98,0.958,99,1.419,100,0.958,101,0.613,102,0.958,103,0.816,104,0.958,105,0.842,106,0.958,107,0.842,108,0.87,109,1.382,110,0.816,111,1.296,112,1.622,113,0.816,114,1.255,115,1.622,116,0.842,117,0.927,118,0.958,119,0.816,120,1.622,121,0.842,122,0.958,123,1.562,124,2.164,125,0.79,126,0.958,127,0.816,128,0.741,129,0.842,130,1.255,131,1.296,132,1.382,133,0.842,134,0.842,135,1.296,136,1.382,137,0.842,138,1.382,139,0.842,140,0.87,141,1.382,142,0.842,143,2.142,144,0.816,145,0.842,146,0.842,147,0.87,148,0.816,149,0.958,150,0.842,151,0.741,152,0.842,153,1.246,154,0.816,155,0.816,156,0.816,157,0.842,158,0.87,159,0.958,160,0.958,161,0.007,162,0.007,176,2.644,184,1.128,186,1.091,194,0.898,202,0.739,210,1.562,217,3.148,219,0.442,230,2.209,237,3.148,251,2.45,254,0.509,255,0.476,256,0.442,260,1.575,276,0.793,306,1.167,309,1.14,318,0.748,319,1.255,369,2.085,370,2.348,374,3.399,378,2.356,384,2.644,387,1.391,388,1.391,444,2.959,461,1.895,482,2.238,497,2.487,527,3.017,574,2.085,580,2.707,640,1.928,699,1.868,723,2.254,751,2.163,780,2.684,787,3.599,792,3.149,793,3.298,795,3.149,839,2.182,840,3.354,844,2.707,943,1.444,968,3.149,985,2.82,987,3.148,988,2.562,1002,2.895,1064,2.324,1066,3.354,1067,4.585,1068,3.907,1080,2.993,1097,3.599,1162,4.003,1166,3.599,1206,3.623,1278,2.707,1279,1.627,1283,1.775,1284,1.775,1285,1.562,1350,2.06,1364,5.549,1365,5.549,1366,5.549,1367,5.549,1368,5.068,1369,5.068,1371,4.717,1380,3.599,1381,3.149,1383,3.907,1385,4.051,1386,4.806,1388,2.707,1389,4.046,1390,4.308,1391,3.907,1392,4.624,1393,3.907,1394,4.308,1395,2.993,1396,2.993,1397,4.319,1398,2.993,1399,2.993,1400,2.993,1401,2.993,1402,2.993,1403,2.993,1404,4.319,1405,2.993,1407,2.993,1408,4.319,1409,2.494,1410,2.993,1411,4.319,1412,4.319,1413,4.319,1414,4.319,1420,2.707,1421,2.707,1422,2.993,1423,2.993,1424,2.494,1425,2.182,1428,6.777,1429,5.647,1430,5.02,1431,2.324,1432,4.945,1433,4.945,1434,3.599,1435,4.319,1436,3.426,1437,3.426,1438,3.426,1439,3.426,1440,3.426,1441,3.907,1442,4.945,1443,5.546,1444,3.599,1445,3.426,1446,3.426,1447,2.324,1448,3.907,1449,3.426]],["title/injectables/FilterService.html",[467,1.103,1371,2.596]],["body/injectables/FilterService.html",[3,0.143,4,0.143,9,0.125,20,0.461,21,0.976,24,1.108,27,0.954,28,0.013,29,1.465,30,0.29,31,0.395,32,0.143,33,0.179,101,0.578,124,2.192,161,0.01,162,0.01,184,1.802,194,1.435,202,1.012,219,0.706,242,3.356,251,3.808,254,0.439,255,0.761,256,0.706,263,1.304,278,3.503,309,1.696,318,0.706,319,1.591,374,3.525,444,3.474,467,1.833,468,1.58,472,2.223,473,2.143,475,1.53,497,2.652,527,3.216,640,2.005,713,2.599,727,2.967,733,2.652,734,2.855,737,5.352,743,4.905,1206,3.122,1350,3.292,1371,4.313,1381,4.313,1385,4.75,1390,3.712,1391,5.352,1392,3.984,1393,5.352,1394,3.712,1450,4.781,1451,7.355,1452,7.686,1453,7.686,1454,6.773,1455,5.474,1456,5.474,1457,6.773,1458,5.474,1459,5.474,1460,5.474,1461,5.474,1462,5.474,1463,5.474]],["title/classes/FirebaseAuthService.html",[33,0.133,602,2.967]],["body/classes/FirebaseAuthService.html",[3,0.207,4,0.073,9,0.064,20,0.234,21,0.611,23,0.546,24,1.068,27,1.006,28,0.013,30,0.226,32,0.073,33,0.168,99,0.622,101,0.793,140,1.303,145,0.684,147,1.303,151,0.917,153,1.684,161,0.006,162,0.006,177,2.33,202,0.923,209,3.166,216,1.407,217,2.1,219,0.796,221,2.899,223,2.252,242,2.543,245,2.622,250,1.931,251,3.223,253,1.931,254,0.542,255,0.858,256,0.74,258,2.965,263,1.366,264,2.831,266,3.352,269,3.451,270,5.303,275,3.089,276,1.204,277,3.129,280,2.972,283,3.522,285,2.417,286,2.195,289,5.075,290,3.115,291,2.659,292,2.1,293,3.702,295,3.348,296,2.724,300,3.223,309,1.323,318,0.74,319,1.11,327,1.511,336,2.431,339,2.699,341,3.481,444,2.419,447,2.543,458,2.874,461,1.711,462,4.188,463,4.068,464,2.719,466,2.752,468,1.482,469,1.379,474,1.219,475,1.949,482,1.493,489,5.14,501,3.273,502,2.012,506,2.659,512,2.195,523,3.348,533,3.654,602,4.177,604,2.199,605,2.148,639,2.275,640,1.847,642,2.874,699,2.555,701,4.44,708,3.348,715,5.682,716,3.912,717,2.454,719,2.874,720,3.702,727,2.514,728,3.702,730,3.085,731,3.195,733,2.547,734,2.939,735,2.431,737,2.199,739,2.431,741,2.431,744,1.772,745,2.1,753,3.702,754,5.394,760,3.085,765,4.483,786,1.721,790,2.742,810,1.545,871,1.887,895,3.199,903,2.431,961,2.3,967,3.115,981,2.195,1002,1.931,1146,2.874,1185,2.417,1224,2.874,1267,2.431,1271,2.3,1337,1.772,1464,3.481,1465,2.431,1466,2.874,1467,6.972,1468,2.783,1469,2.783,1470,4.238,1471,2.874,1472,4.177,1473,4.238,1474,4.238,1475,5.199,1476,2.783,1477,2.783,1478,2.783,1479,2.783,1480,2.783,1481,4.238,1482,3.085,1483,4.177,1484,3.085,1485,6.972,1486,4.238,1487,4.177,1488,5.738,1489,3.085,1490,4.238,1491,2.783,1492,3.085,1493,3.085,1494,3.085,1495,4.238,1496,3.702,1497,2.783,1498,4.728,1499,4.923,1500,4.495,1501,6.506,1502,3.348,1503,4.188,1504,4.177,1505,4.238,1506,2.783,1507,3.085,1508,4.587,1509,5.132,1510,5.132,1511,5.132,1512,5.132,1513,2.783,1514,3.085,1515,3.085,1516,2.874,1517,3.702,1518,4.238,1519,4.238,1520,4.238,1521,4.238,1522,2.874,1523,2.783,1524,4.238,1525,5.738,1526,4.238,1527,4.238,1528,4.238,1529,4.238,1530,4.238,1531,5.132,1532,4.238,1533,3.268,1534,2.783,1535,1.887,1536,2.783,1537,2.783,1538,4.238,1539,4.238,1540,2.783,1541,4.238,1542,4.238,1543,4.238,1544,4.238,1545,2.026,1546,2.783,1547,2.783,1548,4.238,1549,4.238,1550,4.238,1551,4.238,1552,4.238,1553,2.783,1554,2.783,1555,4.238,1556,4.238,1557,2.783,1558,2.783,1559,2.783,1560,2.783,1561,4.238,1562,2.783,1563,2.783,1564,5.132,1565,5.132,1566,2.783,1567,2.783,1568,2.783,1569,2.783,1570,2.783,1571,2.699,1572,2.783,1573,2.783,1574,2.195,1575,2.783,1576,2.783,1577,2.783,1578,2.783,1579,2.783,1580,2.431,1581,2.783,1582,2.783,1583,2.783,1584,2.783,1585,2.783,1586,2.783,1587,2.783,1588,2.783,1589,2.783,1590,2.783,1591,2.783,1592,2.026,1593,2.783,1594,2.783]],["title/classes/FirebaseDataService.html",[33,0.133,1595,3.221]],["body/classes/FirebaseDataService.html",[3,0.092,4,0.092,9,0.081,20,0.298,21,1.023,23,0.695,24,1.023,27,0.979,28,0.013,30,0.254,32,0.092,33,0.116,58,2.233,65,2.13,101,0.847,151,1.095,161,0.007,162,0.007,195,3.549,218,4.52,219,1.026,225,2.525,230,1.924,232,3.225,253,2.308,254,0.671,255,0.987,256,0.916,271,4.002,276,1.301,298,1.332,300,2.509,318,0.981,346,3.435,450,2.13,455,3.225,461,1.51,462,3.435,464,2.764,466,2.915,468,1.023,469,1.755,475,2.126,506,3.342,605,2.252,618,5.068,639,2.598,640,1.745,699,1.913,717,2.487,723,2.308,727,3.274,733,1.983,734,2.719,745,1.755,786,2.057,814,3.342,815,3.679,857,4.269,860,3.879,867,4.424,868,2.256,871,2.402,895,2.624,961,2.749,981,2.624,1011,2.725,1101,3.687,1185,2.889,1271,2.749,1313,3.687,1314,4.424,1316,5.533,1317,7.004,1318,4.424,1320,4.424,1322,4.424,1324,4.424,1326,4.424,1328,4.424,1329,4.695,1332,4.424,1334,3.555,1337,2.256,1464,3.435,1466,3.435,1475,4.967,1496,4.424,1498,5.234,1503,5.438,1508,5.824,1516,3.435,1522,4.375,1535,2.402,1580,3.094,1595,5.097,1596,3.094,1597,3.094,1598,3.542,1599,5.065,1600,5.065,1601,4.695,1602,3.435,1603,3.542,1604,5.065,1605,7.099,1606,7.099,1607,3.542,1608,6.451,1609,6.451,1610,5.065,1611,3.542,1612,3.687,1613,3.542,1614,5.065,1615,5.065,1616,3.542,1617,3.687,1618,5.065,1619,5.065,1620,5.065,1621,3.542,1622,3.542,1623,3.542,1624,3.542,1625,3.542,1626,3.687,1627,3.687,1628,2.256,1629,3.094,1630,5.065,1631,3.094,1632,3.094,1633,3.542,1634,5.912,1635,3.542,1636,3.542,1637,3.542,1638,5.065,1639,5.065,1640,3.687,1641,3.542,1642,5.065,1643,3.542,1644,3.542,1645,3.542,1646,3.542]],["title/interfaces/FirebaseDocument.html",[931,1.177,1647,2.764]],["body/interfaces/FirebaseDocument.html",[3,0.064,4,0.037,9,0.161,13,0.767,20,0.119,27,0.987,28,0.013,29,0.697,30,0.2,31,0.102,32,0.1,33,0.046,41,1.031,50,0.554,58,0.535,90,0.482,99,0.316,101,0.725,108,0.36,128,0.306,130,0.36,151,1.022,153,1.496,158,0.36,161,0.004,162,0.004,177,1.308,194,1.936,195,2.761,202,0.646,216,1.785,217,1.596,218,2.753,219,0.415,221,2.891,222,0.734,223,2.87,225,2.277,226,0.482,229,2.851,234,0.852,235,0.672,239,0.672,242,2.342,245,1.261,251,0.702,253,1.746,254,0.527,257,1.21,258,2.155,260,0.451,263,1.636,264,1.92,268,2.566,269,0.852,273,4.233,274,1.031,275,3.262,276,1.285,277,3.079,278,1.97,279,3.011,280,3.404,287,1.031,288,2.753,290,1.748,291,2.24,292,2.775,296,1.16,298,1.338,300,0.702,302,3.092,305,2.185,306,0.832,309,0.327,310,1.175,318,1.012,319,1.211,328,2.219,332,3.046,338,0.96,339,3.226,340,1.031,341,2.599,342,2.185,345,3.147,351,1.031,356,0.852,368,0.702,374,0.62,381,2.24,414,2.975,441,1.899,444,0.597,447,0.702,452,2.185,453,1.031,455,0.902,457,5.427,458,4.659,459,2.116,461,0.961,464,1.423,465,2.185,466,0.923,467,0.661,468,0.705,472,0.575,473,0.554,475,2.101,482,1.135,497,0.554,501,0.808,502,1.819,503,1.985,506,3.8,512,2.449,527,1.16,605,0.436,639,2.159,640,1.848,642,1.657,652,1.556,699,1.217,701,2.44,702,1.031,705,2.245,706,0.734,707,1.556,716,0.852,717,2.29,723,0.645,727,1.894,731,0.992,733,1.692,734,1.03,743,3.952,744,0.902,749,1.657,751,0.832,759,1.031,763,1.031,789,1.265,790,2.77,808,1.07,810,0.516,811,0.902,814,1.669,815,0.808,857,0.852,858,0.96,860,1.469,882,1.778,896,2.345,905,1.031,913,1.031,926,1.031,931,0.93,932,0.645,961,0.769,964,0.734,975,0.852,981,0.734,1002,1.113,1011,2.563,1039,2.053,1041,3.219,1044,3.219,1045,1.469,1108,1.031,1119,1.031,1128,2.6,1134,4.077,1146,2.185,1176,1.031,1184,2.345,1185,0.808,1188,0.96,1189,2.44,1201,0.96,1212,1.031,1214,1.031,1224,1.657,1237,0.96,1238,3.197,1268,1.031,1271,2.08,1285,0.645,1381,0.902,1425,0.902,1472,1.031,1483,1.031,1484,1.031,1487,2.345,1489,1.031,1492,1.031,1493,1.778,1494,3.441,1498,4.9,1499,5,1500,2.345,1503,5.352,1504,1.031,1507,1.031,1508,5.544,1514,1.031,1515,1.031,1516,5.097,1522,0.96,1533,2.44,1545,2.789,1601,4.6,1612,2.345,1617,1.031,1626,2.789,1627,3.147,1640,1.031,1647,3.944,1648,1.031,1649,4.23,1650,1.119,1651,1.119,1652,1.93,1653,1.119,1654,1.119,1655,1.119,1656,1.119,1657,2.545,1658,1.119,1659,1.119,1660,2.545,1661,3.416,1662,1.119,1663,1.93,1664,1.93,1665,1.119,1666,1.119,1667,1.031,1668,1.119,1669,1.119,1670,1.119,1671,1.119,1672,1.93,1673,1.119,1674,3.736,1675,3.028,1676,1.119,1677,1.93,1678,1.119,1679,1.93,1680,1.93,1681,1.031,1682,1.657,1683,1.119,1684,1.119,1685,1.778,1686,1.119,1687,1.119,1688,1.119,1689,1.119,1690,1.119,1691,1.119,1692,1.119,1693,1.119,1694,1.119,1695,1.119,1696,1.119,1697,2.345,1698,3.416,1699,1.778,1700,1.119,1701,1.93,1702,2.185,1703,1.031,1704,1.031,1705,1.031,1706,1.031,1707,1.031,1708,1.031,1709,1.031,1710,3.441,1711,1.119,1712,1.119,1713,1.119,1714,4.876,1715,1.119,1716,1.93,1717,1.119,1718,4.744,1719,1.119,1720,1.119,1721,1.119,1722,2.545,1723,1.119,1724,1.119,1725,1.119,1726,1.119,1727,1.119,1728,4.595,1729,1.93,1730,1.119,1731,1.93,1732,1.119,1733,1.119,1734,1.93,1735,1.93,1736,6.235,1737,2.545,1738,3.736,1739,1.119,1740,2.545,1741,1.119,1742,1.119,1743,1.119,1744,4.425,1745,1.556,1746,3.206,1747,3.206,1748,1.119,1749,1.119,1750,1.93,1751,2.44,1752,1.93,1753,3.028,1754,3.736,1755,3.147,1756,2.545,1757,1.119,1758,1.119,1759,1.93,1760,0.96,1761,1.119,1762,5.938,1763,2.051,1764,1.119,1765,1.119,1766,1.93,1767,3.416,1768,1.119,1769,0.96,1770,3.736,1771,1.93,1772,1.119,1773,2.545,1774,1.119,1775,1.93,1776,1.119,1777,1.119,1778,4.993,1779,5.969,1780,5.906,1781,4.595,1782,1.119,1783,3.416,1784,1.119,1785,1.119,1786,4.595,1787,1.119,1788,1.119,1789,1.119,1790,1.119,1791,1.119,1792,1.93,1793,1.119,1794,1.93,1795,2.545,1796,1.93,1797,2.545,1798,0.96,1799,1.119,1800,2.545,1801,1.93,1802,1.119,1803,1.031,1804,1.119,1805,1.119,1806,2.545,1807,1.93,1808,1.119,1809,1.93,1810,1.119,1811,2.545,1812,3.028,1813,1.119,1814,1.119,1815,4.23,1816,2.44,1817,1.119,1818,1.93,1819,3.416,1820,1.119,1821,2.545,1822,1.93,1823,2.185,1824,1.119,1825,3.436,1826,2.932,1827,1.119,1828,3.688,1829,2.345,1830,2.545,1831,1.93,1832,2.545,1833,1.119,1834,1.93,1835,1.119,1836,1.119,1837,1.93,1838,1.119,1839,1.119,1840,1.119,1841,1.119,1842,1.119,1843,1.119,1844,1.119,1845,1.119,1846,1.119,1847,1.119,1848,2.545,1849,3.028,1850,1.119,1851,1.119,1852,1.119,1853,1.119,1854,1.119,1855,1.119,1856,1.119,1857,3.028,1858,1.119,1859,1.119,1860,1.119,1861,1.119,1862,1.119,1863,1.119,1864,1.119,1865,1.119,1866,3.028,1867,1.119,1868,1.031,1869,1.119,1870,1.119,1871,1.119,1872,3.028,1873,1.93,1874,1.119,1875,3.736,1876,1.119,1877,1.119,1878,1.119,1879,3.028,1880,3.028,1881,1.119,1882,1.93,1883,1.93,1884,1.119,1885,2.545,1886,1.119,1887,1.119,1888,1.93,1889,1.119,1890,3.416,1891,1.119,1892,2.545,1893,1.119,1894,1.119,1895,1.93,1896,3.028,1897,1.657,1898,1.119,1899,1.119,1900,1.119,1901,2.545,1902,3.011,1903,1.93,1904,1.119,1905,1.93,1906,1.119,1907,1.119,1908,1.119,1909,1.119,1910,1.93,1911,1.119,1912,0.96,1913,3.028,1914,2.545,1915,1.119,1916,1.119,1917,1.119,1918,1.119,1919,1.119,1920,1.119,1921,1.119,1922,1.119,1923,1.119,1924,1.031,1925,0.96,1926,1.93,1927,1.119,1928,1.93,1929,1.119,1930,1.119,1931,1.119,1932,1.119,1933,1.119,1934,1.119,1935,1.93,1936,1.119,1937,1.119,1938,1.119,1939,1.119,1940,1.119,1941,3.736,1942,1.119,1943,1.119,1944,1.119,1945,3.736,1946,1.031,1947,1.119,1948,3.028,1949,1.119,1950,1.93,1951,1.119,1952,1.119,1953,1.119,1954,1.119]],["title/classes/FirebaseMediaService.html",[33,0.133,608,2.764]],["body/classes/FirebaseMediaService.html",[3,0.128,4,0.128,9,0.186,20,0.413,21,1.065,23,0.963,24,0.911,27,0.917,28,0.013,30,0.276,32,0.165,33,0.16,90,2.798,99,1.412,101,0.668,161,0.009,162,0.009,219,0.815,221,3.064,225,2.475,230,2.203,232,4.026,235,3.002,245,2.082,254,0.507,255,0.879,256,0.815,276,1.184,277,2.77,278,2.882,288,4.454,290,3.432,291,3.275,298,1.184,318,0.815,381,3.275,438,4.026,461,1.886,464,2.724,466,2.79,468,1.417,474,2.15,475,1.372,605,2.453,608,5.01,609,3.878,614,4.213,639,2.535,640,1.207,705,3.002,706,3.275,717,2.155,786,2.567,808,2.15,868,3.126,931,1.417,967,4.149,1011,1.79,1101,4.602,1189,4.026,1222,3.878,1238,3.996,1337,3.126,1464,4.288,1466,4.288,1471,4.288,1475,3.573,1535,3.329,1597,4.288,1602,4.288,1702,4.288,1745,4.026,1746,4.288,1747,5.01,1751,4.026,1763,5.07,1798,3.329,1825,5.307,1826,4.288,1912,4.288,1955,3.878,1956,4.909,1957,5.523,1958,5.523,1959,5.523,1960,4.996,1961,4.996,1962,4.909,1963,5.523,1964,5.523,1965,4.996,1966,5.523,1967,5.523,1968,5.523,1969,5.523,1970,6.11,1971,3.329,1972,3.329,1973,3.329,1974,3.329,1975,4.288,1976,4.288,1977,4.288,1978,4.288,1979,4.288,1980,4.288,1981,4.288,1982,4.288]],["title/interfaces/FirebaseStorageFile.html",[931,1.177,1682,2.764]],["body/interfaces/FirebaseStorageFile.html",[3,0.064,4,0.037,9,0.165,13,0.767,20,0.119,27,0.987,28,0.013,29,0.697,30,0.2,31,0.102,32,0.1,33,0.046,41,1.031,50,0.554,58,0.535,90,0.482,99,0.316,101,0.725,108,0.36,128,0.306,130,0.36,151,1.022,153,1.496,158,0.36,161,0.004,162,0.004,177,1.308,194,1.936,195,3,202,0.646,216,1.785,217,1.596,218,2.753,219,0.415,221,2.891,222,0.734,223,2.87,225,2.277,226,0.482,229,2.851,234,0.852,235,0.672,239,0.672,242,2.342,245,1.261,251,0.702,253,1.746,254,0.527,257,1.21,258,2.155,260,0.451,263,1.636,264,1.92,268,2.566,269,0.852,273,4.233,274,1.031,275,3.262,276,1.277,277,3.079,278,1.97,279,3.011,280,3.404,287,1.031,288,2.753,290,1.748,291,2.24,292,2.775,296,1.16,298,1.34,300,0.702,302,3.092,305,2.185,306,0.832,309,0.327,310,1.175,318,1.012,319,1.211,328,2.219,332,3.046,338,0.96,339,3.226,340,1.031,341,2.599,342,2.185,345,3.147,351,1.031,356,0.852,368,0.702,374,0.62,381,2.24,414,2.975,441,1.899,444,0.597,447,0.702,452,2.185,453,1.031,455,0.902,457,5.427,458,4.659,459,2.116,461,0.961,464,1.423,465,2.185,466,0.923,467,0.661,468,0.705,472,0.575,473,0.554,475,2.101,482,1.135,497,0.554,501,0.808,502,1.819,503,1.985,506,3.8,512,2.449,527,1.16,605,0.436,639,2.159,640,1.848,642,1.657,652,1.556,699,1.217,701,2.44,702,1.031,705,2.245,706,0.734,707,1.556,716,0.852,717,2.29,723,0.645,727,1.894,731,0.992,733,1.692,734,1.03,743,3.952,744,0.902,749,1.657,751,0.832,759,1.031,763,1.031,789,1.265,790,2.77,808,1.07,810,0.516,811,0.902,814,1.669,815,0.808,857,0.852,858,0.96,860,1.469,882,1.778,896,2.345,905,1.031,913,1.031,926,1.031,931,0.93,932,0.645,961,0.769,964,0.734,975,0.852,981,0.734,1002,1.113,1011,2.472,1039,2.053,1041,3.219,1044,3.219,1045,1.469,1108,1.031,1119,1.031,1128,2.6,1134,4.077,1146,2.185,1176,1.031,1184,2.345,1185,0.808,1188,0.96,1189,2.44,1201,0.96,1212,1.031,1214,1.031,1224,1.657,1237,0.96,1238,3.197,1268,1.031,1271,2.08,1285,0.645,1381,0.902,1425,0.902,1472,1.031,1483,1.031,1484,1.031,1487,2.345,1489,1.031,1492,1.031,1493,1.778,1494,3.441,1498,4.9,1499,5,1500,2.345,1503,5.352,1504,1.031,1507,1.031,1508,5.544,1514,1.031,1515,1.031,1516,5.097,1522,0.96,1533,2.44,1545,2.789,1601,4.6,1612,2.345,1617,1.031,1626,2.789,1627,3.147,1640,1.031,1647,3.798,1648,1.031,1649,3.736,1650,1.119,1651,1.119,1652,1.93,1653,1.119,1654,1.119,1655,1.119,1656,1.119,1657,2.545,1658,1.119,1659,1.119,1660,2.545,1661,3.416,1662,1.119,1663,1.93,1664,1.93,1665,1.119,1666,1.119,1667,1.031,1668,1.119,1669,1.119,1670,1.119,1671,1.119,1672,1.93,1673,1.119,1674,3.736,1675,3.028,1676,1.119,1677,1.93,1678,1.119,1679,1.93,1680,1.93,1681,1.031,1682,2.185,1683,1.119,1684,1.119,1685,1.778,1686,1.119,1687,1.119,1688,1.119,1689,1.119,1690,1.119,1691,1.119,1692,1.119,1693,1.119,1694,1.119,1695,1.119,1696,1.119,1697,2.345,1698,3.416,1699,1.778,1700,1.119,1701,1.93,1702,2.185,1703,1.031,1704,1.031,1705,1.031,1706,1.031,1707,1.031,1708,1.031,1709,1.031,1710,3.441,1711,1.119,1712,1.119,1713,1.119,1714,4.876,1715,1.119,1716,1.93,1717,1.119,1718,4.744,1719,1.119,1720,1.119,1721,1.119,1722,2.545,1723,1.119,1724,1.119,1725,1.119,1726,1.119,1727,1.119,1728,4.595,1729,1.93,1730,1.119,1731,1.93,1732,1.119,1733,1.119,1734,1.93,1735,1.93,1736,6.235,1737,2.545,1738,3.736,1739,1.119,1740,2.545,1741,1.119,1742,1.119,1743,1.119,1744,4.425,1745,1.556,1746,3.206,1747,3.206,1748,1.119,1749,1.119,1750,1.93,1751,2.44,1752,1.93,1753,3.028,1754,3.736,1755,3.147,1756,2.545,1757,1.119,1758,1.119,1759,1.93,1760,0.96,1761,1.119,1762,5.938,1763,2.051,1764,1.119,1765,1.119,1766,1.93,1767,3.416,1768,1.119,1769,0.96,1770,3.736,1771,1.93,1772,1.119,1773,2.545,1774,1.119,1775,1.93,1776,1.119,1777,1.119,1778,4.993,1779,5.969,1780,5.906,1781,4.595,1782,1.119,1783,3.416,1784,1.119,1785,1.119,1786,4.595,1787,1.119,1788,1.119,1789,1.119,1790,1.119,1791,1.119,1792,1.93,1793,1.119,1794,1.93,1795,2.545,1796,1.93,1797,2.545,1798,0.96,1799,1.119,1800,2.545,1801,1.93,1802,1.119,1803,1.031,1804,1.119,1805,1.119,1806,2.545,1807,1.93,1808,1.119,1809,1.93,1810,1.119,1811,2.545,1812,3.028,1813,1.119,1814,1.119,1815,4.23,1816,2.44,1817,1.119,1818,1.93,1819,3.416,1820,1.119,1821,2.545,1822,1.93,1823,2.185,1824,1.119,1825,3.436,1826,2.932,1827,1.119,1828,3.688,1829,2.345,1830,2.545,1831,1.93,1832,2.545,1833,1.119,1834,1.93,1835,1.119,1836,1.119,1837,1.93,1838,1.119,1839,1.119,1840,1.119,1841,1.119,1842,1.119,1843,1.119,1844,1.119,1845,1.119,1846,1.119,1847,1.119,1848,2.545,1849,3.028,1850,1.119,1851,1.119,1852,1.119,1853,1.119,1854,1.119,1855,1.119,1856,1.119,1857,3.028,1858,1.119,1859,1.119,1860,1.119,1861,1.119,1862,1.119,1863,1.119,1864,1.119,1865,1.119,1866,3.028,1867,1.119,1868,1.031,1869,1.119,1870,1.119,1871,1.119,1872,3.028,1873,1.93,1874,1.119,1875,3.736,1876,1.119,1877,1.119,1878,1.119,1879,3.028,1880,3.028,1881,1.119,1882,1.93,1883,1.93,1884,1.119,1885,2.545,1886,1.119,1887,1.119,1888,1.93,1889,1.119,1890,3.416,1891,1.119,1892,2.545,1893,1.119,1894,1.119,1895,1.93,1896,3.028,1897,1.657,1898,1.119,1899,1.119,1900,1.119,1901,2.545,1902,3.011,1903,1.93,1904,1.119,1905,1.93,1906,1.119,1907,1.119,1908,1.119,1909,1.119,1910,1.93,1911,1.119,1912,0.96,1913,3.028,1914,2.545,1915,1.119,1916,1.119,1917,1.119,1918,1.119,1919,1.119,1920,1.119,1921,1.119,1922,1.119,1923,1.119,1924,1.031,1925,0.96,1926,1.93,1927,1.119,1928,1.93,1929,1.119,1930,1.119,1931,1.119,1932,1.119,1933,1.119,1934,1.119,1935,1.93,1936,1.119,1937,1.119,1938,1.119,1939,1.119,1940,1.119,1941,3.736,1942,1.119,1943,1.119,1944,1.119,1945,3.736,1946,1.031,1947,1.119,1948,3.028,1949,1.119,1950,1.93,1951,1.119,1952,1.119,1953,1.119,1954,1.119]],["title/interfaces/FirebaseUserCredential.html",[931,1.177,1533,2.596]],["body/interfaces/FirebaseUserCredential.html",[3,0.064,4,0.037,9,0.161,13,0.768,20,0.119,27,0.987,28,0.013,29,0.698,30,0.2,31,0.102,32,0.1,33,0.046,41,1.033,50,0.555,58,0.536,90,0.483,99,0.317,101,0.726,108,0.36,128,0.307,130,0.36,151,1.024,153,1.515,158,0.36,161,0.004,162,0.004,177,1.31,194,1.936,195,2.764,202,0.647,216,1.785,217,1.598,218,2.756,219,0.416,221,2.892,222,0.735,223,2.871,225,2.279,226,0.483,229,2.853,234,0.853,235,0.674,239,0.674,242,2.345,245,1.263,251,0.703,253,1.749,254,0.518,257,1.212,258,2.157,260,0.452,263,1.637,264,1.922,268,2.569,269,0.853,273,4.236,274,1.033,275,3.264,276,1.278,277,3.081,278,1.973,279,3.014,280,3.406,287,1.033,288,2.756,290,1.751,291,2.242,292,2.777,296,1.162,298,1.336,300,0.703,302,3.093,305,2.188,306,0.833,309,0.327,310,1.176,318,1.012,319,1.212,328,2.221,332,3.047,338,0.962,339,3.229,340,1.033,341,2.602,342,2.188,345,3.151,351,1.033,356,0.853,368,0.703,374,0.622,381,2.242,414,2.977,441,1.901,444,0.598,447,0.703,452,2.188,453,1.033,455,0.903,457,5.429,458,4.661,459,2.117,461,0.962,464,1.425,465,2.188,466,0.924,467,0.662,468,0.706,472,0.576,473,0.555,475,2.101,482,1.136,497,0.555,501,0.809,502,1.822,503,1.987,506,3.801,512,2.452,527,1.162,605,0.437,639,2.16,640,1.849,642,1.659,652,1.558,699,1.218,701,2.443,702,1.033,705,2.247,706,0.735,707,1.558,716,0.853,717,2.291,723,0.647,727,1.896,731,0.994,733,1.694,734,1.031,743,3.954,744,0.903,749,1.659,751,0.833,759,1.033,763,1.033,789,1.267,790,2.772,808,1.072,810,0.517,811,0.903,814,1.671,815,0.809,857,0.853,858,0.962,860,1.471,882,1.781,896,2.348,905,1.033,913,1.033,926,1.033,931,0.931,932,0.647,961,0.77,964,0.735,975,0.853,981,0.735,1002,1.115,1011,2.474,1039,2.055,1041,3.222,1044,3.222,1045,1.471,1108,1.033,1119,1.033,1128,2.603,1134,4.08,1146,2.188,1176,1.033,1184,2.348,1185,0.809,1188,0.962,1189,2.443,1201,0.962,1212,1.033,1214,1.033,1224,1.659,1237,0.962,1238,3.199,1268,1.033,1271,2.083,1285,0.647,1381,0.903,1425,0.903,1472,1.033,1483,1.033,1484,1.033,1487,2.348,1489,1.033,1492,1.033,1493,1.781,1494,3.445,1498,4.902,1499,5.003,1500,2.348,1503,5.353,1504,1.033,1507,1.033,1508,5.545,1514,1.033,1515,1.033,1516,5.099,1522,0.962,1533,2.756,1545,2.793,1601,4.603,1612,2.348,1617,1.033,1626,2.793,1627,3.151,1640,1.033,1647,3.802,1648,1.033,1649,3.739,1650,1.121,1651,1.121,1652,1.933,1653,1.121,1654,1.121,1655,1.121,1656,1.121,1657,2.549,1658,1.121,1659,1.121,1660,2.549,1661,3.42,1662,1.121,1663,1.933,1664,1.933,1665,1.121,1666,1.121,1667,1.033,1668,1.121,1669,1.121,1670,1.121,1671,1.121,1672,1.933,1673,1.121,1674,3.739,1675,3.031,1676,1.121,1677,1.933,1678,1.121,1679,1.933,1680,3.031,1681,1.033,1682,1.659,1683,1.121,1684,1.121,1685,1.781,1686,1.121,1687,1.121,1688,1.121,1689,1.121,1690,1.121,1691,1.121,1692,1.121,1693,1.121,1694,1.121,1695,1.121,1696,1.121,1697,2.348,1698,3.42,1699,1.781,1700,1.121,1701,1.933,1702,2.188,1703,1.033,1704,1.033,1705,1.033,1706,1.033,1707,1.033,1708,1.033,1709,1.033,1710,3.445,1711,1.121,1712,1.121,1713,1.121,1714,4.879,1715,1.121,1716,1.933,1717,1.121,1718,4.748,1719,1.121,1720,1.121,1721,1.121,1722,2.549,1723,1.121,1724,1.121,1725,1.121,1726,1.121,1727,1.121,1728,4.599,1729,1.933,1730,1.121,1731,1.933,1732,1.121,1733,1.121,1734,1.933,1735,1.933,1736,6.237,1737,2.549,1738,3.739,1739,1.121,1740,2.549,1741,1.121,1742,1.121,1743,1.121,1744,4.429,1745,1.558,1746,3.21,1747,3.21,1748,1.121,1749,1.121,1750,1.933,1751,2.443,1752,1.933,1753,3.031,1754,3.739,1755,3.151,1756,2.549,1757,1.121,1758,1.121,1759,1.933,1760,0.962,1761,1.121,1762,5.94,1763,2.054,1764,1.121,1765,1.121,1766,1.933,1767,3.42,1768,1.121,1769,0.962,1770,3.739,1771,1.933,1772,1.121,1773,2.549,1774,1.121,1775,1.933,1776,1.121,1777,1.121,1778,4.996,1779,5.971,1780,5.908,1781,4.599,1782,1.121,1783,3.42,1784,1.121,1785,1.121,1786,4.599,1787,1.121,1788,1.121,1789,1.121,1790,1.121,1791,1.121,1792,1.933,1793,1.121,1794,1.933,1795,2.549,1796,1.933,1797,2.549,1798,0.962,1799,1.121,1800,2.549,1801,1.933,1802,1.121,1803,1.033,1804,1.121,1805,1.121,1806,2.549,1807,1.933,1808,1.121,1809,1.933,1810,1.121,1811,2.549,1812,3.031,1813,1.121,1814,1.121,1815,4.234,1816,2.443,1817,1.121,1818,1.933,1819,3.42,1820,1.121,1821,2.549,1822,1.933,1823,2.188,1824,1.121,1825,3.439,1826,2.935,1827,1.121,1828,3.691,1829,2.348,1830,2.549,1831,1.933,1832,2.549,1833,1.121,1834,1.933,1835,1.121,1836,1.121,1837,1.933,1838,1.121,1839,1.121,1840,1.121,1841,1.121,1842,1.121,1843,1.121,1844,1.121,1845,1.121,1846,1.121,1847,1.121,1848,2.549,1849,3.031,1850,1.121,1851,1.121,1852,1.121,1853,1.121,1854,1.121,1855,1.121,1856,1.121,1857,3.031,1858,1.121,1859,1.121,1860,1.121,1861,1.121,1862,1.121,1863,1.121,1864,1.121,1865,1.121,1866,3.031,1867,1.121,1868,1.033,1869,1.121,1870,1.121,1871,1.121,1872,3.031,1873,1.933,1874,1.121,1875,3.739,1876,1.121,1877,1.121,1878,1.121,1879,3.031,1880,3.031,1881,1.121,1882,1.933,1883,1.933,1884,1.121,1885,2.549,1886,1.121,1887,1.121,1888,1.933,1889,1.121,1890,3.42,1891,1.121,1892,2.549,1893,1.121,1894,1.121,1895,1.933,1896,3.031,1897,1.659,1898,1.121,1899,1.121,1900,1.121,1901,2.549,1902,3.014,1903,1.933,1904,1.121,1905,1.933,1906,1.121,1907,1.121,1908,1.121,1909,1.121,1910,1.933,1911,1.121,1912,0.962,1913,3.031,1914,2.549,1915,1.121,1916,1.121,1917,1.121,1918,1.121,1919,1.121,1920,1.121,1921,1.121,1922,1.121,1923,1.121,1924,1.033,1925,0.962,1926,1.933,1927,1.121,1928,1.933,1929,1.121,1930,1.121,1931,1.121,1932,1.121,1933,1.121,1934,1.121,1935,1.933,1936,1.121,1937,1.121,1938,1.121,1939,1.121,1940,1.121,1941,3.739,1942,1.121,1943,1.121,1944,1.121,1945,3.739,1946,1.033,1947,1.121,1948,3.031,1949,1.121,1950,1.933,1951,1.121,1952,1.121,1953,1.121,1954,1.121]],["title/components/HomePage.html",[0,0.248,125,0.94]],["body/components/HomePage.html",[0,0.457,1,0.753,2,1.603,3,0.17,4,0.083,5,0.884,6,0.884,7,0.884,8,0.856,9,0.072,13,0.753,14,2.337,15,2.271,16,1.303,18,1.303,20,0.266,21,0.672,22,1.709,23,1.2,24,1.044,27,0.809,28,0.013,29,1.323,30,0.301,31,0.228,32,0.083,33,0.103,45,2.648,46,3.054,47,1.441,48,2.125,49,2.631,50,2.169,52,2.415,57,1.284,58,2.31,63,2.745,64,2.631,66,1.638,68,1.284,71,1.7,73,1.284,76,2.301,78,2.659,87,2.483,88,2.043,90,1.588,91,1.966,92,2.761,95,0.641,96,1.303,97,1.303,98,0.884,99,1.366,100,0.884,101,0.689,102,0.884,103,0.753,104,0.884,105,0.777,106,0.884,107,0.777,108,0.803,109,1.303,110,0.753,111,1.222,112,1.549,113,0.753,114,1.184,115,1.549,116,0.777,117,0.856,118,0.884,119,0.753,120,1.549,121,1.147,122,0.884,123,1.362,124,2.062,125,1.41,126,0.884,127,0.753,128,1.476,129,0.777,130,1.936,131,1.222,132,1.303,133,0.777,134,0.777,135,1.222,136,1.303,137,0.777,138,1.303,139,0.777,140,0.803,141,1.303,142,1.147,143,1.765,144,0.753,145,0.777,146,0.777,147,0.803,148,0.753,149,0.884,150,0.777,151,0.684,152,0.777,153,1.339,154,0.753,155,0.753,156,0.753,157,0.777,158,0.803,159,0.884,160,0.884,161,0.009,162,0.007,176,1.441,186,1.007,193,1.076,194,1.789,202,0.697,209,2.876,210,1.147,214,3.998,216,1.008,219,0.715,225,1.825,226,2.22,230,2.325,235,2.214,237,3.03,243,1.825,250,2.525,252,2.969,254,0.523,255,0.77,256,0.715,258,2.125,259,4.073,260,1.485,263,0.753,276,0.888,298,1.045,309,0.729,313,2.013,318,0.91,319,1.323,328,2.427,332,2.427,366,2.498,368,2.745,369,1.333,370,2.214,373,2.31,378,1.284,386,2.301,387,1.284,444,1.966,450,2.804,461,1.391,464,1.824,468,0.913,469,1.566,475,1.823,497,1.825,504,3.162,506,2.415,525,3.162,527,3.24,564,2.144,565,2.144,566,2.761,572,2.761,574,1.333,605,2.424,639,1.764,717,1.707,786,1.893,840,2.144,843,2.969,854,2.631,908,2.498,912,3.394,965,2.804,985,2.659,987,2.31,988,2.415,1002,2.125,1011,2.488,1036,1.566,1066,3.162,1161,4.451,1162,3.892,1166,3.394,1168,3.684,1210,2.144,1211,2.301,1257,2.144,1258,2.301,1261,2.301,1262,2.301,1263,4.033,1279,1.501,1293,2.301,1371,4.613,1383,4.832,1388,2.498,1415,1.803,1416,2.498,1417,2.498,1418,3.684,1419,2.498,1424,2.301,1425,2.969,1426,2.498,1427,2.761,1429,2.301,1444,3.394,1685,4.033,1983,2.761,1984,5.54,1985,4.663,1986,5.54,1987,3.677,1988,4.663,1989,6.115,1990,6.115,1991,3.161,1992,4.663,1993,4.663,1994,3.161,1995,3.161,1996,4.663,1997,4.663,1998,4.663,1999,3.161,2000,5.54,2001,3.161,2002,3.161,2003,4.663,2004,4.663,2005,5.54,2006,3.161,2007,2.144,2008,3.161,2009,2.761,2010,2.761,2011,3.161,2012,3.161,2013,5.54,2014,3.161,2015,3.161,2016,3.161,2017,4.663,2018,3.161,2019,3.161,2020,2.761,2021,3.161,2022,7.057,2023,3.161,2024,6.824,2025,3.161,2026,6.522,2027,3.161,2028,6.522,2029,3.161,2030,5.342,2031,5.342,2032,4.663,2033,4.663,2034,3.394,2035,4.839,2036,3.161,2037,3.161]],["title/modules/HomePageModule.html",[163,1.139,2038,2.967]],["body/modules/HomePageModule.html",[3,0.133,4,0.133,9,0.116,28,0.013,30,0.337,31,0.367,32,0.133,33,0.166,95,1.031,110,1.881,111,1.695,113,1.881,114,1.9,121,1.942,123,1.942,124,1.333,125,1.822,134,1.942,135,1.695,137,1.942,153,1.269,155,1.881,156,1.881,161,0.009,162,0.009,163,1.421,165,1.791,166,2.415,167,3.684,168,2.634,169,1.854,170,1.921,175,3.35,176,2.318,177,2.065,179,2.532,180,2.532,181,3.689,182,2.76,183,3.889,184,1.674,185,3.511,186,1.619,187,2.9,210,1.25,397,4.287,399,4.708,404,3.35,405,2.76,406,2.9,407,3.689,408,2.634,409,2.634,410,3.35,411,3.238,421,3.701,424,3.058,425,2.634,426,2.228,427,2.9,428,2.9,525,3.449,936,3.701,1063,3.701,1211,3.701,1429,3.701,2009,4.442,2010,6.212,2038,6.284,2039,4.442,2040,4.442,2041,4.442,2042,5.357,2043,5.085,2044,4.442,2045,5.649,2046,6.468,2047,5.085,2048,3.701,2049,4.018,2050,4.018,2051,3.701,2052,3.701]],["title/modules/HomePageRoutingModule.html",[163,1.139,2042,2.764]],["body/modules/HomePageRoutingModule.html",[0,0.389,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,125,1.717,161,0.011,162,0.011,165,2.257,170,2.419,179,2.508,180,2.914,190,3.653,191,3.447,192,4.245,193,2.181,194,1.679,195,3.041,196,3.852,2042,5.048,2044,5.595,2053,6.405]],["title/injectables/HttpClientProvider.html",[467,1.103,620,2.764]],["body/injectables/HttpClientProvider.html",[3,0.098,4,0.098,9,0.086,20,0.318,21,0.763,24,1.073,27,0.998,28,0.013,29,1.145,30,0.209,31,0.272,32,0.098,33,0.123,50,2.837,101,0.786,161,0.008,162,0.008,219,1.029,254,0.662,255,1.034,256,0.96,298,1.324,309,1.411,318,1.076,346,4.739,441,4.232,459,2.916,464,2.774,467,1.433,468,1.529,472,1.532,473,1.477,620,3.591,713,1.791,717,2.571,718,6.09,810,1.931,814,3.62,1227,6.715,1260,5.417,1313,5.087,1316,4.739,1329,5.809,1902,5.082,2054,6.002,2055,3.295,2056,5.796,2057,6.104,2058,5.345,2059,3.295,2060,3.772,2061,6.836,2062,7.498,2063,4.625,2064,3.772,2065,4.625,2066,3.772,2067,3.295,2068,7.215,2069,6.971,2070,3.772,2071,6.119,2072,5.725,2073,3.295,2074,3.772,2075,3.295,2076,3.772,2077,3.295,2078,4.835,2079,5.345,2080,5.345,2081,3.772,2082,5.796,2083,4.829,2084,3.854]],["title/injectables/HttpClientWebProvider.html",[467,1.103,610,2.967]],["body/injectables/HttpClientWebProvider.html",[3,0.078,4,0.078,9,0.069,20,0.253,21,0.648,23,1.055,24,1.071,27,0.989,28,0.013,29,0.972,30,0.235,31,0.217,32,0.078,33,0.098,50,2.909,99,0.672,101,0.785,161,0.007,162,0.007,169,1.096,219,1.013,243,2.336,254,0.66,255,1.033,256,0.958,263,1.596,298,1.284,309,1.683,318,1.065,319,1.449,346,4.331,374,1.317,404,3.597,405,1.632,441,4.191,459,2.968,464,2.712,467,1.216,468,1.297,472,1.221,473,1.177,474,1.317,475,2.04,482,2.515,610,3.27,612,5.294,620,5.039,621,2.626,640,1.467,713,1.428,717,2.504,810,1.638,814,3.308,1227,6.732,1238,1.49,1260,5.054,1271,3.239,1313,4.648,1316,4.331,1329,5.761,1352,2.376,1466,3.047,1475,5.054,1535,2.039,1902,4.864,2054,4.715,2056,5.212,2057,5.578,2058,4.698,2059,2.626,2061,6.827,2062,7.461,2063,2.626,2065,3.924,2067,2.626,2068,7.284,2069,7.268,2072,5.871,2073,2.626,2075,2.626,2077,2.626,2078,4.25,2079,4.698,2080,4.698,2082,5.212,2083,4.343,2084,3.27,2085,2.626,2086,4.493,2087,5.379,2088,3.007,2089,3.007,2090,4.493,2091,4.493,2092,3.007,2093,6.7,2094,3.007,2095,3.007,2096,5.379,2097,3.007,2098,3.007,2099,3.007,2100,3.007,2101,3.007,2102,3.007,2103,3.007,2104,3.007,2105,4.493,2106,3.007,2107,5.379,2108,6.386,2109,3.007,2110,5.379,2111,3.007,2112,3.007,2113,4.493,2114,3.007,2115,4.493,2116,3.007,2117,3.007,2118,3.007,2119,2.626]],["title/components/IncidentDataPage.html",[0,0.248,127,0.971]],["body/components/IncidentDataPage.html",[0,0.458,1,0.713,2,1.174,3,0.166,4,0.078,5,0.837,6,0.837,7,0.837,8,0.81,9,0.068,11,1.137,12,1.499,13,0.713,14,2.325,15,2.251,16,1.251,18,1.251,20,0.252,21,0.645,22,1.664,23,1.168,24,1.028,27,0.739,28,0.013,29,1.16,30,0.287,31,0.216,32,0.078,33,0.098,45,2.178,46,2.588,47,1.364,48,1.364,49,2.126,50,1.753,57,2.716,58,2.026,62,4.683,63,1.483,64,2.547,66,2.319,68,2.417,69,2.126,71,2.324,72,1.311,73,1.818,83,1.483,87,3.098,88,2.35,90,1.019,91,1.262,94,1.55,95,0.607,96,1.251,97,1.251,98,0.837,99,1.33,100,0.837,101,0.753,102,0.837,103,0.713,104,0.837,105,0.736,106,0.837,107,0.736,108,0.76,109,1.251,110,0.713,111,1.174,112,1.499,113,0.713,114,1.137,115,1.499,116,1.101,117,0.81,118,0.837,119,0.713,120,1.499,121,0.736,122,0.837,123,0.736,124,0.785,125,0.69,126,0.837,127,1.418,128,1.756,129,0.736,130,1.511,131,1.174,132,1.251,133,0.736,134,0.736,135,1.174,136,1.251,137,0.736,138,1.251,139,0.736,140,0.76,141,1.251,142,0.736,143,0.81,144,0.713,145,0.736,146,0.736,147,0.76,148,0.713,149,0.837,150,0.736,151,0.647,152,0.736,153,1.398,154,0.713,155,0.713,156,0.713,157,0.736,158,0.76,159,0.837,160,0.837,161,0.007,162,0.007,169,1.633,193,1.019,194,0.785,198,6.029,199,2.43,202,0.669,206,5.285,207,5.285,210,1.645,211,3.314,212,4.059,213,5.285,216,1.605,219,0.768,220,4.704,221,2.714,222,4.067,223,2.171,226,1.524,227,3.232,228,2.851,229,2.827,230,2.374,231,2.554,233,3.259,234,2.692,237,2.218,239,2.126,240,3.833,241,3.538,242,2.218,243,1.753,244,3.911,245,1.474,246,3.911,247,3.911,248,3.911,254,0.556,255,0.827,256,0.768,263,0.713,276,0.86,286,1.55,297,3.538,298,1.248,300,2.218,301,4.868,302,2.51,303,3.538,305,3.815,306,1.524,307,4.238,308,4.238,309,0.69,310,1.633,311,2.365,314,1.8,315,2.179,316,2.179,317,2.03,318,0.919,319,1.288,327,3.232,328,2.792,332,1.961,333,3.259,334,3.259,335,2.365,344,2.179,353,3.538,354,3.259,355,3.538,356,2.692,357,3.538,358,3.538,359,4.037,360,2.365,361,2.365,364,1.55,368,1.483,369,1.262,370,2.126,373,1.483,378,2.178,381,2.319,384,1.364,387,1.818,388,1.818,389,1.311,391,1.55,482,1.054,497,1.753,544,2.365,573,1.421,574,1.887,579,2.03,632,2.03,675,4.943,706,2.319,717,1.653,751,1.524,786,1.818,790,1.887,810,1.633,838,2.692,845,1.906,912,3.259,943,1.262,1090,2.179,1091,2.03,1093,5.759,1096,2.365,1152,4.238,1153,3.538,1160,6.227,1165,4.685,1209,2.365,1241,2.03,1252,2.614,1253,2.614,1269,2.614,1279,1.421,1280,1.707,1281,1.707,1282,1.707,1283,1.55,1284,1.55,1285,1.364,1288,3.036,1394,4.323,1415,2.554,1574,1.55,1987,4.022,2007,2.03,2030,3.911,2031,2.614,2034,3.259,2120,5.305,2121,2.365,2122,4.685,2123,4.477,2124,2.614,2125,5.402,2126,3.911,2127,2.993,2128,4.477,2129,2.993,2130,4.477,2131,2.993,2132,2.993,2133,2.993,2134,2.614,2135,2.993,2136,2.614,2137,4.477,2138,2.614,2139,2.993,2140,3.911,2141,2.993,2142,2.993,2143,2.993,2144,2.993,2145,2.993,2146,4.477,2147,4.477,2148,4.477,2149,4.477,2150,2.365,2151,3.538,2152,3.259,2153,2.179,2154,2.365]],["title/modules/IncidentDataPageModule.html",[163,1.139,2155,2.967]],["body/modules/IncidentDataPageModule.html",[3,0.152,4,0.152,9,0.134,28,0.013,30,0.333,31,0.422,32,0.152,33,0.191,95,1.184,127,1.946,128,1.524,161,0.01,162,0.01,163,1.633,165,2.057,166,2.773,167,3.92,168,3.025,169,2.13,170,2.206,175,3.65,176,2.662,177,2.371,179,2.759,180,2.759,181,4.019,182,3.17,183,4.238,184,1.923,185,3.825,186,1.86,187,3.331,210,1.436,276,0.936,404,3.65,405,3.17,406,3.331,407,4.019,408,3.025,409,3.025,410,3.65,411,3.719,422,4.779,423,3.961,424,3.512,425,3.025,426,2.558,427,3.331,428,3.331,675,3.961,1303,3.719,2120,4.251,2155,6.07,2156,5.101,2157,5.101,2158,5.101,2159,5.542,2160,5.101]],["title/modules/IncidentDataPageRoutingModule.html",[163,1.139,2159,2.764]],["body/modules/IncidentDataPageRoutingModule.html",[0,0.388,3,0.167,4,0.167,9,0.146,28,0.013,30,0.31,31,0.461,32,0.167,33,0.208,127,1.769,128,1.38,161,0.011,162,0.011,165,2.248,170,2.411,179,2.498,180,2.908,190,3.64,191,3.441,192,4.236,193,2.173,194,1.673,195,3.03,196,3.838,276,1.023,675,4.328,1303,4.064,2120,4.645,2159,5.037]],["title/components/IncidentsCircleGraphicComponent.html",[0,0.248,129,1.002]],["body/components/IncidentsCircleGraphicComponent.html",[0,0.483,1,1.025,2,1.52,3,0.151,4,0.112,5,1.203,6,1.203,7,1.203,8,1.165,9,0.098,11,1.472,12,1.833,13,1.025,14,2.395,15,2.319,16,1.62,18,1.62,20,0.362,21,0.836,22,1.961,23,1.376,24,1.011,27,0.534,28,0.013,29,0.931,30,0.276,31,0.311,32,0.112,33,0.141,58,1.625,65,2.588,71,1.569,95,1.175,96,1.62,97,1.62,98,1.203,99,1.567,100,1.203,101,0.692,102,1.203,103,1.025,104,1.203,105,1.058,106,1.203,107,1.058,108,1.092,109,1.62,110,1.025,111,1.52,112,1.833,113,1.025,114,1.472,115,1.833,116,1.058,117,1.165,118,1.203,119,1.025,120,1.833,121,1.058,122,1.203,123,1.058,124,1.128,125,0.992,126,1.203,127,1.025,128,1.254,129,1.725,130,2.016,131,2.205,132,1.62,133,1.058,134,1.058,135,1.52,136,1.62,137,1.058,138,1.62,139,1.058,140,1.092,141,1.62,142,1.058,143,1.165,144,1.025,145,1.058,146,1.058,147,1.092,148,1.025,149,1.203,150,1.058,151,0.931,152,1.058,153,1.48,154,1.025,155,1.025,156,1.025,157,1.058,158,1.092,159,1.203,160,1.203,161,0.008,162,0.008,194,1.52,202,0.866,210,1.725,211,3.738,216,1.254,219,0.555,226,2.389,227,3.147,228,3.692,229,2.753,230,2.25,231,3.306,250,2.642,254,0.526,255,0.598,256,0.555,276,1.209,314,2.588,318,0.748,319,1.254,468,1.242,469,2.132,475,1.62,497,2.269,605,2.324,639,2.234,745,2.132,786,2.354,854,2.753,871,2.918,912,3.132,1036,2.132,1158,3.132,1164,4.772,1185,3.306,1287,4.581,1390,2.918,2020,3.759,2084,4.772,2161,5.786,2162,5.786,2163,3.4,2164,5.727,2165,5.064,2166,5.064,2167,4.303,2168,5.064,2169,5.064,2170,4.303,2171,3.759,2172,4.303,2173,4.303,2174,4.303,2175,5.797,2176,3.759,2177,5.064,2178,4.303,2179,3.759,2180,4.303,2181,3.759,2182,5.797,2183,5.797,2184,5.797,2185,3.759,2186,4.303,2187,3.759,2188,3.759,2189,3.759,2190,3.759,2191,3.759]],["title/components/IncidentsInfoComponent.html",[0,0.248,133,1.002]],["body/components/IncidentsInfoComponent.html",[0,0.466,1,0.769,2,1.242,3,0.185,4,0.084,5,0.903,6,0.903,7,0.903,8,0.874,9,0.074,11,1.203,12,1.568,13,0.769,14,2.341,15,2.267,16,1.324,18,1.324,20,0.272,21,0.683,22,1.727,23,1.1,24,1.117,27,0.767,28,0.013,29,1.336,30,0.221,31,0.233,32,0.084,33,0.105,45,1.923,46,2.278,47,1.472,48,1.472,49,1.533,50,1.264,51,2.351,52,1.673,55,2.057,57,2.509,58,1.22,61,3.212,63,1.6,64,1.533,68,2.278,69,3.374,71,2.253,73,2.278,76,2.351,83,1.6,84,1.673,85,1.942,87,2.959,88,1.415,90,1.1,91,1.361,94,1.673,95,0.655,96,1.324,97,1.324,98,0.903,99,1.38,100,0.903,101,0.75,102,0.903,103,0.769,104,0.903,105,0.794,106,0.903,107,0.794,108,0.82,109,1.324,110,0.769,111,1.242,112,1.568,113,0.769,114,1.203,115,1.568,116,0.794,117,0.874,118,0.903,119,0.769,120,1.568,121,0.794,122,0.903,123,0.794,124,0.847,125,0.745,126,0.903,127,0.769,128,1.635,129,0.794,130,1.888,131,1.242,132,1.324,133,1.519,134,0.794,135,1.242,136,1.324,137,0.794,138,1.324,139,0.794,140,0.82,141,1.324,142,0.794,143,0.874,144,0.769,145,0.794,146,0.794,147,0.82,148,0.769,149,0.903,150,0.794,151,0.698,152,0.794,153,1.394,154,0.769,155,0.769,156,0.769,157,0.794,158,0.82,159,0.903,160,0.903,161,0.007,162,0.007,194,1.47,202,0.708,210,1.859,216,1.024,219,0.848,230,1.413,237,2.347,245,1.559,250,2.159,254,0.606,255,0.914,256,0.848,263,0.769,264,2.509,271,3.743,298,1.139,302,2.604,306,2.104,309,0.745,318,0.797,319,1.213,364,2.454,368,1.6,369,1.997,370,1.533,378,1.923,386,2.351,387,1.923,388,1.311,389,1.415,391,2.454,447,2.347,459,2.334,474,1.415,482,1.669,497,2.419,499,4.462,558,3.212,564,2.19,565,2.19,573,1.533,574,2.365,581,4.137,640,1.165,700,3.743,704,4.189,723,2.159,733,2.196,751,2.481,771,2.351,772,4.432,773,3.743,774,4.432,775,3.743,778,3.743,779,2.347,780,2.571,783,3.743,784,3.743,786,1.923,787,3.448,788,5.614,792,3.016,793,2.816,794,4.137,795,3.354,797,3.212,800,2.552,801,3.722,802,2.552,804,4.432,805,5.198,806,5.433,807,3.743,808,2.882,810,1.727,811,3.016,820,3.743,821,2.351,822,3.743,824,2.552,826,2.552,829,2.552,830,2.552,839,3.016,843,3.016,854,2.249,1279,2.249,1293,2.351,1415,2.702,1416,4.432,1417,2.552,1418,3.743,1419,2.552,1424,3.448,1426,2.552,1574,3.681,1760,2.19,1769,3.212,1987,3.373,2007,2.19,2078,2.552,2140,2.821,2161,6.185,2192,6.185,2193,6.579,2194,6.579,2195,4.737,2196,5.609,2197,2.552,2198,3.922,2199,3.804,2200,3.23,2201,3.23,2202,4.737,2203,3.23,2204,3.23,2205,4.737,2206,3.23,2207,4.882,2208,2.821,2209,3.23,2210,3.23,2211,2.19,2212,2.821,2213,4.737,2214,3.23,2215,4.737,2216,3.23,2217,4.737,2218,3.23,2219,2.821,2220,3.23,2221,3.23,2222,3.23,2223,3.23,2224,3.23,2225,2.552,2226,3.23,2227,2.821,2228,6.179,2229,3.743,2230,4.737,2231,4.737,2232,4.737,2233,4.737,2234,4.737,2235,3.23,2236,3.23,2237,3.23,2238,3.23,2239,4.737,2240,3.23,2241,3.23,2242,3.23]],["title/injectables/IncidentsService.html",[467,1.103,2125,2.967]],["body/injectables/IncidentsService.html",[0,0.423,3,0.164,4,0.126,9,0.111,20,0.408,21,0.904,23,1.53,24,1.002,27,0.912,28,0.013,30,0.29,31,0.35,32,0.126,33,0.259,101,0.734,128,1.813,161,0.009,162,0.009,199,3.773,216,1.356,219,0.897,221,2.878,222,3.808,223,2.286,230,2.073,231,3.965,242,3.444,245,2.42,249,4.714,254,0.557,255,0.966,256,0.897,260,1.997,264,2.546,276,0.777,292,3.444,298,1.22,300,3.772,305,3.965,310,1.767,318,0.897,319,1.356,464,2.676,466,2.946,467,1.697,468,1.399,469,2.401,472,1.967,473,1.897,474,2.122,475,1.753,497,2.454,605,2.601,640,1.191,713,2.3,727,2.747,733,2.454,734,3.099,751,2.135,760,5.35,852,3.828,858,4.252,868,3.085,870,4.232,872,5.477,873,3.828,902,4.232,907,4.232,908,3.828,1011,2.681,1128,3.77,1902,3.085,1987,4.69,2122,6.072,2125,4.564,2243,4.232,2244,6.27,2245,6.27,2246,4.845,2247,6.015,2248,6.015,2249,6.072,2250,6.072,2251,6.072,2252,6.27,2253,4.845,2254,4.954,2255,6.27,2256,4.845,2257,4.845,2258,4.232,2259,4.845,2260,4.845,2261,6.27,2262,4.845,2263,4.845,2264,4.845]],["title/components/ItemCategoryComponent.html",[0,0.248,134,1.002]],["body/components/ItemCategoryComponent.html",[0,0.401,1,1.038,2,1.533,3,0.153,4,0.114,5,1.219,6,1.219,7,1.219,8,1.18,9,0.1,11,1.485,12,1.845,13,1.038,14,2.397,15,2.321,16,1.635,18,1.635,20,0.367,21,0.843,22,1.972,23,1.295,24,1.133,27,0.913,28,0.013,29,1.427,30,0.172,31,0.315,32,0.114,33,0.142,95,0.884,96,1.635,97,1.635,98,1.219,99,1.575,100,1.219,101,0.697,102,1.219,103,1.038,104,1.219,105,1.072,106,1.219,107,1.072,108,1.107,109,1.635,110,1.038,111,1.849,112,1.845,113,1.038,114,1.485,115,1.845,116,1.072,117,1.18,118,1.219,119,1.038,120,1.845,121,1.072,122,1.219,123,1.072,124,1.143,125,1.006,126,1.219,127,1.038,128,0.943,129,1.072,130,1.485,131,1.533,132,1.635,133,1.072,134,1.734,135,2.239,136,1.635,137,1.072,138,1.635,139,1.072,140,1.107,141,1.635,142,1.072,143,1.18,144,1.038,145,1.072,146,1.072,147,1.107,148,1.038,149,1.219,150,1.072,151,0.943,152,1.072,153,1.486,154,1.038,155,1.038,156,1.038,157,1.072,158,1.107,159,1.219,160,1.219,161,0.009,162,0.009,202,0.874,219,0.562,254,0.565,255,0.606,256,0.562,264,2.375,276,1.29,306,1.485,318,0.562,319,1.427,461,2.194,466,2.209,475,1.219,640,1.072,723,2.666,751,2.677,779,2.898,780,3.175,793,3.008,795,3.583,797,4.476,801,3.451,957,3.336,963,4.203,964,3.419,991,2.898,1039,3.134,2049,6.293,2207,5.573,2265,6.293,2266,3.445,2267,5.765,2268,5.109,2269,6.615,2270,4.783,2271,4.36,2272,5.849,2273,4.36,2274,4.36,2275,4.36,2276,5.109,2277,4.36,2278,3.809,2279,4.36,2280,5.109,2281,5.849,2282,3.809,2283,3.809,2284,3.809,2285,5.109,2286,3.809,2287,3.809,2288,5.109]],["title/components/ItemUserComponent.html",[0,0.248,137,1.002]],["body/components/ItemUserComponent.html",[0,0.401,1,1.038,2,1.533,3,0.153,4,0.114,5,1.219,6,1.219,7,1.219,8,1.18,9,0.1,11,1.485,12,1.845,13,1.038,14,2.397,15,2.321,16,1.635,18,1.635,20,0.367,21,0.843,22,1.972,23,1.295,24,1.133,27,0.913,28,0.013,29,1.427,30,0.172,31,0.315,32,0.114,33,0.142,95,0.884,96,1.635,97,1.635,98,1.219,99,1.575,100,1.219,101,0.697,102,1.219,103,1.038,104,1.219,105,1.072,106,1.219,107,1.072,108,1.107,109,1.635,110,1.038,111,1.533,112,1.845,113,1.038,114,1.485,115,1.845,116,1.072,117,1.18,118,1.219,119,1.038,120,1.845,121,1.072,122,1.219,123,1.072,124,1.143,125,1.006,126,1.219,127,1.038,128,0.943,129,1.072,130,1.485,131,1.533,132,1.635,133,1.072,134,1.072,135,2.239,136,1.635,137,1.734,138,1.635,139,1.072,140,1.107,141,1.635,142,1.072,143,1.18,144,1.038,145,1.072,146,1.072,147,1.107,148,1.038,149,1.219,150,1.072,151,0.943,152,1.072,153,1.542,154,1.038,155,1.038,156,1.038,157,1.072,158,1.107,159,1.219,160,1.219,161,0.009,162,0.009,202,0.874,219,0.562,254,0.565,255,0.606,256,0.562,264,2.987,276,1.29,306,2.402,318,0.562,319,1.427,461,1.744,466,2.209,475,1.219,640,1.072,751,2.677,779,2.898,780,3.175,793,3.008,795,3.583,797,4.476,801,3.451,957,3.336,967,3.175,991,2.898,1039,3.596,1128,3.517,2050,6.293,2207,5.573,2265,6.293,2269,6.615,2270,4.783,2276,5.109,2278,3.809,2280,5.109,2282,3.809,2283,3.809,2284,3.809,2285,5.109,2286,3.809,2287,3.809,2288,5.109,2289,3.445,2290,5.765,2291,5.109,2292,4.36,2293,5.849,2294,4.36,2295,3.809,2296,4.36,2297,4.36,2298,4.36]],["title/injectables/LocalService.html",[467,1.103,495,2.967]],["body/injectables/LocalService.html",[0,0.455,3,0.149,4,0.149,9,0.13,12,1.593,20,0.48,23,1.629,24,1.152,27,0.707,28,0.013,30,0.274,31,0.412,32,0.149,33,0.186,58,2.153,101,0.602,161,0.01,162,0.01,202,1.038,211,4.114,216,1.502,219,0.735,223,2.532,225,2.932,227,4.065,229,3.556,230,2.233,253,3.165,254,0.64,255,0.792,256,0.735,263,1.783,264,3.041,298,1.113,309,1.315,318,0.735,319,1.502,467,1.88,472,2.315,473,2.232,474,2.497,495,5.054,507,5.816,512,3.597,592,5.054,713,2.707,810,2.532,1135,6.541,1471,5.079,2299,4.979,2300,7.489,2301,5.7,2302,6.944,2303,7.489,2304,6.979,2305,5.7,2306,5.7,2307,5.7,2308,5.7,2309,5.7]],["title/components/LoginFormComponent.html",[0,0.248,139,1.002]],["body/components/LoginFormComponent.html",[0,0.396,1,1.011,2,1.506,3,0.17,4,0.111,5,1.187,6,1.187,7,1.187,8,1.15,9,0.097,11,1.459,12,1.82,13,1.011,14,2.393,15,2.317,16,1.606,18,1.606,20,0.358,21,0.828,22,1.95,23,0.833,24,1.051,27,0.713,28,0.013,29,1.243,30,0.275,31,0.307,32,0.111,33,0.139,45,1.725,46,2.333,47,1.936,48,1.936,57,1.725,68,1.725,71,2.659,72,1.86,73,1.725,77,2.305,83,2.104,87,1.725,94,2.2,95,0.861,96,1.606,97,1.606,98,1.187,99,1.559,100,1.187,101,0.688,102,1.187,103,1.011,104,1.187,105,1.044,106,1.187,107,1.044,108,1.078,109,1.606,110,1.011,111,1.506,112,1.82,113,1.011,114,1.459,115,1.82,116,1.044,117,1.15,118,1.187,119,1.011,120,1.82,121,1.044,122,1.187,123,1.044,124,1.113,125,0.98,126,1.187,127,1.011,128,0.919,129,1.044,130,1.459,131,1.506,132,1.606,133,1.044,134,1.044,135,1.506,136,1.606,137,1.044,138,1.606,139,1.848,140,1.984,141,1.606,142,1.044,143,1.15,144,1.011,145,1.044,146,1.044,147,1.078,148,1.011,149,1.187,150,1.044,151,0.919,152,1.044,153,1.474,154,1.011,155,1.011,156,1.011,157,1.044,158,1.078,159,1.187,160,1.187,161,0.008,162,0.008,184,1.398,193,1.446,202,0.859,210,1.969,214,2.2,219,0.548,230,1.714,254,0.522,255,0.59,256,0.548,266,2.305,270,4.183,275,2.017,280,2.2,312,2.104,318,0.548,369,1.79,370,2.017,373,2.104,374,3.589,378,2.644,384,1.936,387,2.333,388,2.333,389,1.86,401,5.938,414,2.104,466,2.17,474,1.86,573,2.017,574,1.79,640,1.044,780,3.119,786,2.333,793,2.968,795,3.119,801,3.18,943,1.79,991,2.847,1279,2.017,1280,2.422,1281,2.422,1282,2.422,1283,2.2,1284,2.2,1285,1.936,1350,2.554,1374,4.54,1380,4.183,1385,3.916,1386,5.099,1387,2.88,1389,2.704,1409,3.091,1421,3.356,1431,2.88,1434,4.183,1447,2.88,1482,4.183,2153,3.091,2310,6.564,2311,3.356,2312,5.689,2313,5.019,2314,5.079,2315,6.368,2316,5.019,2317,4.247,2318,4.247,2319,5.079,2320,4.247,2321,4.183,2322,3.71,2323,5.019,2324,5.079,2325,5.019,2326,5.746,2327,3.356,2328,4.247]],["title/interfaces/Media.html",[90,1.388,931,1.177]],["body/interfaces/Media.html",[3,0.139,4,0.139,9,0.179,20,0.447,21,0.766,27,0.825,28,0.013,30,0.286,32,0.174,33,0.174,90,2.759,99,1.485,161,0.01,162,0.01,202,0.993,221,2.603,225,2.08,230,1.983,232,3.383,235,2.522,245,1.749,254,0.628,276,1.066,277,2.327,278,2.421,288,3.383,290,2.884,291,2.752,298,1.348,318,0.857,381,2.752,438,3.383,461,1.584,464,2.63,466,2.511,468,1.534,474,2.327,475,1.485,605,2.343,608,4.509,609,4.198,614,3.792,639,2.422,640,1.306,705,2.522,706,2.752,717,1.637,786,2.157,808,3.179,868,3.383,931,1.534,932,2.421,967,3.609,1011,2.773,1101,3.867,1189,3.383,1222,4.198,1238,3.768,1464,3.603,1466,3.603,1471,3.603,1535,3.603,1602,3.603,1702,3.603,1745,3.383,1746,3.603,1747,4.509,1751,3.383,1763,4.234,1798,3.603,1825,4.921,1826,3.603,1912,3.603,1955,4.198,1957,4.64,1958,4.64,1959,4.64,1960,4.198,1961,4.198,1963,4.64,1964,4.64,1965,4.198,1966,4.64,1967,4.64,1968,4.64,1969,4.64,1970,4.64,1971,5.157,1972,5.157,1973,5.157,1974,5.157,1975,4.64,1976,4.64,1977,4.64,1978,4.64,1979,4.64,1980,4.64,1981,4.64,1982,4.64]],["title/injectables/MediaService.html",[467,1.103,614,2.325]],["body/injectables/MediaService.html",[3,0.159,4,0.159,9,0.139,20,0.512,21,1.04,24,0.876,27,0.896,28,0.013,30,0.284,31,0.439,32,0.159,33,0.199,90,2.711,101,0.642,161,0.011,162,0.011,219,0.784,254,0.487,255,0.845,256,0.784,290,3.917,318,0.784,464,2.715,467,1.953,468,1.755,472,2.468,473,2.379,614,4.116,705,3.427,706,3.738,713,2.886,717,2.372,718,5.796,723,3.289,1238,4.207,1745,4.596,1763,5.252,1961,5.702,2329,5.309,2330,6.078]],["title/components/ModalCategoryComponent.html",[0,0.248,142,1.002]],["body/components/ModalCategoryComponent.html",[0,0.481,1,0.858,2,1.343,3,0.156,4,0.094,5,1.007,6,1.007,7,1.007,8,0.975,9,0.082,11,1.301,12,1.667,13,0.858,14,2.363,15,2.288,16,1.432,18,1.432,20,0.303,21,0.739,22,1.817,23,1.275,24,1.116,27,0.852,28,0.013,29,1.485,30,0.256,31,0.26,32,0.094,33,0.118,45,1.462,46,2.081,47,1.641,48,1.641,68,1.462,71,2.603,72,2.245,73,1.462,84,1.865,85,2.165,94,1.865,95,0.73,96,1.432,97,1.432,98,1.007,99,1.452,100,1.007,101,0.754,102,1.007,103,0.858,104,1.007,105,0.885,106,1.007,107,0.885,108,0.914,109,1.432,110,0.858,111,2.075,112,1.667,113,0.858,114,1.301,115,1.667,116,0.885,117,0.975,118,1.007,119,0.858,120,1.667,121,0.885,122,1.007,123,0.885,124,0.944,125,0.83,126,1.007,127,0.858,128,0.779,129,0.885,130,1.301,131,1.343,132,1.432,133,0.885,134,0.885,135,1.343,136,1.432,137,0.885,138,1.432,139,0.885,140,0.914,141,1.432,142,1.598,143,2.223,144,0.858,145,0.885,146,0.885,147,0.914,148,0.858,149,1.007,150,0.885,151,0.779,152,0.885,153,1.4,154,0.858,155,0.858,156,0.858,157,0.885,158,0.914,159,1.007,160,1.007,161,0.007,162,0.007,184,1.186,186,1.147,202,0.766,210,2,216,1.108,219,0.769,230,1.938,237,3.22,243,2.006,245,2.418,254,0.589,255,0.829,256,0.838,263,0.858,276,0.821,298,1.203,306,2.031,309,0.83,318,0.838,319,1.108,369,2.16,373,1.784,374,3.346,378,2.422,384,1.641,387,2.081,388,2.081,389,1.577,391,1.865,573,1.71,574,1.518,671,5.677,734,2.16,779,2.539,786,2.081,789,4.06,792,3.263,810,2.603,825,2.442,832,3.475,833,4.476,895,1.865,943,1.518,957,2.923,991,3.22,1028,3.263,1039,3.389,1097,3.73,1162,4.071,1166,3.73,1169,3.475,1210,5.315,1257,4.046,1260,5.559,1276,5.677,1279,1.71,1280,2.054,1281,2.054,1282,2.054,1283,1.865,1284,1.865,1285,1.641,1385,3.587,1386,4.863,1387,2.442,1389,2.293,1430,5.135,1431,2.442,1441,4.049,1443,5.135,1444,3.73,1447,2.442,1448,2.845,2266,2.845,2267,5.211,2268,4.476,2314,4.73,2319,3.73,2321,3.73,2324,4.73,2331,6.845,2332,3.601,2333,5.124,2334,5.124,2335,3.601,2336,3.601,2337,5.135,2338,3.601,2339,4.476,2340,3.601,2341,3.601,2342,3.601,2343,3.601,2344,3.601,2345,3.601,2346,3.601,2347,3.601,2348,3.601,2349,3.601,2350,3.145,2351,5.677]],["title/interfaces/PaginatedData.html",[931,1.177,1334,2.451]],["body/interfaces/PaginatedData.html",[3,0.166,4,0.166,9,0.145,20,0.535,28,0.012,32,0.205,161,0.011,162,0.011,202,1.107,254,0.594,276,1.257,298,1.295,808,2.782,931,2.263,932,2.894,1011,2.316,1316,5.023,1334,4.454,1628,5.304,1971,4.307,1972,4.307,1973,4.307,1974,4.307,2352,4.623,2353,5.018,2354,5.018,2355,5.018,2356,5.018,2357,5.018,2358,5.018,2359,3.447]],["title/interfaces/Pagination.html",[931,1.177,1628,2.596]],["body/interfaces/Pagination.html",[3,0.163,4,0.163,9,0.143,20,0.526,28,0.012,32,0.203,161,0.011,162,0.011,202,1.096,254,0.644,298,1.288,450,4.682,808,3.716,931,2.248,932,2.846,1011,2.277,1334,3.755,1628,4.67,1629,6.801,1631,6.801,1632,6.801,1971,4.235,1972,4.235,1973,4.235,1974,4.235,2352,4.545,2353,4.934,2354,4.934,2355,4.934,2356,4.934,2357,4.934,2358,4.934,2359,3.39]],["title/classes/PasswordValidation.html",[33,0.133,2360,2.967]],["body/classes/PasswordValidation.html",[3,0.13,4,0.13,9,0.114,20,0.421,21,0.921,24,0.921,27,0.923,28,0.013,30,0.197,32,0.13,33,0.163,101,0.855,117,2.012,161,0.009,162,0.009,184,1.644,194,1.676,216,1.608,219,0.824,254,0.512,255,0.888,256,0.824,263,1.189,272,7.07,277,2.8,280,4.428,298,1.337,309,1.152,310,2.571,318,0.909,475,2.197,506,3.311,717,1.97,790,2.972,814,2.586,1337,3.18,1339,6.867,1342,6.494,1343,6.459,1344,5.584,1345,5.584,1346,6.981,1347,6.494,1348,6.494,1349,6.159,1350,3.844,1351,6.159,1352,3.945,1353,4.361,1354,4.361,1356,4.361,1829,5.411,2212,5.584,2360,4.653,2361,4.361,2362,7.685,2363,7.051,2364,4.993,2365,7.434,2366,4.993,2367,7.051,2368,6.392,2369,4.993,2370,6.392,2371,6.392,2372,4.993,2373,4.993,2374,4.993,2375,4.993,2376,4.993,2377,6.392,2378,4.993,2379,6.392,2380,4.993,2381,6.392,2382,4.993]],["title/interfaces/Photo.html",[931,1.177,2359,2.212]],["body/interfaces/Photo.html",[3,0.162,4,0.162,9,0.142,20,0.522,28,0.012,32,0.202,161,0.011,162,0.011,202,1.09,254,0.655,298,1.374,808,3.399,931,2.24,932,2.823,1011,2.922,1334,3.724,1628,3.944,1971,5.434,1972,5.434,1973,5.434,1974,5.434,2352,4.508,2353,4.893,2354,4.893,2355,4.893,2356,4.893,2357,4.893,2358,4.893,2359,3.961]],["title/components/PictureSelectableComponent.html",[0,0.248,144,0.971]],["body/components/PictureSelectableComponent.html",[0,0.47,1,0.719,2,1.181,3,0.118,4,0.079,5,0.844,6,0.844,7,0.844,8,0.817,9,0.154,11,1.144,12,1.507,13,0.719,14,2.327,15,2.253,16,1.26,18,1.26,20,0.254,21,0.65,22,1.671,23,0.592,24,1.142,27,0.923,28,0.013,29,1.701,30,0.236,31,0.218,32,0.118,33,0.099,45,1.83,46,1.83,49,1.433,50,2.111,53,1.815,54,2.197,55,4.074,57,1.226,58,2.416,59,2.637,63,2.671,64,2.56,66,2.334,77,1.639,82,2.197,83,1.496,84,3.097,87,1.83,88,1.974,91,1.273,95,0.612,96,1.671,97,1.671,98,0.844,99,1.499,100,0.844,101,0.785,102,0.844,103,0.719,104,0.844,105,0.742,106,0.844,107,0.742,108,0.766,109,1.26,110,0.719,111,1.181,112,1.507,113,0.719,114,1.518,115,1.507,116,0.742,117,0.817,118,0.844,119,0.719,120,1.507,121,0.742,122,0.844,123,0.742,124,0.791,125,0.696,126,0.844,127,0.719,128,0.653,129,0.742,130,1.144,131,1.181,132,1.26,133,0.742,134,0.742,135,1.181,136,1.26,137,0.742,138,1.26,139,0.742,140,0.766,141,1.26,142,0.742,143,1.732,144,1.656,145,2.055,146,0.742,147,1.624,148,0.719,149,0.844,150,0.742,151,0.653,152,0.742,153,1.173,154,0.719,155,0.719,156,0.719,157,0.742,158,0.766,159,0.844,160,0.844,161,0.007,162,0.007,169,1.643,184,0.994,186,0.961,194,0.791,202,0.673,216,1.546,219,0.922,221,1.182,237,2.233,243,1.764,254,0.596,255,1.034,256,0.922,260,1.435,263,1.873,285,3.41,292,2.233,298,0.958,306,1.534,309,1.475,310,1.643,318,0.942,319,1.166,368,2.671,369,2.52,384,2.054,388,1.226,389,1.322,426,1.322,444,1.9,450,1.815,459,2.759,461,1.783,468,0.872,474,1.322,482,2.106,498,3.936,502,2.14,519,5.222,579,2.047,640,1.796,699,1.702,717,1.661,743,4.181,757,3.28,801,3.654,810,1.643,937,2.047,939,4.26,940,3.561,943,2.52,944,3.656,951,3.056,952,3.056,954,3.056,955,3.056,965,4.035,987,2.962,991,2.962,999,3.056,1001,4.551,1002,3.058,1003,4.338,1004,3.056,1006,3.056,1013,3.056,1014,2.047,1016,4.551,1017,3.056,1019,3.056,1020,4.055,1021,3.056,1027,3.056,1028,2.87,1029,3.056,1033,2.87,1034,2.87,1037,1.922,1038,1.922,1051,2.047,1052,2.047,1103,3.936,1162,3.827,1201,3.056,1288,2.047,1760,2.047,1823,2.047,1897,3.056,1960,4.724,2035,2.637,2227,3.936,2383,6.298,2384,5.802,2385,4.26,2386,5.392,2387,5.392,2388,4.506,2389,5.979,2390,4.506,2391,4.506,2392,3.019,2393,4.506,2394,5.392,2395,3.561,2396,4.506,2397,3.019,2398,3.019,2399,3.019,2400,4.506,2401,4.506,2402,4.506,2403,4.506,2404,4.506,2405,4.506,2406,4.506,2407,4.506,2408,4.506,2409,3.019,2410,4.506,2411,5.979,2412,5.392,2413,3.019,2414,4.506,2415,5.979,2416,4.506,2417,3.019,2418,4.506,2419,3.019,2420,3.019,2421,3.019,2422,3.019,2423,3.019,2424,3.019,2425,4.506,2426,3.019,2427,3.019,2428,3.019,2429,3.019,2430,4.506,2431,3.019,2432,3.019,2433,3.019,2434,3.019,2435,3.019,2436,3.019,2437,3.019,2438,3.019,2439,3.019,2440,3.019,2441,3.019,2442,3.019,2443,3.019,2444,3.019,2445,3.019,2446,3.019,2447,3.019,2448,3.019,2449,3.019,2450,3.019,2451,3.019,2452,3.019,2453,3.019,2454,3.019,2455,3.019]],["title/components/RegisterFormComponent.html",[0,0.248,146,1.002]],["body/components/RegisterFormComponent.html",[0,0.416,1,0.85,2,1.335,3,0.155,4,0.093,5,0.998,6,0.998,7,0.998,8,0.966,9,0.082,11,1.293,12,1.659,13,0.85,14,2.361,15,2.287,16,1.423,18,1.423,20,0.301,21,0.734,22,1.809,23,0.7,24,1.026,27,0.632,28,0.013,29,1.101,30,0.27,31,0.258,32,0.093,33,0.117,45,2.068,46,2.068,47,1.627,48,1.627,57,2.068,68,1.449,71,2.496,72,1.563,73,1.449,83,1.768,87,1.449,90,1.215,91,1.504,94,1.849,95,0.723,96,1.423,97,1.423,98,0.998,99,1.446,100,0.998,101,0.723,102,0.998,103,0.85,104,0.998,105,0.878,106,0.998,107,0.878,108,0.906,109,1.423,110,0.85,111,1.335,112,1.659,113,0.85,114,1.293,115,1.659,116,0.878,117,0.966,118,0.998,119,0.85,120,1.659,121,0.878,122,0.998,123,0.878,124,0.936,125,0.823,126,0.998,127,0.85,128,0.772,129,0.878,130,1.293,131,1.335,132,1.423,133,0.878,134,0.878,135,1.335,136,1.423,137,0.878,138,1.423,139,0.878,140,0.906,141,1.423,142,0.878,143,0.966,144,0.85,145,0.878,146,1.801,147,1.935,148,0.85,149,0.998,150,0.878,151,0.772,152,0.878,153,1.396,154,0.85,155,0.85,156,0.85,157,0.878,158,0.906,159,0.998,160,0.998,161,0.007,162,0.007,184,1.175,202,0.761,210,2.074,219,0.46,230,1.519,245,1.676,249,2.42,254,0.519,255,0.496,256,0.46,263,0.85,264,2.068,275,2.418,276,0.572,278,1.627,280,2.638,283,2.904,289,3.706,309,0.823,310,1.857,312,1.768,318,0.46,364,2.638,365,3.117,369,1.504,370,1.695,373,2.523,374,3.577,378,2.41,384,1.627,387,2.068,388,2.068,389,1.563,403,5.787,466,1.923,474,1.563,497,1.993,499,2.42,523,2.82,573,1.695,574,1.504,640,1.252,780,2.764,786,2.068,793,3.119,795,3.715,801,2.95,832,3.453,845,2.273,943,1.504,967,1.937,991,2.523,1169,2.42,1241,2.42,1279,1.695,1280,2.036,1281,2.036,1282,2.036,1283,1.849,1284,1.849,1285,1.627,1292,3.117,1336,2.598,1350,2.146,1374,4.023,1380,3.706,1385,3.57,1386,4.923,1387,4.39,1389,2.273,1409,2.598,1420,4.023,1431,2.42,1434,3.706,1447,2.42,1482,3.706,1571,3.242,1574,2.638,1925,2.42,2311,2.82,2312,5.185,2313,4.448,2314,4.711,2315,6.397,2316,3.117,2319,4.711,2321,5.18,2322,3.117,2323,4.448,2324,5.627,2325,4.448,2327,2.82,2337,2.82,2360,2.598,2456,6.397,2457,6.844,2458,5.092,2459,3.569,2460,3.569,2461,3.569,2462,3.569,2463,3.569,2464,3.569,2465,3.569,2466,3.569,2467,5.092,2468,5.936,2469,3.569,2470,4.023,2471,5.092,2472,4.023,2473,5.092,2474,5.092,2475,5.092,2476,5.092,2477,5.092,2478,3.569]],["title/components/SettingsPage.html",[0,0.248,148,0.971]],["body/components/SettingsPage.html",[0,0.442,1,0.708,2,1.168,3,0.166,4,0.078,5,0.831,6,0.831,7,0.831,8,0.805,9,0.068,11,1.131,12,1.493,13,0.708,14,2.323,15,2.25,16,1.245,18,1.245,20,0.25,21,0.916,22,1.658,23,1.164,24,0.962,27,0.663,28,0.013,29,0.963,30,0.296,31,0.215,32,0.078,33,0.097,45,2.581,46,2.889,47,2.03,48,1.355,49,2.817,50,2.612,51,2.164,52,2.307,57,2.809,58,2.018,62,3.212,63,1.473,64,2.817,66,2.767,68,2.409,69,2.115,71,2.318,72,1.951,73,1.809,83,1.473,87,3.158,88,2.34,90,2.355,91,1.253,94,1.54,95,0.603,96,1.245,97,1.245,98,0.831,99,1.325,100,0.831,101,0.73,102,0.831,103,0.708,104,0.831,105,0.731,106,0.831,107,0.731,108,0.755,109,1.245,110,0.708,111,1.168,112,1.493,113,0.708,114,1.131,115,1.493,116,0.731,117,0.805,118,0.831,119,0.708,120,1.493,121,0.731,122,0.831,123,0.731,124,0.779,125,0.686,126,0.831,127,0.708,128,0.643,129,0.731,130,1.131,131,1.168,132,1.245,133,0.731,134,0.731,135,1.168,136,1.245,137,0.731,138,1.245,139,0.731,140,0.755,141,1.245,142,0.731,143,0.805,144,0.708,145,0.731,146,0.731,147,0.755,148,1.413,149,0.831,150,1.314,151,0.643,152,0.731,153,1.614,154,1.272,155,0.708,156,0.708,157,0.731,158,0.755,159,0.831,160,0.831,161,0.009,162,0.007,186,0.947,191,1.951,193,1.012,194,1.168,202,0.666,209,2.812,210,1.822,211,3.306,214,3.456,216,1.283,219,0.689,223,2.523,225,2.612,226,1.819,227,3.45,228,3.402,229,2.537,230,1.99,231,3.047,232,3.402,233,3.888,234,3.212,235,2.537,236,4.688,237,3.149,238,4.221,239,3.378,245,1.953,250,3.041,252,2.837,254,0.594,255,0.742,256,0.689,257,2.94,258,2.03,260,1.419,268,2.418,276,0.856,286,1.54,298,1.188,302,1.878,312,1.473,313,1.893,314,1.788,318,0.938,319,1.443,328,2.34,332,2.34,338,3.623,359,3.021,364,1.54,366,2.349,368,1.473,369,1.878,370,2.537,373,1.473,375,2.597,378,2.169,381,2.307,384,1.355,387,2.169,388,1.809,389,1.302,391,1.54,461,1.769,463,2.679,506,2.767,507,5.661,527,2.115,533,1.893,557,2.349,570,2.016,573,1.411,574,1.878,579,3.021,605,2.056,614,3.805,639,1.419,699,1.682,719,3.021,727,1.951,730,3.242,731,2.581,734,1.878,751,1.517,808,1.302,810,1.624,838,3.212,839,1.893,843,1.893,845,1.893,854,3.378,943,1.253,965,1.788,981,2.307,987,2.207,988,2.307,1036,1.473,1039,2.537,1158,2.164,1161,4.319,1162,3.805,1164,3.888,1169,3.021,1238,2.207,1241,2.016,1257,2.016,1258,2.164,1259,2.349,1261,2.164,1262,2.164,1263,2.164,1279,2.115,1280,2.541,1281,1.695,1282,1.695,1283,1.54,1284,1.54,1285,1.355,1288,3.021,1327,3.891,1415,3.047,1502,3.52,1574,1.54,1816,3.402,1925,3.623,2034,3.242,2051,2.164,2150,2.349,2151,3.52,2152,3.888,2153,2.164,2154,2.349,2198,3.805,2199,4.024,2211,2.016,2254,2.349,2304,6.214,2327,2.349,2479,2.597,2480,5.342,2481,4.454,2482,5.342,2483,6.671,2484,5.182,2485,4.454,2486,4.454,2487,2.973,2488,4.454,2489,2.973,2490,2.973,2491,2.973,2492,2.164,2493,2.597,2494,2.349,2495,2.016,2496,2.597,2497,4.454,2498,2.973,2499,2.973,2500,2.973,2501,2.973,2502,2.597,2503,2.597,2504,2.597,2505,2.597,2506,2.597,2507,2.597,2508,2.597,2509,2.597,2510,2.597,2511,2.597,2512,4.666,2513,2.597,2514,4.666,2515,2.597,2516,2.973,2517,4.454,2518,4.454,2519,4.454,2520,3.242,2521,3.891,2522,2.973,2523,2.973]],["title/modules/SettingsPageModule.html",[163,1.139,2524,2.967]],["body/modules/SettingsPageModule.html",[3,0.153,4,0.153,9,0.134,28,0.013,30,0.333,31,0.423,32,0.153,33,0.191,95,1.188,148,1.948,161,0.01,162,0.01,163,1.638,165,2.064,166,2.782,167,3.926,168,3.036,169,2.137,170,2.213,175,3.658,176,2.671,177,2.379,179,2.764,180,2.764,181,4.027,182,3.181,183,4.558,184,1.929,185,3.833,186,1.866,187,3.342,210,1.441,404,3.658,405,3.181,406,3.342,407,4.027,408,3.036,409,3.036,410,3.658,411,3.732,424,3.524,425,3.036,426,2.567,427,3.342,428,3.342,527,2.782,1308,6.168,1309,5.119,2524,6.073,2525,5.119,2526,5.119,2527,5.119,2528,5.547,2529,5.86,2530,5.119]],["title/modules/SettingsPageRoutingModule.html",[163,1.139,2528,2.764]],["body/modules/SettingsPageRoutingModule.html",[0,0.389,3,0.167,4,0.167,9,0.147,28,0.013,30,0.31,31,0.463,32,0.167,33,0.209,148,1.772,161,0.011,162,0.011,165,2.257,170,2.419,179,2.508,180,2.914,190,3.653,191,3.447,192,4.245,193,2.181,194,1.679,195,3.041,196,3.852,2528,5.048,2530,5.595,2531,6.405]],["title/modules/SharedModule.html",[163,1.139,397,2.212]],["body/modules/SharedModule.html",[3,0.128,4,0.128,9,0.112,28,0.013,30,0.335,31,0.354,32,0.128,33,0.16,95,0.992,107,2.045,116,2.045,129,2.045,131,1.934,133,2.045,144,1.981,152,2.045,157,2.045,161,0.009,162,0.009,163,1.368,165,1.724,166,2.324,167,3.618,168,2.536,169,1.785,170,2.638,175,3.269,176,2.231,177,1.988,179,2.471,180,2.471,181,3.6,182,2.657,185,2.657,186,1.559,210,1.204,397,4.689,404,3.269,405,2.657,406,2.792,407,3.6,408,2.536,409,2.536,410,3.269,417,4.28,418,3.32,422,3.32,423,3.32,424,2.944,425,2.536,426,2.144,427,2.792,428,2.792,599,4.276,631,5.513,632,3.32,650,4.276,770,3.868,1091,3.32,1209,3.868,2045,4.276,2162,3.868,2192,3.868,2384,3.563,2532,4.276,2533,4.276,2534,4.276,2535,4.276,2536,5.524,2537,4.895,2538,4.895,2539,3.868,2540,6.985,2541,4.895,2542,4.895,2543,4.895,2544,6.311,2545,4.895,2546,4.895,2547,6.311,2548,4.895,2549,4.895,2550,3.868,2551,6.311]],["title/pipes/ShortenTextPipe.html",[745,2.02,2536,2.764]],["body/pipes/ShortenTextPipe.html",[3,0.13,4,0.13,9,0.114,11,1.265,13,1.187,21,0.718,24,0.718,27,0.922,28,0.013,30,0.196,31,0.36,32,0.13,33,0.163,101,0.744,161,0.009,162,0.009,216,1.782,219,0.643,223,2.709,254,0.399,255,0.979,256,0.643,263,2.056,296,3.527,298,1.367,302,2.691,306,2.174,309,1.713,310,2.328,318,0.823,447,3.491,475,1.785,506,3.307,512,3.649,745,3.163,746,3.938,749,5.487,750,5.577,751,2.615,756,6.863,757,5.128,764,6.153,766,6.153,767,5.577,808,3.5,1131,5.577,1517,5.577,1697,5.128,1755,4.647,1828,5.128,1924,6.164,2229,5.045,2536,4.33,2552,5.577,2553,4.353,2554,6.385,2555,8.577,2556,4.984,2557,6.385,2558,6.385,2559,8.172,2560,7.045,2561,7.045,2562,7.045,2563,6.385,2564,6.385,2565,4.984,2566,4.984]],["title/components/UpdateUserComponent.html",[0,0.248,150,1.002]],["body/components/UpdateUserComponent.html",[0,0.437,1,0.8,2,1.278,3,0.15,4,0.088,5,0.939,6,0.939,7,0.939,8,0.909,9,0.077,11,1.237,12,1.603,13,0.8,14,2.349,15,2.275,16,1.362,18,1.362,20,0.283,21,0.702,22,1.759,23,1.311,24,1.062,27,0.781,28,0.013,29,1.361,30,0.263,31,0.243,32,0.088,33,0.11,45,1.364,46,1.979,47,1.53,48,1.53,68,1.364,71,2.542,72,2.135,73,1.364,84,1.74,85,2.019,94,1.74,95,0.681,96,1.362,97,1.362,98,0.939,99,1.406,100,0.939,101,0.706,102,0.939,103,0.8,104,0.939,105,0.826,106,0.939,107,0.826,108,0.853,109,1.362,110,0.8,111,1.278,112,1.603,113,0.8,114,1.237,115,1.603,116,0.826,117,0.909,118,0.939,119,0.8,120,1.603,121,0.826,122,0.939,123,0.826,124,0.88,125,0.775,126,0.939,127,0.8,128,0.726,129,0.826,130,1.237,131,1.278,132,1.362,133,0.826,134,0.826,135,1.278,136,1.362,137,0.826,138,1.362,139,0.826,140,0.853,141,1.362,142,0.826,143,2.091,144,0.8,145,1.198,146,0.826,147,0.853,148,0.8,149,0.939,150,1.714,151,1.593,152,0.826,153,1.621,154,0.8,155,0.8,156,0.8,157,0.826,158,0.853,159,0.939,160,0.939,161,0.007,162,0.007,184,1.106,186,1.069,202,0.728,209,2.938,210,2.032,217,2.842,219,0.629,223,1.777,225,1.908,226,1.659,230,1.453,237,2.415,239,2.724,242,2.842,245,2.511,250,2.614,254,0.576,255,0.677,256,0.629,257,3.454,258,2.614,260,1.552,263,1.499,264,2.329,276,0.781,286,1.74,306,1.659,309,0.775,310,1.777,312,1.664,313,2.138,318,0.812,319,1.241,369,2.054,373,1.664,374,3.385,378,2.329,384,1.53,387,1.979,388,1.979,389,1.471,438,3.653,459,2.524,461,1.711,463,3.45,464,2.295,466,2.167,482,1.183,500,4.533,501,3.272,502,2.724,503,2.972,504,3.89,573,1.595,574,1.416,699,1.841,731,3.049,734,2.054,779,2.415,792,3.103,818,5.281,832,3.305,895,1.74,943,1.416,957,2.78,963,3.653,964,2.972,991,3.118,1039,1.595,1097,3.547,1162,3.976,1279,1.595,1280,1.915,1281,1.915,1282,1.915,1283,1.74,1284,1.74,1285,1.53,1385,3.45,1386,4.782,1387,2.277,1389,3.103,1415,1.915,1430,4.973,1431,2.277,1434,3.547,1435,4.257,1441,3.851,1443,4.973,1444,3.547,1447,2.277,1448,2.653,1571,2.138,1574,1.74,1592,2.444,1946,4.176,2289,2.653,2290,5.011,2291,4.257,2295,2.933,2314,4.581,2319,3.547,2321,4.865,2324,5.074,2337,4.973,2339,4.257,2350,2.933,2351,5.497,2395,3.851,2470,3.851,2472,3.851,2494,5.933,2495,5.093,2520,3.547,2567,5.093,2568,5.737,2569,4.874,2570,5.737,2571,3.358,2572,3.358,2573,3.358,2574,3.358,2575,3.358,2576,3.358,2577,3.358,2578,3.358,2579,3.358,2580,3.358,2581,3.358,2582,3.358,2583,3.358,2584,3.358,2585,2.933,2586,4.874,2587,3.358,2588,4.257,2589,3.851]],["title/components/UserCircleGraphicComponent.html",[0,0.248,152,1.002]],["body/components/UserCircleGraphicComponent.html",[0,0.482,1,1.011,2,1.505,3,0.15,4,0.111,5,1.186,6,1.186,7,1.186,8,1.149,9,0.097,11,1.458,12,1.82,13,1.011,14,2.392,15,2.317,16,1.605,18,1.605,20,0.357,21,0.828,22,1.95,23,1.368,24,1.005,27,0.527,28,0.013,29,0.918,30,0.275,31,0.307,32,0.111,33,0.139,58,1.603,65,2.552,71,1.548,95,1.164,96,1.605,97,1.605,98,1.186,99,1.558,100,1.186,101,0.687,102,1.186,103,1.011,104,1.186,105,1.043,106,1.186,107,1.043,108,1.077,109,1.605,110,1.011,111,1.505,112,1.82,113,1.011,114,1.458,115,1.82,116,1.043,117,1.149,118,1.186,119,1.011,120,1.82,121,1.043,122,1.186,123,1.043,124,1.112,125,0.979,126,1.186,127,1.011,128,0.918,129,1.043,130,1.458,131,2.202,132,1.605,133,1.043,134,1.043,135,1.505,136,1.605,137,1.043,138,1.605,139,1.043,140,1.077,141,1.605,142,1.043,143,1.149,144,1.011,145,1.043,146,1.043,147,1.077,148,1.011,149,1.186,150,1.043,151,0.918,152,1.715,153,1.616,154,1.011,155,1.011,156,1.011,157,1.043,158,1.077,159,1.186,160,1.186,161,0.008,162,0.008,194,1.505,202,0.858,210,1.715,211,3.723,216,1.242,219,0.547,226,2.375,227,3.117,228,3.657,229,2.727,230,2.241,231,3.276,250,2.617,254,0.522,255,0.59,256,0.547,276,1.204,314,2.552,318,0.741,319,1.242,468,1.225,469,2.103,475,1.82,497,2.248,605,2.315,639,2.221,745,2.103,786,2.332,854,2.727,871,3.895,1036,2.103,1123,3.707,1158,3.089,1164,4.738,1185,3.276,1287,4.538,2084,4.738,2163,3.353,2164,5.686,2165,5.017,2166,3.707,2168,5.017,2169,5.017,2171,5.017,2176,3.707,2177,5.017,2179,3.707,2181,3.707,2185,3.707,2187,3.707,2188,3.707,2189,3.707,2190,3.707,2191,3.707,2550,5.759,2590,6.366,2591,5.743,2592,4.244,2593,4.244,2594,4.244,2595,6.51,2596,4.244,2597,5.743,2598,6.51,2599,4.244,2600,5.743,2601,4.244,2602,4.244,2603,4.244,2604,4.244,2605,4.244,2606,4.244,2607,4.244,2608,4.244]],["title/interfaces/UserCredentials.html",[266,2.212,931,1.177]],["body/interfaces/UserCredentials.html",[3,0.162,4,0.162,9,0.142,20,0.524,28,0.012,30,0.245,32,0.203,101,0.773,145,1.53,161,0.011,162,0.011,202,1.093,254,0.587,266,3.972,275,3.885,276,0.997,280,4.027,283,3.549,286,3.791,298,1.387,312,3.083,731,2.527,895,3.223,931,2.244,932,2.836,933,3.962,1571,4.66,1574,3.791,2359,3.378,2609,4.917,2610,5.782]],["title/components/UserDataPage.html",[0,0.248,154,0.971]],["body/components/UserDataPage.html",[0,0.421,1,0.783,2,1.258,3,0.173,4,0.086,5,0.919,6,0.919,7,0.919,8,0.89,9,0.075,11,1.218,12,1.584,13,0.783,14,2.345,15,2.271,16,1.341,18,1.341,20,0.277,21,0.692,22,1.741,23,0.941,24,0.955,27,0.595,28,0.013,29,0.711,30,0.299,31,0.237,32,0.086,33,0.107,45,2.69,46,2.69,47,1.498,48,1.498,49,2.278,50,1.878,57,2.809,58,2.14,63,1.628,64,2.69,66,2.485,68,2.53,69,2.278,71,2.416,72,1.44,73,1.948,83,1.628,87,3.123,88,2.482,90,2.432,91,1.385,94,1.702,95,0.666,96,1.341,97,1.341,98,0.919,99,1.391,100,0.919,101,0.731,102,0.919,103,0.783,104,0.919,105,0.808,106,0.919,107,0.808,108,0.834,109,1.341,110,0.783,111,1.258,112,1.584,113,0.783,114,1.218,115,1.584,116,0.808,117,0.89,118,0.919,119,0.783,120,1.584,121,0.808,122,0.919,123,0.808,124,0.861,125,0.758,126,0.919,127,0.783,128,0.711,129,0.808,130,1.218,131,1.258,132,1.341,133,0.808,134,0.808,135,1.258,136,1.341,137,0.808,138,1.341,139,0.808,140,0.834,141,1.341,142,0.808,143,1.934,144,0.783,145,0.808,146,0.808,147,0.834,148,0.783,149,0.919,150,1.393,151,1.347,152,0.808,153,1.659,154,1.648,155,0.783,156,0.783,157,0.808,158,0.834,159,0.919,160,0.919,161,0.009,162,0.007,186,1.047,193,1.119,194,1.258,202,0.717,210,1.701,212,3.608,213,5.467,214,3.584,217,2.377,219,0.892,226,1.634,230,1.858,245,1.579,254,0.499,255,0.667,256,0.619,260,1.528,263,0.783,276,1.259,286,1.702,298,0.769,309,0.758,312,1.628,318,0.921,319,1.496,328,2.482,332,2.482,359,3.254,364,1.702,368,1.628,369,1.385,370,2.278,373,1.628,378,2.301,381,2.485,384,1.498,387,1.948,388,1.948,389,1.44,391,1.702,441,3.087,450,2.885,454,3.791,461,1.858,573,1.56,574,2.022,579,2.229,605,2.132,614,3.946,639,1.528,666,4.692,699,1.812,719,3.254,730,3.492,731,2.69,733,1.878,734,2.022,751,1.634,790,2.022,808,1.44,838,2.885,845,2.093,854,2.278,943,1.385,987,2.377,988,2.485,1002,2.187,1011,1.75,1036,1.628,1152,4.477,1153,3.791,1161,4.535,1162,3.553,1168,3.791,1182,5.442,1206,3.232,1238,2.377,1241,2.229,1257,2.229,1258,2.392,1259,2.597,1261,2.392,1262,2.392,1263,2.392,1279,1.56,1280,1.874,1281,1.874,1282,1.874,1283,1.702,1284,1.702,1285,1.498,1288,3.254,1343,3.791,1415,2.736,1574,1.702,1602,3.254,1681,2.392,2034,3.492,2051,2.392,2083,3.492,2121,2.597,2124,2.871,2126,4.191,2134,2.871,2136,2.871,2138,2.871,2150,2.597,2151,3.791,2152,3.492,2153,2.392,2154,2.597,2198,3.946,2199,4.225,2211,2.229,2225,3.791,2254,2.597,2395,3.791,2484,5.442,2492,2.392,2493,2.871,2495,2.229,2496,2.871,2502,2.871,2503,2.871,2504,2.871,2505,2.871,2506,2.871,2507,2.871,2508,2.871,2509,2.871,2510,2.871,2511,2.871,2512,4.949,2513,2.871,2514,4.949,2515,2.871,2520,3.492,2521,4.191,2567,4.692,2589,3.791,2611,6.23,2612,4.798,2613,4.798,2614,3.286,2615,4.798,2616,4.798,2617,3.286,2618,4.191,2619,4.798,2620,4.798,2621,3.286,2622,5.666,2623,4.191,2624,4.191]],["title/modules/UserDataPageModule.html",[163,1.139,664,2.764]],["body/modules/UserDataPageModule.html",[3,0.143,4,0.143,9,0.125,28,0.013,30,0.337,31,0.395,32,0.143,33,0.179,95,1.108,150,1.978,151,1.183,153,1.328,154,1.916,161,0.01,162,0.01,163,1.528,165,1.926,166,2.596,167,3.808,168,2.832,169,1.994,170,2.065,175,3.506,176,2.492,177,2.22,179,2.65,180,2.65,181,3.861,182,2.968,183,4.07,184,1.8,185,3.674,186,1.741,187,3.119,210,1.344,243,2.141,276,0.877,374,2.395,397,4.367,399,4.927,404,3.506,405,2.968,406,3.119,407,3.861,408,2.832,409,2.832,410,3.506,411,3.482,412,5.348,413,4.32,414,2.709,415,5.348,416,4.32,417,4.59,418,3.708,419,5.348,420,4.32,421,3.98,424,3.288,425,2.832,426,2.395,427,3.119,428,3.119,429,4.32,664,5.726,666,3.708,1303,3.482,1306,5.912,1307,4.776,1310,4.776,2051,3.98,2160,4.776,2495,3.708,2567,3.708,2625,4.776,2626,4.776,2627,4.776,2628,5.456]],["title/modules/UserDataPageRoutingModule.html",[163,1.139,2628,2.764]],["body/modules/UserDataPageRoutingModule.html",[0,0.388,3,0.167,4,0.167,9,0.146,28,0.013,30,0.31,31,0.461,32,0.167,33,0.208,153,1.252,154,1.769,161,0.011,162,0.011,165,2.248,170,2.411,179,2.498,180,2.908,190,3.64,191,3.441,192,4.236,193,2.173,194,1.673,195,3.03,196,3.838,276,1.023,666,4.328,1303,4.064,2567,4.328,2628,5.037]],["title/interfaces/UserInfo.html",[731,1.655,931,1.177]],["body/interfaces/UserInfo.html",[3,0.155,4,0.155,9,0.136,20,0.501,28,0.013,30,0.234,32,0.199,101,0.854,145,1.944,161,0.01,162,0.01,202,1.064,254,0.665,255,1.099,266,3.228,275,3.838,276,0.953,283,3.392,286,4.187,298,1.397,312,2.946,731,2.893,895,4.095,931,2.202,932,2.71,933,3.787,1571,5.148,1574,4.187,2359,3.228,2609,4.699,2610,5.629]],["title/interfaces/UserRegisterInfo.html",[283,2.325,931,1.177]],["body/interfaces/UserRegisterInfo.html",[3,0.157,4,0.157,9,0.138,20,0.507,28,0.013,30,0.237,32,0.2,101,0.856,145,1.481,161,0.01,162,0.01,202,1.072,254,0.66,266,3.269,275,3.851,276,0.965,280,3.972,283,4.094,286,4.202,298,1.396,312,2.984,731,2.445,895,3.119,931,2.214,932,2.745,933,3.835,1571,5.165,1574,4.202,2359,3.269,2609,4.758,2610,5.671]],["title/components/UserSelectableComponent.html",[0,0.248,155,0.971]],["body/components/UserSelectableComponent.html",[0,0.48,1,0.631,2,1.07,3,0.106,4,0.069,5,0.74,6,0.74,7,0.74,8,0.717,9,0.061,11,1.036,12,1.391,13,0.631,14,2.296,15,2.224,16,1.141,18,1.141,20,0.223,21,0.588,22,1.563,23,0.801,24,1.161,27,0.944,28,0.013,29,1.66,30,0.238,31,0.191,32,0.106,33,0.087,95,0.537,96,1.141,97,1.141,98,0.74,99,1.249,100,0.74,101,0.803,102,0.74,103,0.631,104,0.74,105,0.651,106,0.74,107,0.651,108,1.036,109,1.141,110,0.631,111,1.07,112,1.391,113,0.631,114,1.42,115,1.391,116,0.651,117,0.717,118,0.74,119,0.631,120,1.391,121,0.651,122,0.74,123,0.651,124,1.742,125,0.611,126,0.74,127,0.631,128,0.573,129,0.651,130,1.036,131,1.07,132,1.141,133,0.651,134,0.651,135,1.07,136,1.141,137,0.651,138,1.141,139,0.651,140,0.672,141,1.141,142,0.651,143,0.717,144,0.631,145,0.651,146,0.651,147,1.533,148,0.631,149,0.74,150,0.651,151,0.573,152,0.651,153,1.656,154,0.631,155,1.583,156,0.631,157,0.651,158,1.93,159,0.74,160,0.74,161,0.006,162,0.006,169,1.488,184,0.872,186,0.844,194,0.694,202,0.61,210,1.003,216,1.484,219,0.958,221,1.598,226,1.695,240,3.363,243,1.598,253,1.86,254,0.633,255,1.057,256,0.958,260,1.3,263,1.911,276,0.798,278,1.86,285,3.19,298,1.023,306,2.397,309,1.471,310,2.202,318,0.99,319,1.38,327,2.215,328,3.084,332,1.16,414,2.771,426,1.16,444,1.72,459,2.805,461,1.982,482,1.438,502,2.655,503,2.897,605,2.115,639,2.242,640,1.569,655,2.599,699,1.541,705,1.938,716,2.454,717,1.966,751,2.263,779,2.022,790,2.968,793,3.03,801,2.908,810,1.488,837,4.063,854,2.364,937,1.796,939,3.933,940,3.224,943,2.802,944,3.376,945,2.97,946,4.07,947,2.97,949,2.97,950,4.07,951,2.768,952,2.768,954,2.768,955,2.768,956,3.623,957,2.327,959,3.564,961,2.702,962,3.564,963,3.17,964,2.578,965,4.4,966,2.314,967,2.215,968,2.599,969,2.97,970,4.07,971,2.97,972,4.644,974,4.07,975,4.127,977,2.97,978,5.326,980,2.97,981,2.114,982,4.396,983,2.97,985,2.327,987,3.161,988,2.114,991,2.771,992,2.97,993,2.97,995,2.97,996,2.97,997,2.314,998,2.97,999,2.768,1001,4.37,1002,2.549,1003,4.096,1004,2.768,1006,2.768,1008,4.838,1009,2.314,1010,2.97,1011,2.424,1012,2.97,1013,2.768,1014,1.796,1016,3.376,1017,2.768,1019,2.768,1020,3.793,1021,2.768,1022,2.314,1023,2.314,1024,2.314,1025,2.314,1026,2.314,1027,2.768,1028,2.599,1029,2.768,1032,2.314,1033,2.599,1034,2.599,1036,1.312,1037,1.687,1038,1.687,1039,1.258,1041,1.593,1044,1.593,1045,1.593,1046,1.796,1051,1.796,1052,1.796,1053,1.928,1054,1.928,1055,1.928,1056,1.928,1058,2.97,1059,1.928,1060,1.928,2048,5.888,2197,2.093,2198,3.914,2199,4.096,2211,1.796,2270,2.768,2629,5.888,2630,3.933,2631,4.348,2632,3.564,2633,2.649,2634,2.649,2635,2.649,2636,2.649,2637,2.649,2638,2.649,2639,3.564,2640,2.649,2641,2.649,2642,2.649,2643,3.564,2644,2.649,2645,2.649,2646,2.314,2647,2.314,2648,2.314,2649,2.093,2650,2.314,2651,4.348,2652,2.314,2653,2.314,2654,2.314,2655,2.314,2656,3.224,2657,3.564]],["title/components/UserSelectableMobileComponent.html",[0,0.248,156,0.971]],["body/components/UserSelectableMobileComponent.html",[0,0.478,1,0.614,2,1.048,3,0.104,4,0.067,5,0.721,6,0.721,7,0.721,8,0.698,9,0.059,11,1.015,12,1.368,13,0.614,14,2.29,15,2.217,16,1.117,18,1.117,20,0.217,21,0.576,22,1.541,23,0.784,24,1.157,27,0.938,28,0.013,29,1.652,30,0.235,31,0.186,32,0.104,33,0.084,95,0.523,96,1.117,97,1.117,98,0.721,99,1.231,100,0.721,101,0.798,102,0.721,103,0.614,104,0.721,105,0.634,106,0.721,107,0.634,108,1.015,109,1.117,110,0.614,111,1.048,112,1.368,113,0.614,114,2.162,115,1.368,116,0.634,117,0.698,118,0.721,119,0.614,120,1.368,121,0.634,122,0.721,123,0.634,124,1.726,125,0.595,126,0.721,127,0.614,128,0.558,129,0.634,130,1.015,131,1.048,132,1.117,133,0.634,134,0.634,135,1.048,136,1.117,137,0.634,138,1.117,139,0.634,140,0.655,141,1.117,142,0.634,143,0.698,144,0.614,145,0.634,146,0.634,147,1.514,148,0.614,149,0.721,150,0.634,151,0.558,152,0.634,153,1.653,154,0.614,155,1.165,156,1.421,157,0.634,158,1.92,159,0.721,160,0.721,161,0.006,162,0.006,169,1.457,184,0.849,186,0.821,194,0.676,202,0.597,210,0.983,216,1.471,219,0.952,221,1.565,226,1.666,240,3.315,243,1.565,253,1.821,254,0.631,255,1.051,256,0.952,260,1.273,263,1.904,276,0.784,278,1.821,285,3.144,298,1.012,306,2.378,309,1.455,310,2.175,318,0.985,319,1.365,327,2.169,328,3.06,332,1.13,414,2.731,426,1.13,444,1.685,459,2.787,461,1.963,482,1.408,502,2.618,503,2.856,605,2.096,639,2.224,640,1.552,655,2.545,699,1.51,705,1.898,716,2.403,717,1.944,751,2.241,779,1.98,790,2.944,793,3,801,2.876,810,1.457,837,4.019,854,2.324,943,2.775,944,3.319,945,2.909,946,4.013,947,2.909,949,2.909,950,4.013,951,2.71,952,2.71,954,2.71,955,2.71,956,3.562,957,2.279,961,2.656,963,3.116,964,2.535,965,4.37,967,2.169,968,2.545,969,2.909,970,4.013,971,2.909,972,4.593,974,4.013,975,4.091,977,2.909,978,5.289,980,2.909,981,2.07,982,4.342,983,2.909,985,2.279,987,3.127,988,2.07,991,2.731,992,2.909,993,2.909,995,2.909,996,2.909,998,2.909,999,2.71,1001,4.332,1002,2.512,1003,4.045,1004,2.71,1006,2.71,1008,4.792,1010,2.909,1011,2.401,1012,2.909,1013,2.71,1014,1.749,1016,3.319,1017,2.71,1019,2.71,1020,3.739,1021,2.71,1027,2.71,1028,2.545,1029,2.71,1033,2.545,1034,2.545,1036,1.278,1037,1.642,1038,1.642,1039,1.224,1041,1.551,1044,1.551,1045,1.551,1046,1.749,1051,1.749,1052,1.749,1053,1.877,1054,1.877,1055,1.877,1056,1.877,1058,2.909,1059,1.877,1060,1.877,1064,1.749,1066,2.71,1067,3.867,1068,3.158,1069,3.491,1070,3.491,1071,2.252,1079,2.252,1082,2.252,1085,2.252,1086,2.252,1087,2.252,1088,2.252,1089,2.252,2052,5.867,2197,2.037,2198,3.88,2199,4.045,2211,1.749,2270,2.71,2629,5.867,2631,4.275,2632,3.491,2639,3.491,2643,3.491,2646,2.252,2647,2.252,2648,2.252,2649,2.037,2650,2.252,2651,4.275,2652,2.252,2653,2.252,2654,2.252,2655,2.252,2656,3.158,2657,3.491,2658,3.867,2659,2.578,2660,2.578,2661,2.578,2662,2.578,2663,2.578,2664,2.578,2665,2.578,2666,2.578,2667,2.578,2668,2.578,2669,2.578]],["title/components/UsersInfoComponent.html",[0,0.248,157,1.002]],["body/components/UsersInfoComponent.html",[0,0.42,1,0.704,2,1.661,3,0.165,4,0.077,5,0.826,6,0.826,7,0.826,8,0.8,9,0.068,11,1.126,12,1.488,13,0.704,14,2.322,15,2.248,16,1.239,18,1.239,20,0.249,21,0.639,22,1.653,23,1.425,24,1.066,27,0.734,28,0.013,29,1.279,30,0.262,31,0.213,32,0.077,33,0.217,52,2.757,53,1.776,54,2.15,57,2.161,61,2.003,66,1.53,68,1.2,69,3.01,71,1.617,72,1.942,73,1.2,77,1.604,84,3.283,87,2.949,88,1.294,90,1.51,91,1.869,95,0.599,96,1.239,97,1.239,98,0.826,99,1.321,100,0.826,101,0.729,102,0.826,103,0.704,104,0.826,105,0.726,106,0.826,107,0.726,108,0.75,109,1.239,110,0.704,111,1.162,112,1.488,113,0.704,114,1.126,115,1.488,116,0.726,117,0.8,118,0.826,119,0.704,120,1.488,121,0.726,122,0.826,123,0.726,124,0.774,125,0.681,126,0.826,127,0.704,128,0.639,129,0.726,130,1.126,131,1.162,132,1.239,133,0.726,134,0.726,135,1.162,136,1.239,137,0.726,138,1.239,139,0.726,140,0.75,141,1.239,142,0.726,143,0.8,144,0.704,145,0.726,146,0.726,147,0.75,148,0.704,149,0.826,150,0.726,151,0.639,152,0.726,153,1.558,154,0.704,155,0.704,156,0.704,157,1.454,158,1.972,159,0.826,160,0.826,161,0.006,162,0.006,193,1.006,202,0.662,209,2.806,210,1.965,214,3.986,216,0.959,217,2.637,219,0.817,223,2.427,225,1.736,226,1.51,230,1.322,235,2.527,239,3.16,243,2.083,245,1.46,249,3.609,250,2.426,254,0.61,255,0.881,256,0.817,257,3.298,258,2.889,263,1.509,264,2.949,268,2.407,276,0.853,277,1.942,296,2.105,298,1.016,302,2.493,306,2.014,309,1.023,312,1.464,313,1.881,318,0.858,319,1.439,364,2.297,378,1.2,385,3.227,387,2.161,388,1.2,389,1.294,390,2.003,391,1.53,438,3.389,447,2.197,459,2.607,461,1.322,463,3.2,464,2.391,466,2.394,468,0.853,469,1.464,482,1.562,499,4.298,500,4.205,501,3.035,502,2.527,503,2.757,504,3.609,524,4.649,533,2.823,558,2.003,570,3.007,573,1.403,574,1.245,605,2.279,639,1.884,640,0.726,704,4.036,723,2.021,727,1.942,731,2.161,733,2.083,745,1.464,751,2.35,771,2.15,772,4.205,773,3.503,774,4.205,775,3.503,778,3.503,779,2.197,780,2.407,783,3.503,784,3.503,788,5.008,790,2.806,791,2.58,792,2.823,793,2.696,795,3.211,797,4.011,798,2.58,800,2.334,801,3.423,802,2.334,804,4.205,805,5.008,806,5.259,807,3.503,808,2.776,810,1.617,811,2.823,820,3.503,821,2.15,822,3.503,824,2.334,826,2.334,829,2.334,830,2.334,832,3.007,837,3.389,838,1.776,839,1.881,840,2.003,841,3.873,842,3.873,843,2.823,845,1.881,846,2.58,985,2.529,987,2.197,988,2.297,1011,1.617,1036,1.464,1206,2.529,1592,2.15,1602,3.007,2208,3.873,2225,4.673,2229,5.845,2247,3.503,2248,4.205,2270,3.609,2470,3.503,2472,3.503,2520,4.305,2539,5.935,2585,2.58,2588,3.873,2589,4.673,2623,5.166,2624,5.166,2649,2.334,2656,3.503,2670,6.561,2671,4.434,2672,2.954,2673,4.434,2674,4.434,2675,2.954,2676,4.434,2677,2.954,2678,2.954,2679,2.954,2680,4.434,2681,2.954,2682,2.954,2683,2.954,2684,2.954,2685,2.954,2686,2.954]],["title/injectables/UsersService.html",[467,1.103,2198,2.325]],["body/injectables/UsersService.html",[0,0.416,3,0.16,4,0.122,9,0.107,20,0.395,21,0.885,23,1.545,24,0.986,27,0.901,28,0.013,29,1.014,30,0.297,31,0.339,32,0.122,33,0.257,101,0.816,153,1.611,161,0.009,162,0.009,199,3.714,209,3.06,216,1.728,219,0.882,223,2.819,230,2.349,231,3.902,242,3.39,245,2.593,249,4.64,254,0.631,255,0.951,256,0.882,257,3.39,258,2.797,260,1.954,264,2.492,268,3.331,275,3.249,276,1.164,279,4.357,291,3.544,292,3.733,295,5.406,298,1.208,300,3.902,302,2.587,318,0.882,319,1.57,464,2.593,467,1.661,468,1.354,469,2.323,472,1.904,473,1.835,475,1.716,497,2.403,512,3.179,604,3.705,605,2.592,639,1.954,713,2.226,719,5.242,727,2.689,731,3.244,733,2.403,734,2.884,744,2.986,751,2.09,852,3.705,868,2.986,873,3.705,1011,2.238,1206,4.297,1502,5.406,1592,3.413,1710,4.467,1816,3.908,1868,4.98,2198,3.5,2247,5.953,2248,5.953,2249,5.976,2250,5.976,2251,5.976,2258,4.095,2687,4.095,2688,7.259,2689,4.689,2690,6.137,2691,4.689,2692,6.137,2693,6.137,2694,4.689,2695,4.689,2696,4.689,2697,4.689,2698,4.689]],["title/coverage.html",[2699,4.881]],["body/coverage.html",[0,0.517,1,0.961,9,0.092,10,3.526,28,0.013,33,0.234,58,3.207,88,2.432,90,1.375,103,0.961,105,0.993,107,0.993,110,0.961,113,0.961,114,1.961,116,0.993,119,0.961,121,0.993,123,0.993,125,0.931,127,0.961,129,0.993,131,1.791,133,0.993,134,0.993,137,0.993,139,0.993,142,0.993,144,0.961,146,0.993,148,0.961,150,0.993,152,0.993,154,0.961,155,0.961,156,0.961,157,0.993,161,0.008,162,0.008,197,3.526,209,1.702,211,2,216,1.549,254,0.324,266,2.191,283,2.303,312,3.143,401,3.19,403,3.19,410,2.091,432,4.386,433,2.939,435,3.526,467,2.186,483,3.526,495,2.939,587,2.738,589,5.013,602,2.939,605,1.244,608,2.738,610,2.939,612,3.19,614,2.303,616,4.386,618,2.738,620,2.738,635,3.19,640,0.993,645,3.19,648,3.19,652,2.571,661,2.939,666,2.738,675,2.738,695,3.526,714,3.526,731,1.639,745,2.75,747,3.526,748,3.526,769,3.526,770,3.19,771,4.618,789,2.091,825,2.738,838,2.428,847,2.571,848,3.526,931,2.331,933,4.561,935,4.973,936,4.041,937,5.02,938,3.19,1063,4.041,1064,4.858,1065,3.19,1090,2.939,1091,2.738,1092,3.526,1116,3.526,1149,3.526,1210,2.738,1290,6.465,1312,3.526,1334,2.428,1336,2.939,1338,3.526,1361,3.526,1371,2.571,1428,3.526,1429,2.939,1450,3.526,1464,4.633,1465,3.526,1533,2.571,1595,3.19,1596,3.526,1628,2.571,1647,2.738,1648,4.973,1682,2.738,1816,2.571,1955,4.386,1983,3.526,1987,2.428,2007,2.738,2048,4.041,2049,3.19,2050,3.19,2052,4.041,2054,4.386,2055,3.526,2085,3.526,2120,2.939,2121,4.386,2125,2.939,2152,4.618,2161,4.386,2162,3.19,2163,4.386,2192,3.19,2198,2.303,2243,3.526,2265,4.386,2266,4.386,2289,4.386,2299,3.526,2310,3.526,2311,4.386,2329,3.526,2331,3.526,2352,4.618,2359,2.191,2360,2.939,2361,3.526,2383,4.386,2384,4.041,2385,3.19,2456,3.526,2479,3.526,2492,2.939,2494,3.19,2495,2.738,2536,2.738,2539,3.19,2550,3.19,2552,3.526,2553,3.526,2567,3.765,2590,3.526,2629,4.973,2630,3.19,2658,3.19,2670,3.526,2687,3.526,2699,3.526,2700,4.037,2701,4.037,2702,3.526,2703,7.723,2704,8.131,2705,4.037,2706,4.037,2707,7.582,2708,6.344,2709,6.344,2710,3.526,2711,5.551,2712,6.344,2713,7.163,2714,4.037,2715,4.037,2716,4.037,2717,4.037,2718,5.551,2719,6.344,2720,5.551,2721,4.037,2722,4.037,2723,4.037,2724,4.037,2725,4.037,2726,4.037,2727,4.037,2728,5.551,2729,4.037,2730,4.037,2731,4.037,2732,4.037,2733,4.037,2734,4.037,2735,4.037,2736,4.037,2737,5.551,2738,5.551,2739,4.037,2740,5.551,2741,3.526,2742,5.551,2743,4.037,2744,4.037,2745,4.037,2746,4.037,2747,4.037,2748,4.037,2749,6.832,2750,6.832,2751,5.551,2752,5.551,2753,4.037,2754,4.037,2755,4.037,2756,5.551,2757,5.551,2758,4.037,2759,4.037,2760,4.037,2761,4.037,2762,4.037,2763,4.037,2764,4.037,2765,4.037,2766,3.526,2767,3.526,2768,4.037,2769,4.037]],["title/dependencies.html",[166,2.331,2770,2.963]],["body/dependencies.html",[28,0.013,31,0.428,80,5.171,161,0.01,162,0.01,166,2.811,182,3.213,184,1.949,186,1.885,193,2.016,317,4.015,408,3.943,409,3.066,425,3.066,468,1.709,570,4.015,591,6.205,592,5.171,624,6.205,625,5.171,626,5.171,639,1.885,2771,5.92,2772,8.359,2773,5.92,2774,7.104,2775,5.92,2776,5.92,2777,5.92,2778,5.92,2779,7.104,2780,5.92,2781,7.612,2782,5.92,2783,5.92,2784,5.92,2785,5.92,2786,5.92,2787,5.92,2788,6.205,2789,5.92,2790,7.104,2791,5.92,2792,7.104,2793,5.92,2794,5.92,2795,5.92,2796,5.92,2797,5.92,2798,5.92,2799,5.92,2800,5.92,2801,5.92,2802,5.92,2803,5.92,2804,5.92,2805,5.92,2806,5.92,2807,5.92,2808,5.92,2809,5.92,2810,5.92,2811,5.92,2812,5.92]],["title/miscellaneous/functions.html",[2813,2.469,2814,4.288]],["body/miscellaneous/functions.html",[20,0.481,28,0.012,101,0.844,161,0.01,162,0.01,216,1.779,219,1.031,223,2.732,225,2.234,227,3.772,229,2.71,232,3.634,254,0.641,255,1.111,256,0.896,260,1.817,276,1.25,277,3.282,279,3.634,296,2.71,298,1.331,302,2.406,404,4.14,410,3.599,425,2.956,441,3.712,589,4.509,605,2.403,635,5.49,639,2.483,645,5.49,648,5.49,655,4.425,707,3.634,857,3.432,1001,5.09,1046,3.87,1186,4.985,1188,4.712,1238,3.863,1271,3.098,1471,3.87,1482,4.154,1751,3.634,1803,4.154,1823,3.87,1897,3.87,1965,5.49,2061,5.49,2072,4.509,2492,5.817,2618,6.069,2710,4.985,2741,4.985,2813,4.154,2814,4.985,2815,7.492,2816,5.707,2817,5.707,2818,5.707,2819,5.707,2820,5.707,2821,5.707,2822,5.707,2823,6.949,2824,5.707,2825,5.707,2826,5.707,2827,5.707,2828,5.707]],["title/interfaces/incidentInfo.html",[931,1.177,1987,2.451]],["body/interfaces/incidentInfo.html",[3,0.156,4,0.156,9,0.136,20,0.502,28,0.013,30,0.281,32,0.156,161,0.01,162,0.01,202,1.066,254,0.675,256,1.02,276,0.955,298,1.379,381,4.099,459,3.101,895,4.099,931,1.721,932,2.716,933,3.795,1206,4.513,1390,5.366,1392,5.759,1394,5.366,1667,4.338,1769,5.366,1987,4.29,2007,4.042,2219,6.911,2359,4.295,2829,7.912]],["title/index.html",[20,0.343,2830,3.56]],["body/index.html",[1,1.609,2,1.198,28,0.013,95,0.926,103,1.609,105,1.924,107,1.924,110,1.609,113,1.609,116,1.924,119,1.609,121,1.661,123,1.661,125,1.558,127,1.609,129,1.924,133,1.924,134,1.661,137,1.661,139,1.661,142,1.661,144,1.864,146,1.661,148,1.609,150,1.661,152,1.924,154,1.609,155,1.609,156,1.609,157,1.924,161,0.009,162,0.009,163,1.277,164,5.586,165,1.61,166,2.17,167,2.367,168,2.367,169,1.666,170,1.726,171,3.992,172,3.992,173,3.992,174,4.582,175,3.126,176,2.083,177,1.856,191,2.002,391,2.367,392,5.994,393,3.992,394,3.992,395,3.992,396,4.582,397,4.687,434,3.611,582,5.954,583,3.992,584,3.992,585,3.992,586,3.992,587,4.582,588,4.582,664,5.504,713,2.17,746,3.611,932,2.083,1297,5.994,1298,3.992,1299,3.992,1300,3.992,1301,4.582,1337,2.91,1415,3.442,2038,6.22,2039,3.992,2040,3.992,2041,3.992,2042,4.582,2155,5.586,2156,3.992,2157,3.992,2158,3.992,2159,4.582,2524,5.586,2525,3.992,2526,3.992,2527,3.992,2528,4.582,2532,3.992,2533,3.992,2534,3.992,2535,3.992,2536,4.874,2625,3.992,2626,3.992,2627,3.992,2628,4.582,2830,3.992,2831,4.57,2832,4.57,2833,6.035,2834,4.57]],["title/modules.html",[165,1.968]],["body/modules.html",[28,0.011,161,0.011,162,0.011,164,4.481,165,2.169,174,4.175,392,4.481,396,4.175,397,3.342,582,4.481,588,4.175,592,6.162,664,4.175,1237,5.708,1297,4.481,1301,4.175,2038,4.481,2042,4.175,2155,4.481,2159,4.175,2524,4.481,2528,4.175,2628,4.175,2788,7.394,2835,8.465,2836,8.656,2837,8.416]],["title/properties.html",[202,0.733,2770,2.963]],["body/properties.html",[28,0.012,125,1.534,161,0.011,162,0.011,202,0.994,256,0.858,2838,6.65,2839,6.65,2840,7.605,2841,6.65,2842,6.65,2843,6.65,2844,6.65]],["title/routes.html",[191,2.448]],["body/routes.html",[28,0.011,161,0.011,162,0.011,191,2.966]],["title/miscellaneous/variables.html",[2813,2.469,2845,4.288]],["body/miscellaneous/variables.html",[20,0.447,28,0.013,34,6.975,110,1.264,113,1.264,114,2.027,144,1.264,155,1.264,156,1.264,161,0.01,162,0.01,254,0.657,263,1.951,277,2.91,309,1.889,310,2.912,426,3.429,482,1.87,616,6.006,652,4.231,935,4.836,936,3.863,937,5.415,938,5.25,1033,4.984,1034,4.984,1037,4.984,1038,4.984,1063,3.863,1064,5.155,1065,5.25,1699,4.836,1703,4.836,1704,4.836,1705,4.836,1706,4.836,1707,4.836,1708,5.279,1709,4.836,2048,3.863,2052,3.863,2083,3.863,2119,4.636,2383,4.193,2384,3.863,2385,5.25,2629,4.836,2630,5.25,2658,5.25,2702,5.803,2766,4.636,2767,4.636,2813,3.863,2845,4.636,2846,6.644,2847,5.307,2848,5.307,2849,5.307,2850,6.644,2851,5.307,2852,5.307,2853,5.307,2854,5.307,2855,5.307,2856,5.307,2857,5.307,2858,6.644,2859,6.644,2860,6.644,2861,6.644,2862,6.644,2863,6.644,2864,6.644,2865,6.644,2866,6.644,2867,6.644]]],"invertedIndex":[["",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":58,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2839,"title":{},"body":{"properties.html":{}}}],["0.14.2",{"_index":2812,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":846,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["0.24",{"_index":1419,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["0.25",{"_index":1295,"title":{},"body":{"components/DataPage.html":{}}}],["0.5rem",{"_index":386,"title":{},"body":{"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["0.8em",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["0/1",{"_index":2704,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2715,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2732,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2713,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2714,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2712,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2717,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2716,"title":{},"body":{"coverage.html":{}}}],["0f212d",{"_index":72,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["0px",{"_index":1293,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["1",{"_index":65,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["1.6rem",{"_index":2154,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["1/1",{"_index":2711,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2737,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2739,"title":{},"body":{"coverage.html":{}}}],["10.10.0",{"_index":2800,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":2734,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":88,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["100px",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["10px",{"_index":83,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["11.0.2",{"_index":2803,"title":{},"body":{"dependencies.html":{}}}],["11/17",{"_index":2765,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2833,"title":{},"body":{"index.html":{}}}],["12/14",{"_index":2746,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2562,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["15.0.0",{"_index":2795,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":1416,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["16px",{"_index":1423,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["17",{"_index":2831,"title":{},"body":{"index.html":{}}}],["17.0.2",{"_index":2772,"title":{},"body":{"dependencies.html":{}}}],["17.13.0",{"_index":2807,"title":{},"body":{"dependencies.html":{}}}],["17.3.3",{"_index":2774,"title":{},"body":{"dependencies.html":{}}}],["19/23",{"_index":2750,"title":{},"body":{"coverage.html":{}}}],["190px",{"_index":2237,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["1:770666336001:web:96e7751d6f04cea0b39500",{"_index":2865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1b3e56",{"_index":1282,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["1px",{"_index":569,"title":{},"body":{"components/AppComponent.html":{}}}],["1rem",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["2",{"_index":1415,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"index.html":{}}}],["2.0.4",{"_index":2794,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":2810,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":2708,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2709,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2743,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2745,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":2450,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["20px",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{}}}],["22/37",{"_index":2731,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":2834,"title":{},"body":{"index.html":{}}}],["24px",{"_index":1291,"title":{},"body":{"components/DataPage.html":{}}}],["250px",{"_index":1253,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["27",{"_index":2832,"title":{},"body":{"index.html":{}}}],["28",{"_index":2744,"title":{},"body":{"coverage.html":{}}}],["2em",{"_index":2240,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["2px",{"_index":843,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["2rem",{"_index":2153,"title":{},"body":{"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["3",{"_index":839,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["3/4",{"_index":2720,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2725,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2760,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2757,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":365,"title":{},"body":{"components/AccessPage.html":{},"components/RegisterFormComponent.html":{}}}],["300px",{"_index":1288,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["30px",{"_index":76,"title":{},"body":{"components/AboutPage.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["33",{"_index":2738,"title":{},"body":{"coverage.html":{}}}],["350px",{"_index":2328,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["36a2eb",{"_index":2183,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["4",{"_index":2509,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["4.4.3",{"_index":2799,"title":{},"body":{"dependencies.html":{}}}],["4/6",{"_index":2718,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2759,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":2740,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2152,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["40px",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["42",{"_index":2756,"title":{},"body":{"coverage.html":{}}}],["42a5f5",{"_index":2604,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["49",{"_index":2150,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["495057",{"_index":2191,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["4px",{"_index":1280,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["5",{"_index":391,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["5.0.7",{"_index":2781,"title":{},"body":{"dependencies.html":{}}}],["5.0.8",{"_index":2784,"title":{},"body":{"dependencies.html":{}}}],["5.12.2",{"_index":2802,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":2805,"title":{},"body":{"dependencies.html":{}}}],["5.7.4",{"_index":2779,"title":{},"body":{"dependencies.html":{}}}],["5/10",{"_index":2721,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":2723,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2748,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1290,"title":{},"body":{"components/DataPage.html":{},"coverage.html":{}}}],["50px",{"_index":557,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/SettingsPage.html":{}}}],["55",{"_index":2747,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":2758,"title":{},"body":{"coverage.html":{}}}],["58",{"_index":2726,"title":{},"body":{"coverage.html":{}}}],["59",{"_index":2730,"title":{},"body":{"coverage.html":{}}}],["5rem",{"_index":93,"title":{},"body":{"components/AboutPage.html":{}}}],["6",{"_index":2563,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["6.5.2",{"_index":2790,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":2729,"title":{},"body":{"coverage.html":{}}}],["6/9",{"_index":2742,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":2724,"title":{},"body":{"coverage.html":{}}}],["6000",{"_index":361,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["600px",{"_index":92,"title":{},"body":{"components/AboutPage.html":{},"components/HomePage.html":{}}}],["60px",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["61",{"_index":2762,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":2705,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":2764,"title":{},"body":{"coverage.html":{}}}],["64b5f6",{"_index":2606,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["66",{"_index":2707,"title":{},"body":{"coverage.html":{}}}],["66bb6a",{"_index":2605,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["7.0.0",{"_index":2792,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2808,"title":{},"body":{"dependencies.html":{}}}],["7/11",{"_index":2706,"title":{},"body":{"coverage.html":{}}}],["7/12",{"_index":2727,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2736,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2755,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":375,"title":{},"body":{"components/AccessPage.html":{},"components/SettingsPage.html":{}}}],["700px",{"_index":390,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/UsersInfoComponent.html":{}}}],["71",{"_index":1418,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["72",{"_index":2751,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2719,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2754,"title":{},"body":{"coverage.html":{}}}],["770666336001",{"_index":2864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["777777",{"_index":1284,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["8",{"_index":1241,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["8.0.0",{"_index":2797,"title":{},"body":{"dependencies.html":{}}}],["8/10",{"_index":2753,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":2752,"title":{},"body":{"coverage.html":{}}}],["8/13",{"_index":2763,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":838,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["80px",{"_index":1296,"title":{},"body":{"components/DataPage.html":{}}}],["80vh",{"_index":2455,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["81c784",{"_index":2607,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["82",{"_index":2749,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":2722,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2728,"title":{},"body":{"coverage.html":{}}}],["850px",{"_index":1426,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["86.3vh",{"_index":56,"title":{},"body":{"components/AboutPage.html":{}}}],["87",{"_index":2735,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":1278,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["9",{"_index":1359,"title":{},"body":{"classes/EmailValidation.html":{}}}],["9._",{"_index":1358,"title":{},"body":{"classes/EmailValidation.html":{}}}],["9/12",{"_index":2761,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2733,"title":{},"body":{"coverage.html":{}}}],["900",{"_index":74,"title":{},"body":{"components/AboutPage.html":{}}}],["900px",{"_index":845,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentDataPage.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["90px",{"_index":70,"title":{},"body":{"components/AboutPage.html":{}}}],["95",{"_index":1427,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{}}}],["_",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["__forms",{"_index":367,"title":{},"body":{"components/AccessPage.html":{}}}],["__image",{"_index":376,"title":{},"body":{"components/AccessPage.html":{}}}],["__status",{"_index":2239,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["__title",{"_index":2238,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["_app",{"_index":1683,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_auth",{"_index":1685,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{}}}],["_categories",{"_index":1693,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_category",{"_index":1031,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["_categoryservice",{"_index":1159,"title":{},"body":{"components/DataPage.html":{}}}],["_data",{"_index":324,"title":{},"body":{"components/AccessPage.html":{}}}],["_data.role",{"_index":325,"title":{},"body":{"components/AccessPage.html":{}}}],["_db",{"_index":1684,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_firebaseservice",{"_index":1164,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["_firebasesvc",{"_index":2611,"title":{},"body":{"components/UserDataPage.html":{}}}],["_headers",{"_index":2115,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["_headers.set('accept",{"_index":2117,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["_incidents",{"_index":1691,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_info",{"_index":1559,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["_info.uuid",{"_index":1560,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["_islogged",{"_index":1687,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_item",{"_index":2269,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["_language",{"_index":1117,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["_logged",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["_picture",{"_index":2386,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["_router",{"_index":2484,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["_user",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["_users",{"_index":1689,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["_webstorage",{"_index":1686,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["a4ef9",{"_index":2862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a4ef9.appspot.com",{"_index":2863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a4ef9.firebaseapp.com",{"_index":2861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["about'},{'name",{"_index":102,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["about.page",{"_index":188,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{}}}],["about.page.html",{"_index":19,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["aboutpagemodule",{"_index":164,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"index.html":{},"modules.html":{}}}],["aboutpageroutingmodule",{"_index":174,"title":{"modules/AboutPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["absolute",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["abstract",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/MediaService.html":{}}}],["abstractcontrol",{"_index":1349,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["acc",{"_index":2176,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["acc[categoryname",{"_index":2175,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["acc[user.role",{"_index":2597,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["access",{"_index":199,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["access'},{'name",{"_index":104,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["access.page",{"_index":400,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{}}}],["access.page.html",{"_index":201,"title":{},"body":{"components/AccessPage.html":{}}}],["access.page.scss",{"_index":200,"title":{},"body":{"components/AccessPage.html":{}}}],["access.tologin",{"_index":363,"title":{},"body":{"components/AccessPage.html":{}}}],["access.toregister",{"_index":362,"title":{},"body":{"components/AccessPage.html":{}}}],["access.webp",{"_index":383,"title":{},"body":{"components/AccessPage.html":{}}}],["access__forms",{"_index":371,"title":{},"body":{"components/AccessPage.html":{}}}],["access__image",{"_index":2478,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["accessors",{"_index":957,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["accesspage",{"_index":103,"title":{"components/AccessPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["accesspagemodule",{"_index":392,"title":{"modules/AccessPageModule.html":{}},"body":{"modules/AccessPageModule.html":{},"index.html":{},"modules.html":{}}}],["accesspageroutingmodule",{"_index":396,"title":{"modules/AccessPageRoutingModule.html":{}},"body":{"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["according",{"_index":2370,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["accordingly",{"_index":704,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["accordionmodule",{"_index":1308,"title":{},"body":{"modules/DataPageModule.html":{},"modules/SettingsPageModule.html":{}}}],["account",{"_index":1914,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["action",{"_index":1441,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["actions",{"_index":844,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["activated",{"_index":451,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["activatedroute",{"_index":213,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["activatedroutesnapshot",{"_index":443,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["actual_component",{"_index":160,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["actualizada",{"_index":900,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["actualizar",{"_index":926,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["add",{"_index":1801,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adddoc",{"_index":1655,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adddoc(collectionref",{"_index":1808,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adding",{"_index":1131,"title":{},"body":{"injectables/CustomTranslateService.html":{},"pipes/ShortenTextPipe.html":{}}}],["additional",{"_index":1515,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["address",{"_index":1913,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["adds",{"_index":755,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["admin",{"_index":448,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/CategoryInfo.html":{}}}],["adminguard",{"_index":433,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{}}}],["adminid",{"_index":934,"title":{},"body":{"interfaces/CategoryInfo.html":{}}}],["against",{"_index":1858,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["age",{"_index":1947,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["aizasydongue6cpcz6vkkf",{"_index":2859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["al",{"_index":904,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["align",{"_index":63,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["alldata",{"_index":1735,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldata[collectionname",{"_index":1739,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldocs",{"_index":1835,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["alldocs.docs.filter((doc",{"_index":1838,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["allowed",{"_index":1285,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["allowing",{"_index":1802,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["allows",{"_index":249,"title":{},"body":{"components/AccessPage.html":{},"injectables/IncidentsService.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["already",{"_index":341,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["androidscheme",{"_index":2856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":243,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["angular's",{"_index":2249,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["angular/animations",{"_index":2771,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2773,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":182,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":405,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/compiler",{"_index":2775,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":184,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"modules/DataPageModule.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"modules/SettingsPageModule.html":{},"components/UpdateUserComponent.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2776,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":418,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/checkbox",{"_index":2047,"title":{},"body":{"modules/HomePageModule.html":{}}}],["angular/material/dialog",{"_index":632,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"modules/SharedModule.html":{}}}],["angular/material/form",{"_index":413,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/icon",{"_index":420,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/input",{"_index":416,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/select",{"_index":1307,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["angular/material/tabs",{"_index":1305,"title":{},"body":{"modules/DataPageModule.html":{}}}],["angular/platform",{"_index":591,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":193,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/LoginFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UsersInfoComponent.html":{},"dependencies.html":{}}}],["anonymously",{"_index":1890,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["api",{"_index":1029,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["apikey",{"_index":1703,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["app.component",{"_index":598,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":484,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":105,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["append",{"_index":2561,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["appends",{"_index":762,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["appid",{"_index":1708,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["application",{"_index":239,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["application/pdf",{"_index":1758,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["application/x",{"_index":2118,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["applies",{"_index":1383,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{}}}],["apply",{"_index":1425,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{}}}],["applying",{"_index":2004,"title":{},"body":{"components/HomePage.html":{}}}],["appmodule",{"_index":582,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"index.html":{},"modules.html":{}}}],["appname",{"_index":2853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodule",{"_index":588,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["argument",{"_index":2828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arguments",{"_index":800,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["around",{"_index":2522,"title":{},"body":{"components/SettingsPage.html":{}}}],["array",{"_index":1825,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["arrays",{"_index":1734,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["asociadas",{"_index":919,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["assigns",{"_index":2673,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["associated",{"_index":246,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["assumes",{"_index":1614,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["async",{"_index":328,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["async)?.name",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["async)?.surname",{"_index":549,"title":{},"body":{"components/AppComponent.html":{}}}],["asynchronous",{"_index":1528,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["asynchronously",{"_index":1964,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["attempts",{"_index":1472,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth",{"_index":257,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["auth.service",{"_index":604,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["auth.service.ts",{"_index":1465,"title":{},"body":{"classes/FirebaseAuthService.html":{},"coverage.html":{}}}],["auth.service.ts:10",{"_index":1469,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["auth.service.ts:124",{"_index":1506,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["auth.user",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["auth.user$|async)?.name",{"_index":2517,"title":{},"body":{"components/SettingsPage.html":{}}}],["auth.user$|async)?.surname",{"_index":2518,"title":{},"body":{"components/SettingsPage.html":{}}}],["auth.user$|async)?.username",{"_index":2519,"title":{},"body":{"components/SettingsPage.html":{}}}],["auth/email",{"_index":340,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/invalid",{"_index":351,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/operation",{"_index":1929,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["auth/weak",{"_index":1931,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["authdomain",{"_index":1704,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["authenticate",{"_index":1917,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["authenticated",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["authentication",{"_index":258,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["authguard",{"_index":661,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["author",{"_index":2843,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":259,"title":{},"body":{"components/AccessPage.html":{},"components/HomePage.html":{}}}],["authservice",{"_index":209,"title":{"injectables/AuthService.html":{}},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["authservice:10",{"_index":1478,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:11",{"_index":1477,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:12",{"_index":1479,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:153",{"_index":1497,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:178",{"_index":1491,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:189",{"_index":1523,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:44",{"_index":1480,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:83",{"_index":1513,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservice:9",{"_index":1476,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["authservicefactory",{"_index":648,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["authservicefactory(backend",{"_index":2818,"title":{},"body":{"miscellaneous/functions.html":{}}}],["auto",{"_index":66,"title":{},"body":{"components/AboutPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["automatically",{"_index":1470,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["available",{"_index":1237,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules.html":{}}}],["avatar",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["await",{"_index":332,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["backend",{"_index":655,"title":{},"body":{"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/functions.html":{}}}],["backend:string",{"_index":636,"title":{},"body":{"modules/AppModule.html":{}}}],["background",{"_index":378,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["backgroundcolor",{"_index":2181,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["bar",{"_index":2786,"title":{},"body":{"dependencies.html":{}}}],["base64",{"_index":2824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":253,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LocalService.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["bbbbbb",{"_index":2242,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["bd1e1e",{"_index":1424,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["before",{"_index":763,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["behaviorsubject",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomTranslateService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["behaviorsubject(false",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["behaviorsubject(null",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{}}}],["being",{"_index":292,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/PictureSelectableComponent.html":{},"injectables/UsersService.html":{}}}],["between",{"_index":52,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["binary",{"_index":1752,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["blob",{"_index":1238,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["blob([csvcontent",{"_index":1239,"title":{},"body":{"components/DataPage.html":{}}}],["blobs",{"_index":1748,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["block",{"_index":82,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/DataPage.html":{},"components/PictureSelectableComponent.html":{}}}],["body",{"_index":2068,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["bold",{"_index":574,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["boolean",{"_index":459,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["bootstrap",{"_index":168,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["border",{"_index":387,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["borrada",{"_index":923,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["borrar",{"_index":915,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["both",{"_index":1532,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["bottom",{"_index":77,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["box",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["boxes",{"_index":1165,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["break",{"_index":345,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["browse",{"_index":2836,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":592,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":440,"title":{},"body":{"guards/AdminGuard.html":{}}}],["browser/animations",{"_index":595,"title":{},"body":{"modules/AppModule.html":{}}}],["browser/animations/async",{"_index":601,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":594,"title":{},"body":{"modules/AppModule.html":{}}}],["browserlanguage",{"_index":2300,"title":{},"body":{"injectables/LocalService.html":{}}}],["browsermodule",{"_index":590,"title":{},"body":{"modules/AppModule.html":{}}}],["bucket",{"_index":1765,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["building",{"_index":1434,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["button",{"_index":384,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["button.picture",{"_index":2451,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["búsqueda",{"_index":1847,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["c.name",{"_index":879,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["calc((100vw",{"_index":2236,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["calc(33.333",{"_index":2036,"title":{},"body":{"components/HomePage.html":{}}}],["callback",{"_index":1001,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":1897,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["calling",{"_index":1492,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["calls",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{}}}],["campo",{"_index":1953,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["canactivate",{"_index":436,"title":{},"body":{"guards/AdminGuard.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["canactivate(route",{"_index":442,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["cancel",{"_index":1097,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["capacitor.config.ts",{"_index":2702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["capacitor/android",{"_index":2778,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":2780,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":2782,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":317,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"dependencies.html":{}}}],["capacitor/keyboard",{"_index":2783,"title":{},"body":{"dependencies.html":{}}}],["capacitor/status",{"_index":2785,"title":{},"body":{"dependencies.html":{}}}],["capacitorconfig",{"_index":2851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capitalized",{"_index":765,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["capitalizeinitial",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{}}}],["capitalizeinitialpipe",{"_index":587,"title":{"pipes/CapitalizeInitialPipe.html":{}},"body":{"modules/AppModule.html":{},"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{},"index.html":{}}}],["capitalizes",{"_index":753,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["capitalizing",{"_index":1511,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["card",{"_index":2235,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["case",{"_index":339,"title":{},"body":{"components/AccessPage.html":{},"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["cases",{"_index":287,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch",{"_index":1044,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["catch((err",{"_index":1146,"title":{},"body":{"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catch((error",{"_index":1222,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["catch(async",{"_index":1796,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["catcherror",{"_index":870,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["catcherror((err",{"_index":902,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["categories",{"_index":108,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["categoriesinfocomponent",{"_index":107,"title":{"components/CategoriesInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["categoriesselectorcomponent",{"_index":960,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoriesservice",{"_index":847,"title":{"injectables/CategoriesService.html":{}},"body":{"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"coverage.html":{}}}],["category",{"_index":111,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["category'},{'name",{"_index":136,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["category(_category",{"_index":1040,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["category.admin",{"_index":890,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.adminid",{"_index":888,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category.component",{"_index":1211,"title":{},"body":{"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["category.component.html",{"_index":2268,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["category.component.scss",{"_index":2267,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["category.component.ts",{"_index":2266,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["category.component.ts:12",{"_index":2340,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:13",{"_index":2341,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:16",{"_index":2272,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:20",{"_index":2333,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:23",{"_index":2273,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:30",{"_index":2279,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:32",{"_index":2271,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:33",{"_index":2334,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:36",{"_index":2274,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:37",{"_index":2332,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:42",{"_index":2275,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.component.ts:56",{"_index":2335,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:62",{"_index":2338,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:70",{"_index":2336,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["category.component.ts:9",{"_index":2277,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["category.description",{"_index":836,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["category.name",{"_index":835,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{}}}],["category.uuid",{"_index":922,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["category/item",{"_index":2049,"title":{},"body":{"modules/HomePageModule.html":{},"components/ItemCategoryComponent.html":{},"coverage.html":{}}}],["category/modal",{"_index":1210,"title":{},"body":{"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["category_selectable_mobile_value_accessor",{"_index":1065,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category_selectable_value_accessor",{"_index":938,"title":{},"body":{"components/CategorySelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categorycounts",{"_index":2173,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["categoryid",{"_index":863,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryinfo",{"_index":789,"title":{"interfaces/CategoryInfo.html":{}},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["categoryinfo(category",{"_index":2344,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["categoryname",{"_index":1390,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"interfaces/incidentInfo.html":{}}}],["categorynamevalue",{"_index":2024,"title":{},"body":{"components/HomePage.html":{}}}],["categoryselectablecomponent",{"_index":110,"title":{"components/CategorySelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categoryselectablemobilecomponent",{"_index":113,"title":{"components/CategorySelectableMobileComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["categoryselected",{"_index":941,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoryselected.data.name",{"_index":1062,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoryservice",{"_index":942,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["categoría",{"_index":881,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["cccccc",{"_index":1283,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["center",{"_index":64,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["certain",{"_index":1920,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["chain",{"_index":1527,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["change",{"_index":1013,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["changeform",{"_index":203,"title":{},"body":{"components/AccessPage.html":{}}}],["changepicture",{"_index":2388,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture",{"_index":2396,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changes",{"_index":1002,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["changing",{"_index":2414,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["character",{"_index":761,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["characters",{"_index":1935,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["chart",{"_index":2169,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["chart.js",{"_index":2798,"title":{},"body":{"dependencies.html":{}}}],["chartdata",{"_index":2188,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["chartmodule",{"_index":2547,"title":{},"body":{"modules/SharedModule.html":{}}}],["chato",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["checkbox",{"_index":1422,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["checked",{"_index":1392,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/incidentInfo.html":{}}}],["checkedvalue",{"_index":2026,"title":{},"body":{"components/HomePage.html":{}}}],["checking",{"_index":700,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["checks",{"_index":447,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{}}}],["checkscreensize",{"_index":775,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["checkscreensize(width",{"_index":807,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["children",{"_index":668,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["circle",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["class",{"_index":33,"title":{"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"classes/PasswordValidation.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":1337,"title":{},"body":{"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"classes/PasswordValidation.html":{},"index.html":{}}}],["clears",{"_index":974,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["clearsearch",{"_index":945,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["clearsearch(input",{"_index":971,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["clearselection",{"_index":946,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["click",{"_index":2207,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["clicked",{"_index":797,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["clicks",{"_index":2276,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["client",{"_index":612,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["client.provider",{"_index":621,"title":{},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{}}}],["client.provider.ts",{"_index":2055,"title":{},"body":{"injectables/HttpClientProvider.html":{},"coverage.html":{}}}],["client.provider.ts:16",{"_index":2066,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:26",{"_index":2064,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:37",{"_index":2074,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:53",{"_index":2076,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:69",{"_index":2070,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:84",{"_index":2060,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["client.provider.ts:94",{"_index":2081,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["close",{"_index":519,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["closes",{"_index":1103,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["cluster_aboutpagemodule",{"_index":171,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":172,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_aboutpagemodule_imports",{"_index":173,"title":{},"body":{"modules/AboutPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule",{"_index":393,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule_declarations",{"_index":394,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_accesspagemodule_imports",{"_index":395,"title":{},"body":{"modules/AccessPageModule.html":{},"index.html":{}}}],["cluster_appmodule",{"_index":583,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_bootstrap",{"_index":586,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_declarations",{"_index":585,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_appmodule_imports",{"_index":584,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["cluster_datapagemodule",{"_index":1298,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_datapagemodule_declarations",{"_index":1300,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_datapagemodule_imports",{"_index":1299,"title":{},"body":{"modules/DataPageModule.html":{},"index.html":{}}}],["cluster_homepagemodule",{"_index":2039,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_declarations",{"_index":2040,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_homepagemodule_imports",{"_index":2041,"title":{},"body":{"modules/HomePageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule",{"_index":2156,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule_declarations",{"_index":2157,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_incidentdatapagemodule_imports",{"_index":2158,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule",{"_index":2525,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule_declarations",{"_index":2527,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_settingspagemodule_imports",{"_index":2526,"title":{},"body":{"modules/SettingsPageModule.html":{},"index.html":{}}}],["cluster_sharedmodule",{"_index":2532,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_declarations",{"_index":2534,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_exports",{"_index":2535,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_sharedmodule_imports",{"_index":2533,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule",{"_index":2625,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule_declarations",{"_index":2627,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["cluster_userdatapagemodule_imports",{"_index":2626,"title":{},"body":{"modules/UserDataPageModule.html":{},"index.html":{}}}],["code",{"_index":1925,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["coincidan",{"_index":1845,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection",{"_index":1503,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection's",{"_index":1831,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collection(this._db",{"_index":1738,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionname",{"_index":1736,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionname/documentid",{"_index":1606,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["collectionref",{"_index":1807,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collectionreference",{"_index":1666,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["collections",{"_index":1698,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["color",{"_index":71,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["column",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["combinelatest",{"_index":2680,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["commonmodule",{"_index":181,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["complete",{"_index":1495,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["completed",{"_index":2827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["completes",{"_index":1519,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["completing",{"_index":2404,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["completion",{"_index":1496,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["component_template",{"_index":100,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["componentprops",{"_index":1259,"title":{},"body":{"components/DataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["components/categories",{"_index":2545,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/confirm",{"_index":2546,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/incidents",{"_index":2544,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/picture",{"_index":2543,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/user",{"_index":2549,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/users",{"_index":2538,"title":{},"body":{"modules/SharedModule.html":{}}}],["con",{"_index":882,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["concatenated",{"_index":1768,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["condition",{"_index":1861,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["config",{"_index":652,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":1700,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["confirm",{"_index":117,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["confirmation",{"_index":1200,"title":{},"body":{"components/DataPage.html":{}}}],["confirmcontrolname",{"_index":2365,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["confirmdialogcomponent",{"_index":116,"title":{"components/ConfirmDialogComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["confirmed",{"_index":2619,"title":{},"body":{"components/UserDataPage.html":{}}}],["confirmpassword",{"_index":2377,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["connect",{"_index":1481,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["connectanonymously",{"_index":1896,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connected",{"_index":1499,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connects",{"_index":1908,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["connectuserwithemailandpassword",{"_index":1545,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.error('error",{"_index":1045,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["console.error('failed",{"_index":1223,"title":{},"body":{"components/DataPage.html":{}}}],["console.error('no",{"_index":1236,"title":{},"body":{"components/DataPage.html":{}}}],["console.error(err",{"_index":537,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{}}}],["console.log",{"_index":1932,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log('all",{"_index":329,"title":{},"body":{"components/AccessPage.html":{}}}],["console.log('bad",{"_index":350,"title":{},"body":{"components/AccessPage.html":{}}}],["console.log('filtervalues",{"_index":2018,"title":{},"body":{"components/HomePage.html":{}}}],["console.log('object",{"_index":892,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["console.log('user",{"_index":2503,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["console.log(`email",{"_index":1928,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(`error",{"_index":1930,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(err",{"_index":1540,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["console.log(error",{"_index":2444,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["console.log(error.message",{"_index":1938,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["console.log(id",{"_index":2011,"title":{},"body":{"components/HomePage.html":{}}}],["console.log(results.data",{"_index":2506,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["console.log(this.form.value",{"_index":1407,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["console.log(this.message.message",{"_index":1110,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["const",{"_index":194,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageRoutingModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["construct",{"_index":1777,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["constructor",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject('firebase",{"_index":1695,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["constructor(_auth",{"_index":1991,"title":{},"body":{"components/HomePage.html":{}}}],["constructor(_firebaseservice",{"_index":1158,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["constructor(auth",{"_index":208,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["constructor(categoryservice",{"_index":958,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["constructor(dialogref",{"_index":1098,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["constructor(filterservice",{"_index":1370,"title":{},"body":{"components/FilterComponent.html":{}}}],["constructor(firebase",{"_index":1597,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{}}}],["constructor(firebaseservice",{"_index":852,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["constructor(firebasesvc",{"_index":1468,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["constructor(formbuilder",{"_index":1431,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["constructor(httpclient",{"_index":2088,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["constructor(lang",{"_index":2301,"title":{},"body":{"injectables/LocalService.html":{}}}],["constructor(picturemodal",{"_index":2392,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["constructor(private",{"_index":474,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{}}}],["constructor(protected",{"_index":1623,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["constructor(route",{"_index":2124,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["constructor(router",{"_index":2672,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["constructor(translate",{"_index":1120,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["constructor(userservice",{"_index":2197,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["constructs",{"_index":786,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["contain",{"_index":1823,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/functions.html":{}}}],["container",{"_index":44,"title":{},"body":{"components/AboutPage.html":{}}}],["containing",{"_index":278,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["contains",{"_index":291,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/UsersService.html":{}}}],["content",{"_index":50,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["contenttype",{"_index":1790,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["contrast",{"_index":562,"title":{},"body":{"components/AppComponent.html":{}}}],["control",{"_index":1343,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{},"components/UserDataPage.html":{}}}],["control.errors",{"_index":2382,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(confirmcontrolname)?.value",{"_index":2378,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control.get(controlname)?.value",{"_index":1354,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["control.get(passwordcontrolname)?.value",{"_index":2376,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control?.errors",{"_index":2379,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["control?.value",{"_index":1353,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["controller",{"_index":2613,"title":{},"body":{"components/UserDataPage.html":{}}}],["controlname",{"_index":1344,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["controls",{"_index":1420,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/RegisterFormComponent.html":{}}}],["controlvalueaccessor",{"_index":2428,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["converted",{"_index":1196,"title":{},"body":{"components/DataPage.html":{}}}],["converts",{"_index":1186,"title":{},"body":{"components/DataPage.html":{},"miscellaneous/functions.html":{}}}],["core",{"_index":2789,"title":{},"body":{"dependencies.html":{}}}],["core/guards/admin.guard",{"_index":663,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/auth.guard",{"_index":662,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/pipes/capitalize",{"_index":627,"title":{},"body":{"modules/AppModule.html":{}}}],["core/pipes/shorten",{"_index":2541,"title":{},"body":{"modules/SharedModule.html":{}}}],["core/services/auth.service",{"_index":531,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["core/services/data.service",{"_index":619,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/firebase/api/firebase",{"_index":603,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/firebase/firebase.service",{"_index":606,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/http/http",{"_index":611,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/media.service",{"_index":615,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/translate/local.service",{"_index":529,"title":{},"body":{"components/AppComponent.html":{}}}],["core/translate/translate",{"_index":599,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["corresponding",{"_index":2616,"title":{},"body":{"components/UserDataPage.html":{}}}],["cover",{"_index":380,"title":{},"body":{"components/AccessPage.html":{}}}],["coverage",{"_index":2699,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creada",{"_index":898,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["crear",{"_index":905,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["create",{"_index":1271,"title":{},"body":{"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["createbody",{"_index":2086,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createbody(body",{"_index":2091,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createcategory",{"_index":849,"title":{},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{}}}],["createcategory(category",{"_index":855,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["created",{"_index":857,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["createdocument",{"_index":1800,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdocument(collectionname",{"_index":1805,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createdocumentwithid",{"_index":1812,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createheaders",{"_index":2087,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["createheaders(headers",{"_index":2094,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["creates",{"_index":699,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["createtranslateloader",{"_index":410,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":2821,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createuserwithemailandpassword",{"_index":1674,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["createuserwithemailandpassword(info.email",{"_index":1557,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["creating",{"_index":1169,"title":{},"body":{"components/DataPage.html":{},"injectables/DataService.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["credentials",{"_index":270,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{}}}],["credentials.email",{"_index":1546,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.password",{"_index":1547,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user",{"_index":1549,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user.user",{"_index":1550,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["credentials.user.user.uid",{"_index":1551,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["criteria",{"_index":1834,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["criterio",{"_index":1846,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["cssclass",{"_index":2504,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["csv",{"_index":1177,"title":{},"body":{"components/DataPage.html":{}}}],["csvcontent",{"_index":1178,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles",{"_index":1216,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles.hasownproperty(key",{"_index":1218,"title":{},"body":{"components/DataPage.html":{}}}],["csvfiles[key",{"_index":1219,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows",{"_index":1229,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows.join('\\r\\n",{"_index":1235,"title":{},"body":{"components/DataPage.html":{}}}],["csvrows.unshift(headers.join",{"_index":1234,"title":{},"body":{"components/DataPage.html":{}}}],["current",{"_index":251,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["currentlang",{"_index":2482,"title":{},"body":{"components/SettingsPage.html":{}}}],["currently",{"_index":981,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["currentuser",{"_index":2684,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["currentuser?.uuid",{"_index":2585,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["cursor",{"_index":388,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["customtranslateservice",{"_index":211,"title":{"injectables/CustomTranslateService.html":{}},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["data",{"_index":276,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"injectables/DataService.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{}}}],["data'},{'name",{"_index":120,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["data)).pipe",{"_index":1637,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.categories",{"_index":831,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["data.create",{"_index":1276,"title":{},"body":{"components/DataPage.html":{},"components/ModalCategoryComponent.html":{}}}],["data.data",{"_index":1274,"title":{},"body":{"components/DataPage.html":{}}}],["data.data['email",{"_index":1584,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['name",{"_index":1581,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['picture",{"_index":1583,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['role",{"_index":1585,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['surname",{"_index":1582,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.data['username",{"_index":1586,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.download",{"_index":1275,"title":{},"body":{"components/DataPage.html":{}}}],["data.file",{"_index":1979,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["data.graphic",{"_index":1277,"title":{},"body":{"components/DataPage.html":{}}}],["data.id",{"_index":1587,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["data.length",{"_index":1630,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.map((doc",{"_index":1625,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.module",{"_index":667,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module').then",{"_index":676,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module').then(m",{"_index":689,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data.module.ts",{"_index":2160,"title":{},"body":{"modules/IncidentDataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["data.page",{"_index":1303,"title":{},"body":{"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["data.page.html",{"_index":1153,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.scss",{"_index":1152,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts",{"_index":2121,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["data.page.ts:115",{"_index":2131,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:18",{"_index":2134,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts:19",{"_index":2126,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["data.page.ts:34",{"_index":2133,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:40",{"_index":2127,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:44",{"_index":2614,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.page.ts:64",{"_index":2129,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.page.ts:65",{"_index":2617,"title":{},"body":{"components/UserDataPage.html":{}}}],["data.page.ts:95",{"_index":2132,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["data.service",{"_index":1622,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.service.ts",{"_index":1596,"title":{},"body":{"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["data.service.ts:6",{"_index":1598,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["data.update",{"_index":2521,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["data.users",{"_index":2656,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["data/:id",{"_index":673,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["data/incident",{"_index":675,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"coverage.html":{}}}],["data/modal",{"_index":2008,"title":{},"body":{"components/HomePage.html":{}}}],["data/update",{"_index":2494,"title":{},"body":{"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"coverage.html":{}}}],["data/user",{"_index":666,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"coverage.html":{}}}],["data:t",{"_index":2357,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["database",{"_index":1516,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dataobject",{"_index":1195,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject.hasownproperty(key",{"_index":1225,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject[key].length",{"_index":1226,"title":{},"body":{"components/DataPage.html":{}}}],["dataobject[key].map((row",{"_index":1230,"title":{},"body":{"components/DataPage.html":{}}}],["datapage",{"_index":119,"title":{"components/DataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["datapagemodule",{"_index":1297,"title":{"modules/DataPageModule.html":{}},"body":{"modules/DataPageModule.html":{},"index.html":{},"modules.html":{}}}],["datapageroutingmodule",{"_index":1301,"title":{"modules/DataPageRoutingModule.html":{}},"body":{"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["dataservice",{"_index":618,"title":{"injectables/DataService.html":{}},"body":{"modules/AppModule.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["dataservice:101",{"_index":1603,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:24",{"_index":1616,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:52",{"_index":1607,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:72",{"_index":1611,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataservice:85",{"_index":1613,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["dataset",{"_index":1190,"title":{},"body":{"components/DataPage.html":{}}}],["datasets",{"_index":2179,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["dataurl",{"_index":2823,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob",{"_index":2492,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":2822,"title":{},"body":{"miscellaneous/functions.html":{}}}],["dataurltoblob(results.data.picture",{"_index":2510,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["datauser",{"_index":2671,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["datauser(userid",{"_index":2676,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["date",{"_index":2219,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["date(this.incident.date",{"_index":2214,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["date.now",{"_index":1787,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["date.tolocaledatestring",{"_index":2221,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["date.tolocaletimestring",{"_index":2222,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["de",{"_index":41,"title":{},"body":{"components/AboutPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["declarations",{"_index":167,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["decorators",{"_index":821,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["default",{"_index":309,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":24,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":814,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{}}}],["delete(resource",{"_index":1314,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["delete(url",{"_index":2059,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["deletecategory",{"_index":776,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{}}}],["deletecategory(category",{"_index":812,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{}}}],["deletecategory(info",{"_index":1170,"title":{},"body":{"components/DataPage.html":{}}}],["deleted",{"_index":815,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedoc",{"_index":1662,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedoc(docref",{"_index":1871,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedocument",{"_index":1866,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deletedocument('categoryinfo",{"_index":921,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["deletes",{"_index":860,"title":{},"body":{"injectables/CategoriesService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deleteuser",{"_index":1675,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deleting",{"_index":1201,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{}}}],["deletion",{"_index":2418,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["dependencies",{"_index":166,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{},"index.html":{}}}],["dependency",{"_index":2247,"title":{},"body":{"injectables/IncidentsService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["depending",{"_index":1776,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["deps",{"_index":428,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["description",{"_index":256,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"properties.html":{}}}],["deselect",{"_index":947,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["deselect(popover",{"_index":977,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["deselects",{"_index":980,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["designed",{"_index":1963,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["desired",{"_index":1876,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["desktop",{"_index":2037,"title":{},"body":{"components/HomePage.html":{}}}],["destroyed",{"_index":2400,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["detail",{"_index":359,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["detailed",{"_index":1501,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["details",{"_index":295,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"injectables/UsersService.html":{}}}],["dialog",{"_index":1093,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["dialog'},{'name",{"_index":118,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["dialog.${this.message.message",{"_index":1111,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component",{"_index":1209,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"modules/SharedModule.html":{}}}],["dialog.component.html",{"_index":1095,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.scss",{"_index":1094,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts",{"_index":1092,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"coverage.html":{}}}],["dialog.component.ts:10",{"_index":1100,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:18",{"_index":1105,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:20",{"_index":1107,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:24",{"_index":1104,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.component.ts:37",{"_index":1102,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.no",{"_index":1114,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog.yes",{"_index":1115,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["dialog/confirm",{"_index":1091,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":1096,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["dialogref.afterclosed().subscribe((result",{"_index":1254,"title":{},"body":{"components/DataPage.html":{}}}],["dialogref.afterclosed().subscribe(async",{"_index":2142,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["dialogs",{"_index":1166,"title":{},"body":{"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{}}}],["different",{"_index":235,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["direction",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["directive",{"_index":98,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["directives",{"_index":159,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["directly",{"_index":2826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["directory",{"_index":1764,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["disabled",{"_index":943,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["dismisses",{"_index":1443,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["display",{"_index":45,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["display:flex",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["displayed",{"_index":301,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["displaying",{"_index":240,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["displays",{"_index":220,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["div",{"_index":2327,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{}}}],["div.user",{"_index":2449,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["dividermodule",{"_index":629,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":1640,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc(this._db",{"_index":1819,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.data",{"_index":1627,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.id",{"_index":1626,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["doc.id.includes(substring",{"_index":1839,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docid",{"_index":1815,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docref",{"_index":896,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap",{"_index":1851,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.data",{"_index":1855,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.exists",{"_index":1853,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["docsnap.id",{"_index":1854,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["document",{"_index":1508,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["document.body.appendchild(link",{"_index":1248,"title":{},"body":{"components/DataPage.html":{}}}],["document.body.removechild(link",{"_index":1250,"title":{},"body":{"components/DataPage.html":{}}}],["document.createelement('a",{"_index":1244,"title":{},"body":{"components/DataPage.html":{}}}],["documentation",{"_index":2700,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":1649,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentos",{"_index":1843,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentpath",{"_index":1880,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentref",{"_index":1885,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentreference",{"_index":1663,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documents",{"_index":1601,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["documentsnapshot",{"_index":1664,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["download",{"_index":1176,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["downloadcsv",{"_index":1154,"title":{},"body":{"components/DataPage.html":{}}}],["downloadcsv(csvcontent",{"_index":1172,"title":{},"body":{"components/DataPage.html":{}}}],["downloaded",{"_index":1179,"title":{},"body":{"components/DataPage.html":{}}}],["downloads",{"_index":1187,"title":{},"body":{"components/DataPage.html":{}}}],["downloadurl",{"_index":1794,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["dropdownmodule",{"_index":633,"title":{},"body":{"modules/AppModule.html":{}}}],["during",{"_index":288,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["dynamic",{"_index":2777,"title":{},"body":{"dependencies.html":{}}}],["e.g",{"_index":1915,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["each",{"_index":1189,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["edit",{"_index":796,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["editcategory",{"_index":777,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{}}}],["editcategory(category",{"_index":816,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["editcategory(info",{"_index":1180,"title":{},"body":{"components/DataPage.html":{}}}],["edited",{"_index":818,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/UpdateUserComponent.html":{}}}],["editing",{"_index":1182,"title":{},"body":{"components/DataPage.html":{},"components/UserDataPage.html":{}}}],["efficiently",{"_index":1530,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["el",{"_index":1728,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["element",{"_index":97,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["ellipsis",{"_index":2558,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["email",{"_index":275,"title":{},"body":{"components/AccessPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"injectables/UsersService.html":{}}}],["email(controlname",{"_index":1340,"title":{},"body":{"classes/EmailValidation.html":{}}}],["email.match(/^[a",{"_index":1355,"title":{},"body":{"classes/EmailValidation.html":{}}}],["email:string",{"_index":2609,"title":{},"body":{"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["emailvalidation",{"_index":1336,"title":{"classes/EmailValidation.html":{}},"body":{"classes/EmailValidation.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["emailvalidation.email",{"_index":2466,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["emit",{"_index":967,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["emitevent",{"_index":1406,"title":{},"body":{"components/FilterComponent.html":{}}}],["emits",{"_index":466,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["emitted",{"_index":1882,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["emitter",{"_index":1374,"title":{},"body":{"components/FilterComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["emitting",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"injectables/MediaService.html":{},"components/UsersInfoComponent.html":{}}}],["empleados",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["empty",{"_index":759,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["en",{"_index":1141,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["encapsulation",{"_index":1150,"title":{},"body":{"components/DataPage.html":{}}}],["encoded",{"_index":2072,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["encontraron",{"_index":1842,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["end",{"_index":757,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"components/FilterComponent.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{}}}],["enough",{"_index":1934,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ensures",{"_index":2401,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["environment",{"_index":616,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.firebaseconfig",{"_index":654,"title":{},"body":{"modules/AppModule.html":{}}}],["equality",{"_index":1860,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["err",{"_index":336,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{}}}],["err.code",{"_index":337,"title":{},"body":{"components/AccessPage.html":{}}}],["err.message",{"_index":907,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["error",{"_index":221,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["error(\"not",{"_index":643,"title":{},"body":{"modules/AppModule.html":{}}}],["error('database",{"_index":1870,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error('error",{"_index":903,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{}}}],["error('una",{"_index":880,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["error('user",{"_index":1588,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["error(`error",{"_index":924,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["error(`failed",{"_index":1741,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error.code",{"_index":1927,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["error.message",{"_index":1742,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["errors",{"_index":272,"title":{},"body":{"components/AccessPage.html":{},"classes/PasswordValidation.html":{}}}],["errors.emailerror",{"_index":2471,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["errors.repeaterror",{"_index":2476,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["errors.valid",{"_index":2324,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["errors['passwordmatch",{"_index":2381,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["es",{"_index":1135,"title":{},"body":{"injectables/CustomTranslateService.html":{},"injectables/LocalService.html":{}}}],["este",{"_index":883,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["etc",{"_index":1775,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["event",{"_index":801,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["event.stoppropagation",{"_index":2227,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["eventemitter",{"_index":793,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["events",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["evt",{"_index":996,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["example",{"_index":1766,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["example@example.com",{"_index":1916,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["executed",{"_index":987,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["executes",{"_index":1331,"title":{},"body":{"injectables/DataService.html":{}}}],["exist",{"_index":1850,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["existe",{"_index":886,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["existing",{"_index":1326,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["existingcategories.some((c",{"_index":878,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["exists",{"_index":1500,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["exitosamente",{"_index":901,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["exportdata",{"_index":1155,"title":{},"body":{"components/DataPage.html":{}}}],["exports",{"_index":170,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{}}}],["extends",{"_index":1466,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{}}}],["extension",{"_index":1770,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["factories",{"_index":658,"title":{},"body":{"modules/AppModule.html":{}}}],["failed",{"_index":1490,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fails",{"_index":1483,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["false",{"_index":482,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["falsy",{"_index":758,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["fetch",{"_index":1224,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fetches",{"_index":1185,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["fetching",{"_index":961,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["ff6384",{"_index":2182,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["ffce56",{"_index":2184,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["fff",{"_index":840,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/UsersInfoComponent.html":{}}}],["ffffff",{"_index":2241,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["field",{"_index":414,"title":{},"body":{"modules/AccessPageModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"modules/DataPageModule.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["fieldname",{"_index":1945,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldpath",{"_index":1665,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fields",{"_index":1946,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{}}}],["fieldupdate",{"_index":1950,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["fieldvalue",{"_index":1948,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["fileloader",{"_index":2411,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.click",{"_index":2446,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files",{"_index":2436,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files?.length",{"_index":2437,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files[0",{"_index":2438,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.onchange",{"_index":2435,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["filename",{"_index":1173,"title":{},"body":{"components/DataPage.html":{}}}],["filereader",{"_index":2440,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["files",{"_index":1188,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["fileupload",{"_index":1744,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filter",{"_index":124,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["filter'},{'name",{"_index":122,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["filter(value",{"_index":983,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["filter.apply",{"_index":1414,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["filter.component.html",{"_index":1363,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.component.scss",{"_index":1362,"title":{},"body":{"components/FilterComponent.html":{}}}],["filter.filter",{"_index":2033,"title":{},"body":{"components/HomePage.html":{}}}],["filter.reset",{"_index":1413,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["filter/filter.component",{"_index":2009,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["filterchanged",{"_index":1368,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["filtercomponent",{"_index":121,"title":{"components/FilterComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["filtereddocs",{"_index":1837,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtereddocs.length",{"_index":1840,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filtereddocs.map((doc",{"_index":1841,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["filteredincidents",{"_index":1986,"title":{},"body":{"components/HomePage.html":{}}}],["filtering",{"_index":995,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["filtering/sorting",{"_index":1620,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["filtermobilecomponent",{"_index":123,"title":{"components/FilterMobileComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["filters",{"_index":985,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["filterscomponent",{"_index":1433,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["filterservice",{"_index":1371,"title":{"injectables/FilterService.html":{}},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/HomePage.html":{},"coverage.html":{}}}],["filterstate",{"_index":1451,"title":{},"body":{"injectables/FilterService.html":{}}}],["filtervalues",{"_index":2000,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls",{"_index":2019,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.categoryname.value",{"_index":2025,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.checked.value",{"_index":2027,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.resolved.value",{"_index":2029,"title":{},"body":{"components/HomePage.html":{}}}],["filtervalues.controls.userid.value",{"_index":2023,"title":{},"body":{"components/HomePage.html":{}}}],["final",{"_index":1771,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["finally",{"_index":1512,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebase",{"_index":639,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["firebase's",{"_index":1958,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["firebase.service",{"_index":1534,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebase/app",{"_index":1653,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase/auth",{"_index":1681,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserDataPage.html":{}}}],["firebase/firebase.service",{"_index":868,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/UsersService.html":{}}}],["firebase/firestore",{"_index":1667,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/incidentInfo.html":{}}}],["firebase/storage",{"_index":1673,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebase:firebaseservice",{"_index":637,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseapp",{"_index":1652,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebaseauthservice",{"_index":602,"title":{"classes/FirebaseAuthService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"coverage.html":{}}}],["firebaseauthservice(firebase",{"_index":649,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseconfig",{"_index":1699,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["firebasedataservice",{"_index":1595,"title":{"classes/FirebaseDataService.html":{}},"body":{"classes/FirebaseDataService.html":{},"coverage.html":{}}}],["firebasedocument",{"_index":1647,"title":{"interfaces/FirebaseDocument.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebasemediaservice",{"_index":608,"title":{"classes/FirebaseMediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["firebasemediaservice(firebase",{"_index":641,"title":{},"body":{"modules/AppModule.html":{}}}],["firebaseservice",{"_index":605,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["firebasestorage",{"_index":1672,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firebasestoragefile",{"_index":1682,"title":{"interfaces/FirebaseStorageFile.html":{}},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firebasesvc",{"_index":1474,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["firebaseusercredential",{"_index":1533,"title":{"interfaces/FirebaseUserCredential.html":{}},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["firestorage",{"_index":1782,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["firestore",{"_index":1498,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["first",{"_index":462,"title":{},"body":{"guards/AdminGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["fixed",{"_index":1289,"title":{},"body":{"components/DataPage.html":{}}}],["fixedname",{"_index":1565,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname.charat(0).touppercase",{"_index":1568,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname.slice(1",{"_index":1569,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname[0",{"_index":1566,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fixedname[0].touppercase",{"_index":1567,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["flag",{"_index":811,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["flex",{"_index":46,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["fn",{"_index":1003,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["followed",{"_index":766,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["following",{"_index":1509,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["font",{"_index":68,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["footer",{"_index":86,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["forkjoin",{"_index":2171,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["form",{"_index":374,"title":{},"body":{"components/AccessPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"modules/UserDataPageModule.html":{}}}],["form'},{'name",{"_index":141,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["form.component",{"_index":402,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["form.component.html",{"_index":2313,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.scss",{"_index":2312,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts",{"_index":2311,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:17",{"_index":2320,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:18",{"_index":2316,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["form.component.ts:19",{"_index":2461,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:25",{"_index":2458,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:31",{"_index":2317,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:38",{"_index":2318,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:56",{"_index":2459,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form.component.ts:63",{"_index":2460,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["form/login",{"_index":401,"title":{},"body":{"modules/AccessPageModule.html":{},"components/LoginFormComponent.html":{},"coverage.html":{}}}],["form/register",{"_index":403,"title":{},"body":{"modules/AccessPageModule.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["format",{"_index":1184,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["formatted",{"_index":1605,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["formattedday",{"_index":2193,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["formattedtime",{"_index":2194,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["formbuilder",{"_index":1386,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["formcontrol",{"_index":1350,"title":{},"body":{"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{}}}],["formcontrol(false",{"_index":1393,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{}}}],["formcontrol(initialformstate.get('checked')?.value",{"_index":1401,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(initialformstate.get('resolved')?.value",{"_index":1402,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(initialformstate.get('userid')?.value",{"_index":1400,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(initialformstate?.get('categoryname')?.value",{"_index":1399,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["formcontrol(undefined",{"_index":1391,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{}}}],["formdata",{"_index":2112,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["formgroup",{"_index":1385,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["forms",{"_index":1028,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["forms.actions",{"_index":834,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["forms.admin",{"_index":2520,"title":{},"body":{"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["forms.description",{"_index":833,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ModalCategoryComponent.html":{}}}],["forms.email",{"_index":2323,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["forms.login",{"_index":2326,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["forms.name",{"_index":832,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.password",{"_index":2325,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["forms.register",{"_index":2477,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["forms.reppassword",{"_index":2473,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["forms.role",{"_index":2588,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.surname",{"_index":2470,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["forms.update",{"_index":2351,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["forms.user",{"_index":2589,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["forms.username",{"_index":2472,"title":{},"body":{"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["formsmodule",{"_index":183,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["formstate",{"_index":1404,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["fortawesome/fontawesome",{"_index":2787,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":2791,"title":{},"body":{"dependencies.html":{}}}],["forwardref",{"_index":1033,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":2254,"title":{},"body":{"injectables/IncidentsService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["framework",{"_index":2844,"title":{},"body":{"properties.html":{}}}],["freeconnection",{"_index":1783,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["from(this.firebase.createdocument(resource",{"_index":1636,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["from(this.firebase.getdocuments(resource)).pipe",{"_index":1624,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["from(this.firebaseservice.updatedocument('incidentsinfo",{"_index":2262,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["from(this.firebasesvc.signout(false",{"_index":1589,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["fromobject",{"_index":2107,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["full",{"_index":680,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["function",{"_index":216,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functionalities",{"_index":438,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["functionality",{"_index":2251,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["functions",{"_index":2814,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":2866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gap",{"_index":370,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["generate",{"_index":2168,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["generic",{"_index":1609,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["get(key",{"_index":1124,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["get(resource",{"_index":1318,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["get(url",{"_index":2063,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getalldata",{"_index":1214,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getapp",{"_index":1651,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getcategory",{"_index":850,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcategory(categoryid",{"_index":861,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["getcurrentlang",{"_index":1118,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["getdoc",{"_index":1658,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdoc(docref",{"_index":1852,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs",{"_index":1660,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(collection(this._db",{"_index":1836,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocs(q",{"_index":1865,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocument",{"_index":1848,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocuments(collectionname",{"_index":1827,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsby",{"_index":1857,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdocumentsbysubstring",{"_index":1832,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl",{"_index":1670,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getdownloadurl(storageref",{"_index":1793,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfilter",{"_index":1452,"title":{},"body":{"injectables/FilterService.html":{}}}],["getfirestore",{"_index":1654,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getfirestore(this._app",{"_index":1715,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getimage",{"_index":2056,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getimage(url",{"_index":2065,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["getincidentbyid",{"_index":2244,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["getincidentbyid(incidentid",{"_index":2252,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["getitem",{"_index":2278,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["getstorage",{"_index":1668,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getstorage(this._app",{"_index":1717,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getter",{"_index":2280,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["getuser",{"_index":1743,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["getuserbyid",{"_index":2688,"title":{},"body":{"injectables/UsersService.html":{}}}],["getuserbyid(this._firebaseservice.user!.uid",{"_index":2500,"title":{},"body":{"components/SettingsPage.html":{}}}],["getuserbyid(userid",{"_index":2690,"title":{},"body":{"injectables/UsersService.html":{}}}],["given",{"_index":1127,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["gives",{"_index":244,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["good",{"_index":330,"title":{},"body":{"components/AccessPage.html":{}}}],["graph",{"_index":2837,"title":{},"body":{"modules.html":{}}}],["graphic",{"_index":1287,"title":{},"body":{"components/DataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic'},{'name",{"_index":132,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["graphic.component",{"_index":2551,"title":{},"body":{"modules/SharedModule.html":{}}}],["graphic.component.html",{"_index":2165,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.scss",{"_index":2164,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts",{"_index":2163,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["graphic.component.ts:12",{"_index":2170,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["graphic.component.ts:13",{"_index":2166,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts:14",{"_index":2591,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["graphic.component.ts:29",{"_index":2167,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["graphic.component.ts:30",{"_index":2592,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["graphic/incidents",{"_index":2162,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["graphic/user",{"_index":2550,"title":{},"body":{"modules/SharedModule.html":{},"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["graphics",{"_index":1286,"title":{},"body":{"components/DataPage.html":{}}}],["gray",{"_index":568,"title":{},"body":{"components/AppComponent.html":{}}}],["greater",{"_index":2559,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["guard",{"_index":432,"title":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":434,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"index.html":{}}}],["h1",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["handle",{"_index":1471,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseMediaService.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["handler",{"_index":991,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["handles",{"_index":271,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsInfoComponent.html":{}}}],["handling",{"_index":226,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["haptics",{"_index":315,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["haptics.impact",{"_index":333,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["hasincident",{"_index":910,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["hasincidentwithoriginalname",{"_index":925,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["hasvalue",{"_index":2387,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["having",{"_index":1922,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["header",{"_index":61,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["header__toolbar",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["headers",{"_index":1227,"title":{},"body":{"components/DataPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["height",{"_index":55,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["hidden",{"_index":60,"title":{},"body":{"components/AboutPage.html":{}}}],["hide",{"_index":2457,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["home",{"_index":525,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["home'},{'name",{"_index":126,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["home.page",{"_index":2044,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":1985,"title":{},"body":{"components/HomePage.html":{}}}],["home.page.scss",{"_index":1984,"title":{},"body":{"components/HomePage.html":{}}}],["homepage",{"_index":125,"title":{"components/HomePage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"properties.html":{}}}],["homepagemodule",{"_index":2038,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"index.html":{},"modules.html":{}}}],["homepageroutingmodule",{"_index":2042,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["homeurl",{"_index":696,"title":{},"body":{"guards/AuthGuard.html":{}}}],["hostlistener",{"_index":824,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hostlistener('window:resize",{"_index":822,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hostlisteners",{"_index":783,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["hover",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["hoverbackgroundcolor",{"_index":2185,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["html",{"_index":96,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["htmlinputelement",{"_index":2412,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["http",{"_index":2061,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"miscellaneous/functions.html":{}}}],["http:httpclient",{"_index":646,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":404,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":607,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientprovider",{"_index":620,"title":{"injectables/HttpClientProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientprovider:103",{"_index":2100,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:126",{"_index":2097,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:142",{"_index":2103,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:29",{"_index":2099,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:43",{"_index":2098,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:63",{"_index":2101,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientprovider:83",{"_index":2102,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpclientwebprovider",{"_index":610,"title":{"injectables/HttpClientWebProvider.html":{}},"body":{"modules/AppModule.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["httpclientwebprovider(http",{"_index":647,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":2096,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpheaders(headers",{"_index":2116,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpparams",{"_index":2093,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["httpproviderfactory",{"_index":645,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["httpproviderfactory(http",{"_index":2819,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https",{"_index":2857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://ionicframework.com",{"_index":2842,"title":{},"body":{"properties.html":{}}}],["icon",{"_index":85,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["icons",{"_index":80,"title":{},"body":{"components/AboutPage.html":{},"dependencies.html":{}}}],["id",{"_index":1011,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["identified",{"_index":1822,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["identifier",{"_index":1816,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["identifies",{"_index":1943,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["identify",{"_index":1818,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ids",{"_index":1830,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["image",{"_index":381,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"interfaces/incidentInfo.html":{}}}],["image/jpeg",{"_index":1756,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["images",{"_index":1751,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["imageupload",{"_index":1797,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["imageupload(blob",{"_index":1798,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["img",{"_index":579,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentDataPage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["imgs",{"_index":1978,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["imgs.push(media",{"_index":1980,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["immediately",{"_index":1884,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["impactstyle",{"_index":316,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["impactstyle.heavy",{"_index":344,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["impactstyle.medium",{"_index":335,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["implementation",{"_index":1618,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["implemented",{"_index":644,"title":{},"body":{"modules/AppModule.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["import('./pages/about/about.module').then",{"_index":691,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/access/access.module').then",{"_index":681,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/data/data.module').then(m",{"_index":685,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then",{"_index":670,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/incident",{"_index":674,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/settings/settings.module').then",{"_index":683,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/user",{"_index":688,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":1760,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["imports",{"_index":179,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["incidencias",{"_index":918,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["incident",{"_index":128,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["incident)).pipe",{"_index":2263,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident.categoryname",{"_index":912,"title":{},"body":{"injectables/CategoriesService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{}}}],["incident.checked",{"_index":2030,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{}}}],["incident.description",{"_index":2148,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.find((incident",{"_index":2260,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident.resolved",{"_index":2031,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{}}}],["incident.title",{"_index":2146,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.userid",{"_index":2032,"title":{},"body":{"components/HomePage.html":{}}}],["incident.username",{"_index":2147,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incident.uuid",{"_index":2261,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["incident?.title",{"_index":2228,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidentdatapage",{"_index":127,"title":{"components/IncidentDataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentdatapagemodule",{"_index":2155,"title":{"modules/IncidentDataPageModule.html":{}},"body":{"modules/IncidentDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["incidentdatapageroutingmodule",{"_index":2159,"title":{"modules/IncidentDataPageRoutingModule.html":{}},"body":{"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["incidentid",{"_index":2122,"title":{},"body":{"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["incidentinfo",{"_index":1987,"title":{"interfaces/incidentInfo.html":{}},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["incidentinfo(id",{"_index":1993,"title":{},"body":{"components/HomePage.html":{}}}],["incidents",{"_index":130,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["incidents.anonymous",{"_index":2234,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.day",{"_index":2231,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.filter((incident",{"_index":2021,"title":{},"body":{"components/HomePage.html":{}}}],["incidents.hour",{"_index":2232,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.reduce((acc",{"_index":2174,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["incidents.resolved",{"_index":2149,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["incidents.some",{"_index":911,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["incidents.unresolved",{"_index":2230,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidents.user",{"_index":2233,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["incidentscirclegraphiccomponent",{"_index":129,"title":{"components/IncidentsCircleGraphicComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentsinfo",{"_index":1731,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["incidentsinfocomponent",{"_index":133,"title":{"components/IncidentsInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["incidentsservice",{"_index":2125,"title":{"injectables/IncidentsService.html":{}},"body":{"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"coverage.html":{}}}],["includes",{"_index":455,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["including",{"_index":1489,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"miscellaneous/variables.html":{}}}],["indexeddblocalpersistence",{"_index":1679,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["indicates",{"_index":1893,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["indicating",{"_index":502,"title":{},"body":{"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["inesperado",{"_index":1577,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["info'},{'name",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component",{"_index":2540,"title":{},"body":{"modules/SharedModule.html":{}}}],["info.component.html",{"_index":773,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.scss",{"_index":772,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts",{"_index":771,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:17",{"_index":823,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:18",{"_index":2210,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:21",{"_index":2679,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:22",{"_index":791,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:23",{"_index":2200,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:27",{"_index":798,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:28",{"_index":2201,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:31",{"_index":2209,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:32",{"_index":2208,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["info.component.ts:33",{"_index":794,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:34",{"_index":785,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:44",{"_index":819,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:50",{"_index":2204,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:51",{"_index":813,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:59",{"_index":2678,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:60",{"_index":817,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:70",{"_index":803,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:73",{"_index":2206,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:75",{"_index":2677,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:79",{"_index":809,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["info.component.ts:84",{"_index":2202,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:85",{"_index":2674,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.component.ts:93",{"_index":2203,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["info.component.ts:94",{"_index":2675,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["info.email",{"_index":1576,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.name",{"_index":1267,"title":{},"body":{"components/DataPage.html":{},"classes/FirebaseAuthService.html":{}}}],["info.password",{"_index":1558,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.role",{"_index":1573,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.surname",{"_index":1572,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.ts",{"_index":933,"title":{},"body":{"interfaces/CategoryInfo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["info.username",{"_index":1575,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info.uuid",{"_index":1564,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["info/categories",{"_index":770,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/incidents",{"_index":2192,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["info/users",{"_index":2539,"title":{},"body":{"modules/SharedModule.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["information",{"_index":245,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["inherited",{"_index":1475,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{}}}],["init",{"_index":1119,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["init(firebaseconfig",{"_index":1711,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initform",{"_index":1364,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["initial",{"_index":787,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["initial.pipe",{"_index":628,"title":{},"body":{"modules/AppModule.html":{}}}],["initial.pipe.ts",{"_index":748,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{}}}],["initial.pipe.ts:17",{"_index":752,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["initialauthresolved",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["initialform",{"_index":1462,"title":{},"body":{"injectables/FilterService.html":{}}}],["initialformstate",{"_index":1397,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["initialize",{"_index":1701,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeapp",{"_index":1650,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeapp(firebaseconfig",{"_index":1713,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth",{"_index":1678,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initializeauth(getapp",{"_index":1719,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["initialized",{"_index":988,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["initializes",{"_index":497,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/RegisterFormComponent.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["initializestate",{"_index":1453,"title":{},"body":{"injectables/FilterService.html":{}}}],["initiates",{"_index":1175,"title":{},"body":{"components/DataPage.html":{}}}],["inject",{"_index":1108,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["inject(mat_dialog_data",{"_index":1106,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["injectable",{"_index":467,"title":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["injected",{"_index":231,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["injection",{"_index":2248,"title":{},"body":{"injectables/IncidentsService.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["inline",{"_index":81,"title":{},"body":{"components/AboutPage.html":{}}}],["inner",{"_index":2454,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["input",{"_index":306,"title":{},"body":{"components/AccessPage.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["input('item",{"_index":2283,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["input.value",{"_index":1059,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["inputs",{"_index":779,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["instance",{"_index":260,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/IncidentsService.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["instanceof",{"_index":1352,"title":{},"body":{"classes/EmailValidation.html":{},"injectables/HttpClientWebProvider.html":{},"classes/PasswordValidation.html":{}}}],["instances",{"_index":1435,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/UpdateUserComponent.html":{}}}],["intentar",{"_index":930,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["interact",{"_index":1957,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["interacting",{"_index":1602,"title":{},"body":{"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["interactions",{"_index":1599,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["interface",{"_index":931,"title":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{}},"body":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["interfaces",{"_index":932,"title":{},"body":{"interfaces/CategoryInfo.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{},"index.html":{}}}],["interfaces/category",{"_index":874,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["interfaces/data",{"_index":1335,"title":{},"body":{"injectables/DataService.html":{}}}],["interfaces/incidents",{"_index":2257,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["interfaces/user",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["invalid",{"_index":274,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["io.ionic.starter",{"_index":2852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ion",{"_index":84,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["ionic",{"_index":2840,"title":{},"body":{"properties.html":{}}}],["ionic/angular",{"_index":186,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":185,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["ionicmodule.forroot",{"_index":650,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["ionicons",{"_index":2801,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":596,"title":{},"body":{"modules/AppModule.html":{}}}],["ioninput",{"_index":972,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["ionmenu",{"_index":517,"title":{},"body":{"components/AppComponent.html":{}}}],["ionpopover",{"_index":978,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["isactive",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["isactive(url",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["isdisabled",{"_index":1016,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["islogged",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["isscreensmall",{"_index":774,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["issplash",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["issue",{"_index":1949,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserconnected",{"_index":1901,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["isuserconnectedanonymously",{"_index":1905,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["item",{"_index":135,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["item(_item",{"_index":2284,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["item.active",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["item?.name",{"_index":2288,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["itemcategorycomponent",{"_index":134,"title":{"components/ItemCategoryComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["items",{"_index":368,"title":{},"body":{"components/AccessPage.html":{},"components/FilterComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["items:center",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["itemusercomponent",{"_index":137,"title":{"components/ItemUserComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["itself",{"_index":456,"title":{},"body":{"guards/AdminGuard.html":{}}}],["join",{"_index":1233,"title":{},"body":{"components/DataPage.html":{}}}],["jpeg",{"_index":1757,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["jpg",{"_index":1773,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["json",{"_index":1194,"title":{},"body":{"components/DataPage.html":{}}}],["json.stringify(row[fieldname",{"_index":1232,"title":{},"body":{"components/DataPage.html":{}}}],["jsontocsv",{"_index":1156,"title":{},"body":{"components/DataPage.html":{}}}],["jsontocsv(dataobject",{"_index":1191,"title":{},"body":{"components/DataPage.html":{}}}],["justify",{"_index":49,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["key",{"_index":356,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{}}}],["key}.csv",{"_index":1221,"title":{},"body":{"components/DataPage.html":{}}}],["kinds",{"_index":1804,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["la",{"_index":906,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["label",{"_index":842,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["labels",{"_index":2177,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["lang",{"_index":2304,"title":{},"body":{"injectables/LocalService.html":{},"components/SettingsPage.html":{}}}],["language",{"_index":507,"title":{},"body":{"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{}}}],["languages",{"_index":236,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/SettingsPage.html":{}}}],["lastvaluefrom",{"_index":1138,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["lastvaluefrom(this.translate.use(language",{"_index":1143,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["leaks",{"_index":2408,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["left",{"_index":558,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["legacy",{"_index":2080,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["legend",{"_index":95,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"index.html":{}}}],["length",{"_index":1924,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["letter",{"_index":754,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"classes/FirebaseAuthService.html":{}}}],["life",{"_index":360,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["lightgray",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["limit",{"_index":2555,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["limits",{"_index":2557,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["line",{"_index":1292,"title":{},"body":{"components/DataPage.html":{},"components/RegisterFormComponent.html":{}}}],["link",{"_index":1243,"title":{},"body":{"components/DataPage.html":{}}}],["link.click",{"_index":1249,"title":{},"body":{"components/DataPage.html":{}}}],["link.download",{"_index":1246,"title":{},"body":{"components/DataPage.html":{}}}],["link.href",{"_index":1245,"title":{},"body":{"components/DataPage.html":{}}}],["link.style.display",{"_index":1247,"title":{},"body":{"components/DataPage.html":{}}}],["list",{"_index":837,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["listens",{"_index":804,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["literal",{"_index":1192,"title":{},"body":{"components/DataPage.html":{}}}],["load",{"_index":2615,"title":{},"body":{"components/UserDataPage.html":{}}}],["loadchildren",{"_index":669,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":247,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["loader",{"_index":425,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["loading",{"_index":1046,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/functions.html":{}}}],["loads",{"_index":998,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["local",{"_index":1525,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["localization",{"_index":238,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/SettingsPage.html":{}}}],["locallang",{"_index":494,"title":{},"body":{"components/AppComponent.html":{}}}],["localservice",{"_index":495,"title":{"injectables/LocalService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LocalService.html":{},"coverage.html":{}}}],["locate",{"_index":1867,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["located",{"_index":1942,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["location",{"_index":1761,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["logged",{"_index":463,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["login",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["login(credentials",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["loginformcomponent",{"_index":139,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["loginurl",{"_index":697,"title":{},"body":{"guards/AuthGuard.html":{}}}],["loginuser",{"_index":204,"title":{},"body":{"components/AccessPage.html":{}}}],["loginuser(data",{"_index":265,"title":{},"body":{"components/AccessPage.html":{}}}],["logo",{"_index":372,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{}}}],["logout",{"_index":489,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["logs",{"_index":269,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["los",{"_index":39,"title":{},"body":{"components/AboutPage.html":{}}}],["lottie",{"_index":624,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["lottiefiles/lottie",{"_index":2793,"title":{},"body":{"dependencies.html":{}}}],["m",{"_index":671,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ModalCategoryComponent.html":{}}}],["m.aboutpagemodule",{"_index":692,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.accesspagemodule",{"_index":682,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.datapagemodule",{"_index":686,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":672,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.incidentdatapagemodule",{"_index":677,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.settingspagemodule",{"_index":684,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.userdatapagemodule",{"_index":690,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["manage",{"_index":2612,"title":{},"body":{"components/UserDataPage.html":{}}}],["managing",{"_index":237,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{}}}],["manipulating",{"_index":439,"title":{},"body":{"guards/AdminGuard.html":{}}}],["map",{"_index":469,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["map(([users",{"_index":2683,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["map((data",{"_index":1580,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{}}}],["map((doc",{"_index":1635,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["map((fieldname",{"_index":1231,"title":{},"body":{"components/DataPage.html":{}}}],["map((incident",{"_index":2259,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["map((incidents",{"_index":2020,"title":{},"body":{"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{}}}],["map((user",{"_index":477,"title":{},"body":{"guards/AdminGuard.html":{}}}],["map((users",{"_index":2696,"title":{},"body":{"injectables/UsersService.html":{}}}],["map(response",{"_index":2264,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["map(translations",{"_index":2602,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["map(users",{"_index":2594,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["mapfunction",{"_index":1875,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapfunction(doc.data",{"_index":1878,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["mapped",{"_index":1873,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["maps",{"_index":1608,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["margin",{"_index":57,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["marked",{"_index":2130,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["mat",{"_index":1421,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{}}}],["mat_dialog_data",{"_index":1109,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["matbuttonmodule",{"_index":417,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["match",{"_index":1829,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"classes/PasswordValidation.html":{}}}],["matcheckboxmodule",{"_index":2046,"title":{},"body":{"modules/HomePageModule.html":{}}}],["matches",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["matching",{"_index":162,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1160,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["matdialogmodule",{"_index":631,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["matdialogref",{"_index":1099,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["material",{"_index":429,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matformfieldmodule",{"_index":412,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["maticonmodule",{"_index":419,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matinputmodule",{"_index":415,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["matselectmodule",{"_index":1306,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["mattabsmodule",{"_index":1304,"title":{},"body":{"modules/DataPageModule.html":{}}}],["max",{"_index":91,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["maximum",{"_index":2564,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["measurementid",{"_index":1709,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["mechanism",{"_index":2250,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["media",{"_index":90,"title":{"interfaces/Media.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["media.service",{"_index":609,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["media.service.ts",{"_index":1955,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["media.service.ts:13",{"_index":1956,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["media[0",{"_index":2513,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["mediaservice",{"_index":614,"title":{"injectables/MediaService.html":{}},"body":{"modules/AppModule.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"coverage.html":{}}}],["mediaservice:32",{"_index":1962,"title":{},"body":{"classes/FirebaseMediaService.html":{}}}],["mediaservicefactory",{"_index":635,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["mediaservicefactory(backend",{"_index":2820,"title":{},"body":{"miscellaneous/functions.html":{}}}],["meet",{"_index":1919,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["memory",{"_index":2407,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["menu",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.about",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.close",{"_index":546,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.graphics",{"_index":553,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.home",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.logout",{"_index":554,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.settings",{"_index":552,"title":{},"body":{"components/AppComponent.html":{}}}],["menucontroller",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["message",{"_index":222,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"injectables/CategoriesService.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["messages",{"_index":234,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["messageservice",{"_index":198,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["messagingsenderid",{"_index":1707,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["method",{"_index":461,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["methods",{"_index":21,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["mimetype",{"_index":1753,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["min",{"_index":2151,"title":{},"body":{"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["minimum",{"_index":1923,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["miscellaneous",{"_index":2813,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1518,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["mobile",{"_index":1066,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile'},{'name",{"_index":115,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["mobile.component",{"_index":2010,"title":{},"body":{"components/HomePage.html":{},"modules/HomePageModule.html":{}}}],["mobile.component.html",{"_index":1068,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.scss",{"_index":1067,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts",{"_index":1064,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mobile.component.ts:102",{"_index":2666,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:103",{"_index":1080,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:111",{"_index":2667,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:112",{"_index":1081,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:118",{"_index":2668,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:119",{"_index":1083,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:125",{"_index":2663,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:126",{"_index":1076,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:134",{"_index":2660,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:135",{"_index":1073,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:143",{"_index":2662,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:144",{"_index":1075,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:15",{"_index":1437,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:150",{"_index":2664,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:151",{"_index":1078,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:160",{"_index":2665,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:161",{"_index":1077,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:17",{"_index":1436,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:170",{"_index":2659,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:171",{"_index":1072,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:180",{"_index":2661,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:181",{"_index":1074,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:19",{"_index":1432,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:23",{"_index":1071,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:25",{"_index":1086,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:26",{"_index":1088,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:27",{"_index":1085,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:34",{"_index":1070,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:39",{"_index":1069,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:45",{"_index":1440,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:48",{"_index":1087,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:49",{"_index":1089,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:53",{"_index":1439,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:55",{"_index":1079,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:61",{"_index":1438,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:73",{"_index":1082,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:83",{"_index":1446,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile.component.ts:91",{"_index":2669,"title":{},"body":{"components/UserSelectableMobileComponent.html":{}}}],["mobile.component.ts:92",{"_index":1084,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{}}}],["mobile.component.ts:94",{"_index":1445,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["mobile/category",{"_index":1063,"title":{},"body":{"components/CategorySelectableMobileComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mobile/filter",{"_index":1429,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"coverage.html":{}}}],["mobile/user",{"_index":2052,"title":{},"body":{"modules/HomePageModule.html":{},"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mod",{"_index":1257,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["mod.ondiddismiss",{"_index":1262,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["mod.present",{"_index":1261,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["modal",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["modal.auto",{"_index":2453,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["modalcategorycomponent",{"_index":142,"title":{"components/ModalCategoryComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["modalcontroller",{"_index":1162,"title":{},"body":{"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["modaldesign",{"_index":2505,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["modals",{"_index":2486,"title":{},"body":{"components/SettingsPage.html":{}}}],["mode",{"_index":1260,"title":{},"body":{"components/DataPage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/ModalCategoryComponent.html":{}}}],["mode(m",{"_index":2348,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["modifies",{"_index":1510,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["modify",{"_index":1944,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["module",{"_index":163,"title":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["modules",{"_index":165,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["msg",{"_index":1781,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["multi",{"_index":1038,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["mymodal",{"_index":1161,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["name",{"_index":101,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["named",{"_index":2465,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["native",{"_index":2452,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["navigate",{"_index":524,"title":{},"body":{"components/AppComponent.html":{},"components/UsersInfoComponent.html":{}}}],["navigates",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["navigating",{"_index":252,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{}}}],["navigation",{"_index":454,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/UserDataPage.html":{}}}],["navigationend",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":1517,"title":{},"body":{"classes/FirebaseAuthService.html":{},"pipes/ShortenTextPipe.html":{}}}],["need",{"_index":2306,"title":{},"body":{"injectables/LocalService.html":{}}}],["needed",{"_index":1507,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["needs",{"_index":1868,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["new",{"_index":640,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["newly",{"_index":1522,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["next",{"_index":327,"title":{},"body":{"components/AccessPage.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/IncidentDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["ng_value_accessor",{"_index":1034,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":180,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["ngondestroy",{"_index":2389,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ngoninit",{"_index":22,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["ngx",{"_index":408,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["nocheck",{"_index":2078,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsInfoComponent.html":{}}}],["nombre",{"_index":884,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["none",{"_index":373,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["notadmin",{"_index":224,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{}}}],["notification",{"_index":308,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["notifications",{"_index":241,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["null",{"_index":790,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"classes/PasswordValidation.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["number",{"_index":808,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["numbers",{"_index":1937,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["obj",{"_index":1020,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["object",{"_index":277,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"classes/PasswordValidation.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object.assign(errors",{"_index":2380,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["object.keys(categorycounts",{"_index":2178,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["object.keys(dataobject[key][0",{"_index":1228,"title":{},"body":{"components/DataPage.html":{}}}],["object.keys(rolescount",{"_index":2599,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["object.values(categorycounts",{"_index":2180,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["objects",{"_index":1826,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["objeto",{"_index":1952,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["obs.error(error",{"_index":1982,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["obs.next(imgs",{"_index":1981,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["observable",{"_index":464,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["observable((obs",{"_index":1975,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["observable((subscr",{"_index":1543,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["observables",{"_index":1488,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["occurs",{"_index":1970,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["oncancel",{"_index":1430,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["oncategoryclicked",{"_index":948,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["oncategoryclicked(popover",{"_index":989,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["once",{"_index":2618,"title":{},"body":{"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["onchangepicture",{"_index":2390,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event",{"_index":2410,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture",{"_index":2391,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event",{"_index":2416,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["oneditclicked",{"_index":781,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["onfilter",{"_index":949,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["onfilter(evt",{"_index":993,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["onfilterchange",{"_index":1988,"title":{},"body":{"components/HomePage.html":{}}}],["onfilterchange(filtervalues",{"_index":1998,"title":{},"body":{"components/HomePage.html":{}}}],["onincidentclick",{"_index":2195,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["onincidentclick(event",{"_index":2205,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["onincidentclicked",{"_index":2196,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onloadcategories",{"_index":950,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["onresize",{"_index":778,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onresize(event",{"_index":820,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onsnapshot",{"_index":1657,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["onsub",{"_index":2314,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["onsubmit",{"_index":2315,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["ontrashclicked",{"_index":782,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["onuserclicked",{"_index":2270,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["onuserclicked(popover",{"_index":2639,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["opendialog",{"_index":1157,"title":{},"body":{"components/DataPage.html":{}}}],["opendialog(category",{"_index":1198,"title":{},"body":{"components/DataPage.html":{}}}],["openfiltermodal",{"_index":1989,"title":{},"body":{"components/HomePage.html":{}}}],["opens",{"_index":1168,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/UserDataPage.html":{}}}],["operation",{"_index":707,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["operations",{"_index":854,"title":{},"body":{"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["operators",{"_index":1526,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["optional",{"_index":255,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["optionally",{"_index":1889,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["options",{"_index":2084,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["original",{"_index":867,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseDataService.html":{}}}],["originalname",{"_index":865,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["otherwise",{"_index":760,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"injectables/IncidentsService.html":{}}}],["out",{"_index":177,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"guards/AdminGuard.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"modules/DataPageModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["outlet",{"_index":248,"title":{},"body":{"components/AccessPage.html":{},"components/IncidentDataPage.html":{}}}],["outline",{"_index":2523,"title":{},"body":{"components/SettingsPage.html":{}}}],["output",{"_index":795,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["output('clicked",{"_index":2286,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["outputs",{"_index":780,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/UsersInfoComponent.html":{}}}],["overflow",{"_index":59,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{}}}],["overview",{"_index":2830,"title":{"index.html":{}},"body":{"index.html":{}}}],["p",{"_index":572,"title":{},"body":{"components/AppComponent.html":{},"components/HomePage.html":{}}}],["package",{"_index":2770,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":369,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["page",{"_index":450,"title":{},"body":{"guards/AdminGuard.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"components/HomePage.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/UserDataPage.html":{}}}],["page:number",{"_index":2353,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["pagecount",{"_index":1631,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["pagecount:number",{"_index":2355,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["pages/user",{"_index":665,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pagesize",{"_index":1629,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["pagesize:number",{"_index":2354,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["paginated",{"_index":1332,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["paginateddata",{"_index":1334,"title":{"interfaces/PaginatedData.html":{}},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["pagination",{"_index":1628,"title":{"interfaces/Pagination.html":{}},"body":{"classes/FirebaseDataService.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["pagination:pagination",{"_index":2358,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["papaparse",{"_index":2804,"title":{},"body":{"dependencies.html":{}}}],["para",{"_index":37,"title":{},"body":{"components/AboutPage.html":{}}}],["param",{"_index":318,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["parameter",{"_index":223,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["parameters",{"_index":219,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1329,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["params.get('id",{"_index":2138,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["params['error",{"_index":321,"title":{},"body":{"components/AccessPage.html":{}}}],["parent",{"_index":2337,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["particularly",{"_index":1959,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["pass",{"_index":1803,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/functions.html":{}}}],["passes",{"_index":2339,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["passing",{"_index":792,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["password",{"_index":280,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/LoginFormComponent.html":{},"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserRegisterInfo.html":{}}}],["password.match(/^(?=.*[a",{"_index":2372,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["password:string",{"_index":2610,"title":{},"body":{"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["passwordcontrolname",{"_index":2367,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch",{"_index":2362,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordmatch(passwordcontrolname",{"_index":2364,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto",{"_index":2363,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordproto(controlname",{"_index":2368,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["passwordvalidation",{"_index":2360,"title":{"classes/PasswordValidation.html":{}},"body":{"classes/PasswordValidation.html":{},"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["passwordvalidation.passwordmatch('password",{"_index":2469,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["passwordvalidation.passwordproto",{"_index":2467,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["patch",{"_index":2057,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["patch(url",{"_index":2067,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["path",{"_index":195,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["pathmatch",{"_index":679,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pattern",{"_index":2371,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["pdf",{"_index":1759,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["performs",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["period",{"_index":756,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["persistence",{"_index":1720,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["photo",{"_index":2359,"title":{"interfaces/Photo.html":{}},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["picture",{"_index":145,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["picture_selectable_value_accessor",{"_index":2385,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picturemodal",{"_index":2394,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["pictureselectablecomponent",{"_index":144,"title":{"components/PictureSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pinned",{"_index":2079,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["pipe",{"_index":745,"title":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}},"body":{"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["pipe(map",{"_index":929,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["pipe(map((_",{"_index":1646,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["pipe(switchmap((doc",{"_index":1643,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["pipes",{"_index":746,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{},"index.html":{}}}],["pipetransform",{"_index":767,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["platform",{"_index":597,"title":{},"body":{"modules/AppModule.html":{}}}],["player",{"_index":625,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["plugins",{"_index":2190,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["png",{"_index":1774,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["pointer",{"_index":389,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["pointing",{"_index":1966,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["popover",{"_index":982,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["popover.dismiss",{"_index":1058,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["populates",{"_index":2570,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["porque",{"_index":916,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["position",{"_index":53,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["post",{"_index":346,"title":{},"body":{"components/AccessPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["post(resource",{"_index":1322,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["post(url",{"_index":2073,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["postregister",{"_index":1467,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["postregister(info",{"_index":1505,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["potential",{"_index":2406,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["prefix",{"_index":1767,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["preloadallmodules",{"_index":660,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloadingstrategy",{"_index":694,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preventing",{"_index":2405,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["primary",{"_index":561,"title":{},"body":{"components/AppComponent.html":{}}}],["primeng",{"_index":2806,"title":{},"body":{"dependencies.html":{}}}],["primeng/accordion",{"_index":1309,"title":{},"body":{"modules/DataPageModule.html":{},"modules/SettingsPageModule.html":{}}}],["primeng/api",{"_index":311,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["primeng/chart",{"_index":2548,"title":{},"body":{"modules/SharedModule.html":{}}}],["primeng/divider",{"_index":630,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/dropdown",{"_index":634,"title":{},"body":{"modules/AppModule.html":{}}}],["primeng/toast",{"_index":423,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{}}}],["private",{"_index":319,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["problemas",{"_index":40,"title":{},"body":{"components/AboutPage.html":{}}}],["process",{"_index":290,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["production",{"_index":2858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":1502,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"injectables/UsersService.html":{}}}],["project",{"_index":2841,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":1705,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":457,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise((resolve",{"_index":1806,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["promise(async",{"_index":1778,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["propagate",{"_index":1008,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["propagatechange",{"_index":944,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["propagating",{"_index":1027,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["properly",{"_index":2402,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["properties",{"_index":202,"title":{"properties.html":{}},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"interfaces/incidentInfo.html":{},"properties.html":{}}}],["property",{"_index":264,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["protected",{"_index":533,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{}}}],["provide",{"_index":426,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["provideanimationsasync",{"_index":600,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":242,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"components/UpdateUserComponent.html":{},"injectables/UsersService.html":{}}}],["providedin",{"_index":472,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}}}],["providelottieoptions",{"_index":623,"title":{},"body":{"modules/AppModule.html":{}}}],["provider",{"_index":2090,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["providers",{"_index":169,"title":{},"body":{"modules/AboutPageModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"index.html":{}}}],["provides",{"_index":232,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"miscellaneous/functions.html":{}}}],["providing",{"_index":1600,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["public",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["puede",{"_index":914,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["put",{"_index":1313,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["put(resource",{"_index":1324,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["put(url",{"_index":2075,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["q",{"_index":1863,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["que",{"_index":1844,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query",{"_index":218,"title":{},"body":{"components/AccessPage.html":{},"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["query(resource",{"_index":1328,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["queryparams",{"_index":481,"title":{},"body":{"guards/AdminGuard.html":{}}}],["querysnapshot",{"_index":1737,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["querysnapshot.docs.map((doc",{"_index":1740,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["radius",{"_index":1279,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["raw",{"_index":1750,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reactive",{"_index":1310,"title":{},"body":{"modules/DataPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["reactiveformsmodule",{"_index":399,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/UserDataPageModule.html":{}}}],["reader",{"_index":2439,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onerror",{"_index":2443,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onload",{"_index":2441,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.readasdataurl(file",{"_index":2445,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["readonly",{"_index":2104,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["real",{"_index":1874,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["received",{"_index":1486,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["recent",{"_index":1881,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["redirects",{"_index":449,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["redirectto",{"_index":678,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["ref",{"_index":1669,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["ref(this._webstorage",{"_index":1789,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reference",{"_index":1101,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["refers",{"_index":1754,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reflect",{"_index":1520,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["refreshed",{"_index":1531,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["refreshes",{"_index":1524,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["register",{"_index":147,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["register(info",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["registered",{"_index":293,"title":{},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{}}}],["registerformcomponent",{"_index":146,"title":{"components/RegisterFormComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["registeronchange",{"_index":951,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registeronchange(fn",{"_index":999,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registerontouched",{"_index":952,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registerontouched(fn",{"_index":1004,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registers",{"_index":285,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["registeruser",{"_index":205,"title":{},"body":{"components/AccessPage.html":{}}}],["registeruser(data",{"_index":282,"title":{},"body":{"components/AccessPage.html":{}}}],["registration",{"_index":289,"title":{},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{}}}],["reject",{"_index":1780,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject('document",{"_index":1856,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(err",{"_index":1811,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reject(error",{"_index":1786,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["rejected",{"_index":1939,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["rejects",{"_index":1849,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["related",{"_index":250,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{}}}],["relative",{"_index":54,"title":{},"body":{"components/AboutPage.html":{},"components/CategoriesInfoComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UsersInfoComponent.html":{}}}],["relevant",{"_index":294,"title":{},"body":{"components/AccessPage.html":{}}}],["remarks",{"_index":1212,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["removed",{"_index":1869,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["repeat",{"_index":379,"title":{},"body":{"components/AccessPage.html":{}}}],["reppassword",{"_index":2468,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["represent",{"_index":1749,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["representing",{"_index":705,"title":{},"body":{"guards/AuthGuard.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["represents",{"_index":302,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["request",{"_index":2062,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["requested",{"_index":1610,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["required",{"_index":1918,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["reset",{"_index":176,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}],["resetfilters",{"_index":1365,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["resetrequested",{"_index":1369,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["resets",{"_index":1380,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["resetsignal",{"_index":956,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["resetting",{"_index":969,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["resize",{"_index":806,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["resolutions",{"_index":1968,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["resolve",{"_index":1779,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(deleteuser(this._user",{"_index":1940,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(docref.id",{"_index":1810,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(false",{"_index":1903,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(null",{"_index":1926,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolve(this._auth!.currentuser",{"_index":1904,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resolved",{"_index":1394,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/IncidentDataPage.html":{},"interfaces/incidentInfo.html":{}}}],["resolvedvalue",{"_index":2028,"title":{},"body":{"components/HomePage.html":{}}}],["resolves",{"_index":458,"title":{},"body":{"guards/AdminGuard.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["resource",{"_index":1317,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["resource.split('/')[0",{"_index":1642,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["resource.split('/')[1",{"_index":1634,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["resources",{"_index":2825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["respectively",{"_index":1473,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["response",{"_index":1902,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{}}}],["responsetype",{"_index":2106,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["resueltos",{"_index":1412,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["result",{"_index":706,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["resulting",{"_index":1333,"title":{},"body":{"injectables/DataService.html":{}}}],["results",{"_index":161,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"index.html":{},"modules.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results.data",{"_index":1263,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["results.data.picture",{"_index":2512,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["results?.data",{"_index":1264,"title":{},"body":{"components/DataPage.html":{}}}],["results?.data?.picture",{"_index":2507,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["results?.data?.picture?.substring(0",{"_index":2508,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["retrieve",{"_index":1128,"title":{},"body":{"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ItemUserComponent.html":{}}}],["retrieved",{"_index":1321,"title":{},"body":{"injectables/DataService.html":{}}}],["retrieves",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["retrieving",{"_index":2281,"title":{},"body":{"components/ItemCategoryComponent.html":{}}}],["return",{"_index":475,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"interfaces/Media.html":{},"classes/PasswordValidation.html":{},"pipes/ShortenTextPipe.html":{},"components/UserCircleGraphicComponent.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":512,"title":{},"body":{"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/LocalService.html":{},"pipes/ShortenTextPipe.html":{},"injectables/UsersService.html":{}}}],["returning",{"_index":465,"title":{},"body":{"guards/AdminGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["returns",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["rgba(0",{"_index":1294,"title":{},"body":{"components/DataPage.html":{}}}],["rgba(71",{"_index":1417,"title":{},"body":{"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["right",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{}}}],["rni3rcpqs7xmtbh4",{"_index":2860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":286,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"classes/FirebaseAuthService.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["roles",{"_index":2598,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["roles.map(role",{"_index":2600,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["rolescount",{"_index":2595,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["rolescount[role",{"_index":2603,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["root",{"_index":473,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"injectables/MediaService.html":{},"injectables/UsersService.html":{}}}],["root'},{'name",{"_index":106,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["route",{"_index":212,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["router",{"_index":214,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/LoginFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["routereusestrategy",{"_index":593,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":192,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":196,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":693,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":445,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["routes",{"_index":191,"title":{"routes.html":{}},"body":{"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/SettingsPage.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"routes.html":{}}}],["routing.module",{"_index":187,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["routing.module.ts",{"_index":190,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AccessPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/DataPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/UserDataPageRoutingModule.html":{}}}],["row",{"_index":366,"title":{},"body":{"components/AccessPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{}}}],["rxjs",{"_index":468,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/IncidentsService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/PictureSelectableComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":869,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["rxjs/operators",{"_index":470,"title":{},"body":{"guards/AdminGuard.html":{}}}],["same",{"_index":1967,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["save",{"_index":1814,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["screen",{"_index":788,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["se",{"_index":913,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["search",{"_index":975,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["searching",{"_index":1862,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["security",{"_index":1921,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["seems",{"_index":500,"title":{},"body":{"components/AppComponent.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["select",{"_index":1012,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selectable",{"_index":114,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable'},{'name",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["selectable.component",{"_index":2045,"title":{},"body":{"modules/HomePageModule.html":{},"modules/SharedModule.html":{}}}],["selectable.component.html",{"_index":940,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.scss",{"_index":939,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts",{"_index":937,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable.component.ts:109",{"_index":2641,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:110",{"_index":1000,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:116",{"_index":2417,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:118",{"_index":2642,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:119",{"_index":1005,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:124",{"_index":2398,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:125",{"_index":2644,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:126",{"_index":1015,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:132",{"_index":2637,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:133",{"_index":986,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:141",{"_index":2634,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:142",{"_index":976,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:150",{"_index":2636,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:151",{"_index":984,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:157",{"_index":2638,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:158",{"_index":994,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:167",{"_index":2640,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:168",{"_index":990,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:177",{"_index":2633,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:178",{"_index":973,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:187",{"_index":2635,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:188",{"_index":979,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable.component.ts:19",{"_index":2423,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:20",{"_index":2426,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:21",{"_index":2424,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:22",{"_index":2393,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:30",{"_index":966,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:32",{"_index":1023,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:33",{"_index":1025,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:34",{"_index":1022,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:35",{"_index":2399,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:39",{"_index":2409,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:41",{"_index":962,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:44",{"_index":2427,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:46",{"_index":959,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:50",{"_index":2422,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:55",{"_index":1024,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:56",{"_index":1026,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:61",{"_index":2419,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:62",{"_index":997,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:69",{"_index":2420,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:75",{"_index":2421,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:80",{"_index":1009,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:83",{"_index":2397,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:94",{"_index":2413,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:98",{"_index":2645,"title":{},"body":{"components/UserSelectableComponent.html":{}}}],["selectable.component.ts:99",{"_index":1018,"title":{},"body":{"components/CategorySelectableComponent.html":{}}}],["selectable/category",{"_index":936,"title":{},"body":{"components/CategorySelectableComponent.html":{},"modules/HomePageModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable/picture",{"_index":2384,"title":{},"body":{"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable/user",{"_index":2048,"title":{},"body":{"modules/HomePageModule.html":{},"components/UserSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcategory",{"_index":953,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["selectcategory(id",{"_index":1007,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["selected",{"_index":965,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selecting",{"_index":992,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selection",{"_index":970,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["selects",{"_index":1010,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selectuser",{"_index":2632,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["selectuser(id",{"_index":2643,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["server",{"_index":2083,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/UserDataPage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":230,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["services",{"_index":228,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["services/auth.service",{"_index":471,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["set",{"_index":1039,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setcategory(_category",{"_index":1030,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["setcategoryinfo(category",{"_index":2342,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["setdisabledstate",{"_index":954,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":1014,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":1052,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setdoc",{"_index":1659,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setdoc(docref",{"_index":1820,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["setfilters",{"_index":1366,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["setitem(_item",{"_index":2282,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["setlanguage",{"_index":2483,"title":{},"body":{"components/SettingsPage.html":{}}}],["setlanguage(lang",{"_index":2488,"title":{},"body":{"components/SettingsPage.html":{}}}],["setmode(m",{"_index":2343,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["setresolvedincident",{"_index":2123,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["setresolvedincident(incident",{"_index":2128,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["sets",{"_index":810,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["setservertrustmode",{"_index":2058,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["setservertrustmode(mode",{"_index":2077,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["setter",{"_index":963,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ItemCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setting",{"_index":964,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/ItemCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["settings",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/CustomTranslateService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{}}}],["settings'},{'name",{"_index":149,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["settings.page",{"_index":2530,"title":{},"body":{"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{}}}],["settings.page.html",{"_index":2481,"title":{},"body":{"components/SettingsPage.html":{}}}],["settings.page.scss",{"_index":2480,"title":{},"body":{"components/SettingsPage.html":{}}}],["settingspage",{"_index":148,"title":{"components/SettingsPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["settingspagemodule",{"_index":2524,"title":{"modules/SettingsPageModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"index.html":{},"modules.html":{}}}],["settingspageroutingmodule",{"_index":2528,"title":{"modules/SettingsPageRoutingModule.html":{}},"body":{"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["setuser(_user",{"_index":2646,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["setuserinfo(user",{"_index":2576,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["severity",{"_index":358,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["shadow",{"_index":565,"title":{},"body":{"components/AppComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/HomePage.html":{},"components/IncidentsInfoComponent.html":{}}}],["shared",{"_index":430,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["shared/shared.module",{"_index":622,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":397,"title":{"modules/SharedModule.html":{}},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["shortentext",{"_index":2229,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{}}}],["shortentextpipe",{"_index":2536,"title":{"pipes/ShortenTextPipe.html":{}},"body":{"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"coverage.html":{},"index.html":{}}}],["showall",{"_index":1990,"title":{},"body":{"components/HomePage.html":{}}}],["showerror",{"_index":206,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["showerror(text",{"_index":297,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["showing",{"_index":1996,"title":{},"body":{"components/HomePage.html":{}}}],["showrolefield",{"_index":2568,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["shows",{"_index":2003,"title":{},"body":{"components/HomePage.html":{}}}],["showsuccess",{"_index":207,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["showsuccess(text",{"_index":303,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["sign",{"_index":1494,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signal",{"_index":968,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["signaling",{"_index":1375,"title":{},"body":{"components/FilterComponent.html":{}}}],["signed",{"_index":1894,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanon",{"_index":1892,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanon=false",{"_index":1891,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously",{"_index":1676,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth",{"_index":1785,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinanonymously(this._auth!).catch((error",{"_index":1911,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signing",{"_index":1895,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signinwithemailandpassword",{"_index":1677,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout",{"_index":1493,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(signinanon",{"_index":1898,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signout(this._auth",{"_index":1795,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["signs",{"_index":1888,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["simplechanges",{"_index":1032,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/UserSelectableComponent.html":{}}}],["single",{"_index":1320,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{}}}],["size",{"_index":69,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["slogan",{"_index":75,"title":{},"body":{"components/AboutPage.html":{}}}],["snapshot",{"_index":452,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["snapshot.data",{"_index":1886,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["snippet",{"_index":2464,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["social",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["solid",{"_index":570,"title":{},"body":{"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{},"dependencies.html":{}}}],["solucionar",{"_index":38,"title":{},"body":{"components/AboutPage.html":{}}}],["solución",{"_index":36,"title":{},"body":{"components/AboutPage.html":{}}}],["something",{"_index":1772,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"modules/AccessPageRoutingModule.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"modules/DataPageRoutingModule.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SettingsPageRoutingModule.html":{},"modules/SharedModule.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["space",{"_index":51,"title":{},"body":{"components/AboutPage.html":{},"components/FilterComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{}}}],["span",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"components/IncidentsInfoComponent.html":{}}}],["special",{"_index":1936,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["specific",{"_index":273,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["specified",{"_index":506,"title":{},"body":{"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"classes/PasswordValidation.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{}}}],["specifies",{"_index":1755,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["specify",{"_index":1859,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["split",{"_index":1615,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["src/.../app.module.ts",{"_index":2815,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../blob.ts",{"_index":2817,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../category",{"_index":2846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":2847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../picture",{"_index":2849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../translate.ts",{"_index":2816,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user",{"_index":2850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":659,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:102",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:15",{"_index":528,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":496,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:50",{"_index":515,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:62",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:69",{"_index":522,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:76",{"_index":526,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:83",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:90",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":589,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/guards/admin.guard.ts",{"_index":435,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/admin.guard.ts:16",{"_index":437,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/admin.guard.ts:42",{"_index":446,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":695,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/core/guards/auth.guard.ts:17",{"_index":698,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/guards/auth.guard.ts:37",{"_index":703,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/core/helpers/blob",{"_index":2493,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["src/app/core/helpers/blob.ts",{"_index":2710,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/interfaces/category",{"_index":825,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"interfaces/CategoryInfo.html":{},"components/DataPage.html":{},"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["src/app/core/interfaces/data",{"_index":1621,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["src/app/core/interfaces/data.ts",{"_index":2352,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{},"coverage.html":{}}}],["src/app/core/interfaces/incidents",{"_index":2007,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"coverage.html":{},"interfaces/incidentInfo.html":{}}}],["src/app/core/interfaces/user",{"_index":312,"title":{},"body":{"components/AccessPage.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["src/app/core/pipes/capitalize",{"_index":747,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"coverage.html":{}}}],["src/app/core/pipes/shorten",{"_index":2552,"title":{},"body":{"pipes/ShortenTextPipe.html":{},"coverage.html":{}}}],["src/app/core/services/api/categories.service",{"_index":1035,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{}}}],["src/app/core/services/api/categories.service.ts",{"_index":848,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/app/core/services/api/categories.service.ts:116",{"_index":866,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:19",{"_index":853,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:27",{"_index":862,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:37",{"_index":856,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/categories.service.ts:80",{"_index":859,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/app/core/services/api/incidents.service",{"_index":2135,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["src/app/core/services/api/incidents.service.ts",{"_index":2243,"title":{},"body":{"injectables/IncidentsService.html":{},"coverage.html":{}}}],["src/app/core/services/api/incidents.service.ts:27",{"_index":2253,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/incidents.service.ts:42",{"_index":2256,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/incidents.service.ts:9",{"_index":2246,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["src/app/core/services/api/users.service",{"_index":2211,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["src/app/core/services/api/users.service.ts",{"_index":2687,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/app/core/services/api/users.service.ts:10",{"_index":2689,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:32",{"_index":2691,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/api/users.service.ts:46",{"_index":2694,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/app/core/services/auth.service",{"_index":313,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{}}}],["src/app/core/services/auth.service.ts",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/core/services/auth.service.ts:10",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:11",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:12",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:19",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:26",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:31",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:37",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:44",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/auth.service.ts:9",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/core/services/data.service.ts",{"_index":1312,"title":{},"body":{"injectables/DataService.html":{},"coverage.html":{}}}],["src/app/core/services/data.service.ts:15",{"_index":1330,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:25",{"_index":1319,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:33",{"_index":1323,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:41",{"_index":1325,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/data.service.ts:48",{"_index":1315,"title":{},"body":{"injectables/DataService.html":{}}}],["src/app/core/services/filter/filter.service",{"_index":1388,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{}}}],["src/app/core/services/filter/filter.service.ts",{"_index":1450,"title":{},"body":{"injectables/FilterService.html":{},"coverage.html":{}}}],["src/app/core/services/filter/filter.service.ts:16",{"_index":1458,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter/filter.service.ts:25",{"_index":1455,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter/filter.service.ts:32",{"_index":1456,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/filter/filter.service.ts:9",{"_index":1459,"title":{},"body":{"injectables/FilterService.html":{}}}],["src/app/core/services/firebase/api/firebase",{"_index":1464,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"coverage.html":{}}}],["src/app/core/services/firebase/firebase.service",{"_index":1036,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/DataPage.html":{},"components/HomePage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["src/app/core/services/firebase/firebase.service.ts",{"_index":1648,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"coverage.html":{}}}],["src/app/core/services/http/http",{"_index":2054,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["src/app/core/services/media.service",{"_index":2496,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["src/app/core/services/media.service.ts",{"_index":2329,"title":{},"body":{"injectables/MediaService.html":{},"coverage.html":{}}}],["src/app/core/services/media.service.ts:13",{"_index":2330,"title":{},"body":{"injectables/MediaService.html":{}}}],["src/app/core/services/translate/local.service.ts",{"_index":2299,"title":{},"body":{"injectables/LocalService.html":{},"coverage.html":{}}}],["src/app/core/services/translate/local.service.ts:8",{"_index":2302,"title":{},"body":{"injectables/LocalService.html":{}}}],["src/app/core/services/translate/translate.service",{"_index":314,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{}}}],["src/app/core/services/translate/translate.service.ts",{"_index":1116,"title":{},"body":{"injectables/CustomTranslateService.html":{},"coverage.html":{}}}],["src/app/core/services/translate/translate.service.ts:11",{"_index":1122,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:26",{"_index":1130,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:37",{"_index":1133,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:47",{"_index":1129,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:57",{"_index":1125,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/services/translate/translate.service.ts:8",{"_index":1136,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["src/app/core/translate/translate",{"_index":411,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/UserDataPageModule.html":{}}}],["src/app/core/translate/translate.ts",{"_index":2741,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/validators/email",{"_index":2462,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["src/app/core/validators/email.ts",{"_index":1338,"title":{},"body":{"classes/EmailValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/email.ts:14",{"_index":1341,"title":{},"body":{"classes/EmailValidation.html":{}}}],["src/app/core/validators/password",{"_index":2463,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["src/app/core/validators/password.ts",{"_index":2361,"title":{},"body":{"classes/PasswordValidation.html":{},"coverage.html":{}}}],["src/app/core/validators/password.ts:13",{"_index":2369,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/core/validators/password.ts:35",{"_index":2366,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["src/app/pages/about/about",{"_index":189,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":178,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/about/about.page.ts:12",{"_index":26,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:8",{"_index":25,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/access/access",{"_index":431,"title":{},"body":{"modules/AccessPageRoutingModule.html":{}}}],["src/app/pages/access/access.module.ts",{"_index":398,"title":{},"body":{"modules/AccessPageModule.html":{}}}],["src/app/pages/access/access.page.ts",{"_index":197,"title":{},"body":{"components/AccessPage.html":{},"coverage.html":{}}}],["src/app/pages/access/access.page.ts:106",{"_index":267,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:129",{"_index":304,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:146",{"_index":299,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:19",{"_index":215,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:55",{"_index":281,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:60",{"_index":261,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/access.page.ts:72",{"_index":284,"title":{},"body":{"components/AccessPage.html":{}}}],["src/app/pages/access/login",{"_index":2310,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["src/app/pages/access/register",{"_index":2456,"title":{},"body":{"components/RegisterFormComponent.html":{},"coverage.html":{}}}],["src/app/pages/data/data",{"_index":1311,"title":{},"body":{"modules/DataPageRoutingModule.html":{}}}],["src/app/pages/data/data.module.ts",{"_index":1302,"title":{},"body":{"modules/DataPageModule.html":{}}}],["src/app/pages/data/data.page.ts",{"_index":1149,"title":{},"body":{"components/DataPage.html":{},"coverage.html":{}}}],["src/app/pages/data/data.page.ts:105",{"_index":1174,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:127",{"_index":1199,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:145",{"_index":1205,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:154",{"_index":1181,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:179",{"_index":1167,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:210",{"_index":1171,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:22",{"_index":1163,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:229",{"_index":1203,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:249",{"_index":1202,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:40",{"_index":1207,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:44",{"_index":1197,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:54",{"_index":1183,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/data.page.ts:75",{"_index":1193,"title":{},"body":{"components/DataPage.html":{}}}],["src/app/pages/data/modal",{"_index":2331,"title":{},"body":{"components/ModalCategoryComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/category",{"_index":935,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/home/filter",{"_index":1428,"title":{},"body":{"components/FilterMobileComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/filter/filter.component.ts",{"_index":1361,"title":{},"body":{"components/FilterComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/filter/filter.component.ts:19",{"_index":1376,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:24",{"_index":1373,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:26",{"_index":1372,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:47",{"_index":1378,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:55",{"_index":1377,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:77",{"_index":1384,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:88",{"_index":1382,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/filter/filter.component.ts:96",{"_index":1379,"title":{},"body":{"components/FilterComponent.html":{}}}],["src/app/pages/home/home",{"_index":2053,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":2043,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":1983,"title":{},"body":{"components/HomePage.html":{},"coverage.html":{}}}],["src/app/pages/home/home.page.ts:19",{"_index":1992,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:33",{"_index":2006,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:43",{"_index":1994,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:53",{"_index":2001,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:72",{"_index":1995,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:86",{"_index":2002,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/home.page.ts:95",{"_index":1999,"title":{},"body":{"components/HomePage.html":{}}}],["src/app/pages/home/item",{"_index":2265,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"coverage.html":{}}}],["src/app/pages/home/user",{"_index":2629,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/pages/incident",{"_index":2120,"title":{},"body":{"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"modules/IncidentDataPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings",{"_index":2531,"title":{},"body":{"modules/SettingsPageRoutingModule.html":{}}}],["src/app/pages/settings/settings.module.ts",{"_index":2529,"title":{},"body":{"modules/SettingsPageModule.html":{}}}],["src/app/pages/settings/settings.page.ts",{"_index":2479,"title":{},"body":{"components/SettingsPage.html":{},"coverage.html":{}}}],["src/app/pages/settings/settings.page.ts:108",{"_index":2489,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:19",{"_index":2491,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:20",{"_index":2485,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:52",{"_index":2487,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/settings/settings.page.ts:69",{"_index":2490,"title":{},"body":{"components/SettingsPage.html":{}}}],["src/app/pages/user",{"_index":2567,"title":{},"body":{"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"coverage.html":{}}}],["src/app/shared/components/categories",{"_index":769,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/confirm",{"_index":1090,"title":{},"body":{"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"coverage.html":{}}}],["src/app/shared/components/incidents",{"_index":2161,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/picture",{"_index":2383,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/user",{"_index":2590,"title":{},"body":{"components/UserCircleGraphicComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/users",{"_index":2670,"title":{},"body":{"components/UsersInfoComponent.html":{},"coverage.html":{}}}],["src/app/shared/shared.module",{"_index":421,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/UserDataPageModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":2537,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":617,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod.ts",{"_index":2766,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2767,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standalone",{"_index":2554,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["start",{"_index":2035,"title":{},"body":{"components/HomePage.html":{},"components/PictureSelectableComponent.html":{}}}],["state",{"_index":444,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["statements",{"_index":2701,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1339,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["status",{"_index":702,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["storage",{"_index":1746,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["storagebucket",{"_index":1706,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"miscellaneous/variables.html":{}}}],["storageref",{"_index":1788,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["store",{"_index":1813,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stored",{"_index":1612,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stores",{"_index":1514,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["stream",{"_index":2692,"title":{},"body":{"injectables/UsersService.html":{}}}],["string",{"_index":298,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{}}}],["strong",{"_index":1933,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["structure",{"_index":1617,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["style",{"_index":334,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["su",{"_index":927,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["subheader",{"_index":841,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["subject",{"_index":1134,"title":{},"body":{"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(mapfunction(data",{"_index":1887,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subject.next(snapshot.docs.map((doc",{"_index":1877,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["submission",{"_index":2319,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["subscr.complete",{"_index":1555,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.error('cannot",{"_index":1552,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.error(err",{"_index":1556,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.next(_info",{"_index":1563,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscr.next(data",{"_index":1554,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["subscribe",{"_index":1268,"title":{},"body":{"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribe((chartdata",{"_index":2186,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["subscribe((user",{"_index":2501,"title":{},"body":{"components/SettingsPage.html":{}}}],["subscribe(chartdata",{"_index":2608,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["subscribers",{"_index":1883,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribes",{"_index":217,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["subscribetocollection",{"_index":1872,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetodocument",{"_index":1879,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["subscribetofilterstate",{"_index":1367,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["subscribing",{"_index":1997,"title":{},"body":{"components/HomePage.html":{}}}],["subscriptions",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["substring",{"_index":1828,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["success",{"_index":305,"title":{},"body":{"components/AccessPage.html":{},"injectables/CategoriesService.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{}}}],["successful",{"_index":1487,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["successfully",{"_index":858,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{}}}],["such",{"_index":279,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["super",{"_index":1535,"title":{},"body":{"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"classes/FirebaseMediaService.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/Media.html":{}}}],["support",{"_index":2835,"title":{},"body":{"modules.html":{}}}],["surname",{"_index":1571,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["svg",{"_index":2788,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["switch",{"_index":338,"title":{},"body":{"components/AccessPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{}}}],["switch(backend",{"_index":638,"title":{},"body":{"modules/AppModule.html":{}}}],["switchmap",{"_index":871,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["switchmap((doc",{"_index":1638,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["switchmap((docref",{"_index":894,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["switchmap((existingcategories",{"_index":877,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["switchmap((incidents",{"_index":909,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["t",{"_index":1316,"title":{},"body":{"injectables/DataService.html":{},"classes/FirebaseDataService.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"interfaces/PaginatedData.html":{}}}],["table",{"_index":2769,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2768,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":873,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["take(1",{"_index":2258,"title":{},"body":{"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["takes",{"_index":296,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"pipes/CapitalizeInitialPipe.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["tap",{"_index":708,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CustomTranslateService.html":{},"classes/FirebaseAuthService.html":{}}}],["tap(logged",{"_index":710,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tasks",{"_index":1529,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["terminated",{"_index":2403,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["text",{"_index":62,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["text.pipe",{"_index":2542,"title":{},"body":{"modules/SharedModule.html":{}}}],["text.pipe.ts",{"_index":2553,"title":{},"body":{"pipes/ShortenTextPipe.html":{},"coverage.html":{}}}],["text.pipe.ts:23",{"_index":2556,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["text/csv;charset=utf",{"_index":1240,"title":{},"body":{"components/DataPage.html":{}}}],["tfcchato",{"_index":2854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["then((_",{"_index":1144,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["then((credentials",{"_index":1548,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["then((data",{"_index":1977,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["then((dataobject",{"_index":1215,"title":{},"body":{"components/DataPage.html":{}}}],["then((docref",{"_index":1809,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["then(async",{"_index":1792,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._app",{"_index":1712,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth",{"_index":1718,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth!.currentuser",{"_index":1906,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth!.currentuser.isanonymous",{"_index":1907,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.currentuser",{"_index":1784,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.onauthstatechanged(async",{"_index":1721,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._auth.signout",{"_index":1899,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categories",{"_index":1730,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categories.asobservable",{"_index":1694,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._categoryservice",{"_index":1265,"title":{},"body":{"components/DataPage.html":{}}}],["this._categoryservice.createcategory(results?.data).subscribe",{"_index":1272,"title":{},"body":{"components/DataPage.html":{}}}],["this._categoryservice.deletecategory(info).subscribe",{"_index":1273,"title":{},"body":{"components/DataPage.html":{}}}],["this._db",{"_index":1714,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._firebaseservice",{"_index":1213,"title":{},"body":{"components/DataPage.html":{}}}],["this._firebaseservice.incidents",{"_index":2172,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{}}}],["this._firebaseservice.users$.pipe",{"_index":2593,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["this._incidents",{"_index":1732,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._incidents.asobservable",{"_index":1692,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.asobservable",{"_index":1688,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(false",{"_index":1733,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._islogged.next(true",{"_index":1725,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._item",{"_index":2285,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["this._language.asobservable",{"_index":1137,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._language.getvalue",{"_index":1147,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._language.next(language",{"_index":1145,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this._logged.asobservable",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["this._logged.next(false",{"_index":1541,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._logged.next(true",{"_index":1539,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._picture.asobservable",{"_index":2425,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.complete",{"_index":2429,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(obj",{"_index":2431,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(picture",{"_index":2433,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._router.navigate(['/data",{"_index":2622,"title":{},"body":{"components/UserDataPage.html":{}}}],["this._user",{"_index":1722,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._user.asobservable",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{}}}],["this._user.next(data",{"_index":1538,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.next(null",{"_index":1542,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.next(user",{"_index":1594,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._user.value?.uuid",{"_index":1593,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this._users",{"_index":1727,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._users.asobservable",{"_index":1690,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this._webstorage",{"_index":1716,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.auth.islogged$.pipe",{"_index":709,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.auth.islogged$.subscribe((logged",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.login(_data).subscribe",{"_index":349,"title":{},"body":{"components/AccessPage.html":{}}}],["this.auth.logout",{"_index":479,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.auth.logout().subscribe(async",{"_index":543,"title":{},"body":{"components/AppComponent.html":{}}}],["this.auth.register(_data).subscribe",{"_index":326,"title":{},"body":{"components/AccessPage.html":{}}}],["this.auth.updateuser(data).subscribe",{"_index":2698,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.auth.user",{"_index":2682,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.auth.user$.pipe",{"_index":476,"title":{},"body":{"guards/AdminGuard.html":{}}}],["this.auth.user$.subscribe(currentuser",{"_index":2584,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.browserlanguage",{"_index":2307,"title":{},"body":{"injectables/LocalService.html":{}}}],["this.categories",{"_index":1043,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.categoryselected",{"_index":1048,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.categoryservice.getcategory(id).then((category",{"_index":1047,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.changepicture",{"_index":2447,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.changepicture(reader.result",{"_index":2442,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.checkscreensize(event.target.innerwidth",{"_index":829,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.checkscreensize(window.innerwidth",{"_index":826,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.clearselection",{"_index":1055,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.clicked.emit(this._item",{"_index":2287,"title":{},"body":{"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{}}}],["this.connectanonymously",{"_index":1900,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.createbody(body",{"_index":2110,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.createheaders(headers",{"_index":2108,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.currentlang",{"_index":2497,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.data",{"_index":2187,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["this.deletecategory(category",{"_index":1255,"title":{},"body":{"components/DataPage.html":{}}}],["this.dialog.open(confirmdialogcomponent",{"_index":1252,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.dialogref.close",{"_index":1113,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.disabled",{"_index":1053,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.downloadcsv(csvcontent",{"_index":1220,"title":{},"body":{"components/DataPage.html":{}}}],["this.fileupload(blob",{"_index":1799,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.filter",{"_index":1060,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.filter(evt.detail.value",{"_index":1056,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.filteredincidents",{"_index":2017,"title":{},"body":{"components/HomePage.html":{}}}],["this.filterservice.getfilter().subscribe((filtervalues",{"_index":2015,"title":{},"body":{"components/HomePage.html":{}}}],["this.filterservice.getfilter().subscribe((formstate",{"_index":1403,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.filterservice.getfilter().value",{"_index":1398,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.filterservice.updatefilterstate(this.form",{"_index":1408,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.filterstate",{"_index":1461,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.filterstate.next(form",{"_index":1460,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.filterstate.next(initialform",{"_index":1463,"title":{},"body":{"injectables/FilterService.html":{}}}],["this.firebase",{"_index":1976,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["this.firebase.categories$.subscribe",{"_index":1042,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.firebase.deletedocument",{"_index":1645,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.getdocument(resource.split('/')[0",{"_index":1633,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.updatedocument",{"_index":1641,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.firebase.users$.subscribe",{"_index":2648,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.firebaseservice",{"_index":920,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.categories$.pipe",{"_index":876,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.createdocument('categoryinfo",{"_index":893,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.getdocument('categoryinfo",{"_index":875,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.incidents",{"_index":2005,"title":{},"body":{"components/HomePage.html":{}}}],["this.firebaseservice.incidents$.pipe",{"_index":908,"title":{},"body":{"injectables/CategoriesService.html":{},"components/HomePage.html":{},"injectables/IncidentsService.html":{}}}],["this.firebaseservice.updatedocument",{"_index":928,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.updatedocument('categoryinfo",{"_index":897,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user",{"_index":887,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user.email",{"_index":891,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.user.uid",{"_index":889,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.firebaseservice.users",{"_index":2681,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.firebaseservice.users$.pipe",{"_index":2695,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.firebasesvc",{"_index":1544,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.createdocumentwithid",{"_index":1570,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.getdocument('userinfo",{"_index":1578,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.islogged$.subscribe((logged",{"_index":1536,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.updatedocument('userinfo",{"_index":1590,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.user.uid",{"_index":1579,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.firebasesvc.user?.uid",{"_index":1561,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.form",{"_index":1389,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.form.controls['description'].setvalue(category.description",{"_index":2346,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['name'].setvalue(category.name",{"_index":2345,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['name'].setvalue(user.name",{"_index":2579,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['picture'].setvalue(user.picture",{"_index":2578,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['role'].setvalue(user.role",{"_index":2583,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['surname'].setvalue(user.surname",{"_index":2580,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['username'].setvalue(user.username",{"_index":2581,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.controls['uuid'].setvalue(category.uuid",{"_index":2347,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.form.controls['uuid'].setvalue(user.uuid",{"_index":2582,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.form.reset",{"_index":1409,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.form.setvalue(formstate.value",{"_index":1405,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.formattedday",{"_index":2215,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.formattedtime",{"_index":2217,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.formbuilder.group",{"_index":1447,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.get(resource",{"_index":1639,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.get(resource).pipe",{"_index":1644,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["this.hasvalue",{"_index":2430,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.httpclient.delete(url",{"_index":2114,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.get(url",{"_index":2105,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.patch(url",{"_index":2113,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.post(url",{"_index":2109,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.httpclient.put(url",{"_index":2111,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["this.incident",{"_index":2140,"title":{},"body":{"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{}}}],["this.incident.date",{"_index":2213,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.incident.resolved",{"_index":2144,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentid",{"_index":2137,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.getincidentbyid(this.incidentid).subscribe",{"_index":2139,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.updateincident(incident",{"_index":2141,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.incidentsservice.updateincident(incident).subscribe",{"_index":2143,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.init",{"_index":1139,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.init(config",{"_index":1696,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.initform",{"_index":1396,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.initialauthresolved",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["this.isdisabled",{"_index":2432,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.isscreensmall",{"_index":830,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.isuserconnected",{"_index":1909,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.isuserconnectedanonymously",{"_index":1910,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.jsontocsv(dataobject",{"_index":1217,"title":{},"body":{"components/DataPage.html":{}}}],["this.lang.use(this.browserlanguage",{"_index":2309,"title":{},"body":{"injectables/LocalService.html":{}}}],["this.login",{"_index":323,"title":{},"body":{"components/AccessPage.html":{}}}],["this.me().subscribe",{"_index":1537,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.me().subscribe((data",{"_index":1553,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.media.upload(blob).subscribe((media",{"_index":2511,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this.message",{"_index":1112,"title":{},"body":{"components/ConfirmDialogComponent.html":{}}}],["this.messageservice.add",{"_index":355,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.mod",{"_index":2349,"title":{},"body":{"components/ModalCategoryComponent.html":{}}}],["this.modal.dismiss('reset",{"_index":1449,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["this.modal.dismiss(null",{"_index":1448,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.modal.dismiss(this.form.value",{"_index":2350,"title":{},"body":{"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["this.mymodal.create",{"_index":1258,"title":{},"body":{"components/DataPage.html":{},"components/HomePage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this.oneditclicked.emit(category",{"_index":828,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["this.onfilterchange(filtervalues",{"_index":2016,"title":{},"body":{"components/HomePage.html":{}}}],["this.onfilterchange(results.data",{"_index":2014,"title":{},"body":{"components/HomePage.html":{}}}],["this.onincidentclicked.emit(this.incident?.uuid",{"_index":2226,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.onsubmit.emit(this.form?.value",{"_index":2322,"title":{},"body":{"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{}}}],["this.ontrashclicked.emit(category",{"_index":827,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["this.onuserclicked.emit(userid",{"_index":2686,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["this.options",{"_index":2189,"title":{},"body":{"components/IncidentsCircleGraphicComponent.html":{},"components/UserCircleGraphicComponent.html":{}}}],["this.picturemodal?.dismiss",{"_index":2448,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.postregister(_info).subscribe((data",{"_index":1562,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["this.propagatechange",{"_index":1051,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.propagatechange(picture",{"_index":2434,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.propagatechange(this.categoryselected.data.name",{"_index":1049,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.propagatechange(this.userselected.uuid",{"_index":2652,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.resetrequested.emit",{"_index":1410,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.resetsignal.subscribe",{"_index":1054,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.route.parammap.subscribe((params",{"_index":2136,"title":{},"body":{"components/IncidentDataPage.html":{},"components/UserDataPage.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":320,"title":{},"body":{"components/AccessPage.html":{}}}],["this.router.createurltree([this.homeurl",{"_index":711,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.createurltree([this.loginurl",{"_index":712,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigate(['/about",{"_index":545,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/access",{"_index":480,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{}}}],["this.router.navigate(['/access']).catch(err",{"_index":538,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/data",{"_index":542,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home",{"_index":540,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home']).catch(err",{"_index":536,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/home/incident",{"_index":2012,"title":{},"body":{"components/HomePage.html":{}}}],["this.router.navigate(['/settings",{"_index":541,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate([`/data/user/${userid",{"_index":1256,"title":{},"body":{"components/DataPage.html":{}}}],["this.router.url.includes(url",{"_index":539,"title":{},"body":{"components/AppComponent.html":{}}}],["this.selectcategory(category.uuid",{"_index":1057,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.selectcategory(obj.name",{"_index":1050,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.selectcategory(undefined",{"_index":1061,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{}}}],["this.selectuser(obj.name",{"_index":2653,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.selectuser(undefined",{"_index":2655,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.selectuser(user.uuid",{"_index":2654,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.showall",{"_index":2013,"title":{},"body":{"components/HomePage.html":{}}}],["this.showerror('cant",{"_index":1270,"title":{},"body":{"components/DataPage.html":{}}}],["this.showerror('emailuser",{"_index":343,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('error",{"_index":2145,"title":{},"body":{"components/IncidentDataPage.html":{}}}],["this.showerror('failregister",{"_index":347,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('loginerror",{"_index":352,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('unknown",{"_index":348,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showerror('waitadmin",{"_index":322,"title":{},"body":{"components/AccessPage.html":{}}}],["this.showrolefield",{"_index":2586,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["this.showsuccess('good",{"_index":1269,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.showsuccess('waitadmin",{"_index":331,"title":{},"body":{"components/AccessPage.html":{}}}],["this.subscribetocollection",{"_index":1729,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetocollection('userinfo",{"_index":1726,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["this.subscribetofilterstate",{"_index":1395,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["this.translate.addlangs(['es",{"_index":1140,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.get(`forms.${role",{"_index":2601,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["this.translate.get(key",{"_index":1148,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.get(message).subscribe",{"_index":354,"title":{},"body":{"components/AccessPage.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["this.translate.getcurrentlang",{"_index":2498,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.translate.setdefaultlang(this._language.value",{"_index":1142,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["this.translate.use(lang",{"_index":2516,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.user",{"_index":2502,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this.userid",{"_index":2620,"title":{},"body":{"components/UserDataPage.html":{}}}],["this.username",{"_index":2224,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.users",{"_index":2649,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["this.userselected",{"_index":2651,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.userservice",{"_index":2499,"title":{},"body":{"components/SettingsPage.html":{}}}],["this.userservice.getuserbyid(id).subscribe",{"_index":2650,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["this.userservice.getuserbyid(this.incident.userid).subscribe((user",{"_index":2223,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["this.userservice.getuserbyid(this.userid).subscribe((user",{"_index":2621,"title":{},"body":{"components/UserDataPage.html":{}}}],["this.userservice.updateuser(results.data",{"_index":2514,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["this?.form?.get('role')?.setvalue('admin",{"_index":2587,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["through",{"_index":1482,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"components/RegisterFormComponent.html":{},"miscellaneous/functions.html":{}}}],["throw",{"_index":642,"title":{},"body":{"modules/AppModule.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["throwerror",{"_index":872,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/IncidentsService.html":{}}}],["throws",{"_index":1504,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["thumbnails",{"_index":1969,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{}}}],["tiene",{"_index":917,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["time",{"_index":453,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["timestamp",{"_index":1769,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"interfaces/incidentInfo.html":{}}}],["timestamp.todate",{"_index":2220,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["timestamp.tolocaledatestring",{"_index":2216,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["timestamp.tolocaletimestring",{"_index":2218,"title":{},"body":{"components/IncidentsInfoComponent.html":{}}}],["title",{"_index":2829,"title":{},"body":{"interfaces/incidentInfo.html":{}}}],["tl",{"_index":357,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["toabout",{"_index":490,"title":{},"body":{"components/AppComponent.html":{}}}],["toabout(menu",{"_index":516,"title":{},"body":{"components/AppComponent.html":{}}}],["toast",{"_index":307,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["toast.${text",{"_index":353,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{}}}],["toastmodule",{"_index":422,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SharedModule.html":{}}}],["todata",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["toggles",{"_index":262,"title":{},"body":{"components/AccessPage.html":{}}}],["tohome",{"_index":492,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbar",{"_index":563,"title":{},"body":{"components/AppComponent.html":{}}}],["top",{"_index":364,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["tosettings",{"_index":493,"title":{},"body":{"components/AppComponent.html":{}}}],["total",{"_index":1632,"title":{},"body":{"classes/FirebaseDataService.html":{},"interfaces/Pagination.html":{}}}],["total:number",{"_index":2356,"title":{},"body":{"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["touched",{"_index":1006,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["transform",{"_index":749,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["transform(value",{"_index":750,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["transformed",{"_index":764,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"pipes/ShortenTextPipe.html":{}}}],["translate",{"_index":210,"title":{},"body":{"components/AccessPage.html":{},"modules/AccessPageModule.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"modules/DataPageModule.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"modules/IncidentDataPageModule.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["translate.service",{"_index":2305,"title":{},"body":{"injectables/LocalService.html":{}}}],["translate/core",{"_index":409,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"injectables/CustomTranslateService.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":2796,"title":{},"body":{"dependencies.html":{}}}],["translated",{"_index":1126,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translateloader",{"_index":407,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule",{"_index":406,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule.forchild",{"_index":424,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["translatemodule.forroot",{"_index":651,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":1121,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["translating",{"_index":233,"title":{},"body":{"components/AccessPage.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{}}}],["translation",{"_index":227,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"miscellaneous/functions.html":{}}}],["translations",{"_index":1123,"title":{},"body":{"injectables/CustomTranslateService.html":{},"components/UserCircleGraphicComponent.html":{}}}],["transparent",{"_index":385,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["trash",{"_index":799,"title":{},"body":{"components/CategoriesInfoComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["triggered",{"_index":1442,"title":{},"body":{"components/FilterMobileComponent.html":{}}}],["triggering",{"_index":2415,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["true",{"_index":310,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"classes/EmailValidation.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["truncate",{"_index":2560,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["trust",{"_index":2082,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["try",{"_index":1041,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["tslib",{"_index":2809,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":35,"title":{},"body":{"components/AboutPage.html":{}}}],["tus",{"_index":42,"title":{},"body":{"components/AboutPage.html":{}}}],["type",{"_index":254,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"classes/EmailValidation.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"injectables/LocalService.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{},"components/ModalCategoryComponent.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"classes/PasswordValidation.html":{},"interfaces/Photo.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"interfaces/incidentInfo.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":2212,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"classes/PasswordValidation.html":{}}}],["typescript",{"_index":268,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["typically",{"_index":1702,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["uid",{"_index":1485,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["un",{"_index":1951,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unauthenticated",{"_index":1521,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["undefined",{"_index":751,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/SettingsPage.html":{},"pipes/ShortenTextPipe.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["unique",{"_index":1710,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/UsersService.html":{}}}],["uniquely",{"_index":1817,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["unsubscribe",{"_index":1661,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["up",{"_index":1697,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"pipes/ShortenTextPipe.html":{}}}],["update",{"_index":151,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["updatecategory",{"_index":851,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategory(category",{"_index":864,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["updatecategory(results?.data",{"_index":1266,"title":{},"body":{"components/DataPage.html":{}}}],["updated",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/DataService.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/IncidentsService.html":{},"components/ModalCategoryComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["updatedoc",{"_index":1656,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(doc(collectionref",{"_index":1824,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedoc(documentref",{"_index":1954,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocument",{"_index":1821,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatedocumentfield",{"_index":1941,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["updatefilterstate",{"_index":1454,"title":{},"body":{"injectables/FilterService.html":{}}}],["updatefilterstate(form",{"_index":1457,"title":{},"body":{"injectables/FilterService.html":{}}}],["updateincident",{"_index":2245,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["updateincident(incident",{"_index":2255,"title":{},"body":{"injectables/IncidentsService.html":{}}}],["updates",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"injectables/CategoriesService.html":{},"injectables/CustomTranslateService.html":{},"injectables/DataService.html":{},"components/FilterComponent.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentsInfoComponent.html":{},"injectables/IncidentsService.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["updateuser",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"injectables/UsersService.html":{}}}],["updateuser(data",{"_index":2693,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuser(user",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["updateusercomponent",{"_index":150,"title":{"components/UpdateUserComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["updating",{"_index":1327,"title":{},"body":{"injectables/DataService.html":{},"components/SettingsPage.html":{}}}],["upload",{"_index":1763,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["upload(blob",{"_index":1961,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["uploadbytes",{"_index":1671,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploadbytes(storageref",{"_index":1791,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["uploaded",{"_index":1747,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["uploading",{"_index":1960,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"components/PictureSelectableComponent.html":{}}}],["uploads",{"_index":1745,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{},"injectables/MediaService.html":{}}}],["upon",{"_index":1604,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["url",{"_index":441,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/UserDataPage.html":{},"miscellaneous/functions.html":{}}}],["url('../../../assets/images/vectorial",{"_index":382,"title":{},"body":{"components/AccessPage.html":{}}}],["url.createobjecturl(blob",{"_index":1242,"title":{},"body":{"components/DataPage.html":{}}}],["url.revokeobjecturl(url",{"_index":1251,"title":{},"body":{"components/DataPage.html":{}}}],["url_large",{"_index":1973,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_medium",{"_index":1972,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_small",{"_index":1971,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["url_thumbnail",{"_index":1974,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"interfaces/PaginatedData.html":{},"interfaces/Pagination.html":{},"interfaces/Photo.html":{}}}],["urlencoded",{"_index":2069,"title":{},"body":{"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{}}}],["urls",{"_index":1965,"title":{},"body":{"classes/FirebaseMediaService.html":{},"interfaces/Media.html":{},"miscellaneous/functions.html":{}}}],["urltree",{"_index":460,"title":{},"body":{"guards/AdminGuard.html":{},"guards/AuthGuard.html":{}}}],["use",{"_index":342,"title":{},"body":{"components/AccessPage.html":{},"injectables/CustomTranslateService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["use(language",{"_index":1132,"title":{},"body":{"injectables/CustomTranslateService.html":{}}}],["useclass",{"_index":657,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":225,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/LocalService.html":{},"interfaces/Media.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/functions.html":{}}}],["useexisting",{"_index":1037,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":427,"title":{},"body":{"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{}}}],["user",{"_index":153,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["user!.uuid",{"_index":1591,"title":{},"body":{"classes/FirebaseAuthService.html":{}}}],["user's",{"_index":701,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user'},{'name",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["user(_user",{"_index":2647,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["user.component",{"_index":2051,"title":{},"body":{"modules/HomePageModule.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{}}}],["user.component.html",{"_index":2291,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{}}}],["user.component.scss",{"_index":2290,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{}}}],["user.component.ts",{"_index":2289,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{},"coverage.html":{}}}],["user.component.ts:13",{"_index":2574,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:14",{"_index":2575,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:16",{"_index":2293,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:21",{"_index":2569,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:23",{"_index":2294,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:30",{"_index":2298,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:32",{"_index":2292,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:36",{"_index":2295,"title":{},"body":{"components/ItemUserComponent.html":{},"components/UpdateUserComponent.html":{}}}],["user.component.ts:42",{"_index":2296,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.component.ts:62",{"_index":2571,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:68",{"_index":2573,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:79",{"_index":2572,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["user.component.ts:9",{"_index":2297,"title":{},"body":{"components/ItemUserComponent.html":{}}}],["user.email",{"_index":1724,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.name",{"_index":2225,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.picture",{"_index":2515,"title":{},"body":{"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["user.role",{"_index":478,"title":{},"body":{"guards/AdminGuard.html":{}}}],["user.surname",{"_index":2623,"title":{},"body":{"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.uid",{"_index":1723,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["user.username",{"_index":2624,"title":{},"body":{"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["user.uuid",{"_index":1592,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/UpdateUserComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["user/:id",{"_index":687,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user/item",{"_index":2050,"title":{},"body":{"modules/HomePageModule.html":{},"components/ItemUserComponent.html":{},"coverage.html":{}}}],["user/update",{"_index":2495,"title":{},"body":{"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"coverage.html":{}}}],["user_selectable_mobile_value_accessor",{"_index":2658,"title":{},"body":{"components/UserSelectableMobileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_selectable_value_accessor",{"_index":2630,"title":{},"body":{"components/UserSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercirclegraphiccomponent",{"_index":152,"title":{"components/UserCircleGraphicComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["usercredential",{"_index":1680,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["usercredentials",{"_index":266,"title":{"interfaces/UserCredentials.html":{}},"body":{"components/AccessPage.html":{},"injectables/AuthService.html":{},"classes/FirebaseAuthService.html":{},"components/LoginFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["userdatapage",{"_index":154,"title":{"components/UserDataPage.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["userdatapagemodule",{"_index":664,"title":{"modules/UserDataPageModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{},"modules.html":{}}}],["userdatapageroutingmodule",{"_index":2628,"title":{"modules/UserDataPageRoutingModule.html":{}},"body":{"modules/UserDataPageModule.html":{},"modules/UserDataPageRoutingModule.html":{},"index.html":{},"modules.html":{}}}],["userid",{"_index":1206,"title":{},"body":{"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"interfaces/incidentInfo.html":{}}}],["useridvalue",{"_index":2022,"title":{},"body":{"components/HomePage.html":{}}}],["userinfo",{"_index":731,"title":{"interfaces/UserInfo.html":{}},"body":{"injectables/AuthService.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["userinfo(user",{"_index":2577,"title":{},"body":{"components/UpdateUserComponent.html":{}}}],["userinfo(userid",{"_index":1204,"title":{},"body":{"components/DataPage.html":{}}}],["username",{"_index":1574,"title":{},"body":{"classes/FirebaseAuthService.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"components/UserDataPage.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{}}}],["userregisterinfo",{"_index":283,"title":{"interfaces/UserRegisterInfo.html":{}},"body":{"components/AccessPage.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"coverage.html":{}}}],["users",{"_index":158,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["users.filter((user",{"_index":2685,"title":{},"body":{"components/UsersInfoComponent.html":{}}}],["users.find((user",{"_index":2697,"title":{},"body":{"injectables/UsersService.html":{}}}],["users.reduce((acc",{"_index":2596,"title":{},"body":{"components/UserCircleGraphicComponent.html":{}}}],["userselectablecomponent",{"_index":155,"title":{"components/UserSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userselectablemobilecomponent",{"_index":156,"title":{"components/UserSelectableMobileComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"modules/HomePageModule.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["userselected",{"_index":2631,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["userselected.name",{"_index":2657,"title":{},"body":{"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["userservice",{"_index":2199,"title":{},"body":{"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["usersinfocomponent",{"_index":157,"title":{"components/UsersInfoComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"modules/SharedModule.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"coverage.html":{},"index.html":{}}}],["usersservice",{"_index":2198,"title":{"injectables/UsersService.html":{}},"body":{"components/IncidentsInfoComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["uses",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"classes/FirebaseAuthService.html":{},"components/RegisterFormComponent.html":{}}}],["usevalue",{"_index":653,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue:'firebase",{"_index":656,"title":{},"body":{"modules/AppModule.html":{}}}],["using",{"_index":300,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"injectables/IncidentsService.html":{},"injectables/UsersService.html":{}}}],["utilized",{"_index":1619,"title":{},"body":{"classes/FirebaseDataService.html":{}}}],["uuid",{"_index":895,"title":{},"body":{"injectables/CategoriesService.html":{},"interfaces/CategoryInfo.html":{},"classes/FirebaseAuthService.html":{},"classes/FirebaseDataService.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{},"interfaces/UserCredentials.html":{},"interfaces/UserInfo.html":{},"interfaces/UserRegisterInfo.html":{},"interfaces/incidentInfo.html":{}}}],["valid",{"_index":1484,"title":{},"body":{"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["validate",{"_index":1345,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validates",{"_index":1342,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validation",{"_index":1348,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validationerrors",{"_index":1351,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validator",{"_index":1347,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validatorfn",{"_index":1346,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["validators",{"_index":1387,"title":{},"body":{"components/FilterComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["validators.required",{"_index":2321,"title":{},"body":{"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/UpdateUserComponent.html":{}}}],["value",{"_index":263,"title":{},"body":{"components/AccessPage.html":{},"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"pipes/CapitalizeInitialPipe.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"classes/EmailValidation.html":{},"injectables/FilterService.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"injectables/LocalService.html":{},"components/ModalCategoryComponent.html":{},"classes/PasswordValidation.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"pipes/ShortenTextPipe.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"miscellaneous/variables.html":{}}}],["value!.length",{"_index":2565,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["value!.substring(0",{"_index":2566,"title":{},"body":{"pipes/ShortenTextPipe.html":{}}}],["value.charat(0).touppercase",{"_index":768,"title":{},"body":{"pipes/CapitalizeInitialPipe.html":{}}}],["values",{"_index":1381,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["var",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"classes/FirebaseAuthService.html":{},"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/Media.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["variable",{"_index":2703,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2845,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1912,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"classes/FirebaseMediaService.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"interfaces/Media.html":{}}}],["version",{"_index":2838,"title":{},"body":{"properties.html":{}}}],["viewencapsulation",{"_index":1208,"title":{},"body":{"components/DataPage.html":{}}}],["viewencapsulation.none",{"_index":1151,"title":{},"body":{"components/DataPage.html":{}}}],["views",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["visibility",{"_index":2475,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["visibility_off",{"_index":2474,"title":{},"body":{"components/RegisterFormComponent.html":{}}}],["vistos",{"_index":1411,"title":{},"body":{"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{}}}],["void",{"_index":29,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/ConfirmDialogComponent.html":{},"injectables/CustomTranslateService.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"injectables/FilterService.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/HomePage.html":{},"injectables/HttpClientProvider.html":{},"injectables/HttpClientWebProvider.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/ItemCategoryComponent.html":{},"components/ItemUserComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserCircleGraphicComponent.html":{},"components/UserDataPage.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{},"injectables/UsersService.html":{}}}],["want",{"_index":1762,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["web",{"_index":626,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["web.provider",{"_index":613,"title":{},"body":{"modules/AppModule.html":{}}}],["web.provider.ts",{"_index":2085,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"coverage.html":{}}}],["web.provider.ts:12",{"_index":2089,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["web.provider.ts:153",{"_index":2095,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["web.provider.ts:170",{"_index":2092,"title":{},"body":{"injectables/HttpClientWebProvider.html":{}}}],["webdir",{"_index":2855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":73,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["where(field",{"_index":1864,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["whether",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/UpdateUserComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{},"components/UsersInfoComponent.html":{}}}],["white",{"_index":1281,"title":{},"body":{"components/DataPage.html":{},"components/IncidentDataPage.html":{},"components/LoginFormComponent.html":{},"components/ModalCategoryComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["whose",{"_index":1833,"title":{},"body":{"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{}}}],["width",{"_index":87,"title":{},"body":{"components/AboutPage.html":{},"components/AccessPage.html":{},"components/AppComponent.html":{},"components/CategoriesInfoComponent.html":{},"components/DataPage.html":{},"components/FilterComponent.html":{},"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/IncidentsInfoComponent.html":{},"components/LoginFormComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterFormComponent.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{},"components/UsersInfoComponent.html":{}}}],["width:99",{"_index":377,"title":{},"body":{"components/AccessPage.html":{}}}],["window",{"_index":805,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["window.navigator.language",{"_index":2303,"title":{},"body":{"injectables/LocalService.html":{}}}],["window.navigator.language.split",{"_index":2308,"title":{},"body":{"injectables/LocalService.html":{}}}],["window:resize",{"_index":784,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["window:resize(event",{"_index":802,"title":{},"body":{"components/CategoriesInfoComponent.html":{},"components/IncidentsInfoComponent.html":{},"components/UsersInfoComponent.html":{}}}],["windows",{"_index":2395,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/UpdateUserComponent.html":{},"components/UserDataPage.html":{}}}],["within",{"_index":229,"title":{},"body":{"components/AccessPage.html":{},"components/AppComponent.html":{},"components/DataPage.html":{},"interfaces/FirebaseDocument.html":{},"interfaces/FirebaseStorageFile.html":{},"interfaces/FirebaseUserCredential.html":{},"components/IncidentDataPage.html":{},"components/IncidentsCircleGraphicComponent.html":{},"injectables/LocalService.html":{},"components/SettingsPage.html":{},"components/UserCircleGraphicComponent.html":{},"miscellaneous/functions.html":{}}}],["without",{"_index":1444,"title":{},"body":{"components/FilterMobileComponent.html":{},"components/HomePage.html":{},"components/ModalCategoryComponent.html":{},"components/UpdateUserComponent.html":{}}}],["wrap",{"_index":2034,"title":{},"body":{"components/HomePage.html":{},"components/IncidentDataPage.html":{},"components/SettingsPage.html":{},"components/UserDataPage.html":{}}}],["writes",{"_index":1019,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["writevalue",{"_index":955,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["writevalue(obj",{"_index":1017,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["written",{"_index":1021,"title":{},"body":{"components/CategorySelectableComponent.html":{},"components/CategorySelectableMobileComponent.html":{},"components/PictureSelectableComponent.html":{},"components/UserSelectableComponent.html":{},"components/UserSelectableMobileComponent.html":{}}}],["www",{"_index":2119,"title":{},"body":{"injectables/HttpClientWebProvider.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":899,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["ya",{"_index":885,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["yes",{"_index":2071,"title":{},"body":{"injectables/HttpClientProvider.html":{}}}],["z0",{"_index":1357,"title":{},"body":{"classes/EmailValidation.html":{}}}],["z70ncw6nln",{"_index":2867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z\\d]{8",{"_index":2375,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z])(?=.*[a",{"_index":2373,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z])(?=.*\\d)[a",{"_index":2374,"title":{},"body":{"classes/PasswordValidation.html":{}}}],["z]{2",{"_index":1360,"title":{},"body":{"classes/EmailValidation.html":{}}}],["za",{"_index":1356,"title":{},"body":{"classes/EmailValidation.html":{},"classes/PasswordValidation.html":{}}}],["zone.js",{"_index":2811,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":175,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AccessPageModule.html":{},"modules/AppModule.html":{},"modules/DataPageModule.html":{},"modules/HomePageModule.html":{},"modules/IncidentDataPageModule.html":{},"modules/SettingsPageModule.html":{},"modules/SharedModule.html":{},"modules/UserDataPageModule.html":{},"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/about/about.page.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:12\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      CHATO\n      \n        Tu solución para solucionar los problemas de tus empleados\n      \n      \n        \n        \n        \n      \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                .container {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    position: relative;\n    height: 86.3vh;\n    margin: 0;\n    overflow: hidden;\n}\n\n.header {\n    text-align: center;\n    flex: 1;\n    overflow: auto;\n}\n\nh1 {\n    font-size: 90px;\n    color: #0f212d;\n    font-weight: 900;\n}\n\n.slogan {\n    font-size: 30px;\n    color: #0f212d;\n    margin-bottom: 20px;\n}\n\n.social-icons a {\n    display: inline-block;\n    margin: 0 10px;\n\n    ion-icon {\n        color: #0f212d;\n    }\n}\n\n.footer {\n    width: 100%;\n    position: absolute;\n    bottom: 0;\n}\n\n\n@media (max-width: 600px) {\n    .container {\n        height: 100%;\n        .header {\n            h1 {\n                font-size: 5rem;\n            }\n            \n            .slogan {\n                font-size: 1rem;\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            CHATO              Tu solución para solucionar los problemas de tus empleados                                                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AboutPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AboutPageRoutingModule } from './about-routing.module';\n\nimport { AboutPage } from './about.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AboutPageRoutingModule\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AccessPage.html":{"url":"components/AccessPage.html","title":"component - AccessPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AccessPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/access.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-access\n            \n\n\n\n            \n                styleUrls\n                ./access.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./access.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeForm\n                            \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, translate: CustomTranslateService, messageService: MessageService, route: ActivatedRoute, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/access.page.ts:19\n                            \n                        \n\n                \n                    \n                            The constructor function subscribes to query parameters and displays an error message if the\n'error' parameter is 'notAdmin'.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\nMessageService. It is likely used for displaying messages or notifications to the user within\nthe application.\nservice provided by Angular that gives access to information about a route associated with a\ncomponent loaded in an outlet. It allows you to access route parameters, query parameters, and\nother information related to the current route.\nservice. It is used for navigating between different components in your Angular application based\non the defined routes.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService - a service for handling authentication and user authorization.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The translate parameter in the constructor is of type CustomTranslateService.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The messageService parameter in the constructor is of type\nMessageService. It is likely used for displaying messages or notifications to the user within\nthe application.\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The route parameter in the constructor is of type ActivatedRoute, which is a\nservice provided by Angular that gives access to information about a route associated with a\ncomponent loaded in an outlet. It allows you to access route parameters, query parameters, and\nother information related to the current route.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different components in your Angular application based\non the defined routes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeForm\n                        \n                    \n                \n            \n            \n                \nchangeForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:60\n                        \n                    \n\n\n            \n                \n                        The function toggles the value of the login property.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser(data: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:106\n                        \n                    \n\n\n            \n                \n                        The loginUser function in TypeScript logs in a user with provided credentials and handles\nerrors, displaying a specific error message for invalid email.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    UserCredentials object containing user login information, such as email and password\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(data: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:72\n                        \n                    \n\n\n            \n                \n                        The function registerUser registers a user with the role 'user' and handles different error\ncases during the registration process.\nThis parameter likely contains information about a user that is being registered, such as their\nemail, password, and any other relevant details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The registerUser function takes in a parameter data of type UserRegisterInfo.\nThis parameter likely contains information about a user that is being registered, such as their\nemail, password, and any other relevant details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:146\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/access.page.ts:129\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/access.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport {\n  UserCredentials,\n  UserRegisterInfo,\n} from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\n\n@Component({\n  selector: 'app-access',\n  templateUrl: './access.page.html',\n  styleUrls: ['./access.page.scss'],\n  providers: [MessageService],\n})\nexport class AccessPage implements OnInit {\n  login = true;\n\n  /**\n   * The constructor function subscribes to query parameters and displays an error message if the\n   * 'error' parameter is 'notAdmin'.\n   *\n   * @param auth AuthService - a service for handling authentication and user authorization.\n   * @param translate The `translate` parameter in the constructor is of type `CustomTranslateService`.\n   * It is used for handling translation services within the component or service where it is injected.\n   * This service likely provides methods for translating text or messages into different languages or\n   * for managing localization in the application.\n   * @param messageService The `messageService` parameter in the constructor is of type\n   * `MessageService`. It is likely used for displaying messages or notifications to the user within\n   * the application.\n   * @param route The `route` parameter in the constructor is of type `ActivatedRoute`, which is a\n   * service provided by Angular that gives access to information about a route associated with a\n   * component loaded in an outlet. It allows you to access route parameters, query parameters, and\n   * other information related to the current route.\n   * @param router The `router` parameter in the constructor is an instance of the Angular Router\n   * service. It is used for navigating between different components in your Angular application based\n   * on the defined routes.\n   */\n  constructor(\n    private auth: AuthService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.route.queryParams.subscribe((params) => {\n      if (params['error'] === 'notAdmin') {\n        this.showError('waitAdmin');\n      }\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * The function toggles the value of the `login` property.\n   */\n  changeForm() {\n    this.login = !this.login;\n  }\n\n  /**\n   * The function `registerUser` registers a user with the role 'user' and handles different error\n   * cases during the registration process.\n   *\n   * @param data The `registerUser` function takes in a parameter `data` of type `UserRegisterInfo`.\n   * This parameter likely contains information about a user that is being registered, such as their\n   * email, password, and any other relevant details.\n   */\n  registerUser(data: UserRegisterInfo) {\n    let _data: UserRegisterInfo = { ...data };\n    _data.role = 'user';\n    this.auth.register(_data).subscribe({\n      next: async (data) => {\n        console.log('ALL WAS GOOD');\n        this.showSuccess('waitAdmin');\n        await Haptics.impact({ style: ImpactStyle.Medium });\n      },\n      error: async (err) => {\n        if (err.code) {\n          switch (err.code) {\n            case 'auth/email-already-in-use':\n              this.showError('emailUser');\n              await Haptics.impact({ style: ImpactStyle.Heavy });\n              break;\n            case 'post-registration-error':\n              this.showError('failRegister');\n              await Haptics.impact({ style: ImpactStyle.Heavy });\n              break;\n          }\n        } else {\n          this.showError('Unknown registration error');\n        }\n      },\n    });\n  }\n\n  /**\n   * The `loginUser` function in TypeScript logs in a user with provided credentials and handles\n   * errors, displaying a specific error message for invalid email.\n   *\n   * @param data UserCredentials object containing user login information, such as email and password\n   */\n  loginUser(data: UserCredentials) {\n    let _data: UserCredentials = { ...data };\n    this.auth.login(_data).subscribe({\n      next: async (data) => {\n        console.log('ALL WAS GOOD');\n        await Haptics.impact({ style: ImpactStyle.Medium });\n      },\n      error: async (err) => {\n        console.log('BAD', err);\n        if (err.code === 'auth/invalid-email') {\n          this.showError('loginError');\n          await Haptics.impact({ style: ImpactStyle.Heavy });\n        }\n      },\n    });\n  }\n\n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({ key: 'tl', severity: 'info', detail: text });\n        this.login = true;\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n        this.login = true;\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n      \n      \n\n      \n      \n      {{'access.toRegister' | translate}}\n    \n      {{'access.toLogin' | translate}}\n    \n\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./access.page.scss\n                \n                ion-content {\n    margin-top: 30%;\n}\n\n.access {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: row;\n\n    &__forms {\n        flex: 1;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        align-items: center;\n        padding: 20px;\n        gap: 20px;\n\n        .access__forms--logo {\n            display: none;\n            width: 30%;\n        }\n\n        app-login-form,\n        app-register-form {\n            width: 70%;\n        }\n    }\n\n    &__image {\n        flex: 1;\n        width:99%;\n        background-repeat: no-repeat;\n        background-position: center;\n        background-size: cover;\n        background-image: url('../../../assets/images/vectorial-access.webp');\n    }\n\n    button {\n        background-color: transparent;\n        padding: 0.5rem;\n        border: none;\n        cursor: pointer;\n    }\n}\n\n@media (max-width: 700px) {\n    .access {\n        flex-direction: column;\n    \n        &__forms {  \n            .access__forms--logo {\n                display: block;\n                width: 30%;\n            }\n    \n            app-login-form {\n                width: 100%;\n            }\n\n            app-register-form {\n                margin-top: -5%;\n                width: 100%;\n            }\n        }\n    \n        &__image {\n            display: none;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                    {{\\'access.toRegister\\' | translate}}          {{\\'access.toLogin\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AccessPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccessPageModule.html":{"url":"modules/AccessPageModule.html","title":"module - AccessPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AccessPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AccessPageModule\n\n\n\ncluster_AccessPageModule_declarations\n\n\n\ncluster_AccessPageModule_imports\n\n\n\n\nAccessPage\n\nAccessPage\n\n\n\nAccessPageModule\n\nAccessPageModule\n\nAccessPageModule -->\n\nAccessPage->AccessPageModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAccessPageModule -->\n\nLoginFormComponent->AccessPageModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAccessPageModule -->\n\nRegisterFormComponent->AccessPageModule\n\n\n\n\n\nAccessPageRoutingModule\n\nAccessPageRoutingModule\n\nAccessPageModule -->\n\nAccessPageRoutingModule->AccessPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAccessPageModule -->\n\nSharedModule->AccessPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/access/access.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AccessPage\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            RegisterFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AccessPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AccessPageRoutingModule } from './access-routing.module';\n\nimport { AccessPage } from './access.page';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { RegisterFormComponent } from './register-form/register-form.component';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccessPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n     // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    // Shared\n    SharedModule,\n    ToastModule\n  ],\n  declarations: [\n    AccessPage,\n    LoginFormComponent,\n    RegisterFormComponent\n  ]\n})\nexport class AccessPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AccessPageRoutingModule.html":{"url":"modules/AccessPageRoutingModule.html","title":"module - AccessPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AccessPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/access/access-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccessPage } from './access.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccessPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccessPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/admin.guard.ts:16\n                            \n                        \n\n                \n                    \n                            The constructor function takes AuthService and Router as parameters.\nhandling authentication-related functionalities in the application.\nnavigating between different components in an Angular application by manipulating the browser's\nURL.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is an instance of the AuthService class, which is used for\nhandling authentication-related functionalities in the application.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter is an instance of the Angular Router service. It is used for\nnavigating between different components in an Angular application by manipulating the browser's\nURL.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/admin.guard.ts:42\n                        \n                    \n\n\n            \n                \n                        The function canActivate checks if the user is an admin and returns true, logs out the user and\nredirects to an access page with an error message if not.\nrepresents the activated route snapshot at the time of navigation. It contains information about\nthe route, its parameters, and related data.\nthe current router state snapshot, which includes information about the current activated route,\nthe URL, and the router state itself. It is of type RouterStateSnapshot.\nPromise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\nchecks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\nIf the user is logged in but not an admin, it logs\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe route parameter in the canActivate method\nrepresents the activated route snapshot at the time of navigation. It contains information about\nthe route, its parameters, and related data.\n\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe state parameter in the canActivate method represents\nthe current router state snapshot, which includes information about the current activated route,\nthe URL, and the router state itself. It is of type RouterStateSnapshot.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                The canActivate method is returning an Observable that emits a boolean or UrlTree, a\nPromise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\nchecks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\nIf the user is logged in but not an admin, it logs\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  /**\n   * The constructor function takes AuthService and Router as parameters.\n   *\n   * @param auth The `auth` parameter is an instance of the `AuthService` class, which is used for\n   * handling authentication-related functionalities in the application.\n   * @param router The `router` parameter is an instance of the Angular Router service. It is used for\n   * navigating between different components in an Angular application by manipulating the browser's\n   * URL.\n   */\n  constructor(private auth: AuthService, private router: Router) {}\n\n  /**\n   * The function `canActivate` checks if the user is an admin and returns true, logs out the user and\n   * redirects to an access page with an error message if not.\n   * @param {ActivatedRouteSnapshot} route - The `route` parameter in the `canActivate` method\n   * represents the activated route snapshot at the time of navigation. It contains information about\n   * the route, its parameters, and related data.\n   * @param {RouterStateSnapshot} state - The `state` parameter in the `canActivate` method represents\n   * the current router state snapshot, which includes information about the current activated route,\n   * the URL, and the router state itself. It is of type `RouterStateSnapshot`.\n   * @returns The `canActivate` method is returning an Observable that emits a boolean or UrlTree, a\n   * Promise that resolves to a boolean or UrlTree, a boolean value, or a UrlTree. The method first\n   * checks if the user is logged in and has an 'admin' role. If the user is an admin, it returns true.\n   * If the user is logged in but not an admin, it logs\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable\n    | Promise\n    | boolean\n    | UrlTree {\n    return this.auth.user$.pipe(\n      map((user) => {\n        if (user && user.role === 'admin') {\n          return true;\n        }\n        if (user) this.auth.logout();\n        this.router.navigate(['/access'], {\n          queryParams: { error: 'notAdmin' },\n        });\n        return false;\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                app.component.scss\n            \n\n\n\n            \n                templateUrl\n                app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialAuthResolved\n                            \n                            \n                                isSplash\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isActive\n                            \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toAbout\n                            \n                            \n                                toData\n                            \n                            \n                                toHome\n                            \n                            \n                                toSettings\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router, localLang: LocalService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:16\n                            \n                        \n\n                \n                    \n                            The constructor initializes subscriptions to authentication and router events in a TypeScript\nclass.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\nprivate property that is used to access the LocalService service within the class. This service\nis likely used for handling localization or language-related functionalities in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is an instance of the Angular Router\nservice. It is used for navigating between different views in the Angular application based on the\nspecified routes.\n\n                                                        \n                                                \n                                                \n                                                        localLang\n                                                  \n                                                        \n                                                                        LocalService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The localLang parameter in the constructor is of type LocalService. It is a\nprivate property that is used to access the LocalService service within the class. This service\nis likely used for handling localization or language-related functionalities in the application.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n            \n                \nisActive(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:62\n                        \n                    \n\n\n            \n                \n                        The function isActive checks if the current URL includes a specified URL string and returns a\nboolean value.\nused to check if the current URL matches the provided url parameter.\nspecified URL string.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The isActive function takes a url parameter of type string. This function is likely\nused to check if the current URL matches the provided url parameter.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                A boolean value is being returned, indicating whether the current URL contains the\nspecified URL string.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:90\n                        \n                    \n\n\n            \n                \n                        The logOut function calls the logout method of the auth object.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAbout\n                        \n                    \n                \n            \n            \n                \ntoAbout(menu: IonMenu)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:102\n                        \n                    \n\n\n            \n                \n                        The toAbout function navigates to the '/about' route using the Angular router and close the menu.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                menu\n                                            \n                                                        IonMenu\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The menu\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toData\n                        \n                    \n                \n            \n            \n                \ntoData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:83\n                        \n                    \n\n\n            \n                \n                        The toData function navigates to the '/data' route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toHome\n                        \n                    \n                \n            \n            \n                \ntoHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:69\n                        \n                    \n\n\n            \n                \n                        The toHome function uses the Angular router to navigate to the '/home' route.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toSettings\n                        \n                    \n                \n            \n            \n                \ntoSettings()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:76\n                        \n                    \n\n\n            \n                \n                        The toSettings function navigates to the settings route using the Angular router.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialAuthResolved\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSplash\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { LocalService } from './core/services/translate/local.service';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { AuthService } from './core/services/auth.service';\nimport { filter } from 'rxjs';\nimport { IonMenu, MenuController } from '@ionic/angular';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.scss'],\n})\nexport class AppComponent implements OnInit{\n  isSplash: boolean = false;\n  initialAuthResolved = false;\n\n  /**\n   * The constructor initializes subscriptions to authentication and router events in a TypeScript\n   * class.\n   *\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   * @param router The `router` parameter in the constructor is an instance of the Angular Router\n   * service. It is used for navigating between different views in the Angular application based on the\n   * specified routes.\n   * @param localLang The `localLang` parameter in the constructor is of type `LocalService`. It is a\n   * private property that is used to access the `LocalService` service within the class. This service\n   * is likely used for handling localization or language-related functionalities in the application.\n   */\n  constructor(\n    protected auth: AuthService,\n    private router: Router,\n    private localLang: LocalService\n  ) {\n    this.auth.isLogged$.subscribe((logged) => {\n      if (this.initialAuthResolved) {\n        if (logged) {\n          this.router.navigate(['/home']).catch(err => console.error(err));\n        } else {\n          this.router.navigate(['/access']).catch(err => console.error(err));\n        }\n      } else {\n        this.initialAuthResolved = true;\n      }\n    });\n  }\n  ngOnInit(): void {\n  }\n\n  /**\n   * The function `isActive` checks if the current URL includes a specified URL string and returns a\n   * boolean value.\n   *\n   * @param url The `isActive` function takes a `url` parameter of type string. This function is likely\n   * used to check if the current URL matches the provided `url` parameter.\n   * @return A boolean value is being returned, indicating whether the current URL contains the\n   * specified URL string.\n   */\n  isActive(url: string): boolean {\n    return this.router.url.includes(url);\n  }\n\n  /**\n   * The `toHome` function uses the Angular router to navigate to the '/home' route.\n   */\n  toHome() {\n    this.router.navigate(['/home']);\n  }\n\n  /**\n   * The `toSettings` function navigates to the settings route using the Angular router.\n   */\n  toSettings() {\n    this.router.navigate(['/settings']);\n  }\n\n  /**\n   * The `toData` function navigates to the '/data' route using the Angular router.\n   */\n  toData() {\n    this.router.navigate(['/data']);\n  }\n\n  /**\n   * The `logOut` function calls the `logout` method of the `auth` object.\n   */\n  logOut() {\n    this.auth.logout().subscribe(async (_) => {\n      await this.router.navigate(['/access']);\n      await Haptics.impact({ style: ImpactStyle.Heavy });\n    });\n  }\n\n  /**\n   * The `toAbout` function navigates to the '/about' route using the Angular router and close the menu.\n   *\n   * @param menu The menu\n   */\n  toAbout(menu: IonMenu) {\n    this.router.navigate(['/about']);\n    menu.close();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n      \n      \n    \n  \n  \n  \n    \n    \n      \n        \n          \n        \n        \n          {{(auth.user$ | async)?.name }} {{ (auth.user$ | async)?.surname | capitalizeInitial}}\n        \n      \n    \n  \n    \n\n    \n      \n        \n\n          \n            \n            {{'menu.home' | translate}}\n          \n\n          \n            \n            {{'menu.settings' | translate}}\n          \n          \n          \n            \n            {{'menu.graphics' | translate}}\n          \n\n          \n            \n            {{'menu.logOut' | translate}}\n          \n          \n        \n\n      \n      \n        {{'menu.about' | translate}}\n      \n    \n  \n  \n    \n  \n\n\n    \n\n    \n                \n                    app.component.scss\n                \n                ion-item {\n    cursor: pointer;\n}\n\nion-icon {\n    margin-right: 20px;\n}\n\nion-menu-button {\n    --color: #0F212D;\n    font-size: 50px;\n    margin-left: 100px;\n}\n\nion-item.active {\n    --background: #0F212D;\n    --color: var(--ion-color-primary-contrast);\n    \n    ion-icon {\n      color: var(--ion-color-primary-contrast);\n    }\n}\n\nion-header {\n    --background: transparent;\n    ion-toolbar {\n        --background: transparent;\n        border: none;\n        box-shadow: none;\n        \n        .app-logo {\n          height: 100px;\n          margin-right: 40px;\n        }\n    }\n\n}\n\n.menu-footer {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    text-align: center;\n    padding: 10px;\n    font-size: 0.8em;\n    color: gray;\n    border-top: 1px solid lightgray;\n  \n    p {\n      margin: 0;\n    }\n\n    &:hover {\n        cursor: pointer;\n        p {\n            font-weight: bold;\n        }\n    }\n}\n\n\n.menu--header__toolbar {\n    margin-top: 5%;\n    display:flex;\n    align-items:center;\n    justify-content: center;\n    gap: 20px;\n\n    ion-avatar {\n        img {\n            width: 60px;\n        }\n    }\n\n    span {\n        font-weight: bold;\n    }\n}\n    \n\n@media (max-width: 700px) {\n    ion-menu-button{\n        font-size: 40px;\n        margin-left: 10px;\n    }\n\n    ion-header {\n        ion-toolbar {\n            .app-logo {\n              margin-right: 10px;\n            }\n        }\n    }\n    \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                    {{(auth.user$ | async)?.name }} {{ (auth.user$ | async)?.surname | capitalizeInitial}}                                                                            {{\\'menu.home\\' | translate}}                                            {{\\'menu.settings\\' | translate}}                                                      {{\\'menu.graphics\\' | translate}}                                            {{\\'menu.logOut\\' | translate}}                                                {{\\'menu.about\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCapitalizeInitialPipe\n\nCapitalizeInitialPipe\n\nAppModule -->\n\nCapitalizeInitialPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            CapitalizeInitialPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { IonicModule, IonicRouteStrategy, Platform } from '@ionic/angular';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { createTranslateLoader } from './core/translate/translate';\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\nimport { FirebaseAuthService } from './core/services/firebase/api/firebase-auth.service';\nimport { FirebaseService } from './core/services/firebase/firebase.service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { FirebaseMediaService } from './core/services/firebase/api/firebase-media.service';\nimport { HttpClientWebProvider } from './core/services/http/http-client-web.provider';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { MediaService } from './core/services/media.service';\nimport { environment } from 'src/environments/environment';\nimport { AuthService } from './core/services/auth.service';\nimport { DataService } from './core/services/data.service';\nimport { HttpClientProvider } from './core/services/http/http-client.provider';\nimport { ToastModule } from 'primeng/toast';\nimport { SharedModule } from './shared/shared.module';\n\nimport { provideLottieOptions } from 'ngx-lottie';\nimport player from 'lottie-web';\nimport { CapitalizeInitialPipe } from './core/pipes/capitalize-initial.pipe';\nimport { DividerModule } from 'primeng/divider';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatButtonModule} from '@angular/material/button';\nimport { DropdownModule } from 'primeng/dropdown';\n\nexport function MediaServiceFactory(\n  backend:string,\n  firebase:FirebaseService){\n  switch(backend){\n    case 'Firebase':\n      return new FirebaseMediaService(firebase);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\nexport function httpProviderFactory(\n  http:HttpClient) {\n  return new HttpClientWebProvider(http);\n}\n\nexport function AuthServiceFactory(\n  backend:string,\n  firebase:FirebaseService\n) {\n  switch(backend){\n    case 'Firebase':\n      return new FirebaseAuthService(firebase);\n    default:\n      throw new Error(\"Not implemented\");\n  }\n}\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CapitalizeInitialPipe,\n  ],\n  imports: [\n    DropdownModule,\n    BrowserAnimationsModule,\n    BrowserModule, \n    IonicModule.forRoot(), \n    AppRoutingModule,\n    HttpClientModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: (createTranslateLoader),\n        deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n    SharedModule,\n    DividerModule,\n  ],\n  providers: [\n    provideLottieOptions({\n      player: () => player,\n    }),\n    {\n      provide: 'firebase-config',\n      useValue: environment.firebaseConfig\n    },\n    {\n      provide: 'backend',\n      useValue:'Firebase'\n    },\n    { \n      provide: RouteReuseStrategy, \n      useClass: IonicRouteStrategy \n    },\n    // Factories\n    {\n      provide: HttpClientProvider,\n      deps: [HttpClient, Platform],\n      useFactory: httpProviderFactory,  \n    },\n    {\n      provide: AuthService,\n      deps: ['backend', FirebaseService],\n      useFactory: AuthServiceFactory,  \n    },\n    {\n      provide: MediaService,\n      deps: ['backend', FirebaseService],\n      useFactory: MediaServiceFactory,  \n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { AdminGuard } from './core/guards/admin.guard';\nimport { UserDataPageModule } from './pages/user-data/user-data.module';\n\nconst routes: Routes = [\n  {\n    path: 'home',\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./pages/home/home.module').then( m => m.HomePageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n      {\n        path: 'incident-data/:id',\n        loadChildren: () => \"import('./pages/incident-data/incident-data.module').then( m => m.IncidentDataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      }\n    ]\n  },\n  {\n    path: '',\n    redirectTo: 'access',\n    pathMatch: 'full'\n  },\n  {\n    path: 'access',\n    loadChildren: () => \"import('./pages/access/access.module').then( m => m.AccessPageModule)\"\n  },\n  {\n    path: 'settings',\n    loadChildren: () => \"import('./pages/settings/settings.module').then( m => m.SettingsPageModule)\",\n    canActivate: [AuthGuard, AdminGuard]\n  },\n  {\n    path: 'data',\n    children: [\n      {\n        path: '',\n        loadChildren: () => \"import('./pages/data/data.module').then(m => m.DataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n      {\n        path: 'user/:id',\n        loadChildren: () => \"import('./pages/user-data/user-data.module').then(m => m.UserDataPageModule)\",\n        canActivate: [AuthGuard, AdminGuard],\n      },\n    ]\n  },\n  {\n    path: 'about',\n    loadChildren: () => \"import('./pages/about/about.module').then( m => m.AboutPageModule)\",\n    canActivate: [AuthGuard, AdminGuard],\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/core/guards/auth.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                homeUrl\n                            \n                            \n                                    Private\n                                loginUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/guards/auth.guard.ts:17\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthGuard.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe AuthService for checking the user's authentication status.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Router for navigation.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/guards/auth.guard.ts:37\n                        \n                    \n\n\n            \n                \n                        Checks if the user is logged in and redirects accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe activated route snapshot.\n\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe router state snapshot.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean | UrlTree\n\n                        \n                            \n                                An observable, promise, boolean, or URL tree representing the result of the canActivate operation.\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable, map, tap } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  private loginUrl: string = '/access';\n  private homeUrl: string = '/home';\n\n  /**\n   * Creates an instance of AuthGuard.\n   * \n   * @param auth - The AuthService for checking the user's authentication status.\n   * @param router - The Router for navigation.\n   */\n  constructor(\n    private auth: AuthService,\n    private router: Router\n  ) {}\n\n  /**\n   * Checks if the user is logged in and redirects accordingly.\n   * \n   * @param route - The activated route snapshot.\n   * @param state - The router state snapshot.\n   * @returns An observable, promise, boolean, or URL tree representing the result of the canActivate operation.\n   */\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean | UrlTree {\n    return this.auth.isLogged$.pipe(\n      tap(logged => {\n        if (logged) {\n          return this.router.createUrlTree([this.homeUrl]);\n        } else {\n          return this.router.createUrlTree([this.loginUrl]);\n        }\n      })\n    );\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                login\n                            \n                            \n                                    Public\n                                    Abstract\n                                logout\n                            \n                            \n                                    Public\n                                    Abstract\n                                me\n                            \n                            \n                                    Public\n                                    Abstract\n                                register\n                            \n                            \n                                    Public\n                                    Abstract\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n                        Performs user login.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser credentials for login.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable emitting the authenticated user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Logs out the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Retrieves information about the current user.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting information about the current user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Registers a new user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUser information for registration.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the registration process.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/auth.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Updates the user's information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nUpdated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the update process.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { UserInfo, UserCredentials } from '../interfaces/user-info';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class AuthService {\n  protected _logged = new BehaviorSubject(false);\n  public isLogged$ = this._logged.asObservable();\n  protected _user = new BehaviorSubject(null);\n  public user$ = this._user.asObservable();\n\n  /**\n   * Performs user login.\n   * @param {Object} credentials - User credentials for login.\n   * @returns {Observable} Observable emitting the authenticated user.\n   */\n  public abstract login(credentials: Object): Observable;\n\n  /**\n   * Registers a new user.\n   * @param {Object} info - User information for registration.\n   * @returns {Observable} Observable emitting the result of the registration process.\n   */\n  public abstract register(info: Object): Observable;\n\n  /**\n   * Logs out the current user.\n   */\n  public abstract logout(): Observable;\n\n  /**\n   * Retrieves information about the current user.\n   * @returns {Observable} Observable emitting information about the current user.\n   */\n  public abstract me(): Observable;\n\n  /**\n   * Updates the user's information.\n   * @param {UserInfo} user - Updated user information.\n   * @returns {Observable} Observable emitting the result of the update process.\n   */\n  public abstract updateUser(user: UserInfo): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/CapitalizeInitialPipe.html":{"url":"pipes/CapitalizeInitialPipe.html","title":"pipe - CapitalizeInitialPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  CapitalizeInitialPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/capitalize-initial.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        capitalizeInitial\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/capitalize-initial.pipe.ts:17\n                        \n                    \n\n\n            \n                \n                        The function takes a string as input, capitalizes the first letter, and adds a period at the end.\nvalue is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\nfirst character of the string and appends a period at the end before returning the transformed\nstring.\nof the value is capitalized and followed by a period.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The value parameter in the transform function is a string or undefined. If the\nvalue is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\nfirst character of the string and appends a period at the end before returning the transformed\nstring.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                An empty string is being returned if the value is falsy. Otherwise, the first character\nof the value is capitalized and followed by a period.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'capitalizeInitial',\n})\nexport class CapitalizeInitialPipe implements PipeTransform {\n  /**\n   * The function takes a string as input, capitalizes the first letter, and adds a period at the end.\n   *\n   * @param value The `value` parameter in the `transform` function is a string or undefined. If the\n   * `value` is undefined or falsy, the function returns an empty string. Otherwise, it capitalizes the\n   * first character of the string and appends a period at the end before returning the transformed\n   * string.\n   * @return An empty string is being returned if the `value` is falsy. Otherwise, the first character\n   * of the `value` is capitalized and followed by a period.\n   */\n  transform(value: string | undefined): string {\n    if (!value) {\n      return '';\n    }\n    return value.charAt(0).toUpperCase() + '.';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategoriesInfoComponent.html":{"url":"components/CategoriesInfoComponent.html","title":"component - CategoriesInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategoriesInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/categories-info/categories-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-categories-info\n            \n\n\n\n            \n                styleUrls\n                ./categories-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./categories-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScreenSmall\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                editCategory\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onEditClicked\n                            \n                            \n                                onTrashClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/categories-info/categories-info.component.ts:34\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\nInitializes the component by checking the initial screen size.\n\n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categories\n                    \n                \n                \n                    \n                        Type :         CategoryInfo[] | null | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:22\n                            \n                        \n                \n                    \n                        Represents the input property for passing category information to the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onEditClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:33\n                            \n                        \n                \n                    \n                        Represents the output property for emitting events when the edit icon is clicked for a category.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        onTrashClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/categories-info/categories-info.component.ts:27\n                            \n                        \n                \n                    \n                        Represents the output property for emitting events when the trash icon is clicked for a category.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Emits an event when the delete icon for a category is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editCategory\n                        \n                    \n                \n            \n            \n                \neditCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Emits an event when the edit icon for a category is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/categories-info/categories-info.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/categories-info/categories-info.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\n\n@Component({\n  selector: 'app-categories-info',\n  templateUrl: './categories-info.component.html',\n  styleUrls: ['./categories-info.component.scss'],\n})\nexport class CategoriesInfoComponent implements OnInit {\n  isScreenSmall: boolean = false;\n\n  /**\n   * Represents the input property for passing category information to the component.\n   **/\n  @Input() categories: CategoryInfo[] | null | undefined;\n\n  /**\n   * Represents the output property for emitting events when the trash icon is clicked for a category.\n   */\n  @Output() onTrashClicked: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * Represents the output property for emitting events when the edit icon is clicked for a category.\n   */\n  @Output() onEditClicked: EventEmitter =\n    new EventEmitter();\n\n  /**\n   * Constructs a component constructor function.\n   * Initializes the component by checking the initial screen size.\n   */\n  constructor() {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Emits an event when the delete icon for a category is clicked.\n   *\n   * @param category CategoryInfo - the category to be deleted.\n   */\n  deleteCategory(category: CategoryInfo) {\n    this.onTrashClicked.emit(category);\n  }\n\n  /**\n   * Emits an event when the edit icon for a category is clicked.\n   *\n   * @param category CategoryInfo - the category to be edited.\n   */\n  editCategory(category: CategoryInfo) {\n    this.onEditClicked.emit(category);\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n  \n\n  \n    {{'forms.name' | translate }}\n    {{'forms.description' | translate }}\n     \n    {{'forms.actions' | translate }}\n  \n\n  \n    {{category.name}}\n    {{category.description}}\n    \n    \n      \n        \n      \n      \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./categories-info.component.scss\n                \n                ion-list {\n    width: 80%;\n    margin: 3% auto;\n\n    ion-list-header {\n        --background: #0F212D;\n        --color: #fff;\n    }\n\n    .subheader {\n        ion-label {\n          font-weight: bold;\n        }\n    }\n\n    .data {\n        position: relative;\n        border-top: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n\n        &:hover {\n            border-color: #0F212D;\n        }\n\n        #actions {\n            display: flex;\n            gap: 20px;\n            cursor: pointer;\n\n        }\n    }\n}\n\n@media (max-width: 900px) {\n    .subheader {\n        ion-label {\n          margin-left: 0.2%;\n        }\n    }\n}\n\n@media (max-width: 700px) {\n    ion-list {\n        width: 100%;\n        margin-top: 5%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}        {{\\'forms.name\\' | translate }}    {{\\'forms.description\\' | translate }}         {{\\'forms.actions\\' | translate }}        {{category.name}}    {{category.description}}                                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategoriesInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/categories.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                getCategory\n                            \n                            \n                                updateCategory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/categories.service.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createCategory\n                        \n                    \n                \n            \n            \n                \ncreateCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Creates a new category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be created.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is created successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Deletes a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is deleted successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCategory\n                        \n                    \n                \n            \n            \n                \ngetCategory(categoryId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                categoryId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateCategory\n                        \n                    \n                \n            \n            \n                \nupdateCategory(category: CategoryInfo, originalName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/categories.service.ts:116\n                        \n                    \n\n\n            \n                \n                        Updates a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the updated category information.\n\n                                            \n                                        \n                                        \n                                                originalName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the original name of the category.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the category is updated successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {\n  catchError,\n  first,\n  map,\n  switchMap,\n  throwError,\n  of,\n  from,\n  take,\n} from 'rxjs';\nimport { CategoryInfo } from '../../interfaces/category-info';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoriesService {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param firebaseService FirebaseService - a service for handling Firebase-related operations.\n   */\n  constructor(private firebaseService: FirebaseService) {}\n\n  getCategory(categoryId: string) {\n    return this.firebaseService.getDocument('categoryInfo', categoryId)\n  }\n\n  /**\n   * Creates a new category.\n   *\n   * @param category CategoryInfo - the category information to be created.\n   * @returns An Observable that emits a success message if the category is created successfully, otherwise emits an error message.\n   */\n  createCategory(category: CategoryInfo): Observable {\n    return this.firebaseService.categories$.pipe(\n      first(),\n      switchMap((existingCategories) => {\n        if (existingCategories.some((c) => c.name === category.name)) {\n          return throwError(\n            () => new Error('Una categoría con este nombre ya existe.')\n          );\n        }\n        if (this.firebaseService.user) {\n          category.adminId = this.firebaseService.user.uid || '';\n          category.admin = this.firebaseService.user.email || '';\n        }\n        console.log('object');\n        return from(\n          this.firebaseService.createDocument('categoryInfo', category)\n        ).pipe(\n          switchMap((docRef) => {\n            const uuid = docRef;\n            return from(\n              this.firebaseService.updateDocument('categoryInfo', uuid, {\n                uuid,\n              })\n            ).pipe(\n              map(() => 'Categoría creada y actualizada exitosamente con UUID.')\n            );\n          })\n        );\n      }),\n      catchError((err) =>\n        throwError(\n          () => new Error('Error al crear la categoría: ' + err.message)\n        )\n      )\n    );\n  }\n\n  /**\n   * Deletes a category.\n   *\n   * @param category CategoryInfo - the category information to be deleted.\n   * @returns An Observable that emits a success message if the category is deleted successfully, otherwise emits an error message.\n   */\n  deleteCategory(category: CategoryInfo): Observable {\n    return this.firebaseService.incidents$.pipe(\n      first(),\n      switchMap((incidents) => {\n        const hasIncident = incidents.some(\n          (incident) => incident.categoryName === category.name\n        );\n        if (hasIncident) {\n          return throwError(\n            () =>\n              new Error(\n                'No se puede borrar la categoría porque tiene incidencias asociadas'\n              )\n          );\n        }\n        return this.firebaseService\n          .deleteDocument('categoryInfo', category.uuid)\n          .then(() => {\n            return 'Categoría borrada exitosamente.';\n          });\n      }),\n      catchError((err) => {\n        return throwError(\n          () => new Error(`Error al borrar la categoría: ${err.message}`)\n        );\n      })\n    );\n  }\n\n  /**\n   * Updates a category.\n   *\n   * @param category CategoryInfo - the updated category information.\n   * @param originalName string - the original name of the category.\n   * @returns An Observable that emits a success message if the category is updated successfully, otherwise emits an error message.\n   */\n  updateCategory(\n    category: CategoryInfo,\n    originalName: string\n  ): Observable {\n    return this.firebaseService.incidents$.pipe(\n      first(),\n      switchMap((incidents) => {\n        const hasIncidentWithOriginalName = incidents.some(\n          (incident) => incident.categoryName === originalName\n        );\n        if (hasIncidentWithOriginalName) {\n          return throwError(\n            () =>\n              new Error(\n                'No se puede actualizar la categoría porque tiene incidencias asociadas con su nombre original'\n              )\n          );\n        }\n        return from(\n          this.firebaseService.updateDocument(\n            'categoryInfo',\n            category.uuid,\n            category\n          )\n        ).pipe(map(() => 'Categoría actualizada exitosamente.'));\n      }),\n      catchError((err) =>\n        throwError(\n          () =>\n            new Error(\n              `Error al intentar actualizar la categoría: ${err.message}`\n            )\n        )\n      )\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CategoryInfo.html":{"url":"interfaces/CategoryInfo.html","title":"interface - CategoryInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CategoryInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/category-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            admin\n                                        \n                                \n                                \n                                        \n                                            adminId\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        admin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        admin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adminId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adminId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CategoryInfo {\n    name: string;\n    admin: string;\n    adminId: string;\n    description: string;\n    uuid: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategorySelectableComponent.html":{"url":"components/CategorySelectableComponent.html","title":"component - CategorySelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategorySelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/category-selectable/category-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                CATEGORY_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-category-selectable\n            \n\n\n\n            \n                styleUrls\n                ./category-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                categorySelected\n                            \n                            \n                                    Public\n                                categoryService\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategoryClicked\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectCategory\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                resetSignal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    category\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:46\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoriesSelectorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe CategoriesService for fetching category data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:41\n                            \n                        \n                \n                    \n                        Setter method for setting the selected category.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:30\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:178\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:142\n                        \n                    \n\n\n            \n                \n                        Clears the selected category.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:188\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Filters categories based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter categories.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:133\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategoryClicked\n                        \n                    \n                \n            \n            \n                \nonCategoryClicked(popover: IonPopover, category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:168\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a category from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected category.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:158\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering categories.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Loads categories from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:110\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectCategory(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Selects a category by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the category to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:99\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorySelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categoryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoriesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:55\n                        \n                    \n\n            \n                \n                    - The CategoriesService for fetching category data.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:56\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:46\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n\n                \n                    \n                        setcategory(_category: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/category-selectable/category-selectable.component.ts:41\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected category.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _category\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected category.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  SimpleChanges,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const CATEGORY_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-category-selectable',\n  templateUrl: './category-selectable.component.html',\n  styleUrls: ['./category-selectable.component.scss'],\n  providers: [CATEGORY_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class CategorySelectableComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  categorySelected: any | undefined;\n  disabled: boolean = true;\n  categories: any[] = [];\n\n  /**\n   * Setter method for setting the selected category.\n   *\n   * @param _category - The selected category.\n   */\n  @Input() set category(_category: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of CategoriesSelectorComponent.\n   *\n   * @param categoryService - The CategoriesService for fetching category data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public categoryService: CategoriesService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads categories from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.categories$.subscribe({\n        next: (categories) => {\n          this.categories = categories;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a category by its ID.\n   *\n   * @param id - The ID of the category to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectCategory(\n    id: string | undefined,\n    propagate: boolean = false\n  ) {\n    if (id) {\n      await this.categoryService.getCategory(id).then((category) => {\n        this.categorySelected = category;\n      });\n    } else this.categorySelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.categorySelected.data.name);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectCategory(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected category.\n   */\n  clearSelection() {\n    this.categorySelected = undefined;\n  }\n\n  /**\n   * Filters categories based on a search value.\n   *\n   * @param value - The search value to filter categories.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering categories.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a category from the list.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   * @param category - The selected category.\n   */\n  onCategoryClicked(popover: IonPopover, category: any) {\n    this.selectCategory(category.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected category.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectCategory(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n    {{categorySelected.data.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./category-selectable.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}    {{categorySelected.data.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategorySelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CategorySelectableMobileComponent.html":{"url":"components/CategorySelectableMobileComponent.html","title":"component - CategorySelectableMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CategorySelectableMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-category-selectable-mobile\n            \n\n\n\n            \n                styleUrls\n                ./category-selectable-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./category-selectable-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categories\n                            \n                            \n                                categorySelected\n                            \n                            \n                                    Public\n                                categoryService\n                            \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCategoryClicked\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectCategory\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                category\n                            \n                            \n                                resetSignal\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    category\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryService: CategoriesService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of CategoriesSelectorComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe CategoriesService for fetching category data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:34\n                            \n                        \n                \n                    \n                        Setter method for setting the selected category.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:23\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:171\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:135\n                        \n                    \n\n\n            \n                \n                        Clears the selected category.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:181\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:144\n                        \n                    \n\n\n            \n                \n                        Filters categories based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter categories.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:126\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCategoryClicked\n                        \n                    \n                \n            \n            \n                \nonCategoryClicked(popover: IonPopover, category: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a category from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the category list.\n\n\n                                            \n                                        \n                                        \n                                                category\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected category.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering categories.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Loads categories from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:112\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectCategory(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Selects a category by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the category to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:119\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        categories\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        categorySelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        categoryService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CategoriesService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:48\n                        \n                    \n\n            \n                \n                    - The CategoriesService for fetching category data.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:49\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:39\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        category\n                    \n                \n\n\n                \n                    \n                        setcategory(_category: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts:34\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected category.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _category\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected category.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableMobileComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-category-selectable-mobile',\n  templateUrl: './category-selectable-mobile.component.html',\n  styleUrls: ['./category-selectable-mobile.component.scss'],\n  providers: [CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR]\n})\nexport class CategorySelectableMobileComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  categorySelected: any | undefined;\n  disabled: boolean = true;\n  categories: any[] = [];\n\n  /**\n   * Setter method for setting the selected category.\n   *\n   * @param _category - The selected category.\n   */\n  @Input() set category(_category: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of CategoriesSelectorComponent.\n   *\n   * @param categoryService - The CategoriesService for fetching category data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public categoryService: CategoriesService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads categories from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.categories$.subscribe({\n        next: (categories) => {\n          this.categories = categories;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a category by its ID.\n   *\n   * @param id - The ID of the category to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectCategory(\n    id: string | undefined,\n    propagate: boolean = false\n  ) {\n    if (id) {\n      await this.categoryService.getCategory(id).then((category) => {\n        this.categorySelected = category;\n      });\n    } else this.categorySelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.categorySelected.data.name);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectCategory(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected category.\n   */\n  clearSelection() {\n    this.categorySelected = undefined;\n  }\n\n  /**\n   * Filters categories based on a search value.\n   *\n   * @param value - The search value to filter categories.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering categories.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a category from the list.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   * @param category - The selected category.\n   */\n  onCategoryClicked(popover: IonPopover, category: any) {\n    this.selectCategory(category.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected category.\n   *\n   * @param popover - The IonPopover component for displaying the category list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectCategory(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.categories' | translate}}\n    {{categorySelected.data.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./category-selectable-mobile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.categories\\' | translate}}    {{categorySelected.data.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CategorySelectableMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmDialogComponent.html":{"url":"components/ConfirmDialogComponent.html","title":"component - ConfirmDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-confirm-dialog\n            \n\n\n\n            \n                styleUrls\n                ./confirm-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./confirm-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancel\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, message: any, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialogRef - a reference to the dialog component.\n\n                                                        \n                                                \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                string - the message to be displayed in the dialog.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancel\n                        \n                    \n                \n            \n            \n                \ncancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Closes the dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:18\n                        \n                    \n\n            \n                \n                    MatDialogRef - a reference to the dialog component.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/confirm-dialog/confirm-dialog.component.ts:20\n                        \n                    \n\n            \n                \n                    string - the message to be displayed in the dialog.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-confirm-dialog',\n  templateUrl: './confirm-dialog.component.html',\n  styleUrls: ['./confirm-dialog.component.scss'],\n})\nexport class ConfirmDialogComponent implements OnInit {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param dialogRef MatDialogRef - a reference to the dialog component.\n   * @param message string - the message to be displayed in the dialog.\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA)\n    public message: any,\n    private translate: CustomTranslateService,\n  ) {}\n\n  ngOnInit() {\n    console.log(this.message.message);\n    let message = `dialog.${this.message.message}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.message = text\n      },\n    });\n  }\n\n  /**\n   * Closes the dialog.\n   */\n  cancel() {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  {{message}}\n\n\n  {{'dialog.no' | translate}}\n  {{'dialog.yes' | translate}}\n\n\n    \n\n    \n                \n                    ./confirm-dialog.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{message}}  {{\\'dialog.no\\' | translate}}  {{\\'dialog.yes\\' | translate}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomTranslateService.html":{"url":"injectables/CustomTranslateService.html","title":"injectable - CustomTranslateService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CustomTranslateService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/translate/translate.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _language\n                            \n                            \n                                    Public\n                                language$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                getCurrentLang\n                            \n                            \n                                    Private\n                                    Async\n                                init\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/translate/translate.service.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor initializes the TranslateService and calls the init() method.\nTranslateService class, which is likely used for handling translations in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe translate parameter is an instance of the\nTranslateService class, which is likely used for handling translations in the application.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:57\n                        \n                    \n\n\n            \n                \n                        The function get returns an Observable that retrieves a translated string based on a given key.\ntranslation value from the translation service.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe key parameter is a string that represents the key used to retrieve a\ntranslation value from the translation service.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable of type string is being returned.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentLang\n                        \n                    \n                \n            \n            \n                \ngetCurrentLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:47\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        init\n                        \n                    \n                \n            \n            \n                \n                        \n                    init()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:26\n                        \n                    \n\n\n            \n                \n                        The init function initializes language settings by adding languages and setting a default\nlanguage.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(language: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/translate/translate.service.ts:37\n                        \n                    \n\n\n            \n                \n                        The function use in TypeScript sets the language for translation and updates the language\nsubject accordingly.\nrepresenting the language to be used for translation.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                language\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe use function takes a language parameter, which is a string\nrepresenting the language to be used for translation.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _language\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(\n    'es'\n  )\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/translate.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        language$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._language.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/translate.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BehaviorSubject, Observable, lastValueFrom, tap } from 'rxjs';\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomTranslateService {\n  private _language: BehaviorSubject = new BehaviorSubject(\n    'es'\n  );\n  public language$ = this._language.asObservable();\n\n  /**\n   * The constructor initializes the TranslateService and calls the init() method.\n   * @param {TranslateService} translate - The `translate` parameter is an instance of the\n   * `TranslateService` class, which is likely used for handling translations in the application.\n   */\n  constructor(private translate: TranslateService) {\n    this.init();\n  }\n\n  /**\n   * The `init` function initializes language settings by adding languages and setting a default\n   * language.\n   */\n  private async init() {\n    this.translate.addLangs(['es', 'en']);\n    this.translate.setDefaultLang(this._language.value);\n  }\n\n  /**\n   * The function `use` in TypeScript sets the language for translation and updates the language\n   * subject accordingly.\n   * @param {string} language - The `use` function takes a `language` parameter, which is a string\n   * representing the language to be used for translation.\n   */\n  use(language: string) {\n    lastValueFrom(this.translate.use(language))\n      .then((_) => {\n        this._language.next(language);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  }\n\n  getCurrentLang(): string {\n    return this._language.getValue();\n  }\n\n  /**\n   * The function `get` returns an Observable that retrieves a translated string based on a given key.\n   * @param {string} key - The `key` parameter is a string that represents the key used to retrieve a\n   * translation value from the translation service.\n   * @returns An Observable of type string is being returned.\n   */\n  get(key: string): Observable {\n    return this.translate.get(key);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DataPage.html":{"url":"components/DataPage.html","title":"component - DataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/data/data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-data\n            \n\n\n\n            \n                styleUrls\n                ./data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createCategory\n                            \n                            \n                                deleteCategory\n                            \n                            \n                                    Public\n                                downloadCSV\n                            \n                            \n                                    Async\n                                editCategory\n                            \n                            \n                                exportData\n                            \n                            \n                                    Public\n                                jsonToCSV\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, router: Router, _categoryService: CategoriesService, translate: CustomTranslateService, messageService: MessageService, dialog: MatDialog, myModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/data/data.page.ts:22\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router - an instance of the Angular Router service used for navigating between different components.\n\n                                                        \n                                                \n                                                \n                                                        _categoryService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CategoriesService - a service for managing categories.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MessageService - a service for displaying messages or notifications to the user within the application.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog - a service for displaying dialog boxes.\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ModalController - a service for managing modal dialogs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    createCategory()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:179\n                        \n                    \n\n\n            \n                \n                        Opens a modal dialog for creating a new category.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteCategory\n                        \n                    \n                \n            \n            \n                \ndeleteCategory(info: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:210\n                        \n                    \n\n\n            \n                \n                        Deletes a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category to delete.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        downloadCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    downloadCSV(csvContent: string, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:105\n                        \n                    \n\n\n            \n                \n                        Initiates the download of a CSV file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                csvContent\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe CSV content to be downloaded.\n\n\n                                            \n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the CSV file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        editCategory\n                        \n                    \n                \n            \n            \n                \n                        \n                    editCategory(info: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:154\n                        \n                    \n\n\n            \n                \n                        Opens a modal dialog for editing a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be edited.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportData\n                        \n                    \n                \n            \n            \n                \nexportData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:54\n                        \n                    \n\n\n            \n                \n                        Method to export data to CSV format.\nFetches data from Firebase, converts it to CSV format, and initiates CSV file downloads.\nThis method retrieves data from Firebase using the FirebaseService, converts it to CSV format,\nand initiates the download of CSV files for each dataset.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        jsonToCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    jsonToCSV(dataObject: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:75\n                        \n                    \n\n\n            \n                \n                        Converts JSON data to CSV format.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataObject\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe JSON data object to be converted to CSV.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                An object containing CSV content for each dataset.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDialog\n                        \n                    \n                \n            \n            \n                \nopenDialog(category: CategoryInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:127\n                        \n                    \n\n\n            \n                \n                        Opens a confirmation dialog for deleting a category.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                category\n                                            \n                                                            CategoryInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    CategoryInfo - the category information to be deleted.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:249\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:229\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userInfo\n                        \n                    \n                \n            \n            \n                \nuserInfo(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/data.page.ts:145\n                        \n                    \n\n\n            \n                \n                        Navigates to the user information page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/data.page.ts:40\n                        \n                    \n\n            \n                \n                    MatDialog - a service for displaying dialog boxes.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { MessageService } from 'primeng/api';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\nimport { CategoriesService } from 'src/app/core/services/api/categories.service';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\nimport { ModalController } from '@ionic/angular';\nimport { ModalCategoryComponent } from './modal-category/modal-category.component';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\n\n@Component({\n  selector: 'app-data',\n  templateUrl: './data.page.html',\n  styleUrls: ['./data.page.scss'],\n  providers: [MessageService],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DataPage implements OnInit {\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param router Router - an instance of the Angular Router service used for navigating between different components.\n   * @param _categoryService CategoriesService - a service for managing categories.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   * @param messageService MessageService - a service for displaying messages or notifications to the user within the application.\n   * @param dialog MatDialog - a service for displaying dialog boxes.\n   * @param myModal ModalController - a service for managing modal dialogs.\n   */\n  constructor(\n    protected _firebaseService: FirebaseService,\n    private router: Router,\n    private _categoryService: CategoriesService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    public dialog: MatDialog,\n    private myModal: ModalController\n  ) {}\n\n  ngOnInit() {}\n\n  /**\n   * Method to export data to CSV format.\n   * Fetches data from Firebase, converts it to CSV format, and initiates CSV file downloads.\n   *\n   * @remarks\n   * This method retrieves data from Firebase using the FirebaseService, converts it to CSV format,\n   * and initiates the download of CSV files for each dataset.\n   */\n  exportData(): void {\n    this._firebaseService\n      .getAllData()\n      .then((dataObject) => {\n        const csvFiles = this.jsonToCSV(dataObject);\n        for (const key in csvFiles) {\n          if (csvFiles.hasOwnProperty(key)) {\n            const csvContent = csvFiles[key];\n            this.downloadCSV(csvContent, `${key}.csv`);\n          }\n        }\n      })\n      .catch((error) => console.error('Failed to fetch data', error));\n  }\n\n  /**\n   * Converts JSON data to CSV format.\n   *\n   * @param dataObject - The JSON data object to be converted to CSV.\n   * @returns An object containing CSV content for each dataset.\n   */\n  public jsonToCSV(dataObject: { [key: string]: any[] }): {\n    [key: string]: string;\n  } {\n    const csvFiles: { [key: string]: string } = {};\n\n    for (const key in dataObject) {\n      if (dataObject.hasOwnProperty(key) && dataObject[key].length > 0) {\n        const headers = Object.keys(dataObject[key][0]);\n        const csvRows = dataObject[key].map((row) =>\n          headers\n            .map((fieldName) =>\n              JSON.stringify(row[fieldName], (key, value) =>\n                value == null ? '' : value\n              )\n            )\n            .join(',')\n        );\n        csvRows.unshift(headers.join(','));\n        csvFiles[key] = csvRows.join('\\r\\n');\n      }\n    }\n    return csvFiles;\n  }\n\n  /**\n   * Initiates the download of a CSV file.\n   *\n   * @param csvContent - The CSV content to be downloaded.\n   * @param filename - The name of the CSV file.\n   */\n  public downloadCSV(csvContent: string, filename: string): void {\n    if (!csvContent) {\n      console.error('No CSV content available for download.');\n      return;\n    }\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const url = URL.createObjectURL(blob);\n    const link = document.createElement('a');\n    link.href = url;\n    link.download = filename;\n    link.style.display = 'none';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n    URL.revokeObjectURL(url);\n  }\n\n  /**\n   * Opens a confirmation dialog for deleting a category.\n   *\n   * @param category CategoryInfo - the category information to be deleted.\n   */\n  openDialog(category: CategoryInfo): void {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      data: { message: 'delete' },\n    });\n\n    dialogRef.afterClosed().subscribe((result) => {\n      if (result) {\n        this.deleteCategory(category);\n      }\n    });\n  }\n\n  /**\n   * Navigates to the user information page.\n   *\n   * @param userId string - the ID of the user.\n   */\n  userInfo(userId: string) {\n    this.router.navigate([`/data/user/${userId}`]);\n  }\n\n  /**\n   * Opens a modal dialog for editing a category.\n   *\n   * @param info CategoryInfo - the category information to be edited.\n   */\n  async editCategory(info: CategoryInfo) {\n    const mod = await this.myModal.create({\n      component: ModalCategoryComponent,\n      componentProps: {\n        categoryInfo: info,\n        mode: 'update',\n      },\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results?.data) {\n        this._categoryService\n          .updateCategory(results?.data, info.name)\n          .subscribe({\n            next: (_) => this.showSuccess('good'),\n            error: (_) => this.showError('cant'),\n          });\n      }\n    }\n  }\n\n  /**\n   * Opens a modal dialog for creating a new category.\n   */\n  async createCategory() {\n    const mod = await this.myModal.create({\n      component: ModalCategoryComponent,\n      componentProps: {\n        categoryInfo: null,\n        mode: 'create',\n      },\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results?.data) {\n        this._categoryService.createCategory(results?.data).subscribe({\n          next: async (_) => {\n            this.showSuccess('good');\n            await Haptics.impact({ style: ImpactStyle.Medium });\n          },\n          error: async (_) => {\n            this.showError('cant');\n            await Haptics.impact({ style: ImpactStyle.Heavy });\n          },\n        });\n      }\n    }\n  }\n\n  /**\n   * Deletes a category.\n   *\n   * @param info CategoryInfo - the category to delete.\n   */\n  deleteCategory(info: CategoryInfo) {\n    this._categoryService.deleteCategory(info).subscribe({\n      next: async (_) => {\n        this.showSuccess('good');\n        await Haptics.impact({ style: ImpactStyle.Medium });\n      },\n      error: async (_) => {\n        this.showError('cant');\n        await Haptics.impact({ style: ImpactStyle.Heavy });\n      },\n    });\n  }\n\n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'success',\n          detail: text,\n        });\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n        {{'data.data' | translate}}\n      \n\n      \n        {{ \"data.download\" | translate }}\n      \n\n      \n\n      \n        {{ \"data.create\" | translate }}\n      \n\n      \n\n      \n        +\n      \n    \n  \n    \n      \n      \n        \n        {{'data.graphic' | translate}}\n      \n\n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n\n    \n  \n\n  \n\n\n    \n\n    \n                \n                    ./data.page.scss\n                \n                ion-icon {\n    margin-right: 8px;\n}\n\n.category-mobile {\n    display: none;\n\n    button {\n        padding: 1rem;\n        border: none;\n        border-radius: 4px;\n        background-color: #0F212D;\n        color: white;\n        font-weight: bold;\n        cursor: pointer;\n\n        &:hover {\n            background-color: #1b3e56;\n        }\n\n        &:disabled {\n            background-color: #cccccc;\n            color: #777777;\n            cursor: not-allowed;\n        }\n    }\n}\n\n.graphics {\n    margin-top: 3%;\n}\n\napp-user-circle-graphic {\n    display: block;\n    max-width: 300px;\n    margin: 0 auto;\n    height: auto;\n}\n\napp-incidents-circle-graphic {\n    display: block;\n    max-width: 300px;\n    margin: 0 auto;\n    height: auto;\n}\n\n.category-button {\n    position: fixed;\n    bottom: 10px;\n    right: 20px;\n    width: 50px;\n    height: 50px;\n    padding: 0;\n    background-color: #0F212D;\n    color: white;\n    border-radius: 50%;\n    cursor: pointer;\n    font-size: 24px;\n    line-height: 50px;\n    text-align: center;\n\n    &:hover {\n        box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.25);\n    }\n}\n\n.download-data {\n    margin-top: 30px;\n    display: flex;\n    justify-content: center;\n\n    button {\n        padding: 1rem;\n        border: none;\n        border-radius: 4px;\n        background-color: #0F212D;\n        color: white;\n        font-weight: bold;\n        cursor: pointer;\n\n        &:hover {\n            background-color: #1b3e56;\n        }\n\n        &:disabled {\n            background-color: #cccccc;\n            color: #777777;\n            cursor: not-allowed;\n        }\n    }\n}\n\n\n@media (max-width: 700px) {\n    .category-mobile {\n        margin-top: 80px;\n        margin-bottom: -10px;\n        display: flex;\n        justify-content: center;\n    }\n\n    .category-button {\n        display: none;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{\\'data.data\\' | translate}}                    {{ \"data.download\" | translate }}                          {{ \"data.create\" | translate }}                          +                                            {{\\'data.graphic\\' | translate}}                                                                                                          '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataPageModule.html":{"url":"modules/DataPageModule.html","title":"module - DataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    DataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataPageModule\n\n\n\ncluster_DataPageModule_imports\n\n\n\ncluster_DataPageModule_declarations\n\n\n\n\nDataPage\n\nDataPage\n\n\n\nDataPageModule\n\nDataPageModule\n\nDataPageModule -->\n\nDataPage->DataPageModule\n\n\n\n\n\nModalCategoryComponent\n\nModalCategoryComponent\n\nDataPageModule -->\n\nModalCategoryComponent->DataPageModule\n\n\n\n\n\nDataPageRoutingModule\n\nDataPageRoutingModule\n\nDataPageModule -->\n\nDataPageRoutingModule->DataPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DataPage\n                        \n                        \n                            ModalCategoryComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DataPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DataPageRoutingModule } from './data-routing.module';\n\nimport { DataPage } from './data.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { ToastModule } from 'primeng/toast';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { ModalCategoryComponent } from './modal-category/modal-category.component';\nimport { AccordionModule } from 'primeng/accordion';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    // Reactive form\n    ReactiveFormsModule,\n    IonicModule,\n    DataPageRoutingModule,\n    SharedModule,\n    MatTabsModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n    // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    SharedModule,\n    AccordionModule\n  ],\n  declarations: [\n    DataPage,\n    ModalCategoryComponent\n  ]\n})\nexport class DataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataPageRoutingModule.html":{"url":"modules/DataPageRoutingModule.html","title":"module - DataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    DataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/data/data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DataPage } from './data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataService.html":{"url":"injectables/DataService.html","title":"injectable - DataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:48\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deletes an item from a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to delete the item from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the deleted item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:25\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a single item from a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to retrieve the item from.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the retrieved item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:33\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Creates a new item on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to create the item on.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData for creating the item.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the created item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:41\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Updates an existing item on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to update the item on.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nData for updating the item.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the updated item.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/data.service.ts:15\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Executes a query operation on a resource.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe resource to query.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nParameters for the query.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Observable emitting the paginated data resulting from the query.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { PaginatedData } from '../interfaces/data';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class DataService {\n  /**\n   * Executes a query operation on a resource.\n   * @param {string} resource - The resource to query.\n   * @param {any} params - Parameters for the query.\n   * @returns {Observable>} Observable emitting the paginated data resulting from the query.\n   */\n  public abstract query(\n    resource: string,\n    params: any\n  ): Observable>;\n\n  /**\n   * Retrieves a single item from a resource.\n   * @param {string} resource - The resource to retrieve the item from.\n   * @returns {Observable} Observable emitting the retrieved item.\n   */\n  public abstract get(resource: string): Observable;\n\n  /**\n   * Creates a new item on a resource.\n   * @param {string} resource - The resource to create the item on.\n   * @param {any} data - Data for creating the item.\n   * @returns {Observable} Observable emitting the created item.\n   */\n  public abstract post(resource: string, data: any): Observable;\n\n  /**\n   * Updates an existing item on a resource.\n   * @param {string} resource - The resource to update the item on.\n   * @param {any} data - Data for updating the item.\n   * @returns {Observable} Observable emitting the updated item.\n   */\n  public abstract put(resource: string, data: any): Observable;\n\n  /**\n   * Deletes an item from a resource.\n   * @param {string} resource - The resource to delete the item from.\n   * @returns {Observable} Observable emitting the deleted item.\n   */\n  public abstract delete(resource: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailValidation.html":{"url":"classes/EmailValidation.html","title":"class - EmailValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/email.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                email\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        email\n                        \n                    \n                \n            \n            \n                \n                        \n                    email(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/email.ts:14\n                        \n                    \n\n\n            \n                \n                        Validates an email control.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe name of the control to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for email validation.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbstractControl,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\n\nexport class EmailValidation {\n  /**\n   * Validates an email control.\n   * @param {string} controlName - The name of the control to validate.\n   * @returns {ValidatorFn} Validator function for email validation.\n   */\n  public static email(controlName: string = ''): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      let email = '';\n      if (control instanceof FormControl) email = control?.value;\n      else email = control.get(controlName)?.value;\n      if (\n        email &&\n        !email.match(/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/)\n      ) {\n        return { email: true };\n      } else {\n        return null;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterComponent.html":{"url":"components/FilterComponent.html","title":"component - FilterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/filter/filter.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter\n            \n\n\n\n            \n                styleUrls\n                ./filter.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resetFilters\n                            \n                            \n                                setFilters\n                            \n                            \n                                subscribeToFilterState\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChanged\n                            \n                            \n                                resetRequested\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/filter/filter.component.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of FilterComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FilterService for managing filter state.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter/filter.component.ts:24\n                            \n                        \n                \n                    \n                        Event emitter for signaling filter changes.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resetRequested\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter/filter.component.ts:19\n                            \n                        \n                \n                    \n                        EventEmitter for emitting a signal to reset filters.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Initializes the form with the initial filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nInitializes the form and subscribes to changes in filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFilters\n                        \n                    \n                \n            \n            \n                \nresetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Resets the filter settings to their default values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilters\n                        \n                    \n                \n            \n            \n                \nsetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:88\n                        \n                    \n\n\n            \n                \n                        Applies the current filter settings.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToFilterState\n                        \n                    \n                \n            \n            \n                \nsubscribeToFilterState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter/filter.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Subscribes to changes in the filter state and updates the form accordingly.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/filter/filter.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormBuilder,\n  Validators,\n  FormControl,\n} from '@angular/forms';\nimport { FilterService } from 'src/app/core/services/filter/filter.service';\n\n@Component({\n  selector: 'app-filter',\n  templateUrl: './filter.component.html',\n  styleUrls: ['./filter.component.scss'],\n})\nexport class FilterComponent implements OnInit {\n  /**\n   * EventEmitter for emitting a signal to reset filters.\n   */\n  @Output() resetRequested = new EventEmitter();\n\n  /**\n   * Event emitter for signaling filter changes.\n   */\n  @Output() filterChanged = new EventEmitter();\n\n  form: FormGroup;\n\n  /**\n   * Creates an instance of FilterComponent.\n   *\n   * @param filterService - The FilterService for managing filter state.\n   */\n  constructor(private filterService: FilterService) {\n    this.form = new FormGroup({\n      categoryName: new FormControl(undefined),\n      userId: new FormControl(undefined),\n      checked: new FormControl(false),\n      resolved: new FormControl(false),\n    });\n    this.subscribeToFilterState();\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Initializes the form and subscribes to changes in filter state.\n   */\n  ngOnInit() {\n    this.initForm();\n    this.subscribeToFilterState();\n  }\n\n  /**\n   * Initializes the form with the initial filter state.\n   */\n  initForm() {\n    const initialFormState = this.filterService.getFilter().value;\n    if (initialFormState) {\n      this.form = new FormGroup({\n        categoryName: new FormControl(initialFormState?.get('categoryName')?.value),\n        userId: new FormControl(initialFormState.get('userId')?.value),\n        checked: new FormControl(initialFormState.get('checked')?.value),\n        resolved: new FormControl(initialFormState.get('resolved')?.value),\n      });\n    } else {\n      this.form = new FormGroup({\n        categoryName: new FormControl(undefined),\n        userId: new FormControl(undefined),\n        checked: new FormControl(false),\n        resolved: new FormControl(false),\n      });\n    }\n  }\n\n  /**\n   * Subscribes to changes in the filter state and updates the form accordingly.\n   */\n  subscribeToFilterState() {\n    this.filterService.getFilter().subscribe((formState) => {\n      if (formState && this.form !== formState) {\n        this.form.setValue(formState.value, { emitEvent: false });\n      }\n    });\n  }\n\n  /**\n   * Applies the current filter settings.\n   */\n  setFilters() {\n    console.log(this.form.value);\n    this.filterService.updateFilterState(this.form);\n  }\n\n  /**\n   * Resets the filter settings to their default values.\n   */\n  resetFilters() {\n    this.form.reset({\n      categoryName: undefined,\n      userId: undefined,\n      checked: false,\n      resolved: false,\n    });\n    this.filterService.updateFilterState(this.form);\n    this.resetRequested.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      \n\n      Vistos\n      Resueltos\n    \n    \n      {{'filter.reset' | translate}}\n      {{'filter.apply' | translate}}\n    \n  \n\n    \n\n    \n                \n                    ./filter.component.scss\n                \n                .filter {\n    flex-direction: column;\n    align-items: center;\n    padding: 10px;\n    width: 80%;\n    border-radius: 0.5rem;\n    margin: 2% auto;\n    box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n\n    .form-controls {\n        display: flex;\n        justify-content: space-between;\n        width: 100%;\n        margin-bottom: 20px;\n        gap: 20px;\n\n        app-category-selectable,\n        app-user-selectable {\n            flex: 2;\n            max-width: 100%\n        }\n\n        mat-checkbox {\n            flex: 1;\n            max-width: 100%;\n        }\n    }\n\n\n\n    .form-actions {\n        display: flex;\n        justify-content: flex-end;\n        align-items: center;\n        width: 100%;\n        gap: 20px;\n        padding: 10px 0;\n\n        button {\n            margin-left: 10px;\n            border-radius: 20px;\n            padding: 8px 60px;\n            font-size: 16px;\n        }\n\n        .reset--button {\n            background-color: #BD1E1E;\n            color: #fff;\n            font-weight: bold;\n\n            &:disabled {\n                background-color: #cccccc;\n                color: #777777;\n                cursor: not-allowed;\n            }\n        }\n\n        .apply--button {\n            background-color: #0F212D;\n            color: #fff;\n            font-weight: bold;\n        }\n    }\n\n    @media (max-width: 850px) {\n        width: 95%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Vistos      Resueltos              {{\\'filter.reset\\' | translate}}      {{\\'filter.apply\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FilterMobileComponent.html":{"url":"components/FilterMobileComponent.html","title":"component - FilterMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FilterMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/filter-mobile/filter-mobile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-filter-mobile\n            \n\n\n\n            \n                styleUrls\n                ./filter-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filter-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initForm\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                resetFilters\n                            \n                            \n                                setFilters\n                            \n                            \n                                subscribeToFilterState\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filterChanged\n                            \n                            \n                                resetRequested\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController, filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of FiltersComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FormBuilder service for building form instances.\n\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController - a service for managing modal dialogs.\n\n\n                                                        \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service for managing filter service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filterChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        resetRequested\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:15\n                            \n                        \n                \n                    \n                        EventEmitter for emitting a signal to reset filters.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        initForm\n                        \n                    \n                \n            \n            \n                \ninitForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Initializes the form with the initial filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nInitializes the form and subscribes to changes in the filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Method executed when the cancel action is triggered.\nDismisses the modal without passing any data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetFilters\n                        \n                    \n                \n            \n            \n                \nresetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Resets the filter settings to their default values and dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setFilters\n                        \n                    \n                \n            \n            \n                \nsetFilters()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Applies the current filter settings and dismisses the modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToFilterState\n                        \n                    \n                \n            \n            \n                \nsubscribeToFilterState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Subscribes to changes in the filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/filter-mobile/filter-mobile.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { FilterService } from 'src/app/core/services/filter/filter.service';\n\n@Component({\n  selector: 'app-filter-mobile',\n  templateUrl: './filter-mobile.component.html',\n  styleUrls: ['./filter-mobile.component.scss'],\n})\nexport class FilterMobileComponent implements OnInit {\n  /**\n   * EventEmitter for emitting a signal to reset filters.\n   */\n  @Output() resetRequested = new EventEmitter();\n\n  @Output() filterChanged = new EventEmitter();\n\n  form: FormGroup;\n\n  /**\n   * Creates an instance of FiltersComponent.\n   *\n   * @param formBuilder - The FormBuilder service for building form instances.\n   * @param modal - The ModalController - a service for managing modal dialogs.\n   * @param filterService - A service for managing filter service.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private filterService: FilterService\n  ) {\n    this.form = this.formBuilder.group({\n      categoryName: [undefined],\n      userId: [undefined],\n      checked: [false],\n      resolved: [false],\n    });\n  }\n\n  /**\n   * Method executed when the cancel action is triggered.\n   * Dismisses the modal without passing any data.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Initializes the form and subscribes to changes in the filter state.\n   */\n  ngOnInit() {\n    this.initForm();\n    this.subscribeToFilterState();\n  }\n\n  /**\n   * Initializes the form with the initial filter state.\n   */\n  initForm() {\n    const initialFormState = this.filterService.getFilter().value;\n    if (initialFormState) {\n      this.form = new FormGroup({\n        categoryName: new FormControl(initialFormState?.get('categoryName')?.value),\n        userId: new FormControl(initialFormState.get('userId')?.value),\n        checked: new FormControl(initialFormState.get('checked')?.value),\n        resolved: new FormControl(initialFormState.get('resolved')?.value),\n      });\n    } else {\n      this.form = new FormGroup({\n        categoryName: new FormControl(undefined),\n        userId: new FormControl(undefined),\n        checked: new FormControl(false),\n        resolved: new FormControl(false),\n      });\n    }\n  }\n\n  /**\n   * Subscribes to changes in the filter state.\n   */\n  subscribeToFilterState() {\n    this.filterService.getFilter().subscribe((formState) => {\n      if (formState && this.form !== formState) {\n        this.form.setValue(formState.value);\n      }\n    });\n  }\n\n  /**\n   * Applies the current filter settings and dismisses the modal.\n   */\n  setFilters() {\n    console.log(this.form.value);\n    this.modal.dismiss(null);\n    this.filterService.updateFilterState(this.form);\n  }\n\n  /**\n   * Resets the filter settings to their default values and dismisses the modal.\n   */\n  resetFilters() {\n    this.form.reset({\n      categoryName: undefined,\n      userId: undefined,\n      checked: false,\n      resolved: false,\n    });\n    this.modal.dismiss('reset');\n    this.filterService.updateFilterState(this.form);\n    this.resetRequested.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n  \n\n\n\n  \n    \n      \n        \n        \n\n        Vistos\n        Resueltos\n      \n      \n        {{'filter.reset' | translate}}\n        {{'filter.apply' | translate}}\n      \n    \n  \n\n    \n\n    \n                \n                    ./filter-mobile.component.scss\n                \n                .filter {\n    display: flex;\n    flex-direction: column;\n    padding: 3%;\n\n    .form-controls {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        width: 100%;\n        margin-bottom: 20px;\n        gap: 20px;\n\n        mat-checkbox {\n            flex: 1;\n            max-width: 100%;\n        }\n    }\n\n\n\n    .form-actions {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        width: 100%;\n        gap: 20px;\n\n        button {\n            border-radius: 20px;\n            padding: 8px 60px;\n            font-size: 16px;\n        }\n\n        .reset--button {\n            background-color: #BD1E1E;\n            color: #fff;\n            font-weight: bold;\n\n            &:disabled {\n                background-color: #cccccc;\n                color: #777777;\n                cursor: not-allowed;\n            }\n        }\n\n        .apply--button {\n            background-color: #0F212D;\n            color: #fff;\n            font-weight: bold;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                      Vistos        Resueltos                    {{\\'filter.reset\\' | translate}}        {{\\'filter.apply\\' | translate}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FilterMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilterService.html":{"url":"injectables/FilterService.html","title":"injectable - FilterService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/filter/filter.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                filterState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getFilter\n                            \n                            \n                                initializeState\n                            \n                            \n                                updateFilterState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getFilter\n                        \n                    \n                \n            \n            \n                \ngetFilter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/filter/filter.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Retrieves the current filter state as a BehaviorSubject.\n\n\n                        \n                            Returns :     BehaviorSubject\n\n                        \n                            \n                                A BehaviorSubject containing the current filter state.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initializeState\n                        \n                    \n                \n            \n            \n                \ninitializeState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/filter/filter.service.ts:32\n                        \n                    \n\n\n            \n                \n                        Initializes the filter state with default values.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilterState\n                        \n                    \n                \n            \n            \n                \nupdateFilterState(form: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/filter/filter.service.ts:16\n                        \n                    \n\n\n            \n                \n                        Updates the filter state with the provided form.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                form\n                                            \n                                                        FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe form containing the updated filter settings.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        filterState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/filter/filter.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilterService {\n  private filterState = new BehaviorSubject(null);\n\n  /**\n   * Updates the filter state with the provided form.\n   *\n   * @param form - The form containing the updated filter settings.\n   */\n  updateFilterState(form: FormGroup) {\n    this.filterState.next(form);\n  }\n\n  /**\n   * Retrieves the current filter state as a BehaviorSubject.\n   *\n   * @returns A BehaviorSubject containing the current filter state.\n   */\n  getFilter(): BehaviorSubject {\n    return this.filterState;\n  }\n\n  /**\n   * Initializes the filter state with default values.\n   */\n  initializeState() {\n    const initialForm = new FormGroup({\n      categoryName: new FormControl(undefined),\n      userId: new FormControl(undefined),\n      checked: new FormControl(false),\n      resolved: new FormControl(false),\n    });\n    this.filterState.next(initialForm);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseAuthService.html":{"url":"classes/FirebaseAuthService.html","title":"class - FirebaseAuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseAuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-auth.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            AuthService\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _logged\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                isLogged$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                login\n                            \n                            \n                                    Public\n                                logout\n                            \n                            \n                                    Public\n                                me\n                            \n                            \n                                    Private\n                                postRegister\n                            \n                            \n                                    Public\n                                register\n                            \n                            \n                                    Public\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseSvc: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-auth.service.ts:10\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseAuthService class. It subscribes to the isLogged$ observable from the FirebaseService to\nautomatically handle changes in the authentication state. If the user is logged in, it attempts to fetch the user's data.\nIf not logged in, it sets _logged and _user to false and null, respectively.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _logged\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isLogged$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._logged.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         AuthService\n\n                            \n                        \n                    \n                        \n                                Defined in         AuthService:12\n\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(credentials: UserCredentials)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:44\n\n                        \n                    \n\n\n            \n                \n                        Logs in a user using their credentials. Attempts to connect the user through Firebase using email and password.\nIf authentication fails or if a valid UID for the user is not received, it emits an error. If successful, it retrieves\nthe user information and updates the _user and _logged observables.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                credentials\n                                            \n                                                            UserCredentials\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe credentials of the user, including email and password.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that may emit the logged-in user or an error in case of failed authentication.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logout\n                        \n                    \n                \n            \n            \n                \n                        \n                    logout()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:178\n\n                        \n                    \n\n\n            \n                \n                        Logs out the current user by calling the signOut method from FirebaseService. The method returns an Observable\nthat resolves when the sign-out process is complete.\n\n\n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable indicating the completion of the logout process.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:153\n\n                        \n                    \n\n\n            \n                \n                        Fetches the current user's information from Firestore based on their UID. If the user is connected (UID exists),\nretrieves their detailed profile from the 'userInfo' collection. Throws an error if no user is currently connected.\n\n\n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Returns an Observable that emits the user's detailed information or throws an error if the user is not connected.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        postRegister\n                        \n                    \n                \n            \n            \n                \n                        \n                    postRegister(info: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/firebase/api/firebase-auth.service.ts:124\n                        \n                    \n\n\n            \n                \n                        The function postRegister takes a User object, capitalizes the first letter of the name\nproperty if needed, and then creates a document in Firebase with the user information.\ncontains the following properties:\nparameter, checks if the uuid property exists in the info object, and then modifies the name\nproperty by capitalizing the first letter if it is not already capitalized. Finally, it creates a\ndocument in the 'userInfo' collection in Firebase with the provided user information and the\nspecified\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The info parameter in the postRegister function is an object of type UserInfo that\ncontains the following properties:\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable is being returned. The function postRegister takes a User object as a\nparameter, checks if the uuid property exists in the info object, and then modifies the name\nproperty by capitalizing the first letter if it is not already capitalized. Finally, it creates a\ndocument in the 'userInfo' collection in Firebase with the provided user information and the\nspecified\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        register\n                        \n                    \n                \n            \n            \n                \n                        \n                    register(info: UserRegisterInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:83\n\n                        \n                    \n\n\n            \n                \n                        Registers a new user using registration info. Creates a user in Firebase and, if successful, stores additional\nuser information in the database. If the registration fails to create a user or if necessary user details (like UID) are\nmissing, it emits an error. Otherwise, it completes the registration, updates user-related observables to reflect\nthe unauthenticated state, and emits the new user information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                info\n                                            \n                                                            UserRegisterInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe registration info of the user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that may emit null or detailed information of the newly registered user.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Inherited from         AuthService\n\n                        \n                    \n                    \n                        \n                                Defined in         AuthService:189\n\n                        \n                    \n\n\n            \n                \n                        Updates the current user's information in Firestore and refreshes the local user data by fetching updated info after the update.\nUses RxJS operators to chain these asynchronous tasks efficiently.\nuser data is refreshed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new user data to be updated in Firestore.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Returns an Observable that emits the updated user data after both the Firestore document is updated and the local\nuser data is refreshed.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, from, map, switchMap, tap } from 'rxjs';\nimport {\n  UserInfo,\n  UserCredentials,\n  UserRegisterInfo,\n} from '../../../interfaces/user-info';\nimport { FirebaseService, FirebaseUserCredential } from '../firebase.service';\nimport { AuthService } from '../../auth.service';\n\nexport class FirebaseAuthService extends AuthService {\n  /**\n   * Constructs the FirebaseAuthService class. It subscribes to the `isLogged$` observable from the FirebaseService to\n   * automatically handle changes in the authentication state. If the user is logged in, it attempts to fetch the user's data.\n   * If not logged in, it sets `_logged` and `_user` to `false` and `null`, respectively.\n   */\n  constructor(private firebaseSvc: FirebaseService) {\n    super();\n\n    this.firebaseSvc.isLogged$.subscribe((logged) => {\n      if (logged) {\n        this.me().subscribe({\n          next: (data) => {\n            this._user.next(data);\n            this._logged.next(true);\n          },\n          error: (err) => {\n            console.log(err);\n          },\n        });\n      } else {\n        this._logged.next(false);\n        this._user.next(null);\n      }\n    });\n  }\n\n  /**\n   * Logs in a user using their credentials. Attempts to connect the user through Firebase using email and password.\n   * If authentication fails or if a valid UID for the user is not received, it emits an error. If successful, it retrieves\n   * the user information and updates the `_user` and `_logged` observables.\n   * @param {UserCredentials} credentials - The credentials of the user, including email and password.\n   * @returns Returns an Observable that may emit the logged-in user or an error in case of failed authentication.\n   */\n  public login(credentials: UserCredentials): Observable {\n    return new Observable((subscr) => {\n      this.firebaseSvc\n        .connectUserWithEmailAndPassword(\n          credentials.email,\n          credentials.password\n        )\n        .then((credentials: FirebaseUserCredential | null) => {\n          if (\n            !credentials ||\n            !credentials.user ||\n            !credentials.user.user ||\n            !credentials.user.user.uid\n          ) {\n            subscr.error('Cannot login');\n          }\n          if (credentials) {\n            this.me().subscribe((data) => {\n              this._user.next(data);\n              this._logged.next(true);\n              subscr.next(data);\n              subscr.complete();\n            });\n          }\n        })\n        .catch((err) => {\n          subscr.error(err);\n        });\n    });\n  }\n\n  /**\n   * Registers a new user using registration info. Creates a user in Firebase and, if successful, stores additional\n   * user information in the database. If the registration fails to create a user or if necessary user details (like UID) are\n   * missing, it emits an error. Otherwise, it completes the registration, updates user-related observables to reflect\n   * the unauthenticated state, and emits the new user information.\n   * @param {UserRegisterInfo} info - The registration info of the user.\n   * @returns Returns an Observable that may emit null or detailed information of the newly registered user.\n   */\n  public register(info: UserRegisterInfo): Observable {\n    return new Observable((subscr) => {\n      this.firebaseSvc\n        .createUserWithEmailAndPassword(info.email, info.password)\n        .then((credentials: FirebaseUserCredential | null) => {\n          if (\n            !credentials ||\n            !credentials.user ||\n            !credentials.user.user ||\n            !credentials.user.user.uid\n          )\n            subscr.error('Cannot register');\n          if (credentials) {\n            var _info: UserInfo = { ...info };\n            _info.uuid = this.firebaseSvc.user?.uid;\n            this.postRegister(_info).subscribe((data) => {\n              this._user.next(null);\n              this._logged.next(false);\n              subscr.next(_info);\n              subscr.complete();\n            });\n          }\n        })\n        .catch((err) => {\n          subscr.error(err);\n        });\n    });\n  }\n\n  /**\n   * The function `postRegister` takes a `User` object, capitalizes the first letter of the `name`\n   * property if needed, and then creates a document in Firebase with the user information.\n   *\n   * @param info The `info` parameter in the `postRegister` function is an object of type `UserInfo` that\n   * contains the following properties:\n   * @return An Observable is being returned. The function `postRegister` takes a `User` object as a\n   * parameter, checks if the `uuid` property exists in the `info` object, and then modifies the `name`\n   * property by capitalizing the first letter if it is not already capitalized. Finally, it creates a\n   * document in the 'userInfo' collection in Firebase with the provided user information and the\n   * specified\n   */\n  private postRegister(info: UserInfo): Observable {\n    if (info.uuid) {\n      let fixedName = info.name;\n      if (fixedName[0] !== fixedName[0].toUpperCase()) {\n        fixedName = fixedName.charAt(0).toUpperCase() + fixedName.slice(1);\n      }\n      return from(\n        this.firebaseSvc.createDocumentWithId(\n          'userInfo',\n          {\n            name: fixedName,\n            surname: info.surname,\n            role: info.role,\n            username: info.username,\n            email: info.email,\n            uuid: info.uuid,\n          },\n          info.uuid\n        )\n      );\n    }\n    throw new Error('Error inesperado');\n  }\n\n  /**\n   * Fetches the current user's information from Firestore based on their UID. If the user is connected (UID exists),\n   * retrieves their detailed profile from the 'userInfo' collection. Throws an error if no user is currently connected.\n   * @returns Returns an Observable that emits the user's detailed information or throws an error if the user is not connected.\n   */\n  public me(): Observable {\n    if (this.firebaseSvc.user?.uid)\n      return from(\n        this.firebaseSvc.getDocument('userInfo', this.firebaseSvc.user.uid)\n      ).pipe(\n        map((data) => {\n          return {\n            name: data.data['name'],\n            surname: data.data['surname'],\n            picture: data.data['picture'] ?? '',\n            email: data.data['email'],\n            role: data.data['role'],\n            username: data.data['username'],\n            uuid: data.id,\n          };\n        })\n      );\n    else throw new Error('User is not connected');\n  }\n\n  /**\n   * Logs out the current user by calling the `signOut` method from FirebaseService. The method returns an Observable\n   * that resolves when the sign-out process is complete.\n   * @returns Returns an Observable indicating the completion of the logout process.\n   */\n  public logout(): Observable {\n    return from(this.firebaseSvc.signOut(false));\n  }\n\n  /**\n   * Updates the current user's information in Firestore and refreshes the local user data by fetching updated info after the update.\n   * Uses RxJS operators to chain these asynchronous tasks efficiently.\n   * @param {UserInfo} user - The new user data to be updated in Firestore.\n   * @returns Returns an Observable that emits the updated user data after both the Firestore document is updated and the local\n   * user data is refreshed.\n   */\n  public updateUser(user: UserInfo): Observable {\n    return from(\n      this.firebaseSvc.updateDocument('userInfo', user!.uuid!, user)\n    ).pipe(\n      tap(() => {\n        if (user.uuid === this._user.value?.uuid) {\n          this._user.next(user);\n        }\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseDataService.html":{"url":"classes/FirebaseDataService.html","title":"class - FirebaseDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-data.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            DataService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                query\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-data.service.ts:6\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseDataService with a reference to FirebaseService.\nThis service handles all interactions with Firebase, providing methods to get, create, update,\nand delete documents in a Firestore database.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides methods for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:101\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Deletes a document from Firebase and returns the document that was deleted.\nRetrieves the document first, then deletes it from Firestore, emitting the original document upon completion.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, formatted as 'collectionName/documentId'.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the document that was deleted as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(resource: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:52\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Retrieves a single document from Firebase based on a resource path which includes collection name and document ID.\nMaps the Firestore document to a generic type T.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, formatted as 'collectionName/documentId'.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the requested document as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:72\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Creates a new document in a specified Firebase collection and retrieves the newly created document.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the Firestore collection where the document will be created.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be stored in the new document.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the newly created document as type T, after fetching it using its ID.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(resource: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:85\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Updates an existing document in Firebase and retrieves the updated document.\nAssumes the resource string is formatted as 'collectionName/documentId'.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe path to the document, which is split to get collection name and document ID.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new data for the document.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \nAn observable that emits the updated document as type T.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        query\n                        \n                    \n                \n            \n            \n                \n                        \n                    query(resource: string, params: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         DataService\n\n                        \n                    \n                    \n                        \n                                Defined in         DataService:24\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        Fetches a collection of documents from Firebase and maps them to a PaginatedData structure.\nThis method is generic and can be used for any type of collection.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                resource\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the Firestore collection to query.\n\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nQuery parameters (currently not used in implementation but can be utilized for filtering/sorting).\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \nAn observable that emits the paginated data of the specified type.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable, from, map, switchMap } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { PaginatedData } from 'src/app/core/interfaces/data';\nimport { DataService } from '../../data.service';\n\nexport class FirebaseDataService extends DataService {\n  /**\n   * Constructs the FirebaseDataService with a reference to FirebaseService.\n   * This service handles all interactions with Firebase, providing methods to get, create, update,\n   * and delete documents in a Firestore database.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(protected firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Fetches a collection of documents from Firebase and maps them to a PaginatedData structure.\n   * This method is generic and can be used for any type of collection.\n   * @param {string} resource - The name of the Firestore collection to query.\n   * @param {any} params - Query parameters (currently not used in implementation but can be utilized for filtering/sorting).\n   * @returns {Observable>} - An observable that emits the paginated data of the specified type.\n   */\n  public query(resource: string, params: any): Observable> {\n    return from(this.firebase.getDocuments(resource)).pipe(\n      map((data) => {\n        return {\n          data: data.map((doc) => {\n            return {\n              id: 0,\n              uuid: doc.id,\n              ...doc.data,\n            } as T;\n          }),\n          pagination: {\n            page: 0,\n            pageSize: data.length,\n            pageCount: 1,\n            total: data.length,\n          },\n        };\n      })\n    );\n  }\n\n  /**\n   * Retrieves a single document from Firebase based on a resource path which includes collection name and document ID.\n   * Maps the Firestore document to a generic type T.\n   * @param {string} resource - The path to the document, formatted as 'collectionName/documentId'.\n   * @returns {Observable} - An observable that emits the requested document as type T.\n   */\n  public get(resource: string): Observable {\n    return from(\n      this.firebase.getDocument(resource.split('/')[0], resource.split('/')[1])\n    ).pipe(\n      map((doc) => {\n        return {\n          id: 0,\n          uuid: doc.id,\n          ...doc.data,\n        } as T;\n      })\n    );\n  }\n\n  /**\n   * Creates a new document in a specified Firebase collection and retrieves the newly created document.\n   * @param {string} resource - The name of the Firestore collection where the document will be created.\n   * @param {any} data - The data to be stored in the new document.\n   * @returns {Observable} - An observable that emits the newly created document as type T, after fetching it using its ID.\n   */\n  public post(resource: string, data: any): Observable {\n    return from(this.firebase.createDocument(resource, data)).pipe(\n      switchMap((doc) => this.get(resource + '/' + doc))\n    );\n  }\n\n  /**\n   * Updates an existing document in Firebase and retrieves the updated document.\n   * Assumes the resource string is formatted as 'collectionName/documentId'.\n   * @param {string} resource - The path to the document, which is split to get collection name and document ID.\n   * @param {any} data - The new data for the document.\n   * @returns {Observable} - An observable that emits the updated document as type T.\n   */\n  public put(resource: string, data: any): Observable {\n    return from(\n      this.firebase.updateDocument(\n        resource.split('/')[0],\n        resource.split('/')[1],\n        data\n      )\n    ).pipe(switchMap((doc) => this.get(resource)));\n  }\n\n  /**\n   * Deletes a document from Firebase and returns the document that was deleted.\n   * Retrieves the document first, then deletes it from Firestore, emitting the original document upon completion.\n   * @param {string} resource - The path to the document, formatted as 'collectionName/documentId'.\n   * @returns {Observable} - An observable that emits the document that was deleted as type T.\n   */\n  public delete(resource: string): Observable {\n    return this.get(resource).pipe(\n      switchMap((doc) => {\n        return from(\n          this.firebase.deleteDocument(\n            resource.split('/')[0],\n            resource.split('/')[1]\n          )\n        ).pipe(map((_) => doc));\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseDocument.html":{"url":"interfaces/FirebaseDocument.html","title":"interface - FirebaseDocument","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseDocument\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     DocumentData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FirebaseMediaService.html":{"url":"classes/FirebaseMediaService.html","title":"class - FirebaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FirebaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            MediaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/firebase/api/firebase-media.service.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs the FirebaseMediaService with a reference to FirebaseService.\nThis service will be used to interact with Firebase's functionalities, particularly for uploading images.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service that provides methods for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         MediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         MediaService:32\n\n                        \n                    \n\n\n            \n                \n                        Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\nThe method is designed to handle the upload process asynchronously and emit the result as an array of Media.\nEach Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\nIf an error occurs during upload, the observable will emit an error.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe file data to be uploaded, typically an image file.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \nAn observable that emits an array containing the uploaded media information.\nIf an error occurs during upload, the observable will emit an error.\n\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { MediaService } from '../../media.service';\n\nexport interface Media {\n  id: number;\n  url_small: string;\n  url_medium: string;\n  url_large: string;\n  url_thumbnail: string;\n}\n\nexport class FirebaseMediaService extends MediaService {\n  /**\n   * Constructs the FirebaseMediaService with a reference to FirebaseService.\n   * This service will be used to interact with Firebase's functionalities, particularly for uploading images.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(private firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\n   * The method is designed to handle the upload process asynchronously and emit the result as an array of Media.\n   * Each Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\n   *\n   * @param {Blob} blob - The file data to be uploaded, typically an image file.\n   * @returns {Observable} - An observable that emits an array containing the uploaded media information.\n   * If an error occurs during upload, the observable will emit an error.\n   */\n  public upload(blob: Blob): Observable {\n    return new Observable((obs) => {\n      this.firebase\n        .imageUpload(blob)\n        .then((data) => {\n          var imgs = [];\n          var media: any = data.file;\n          imgs.push(media);\n          obs.next(imgs);\n        })\n        .catch((error) => obs.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseStorageFile.html":{"url":"interfaces/FirebaseStorageFile.html","title":"interface - FirebaseStorageFile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseStorageFile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            file\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        file\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        file:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseUserCredential.html":{"url":"interfaces/FirebaseUserCredential.html","title":"interface - FirebaseUserCredential","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseUserCredential\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/firebase.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:     UserCredential\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserCredential\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { initializeApp, getApp, FirebaseApp } from 'firebase/app';\nimport {\n  getFirestore,\n  addDoc,\n  collection,\n  updateDoc,\n  doc,\n  onSnapshot,\n  getDoc,\n  setDoc,\n  query,\n  where,\n  getDocs,\n  Unsubscribe,\n  DocumentData,\n  deleteDoc,\n  Firestore,\n  DocumentReference,\n  DocumentSnapshot,\n  FieldPath,\n  CollectionReference,\n} from 'firebase/firestore';\nimport {\n  getStorage,\n  ref,\n  getDownloadURL,\n  uploadBytes,\n  FirebaseStorage,\n} from 'firebase/storage';\nimport {\n  createUserWithEmailAndPassword,\n  deleteUser,\n  signInAnonymously,\n  signOut,\n  signInWithEmailAndPassword,\n  initializeAuth,\n  indexedDBLocalPersistence,\n  UserCredential,\n  Auth,\n  User,\n} from 'firebase/auth';\nimport { UserInfo } from '../../interfaces/user-info';\n\nexport interface FirebaseStorageFile {\n  path: string;\n  file: string;\n}\n\nexport interface FirebaseDocument {\n  id: string;\n  data: DocumentData;\n}\n\nexport interface FirebaseUserCredential {\n  user: UserCredential;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FirebaseService {\n  private _app!: FirebaseApp;\n  private _db!: Firestore;\n  private _auth!: Auth;\n  private _webStorage!: FirebaseStorage;\n  private _user: User | null = null;\n  private _isLogged: BehaviorSubject = new BehaviorSubject(\n    false\n  );\n  public isLogged$: Observable = this._isLogged.asObservable();\n\n  private _users: BehaviorSubject = new BehaviorSubject(\n    []\n  );\n  public users$: Observable = this._users.asObservable();\n  private _incidents: BehaviorSubject = new BehaviorSubject([]);\n  public incidents$: Observable = this._incidents.asObservable();\n  private _categories: BehaviorSubject = new BehaviorSubject([]);\n  public categories$: Observable = this._categories.asObservable();\n\n  constructor(@Inject('firebase-config') config: any) {\n    this.init(config);\n  }\n\n  /**\n   * The `init` function initializes Firebase, sets up authentication, and subscribes to user and\n   * incident collections based on the user's authentication state.\n   *\n   * @param firebaseConfig The `firebaseConfig` parameter is an object that contains the configuration\n   * settings needed to initialize Firebase in your application. It typically includes properties such\n   * as `apiKey`, `authDomain`, `projectId`, `storageBucket`, `messagingSenderId`, `appId`, and\n   * `measurementId`. These settings are unique to\n   */\n  public async init(firebaseConfig: any) {\n    // Initialize Firebase\n    this._app = initializeApp(firebaseConfig);\n    this._db = getFirestore(this._app);\n    this._webStorage = getStorage(this._app);\n    this._auth = initializeAuth(getApp(), {\n      persistence: indexedDBLocalPersistence,\n    });\n    this._auth.onAuthStateChanged(async (user) => {\n      this._user = user;\n      if (user) {\n        if (user.uid && user.email) {\n          this._isLogged.next(true);\n          this.subscribeToCollection('userInfo', this._users, (el: any) => el);\n          this.subscribeToCollection(\n            'categoryInfo',\n            this._categories,\n            (el: any) => el\n          );\n          this.subscribeToCollection(\n            'incidentsInfo',\n            this._incidents,\n            (el: any) => el\n          );\n        }\n      } else {\n        this._isLogged.next(false);\n      }\n    });\n  }\n\n  /**\n   * Retrieves all data from specified collections in Firebase.\n   *\n   * @remarks\n   * This method fetches data from the specified collections in Firebase Firestore.\n   * It returns an object containing arrays of documents for each collection.\n   *\n   * @returns A Promise that resolves to an object containing arrays of documents for each collection.\n   *\n   * @throws Error if the data fetching process fails.\n   */\n  public async getAllData(): Promise {\n    const collections = ['userInfo', 'categoryInfo', 'incidentsInfo'];\n    const allData: { [key: string]: any[] } = {};\n\n    try {\n      for (const collectionName of collections) {\n        const querySnapshot = await getDocs(\n          collection(this._db, collectionName)\n        );\n        allData[collectionName] = querySnapshot.docs.map((doc) => ({\n          id: doc.id,\n          ...doc.data(),\n        }));\n      }\n      return allData;\n    } catch (error: any) {\n      throw new Error(`Failed to fetch data: ${error.message}`);\n    }\n  }\n\n  /**\n   * The function `getUser` returns the user object or null.\n   * @returns The `user` property is being returned, which is of type `User` or `null`.\n   */\n  public get user(): User | null {\n    return this._user;\n  }\n\n  /**\n   * The function `fileUpload` uploads a file to Firebase Storage with specified metadata and returns a\n   * Promise containing the path and download URL of the uploaded file.\n   * @param {Blob} blob - The `blob` parameter in the `fileUpload` function is a Blob object\n   * representing the data to be uploaded to Firebase Storage. Blobs represent raw data that can be of\n   * any type, such as images, documents, or other binary data.\n   * @param {string} mimeType - The `mimeType` parameter in the `fileUpload` function refers to the\n   * type of the file being uploaded. It specifies the media type of the file, such as \"image/jpeg\" for\n   * JPEG images or \"application/pdf\" for PDF files. This information is important for setting the\n   * content type metadata\n   * @param {string} path - The `path` parameter in the `fileUpload` function represents the location\n   * in the Firebase Storage where you want to upload the file. It is a string that specifies the path\n   * or directory within your Firebase Storage bucket where the file will be stored. For example, if\n   * you want to upload the file to\n   * @param {string} prefix - The `prefix` parameter in the `fileUpload` function is a string that is\n   * used as a prefix for the file name when it is uploaded to Firebase Storage. It is concatenated\n   * with the current timestamp and the specified extension to form the final file name.\n   * @param {string} extension - The `extension` parameter in the `fileUpload` function represents the\n   * file extension of the uploaded file. This could be something like \".jpg\", \".png\", \".pdf\", etc.,\n   * depending on the type of file being uploaded. It is used to construct the final URL of the file in\n   * the storage\n   * @returns The function `fileUpload` returns a Promise that resolves to a `FirebaseStorageFile`\n   * object, which contains the `path` and `file` properties.\n   */\n  public fileUpload(\n    blob: Blob,\n    mimeType: string,\n    path: string,\n    prefix: string,\n    extension: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._webStorage || !this._auth)\n        reject({\n          msg: 'Not connected to FireStorage',\n        });\n      var freeConnection = false;\n      if (this._auth && !this._auth.currentUser) {\n        try {\n          await signInAnonymously(this._auth);\n          freeConnection = true;\n        } catch (error) {\n          reject(error);\n        }\n      }\n      const url = path + '/' + prefix + '-' + Date.now() + extension;\n      const storageRef = ref(this._webStorage!, url);\n      const metadata = {\n        contentType: mimeType,\n      };\n      uploadBytes(storageRef, blob)\n        .then(async (snapshot) => {\n          getDownloadURL(storageRef)\n            .then(async (downloadURL) => {\n              if (freeConnection) await signOut(this._auth!);\n              resolve({\n                path,\n                file: downloadURL,\n              });\n            })\n            .catch(async (error) => {\n              if (freeConnection) await signOut(this._auth!);\n              reject(error);\n            });\n        })\n        .catch(async (error) => {\n          if (freeConnection) await signOut(this._auth!);\n          reject(error);\n        });\n    });\n  }\n\n  /**\n   * The function `imageUpload` uploads a blob as an image file with the specified parameters.\n   * @param {Blob} blob - The `blob` parameter in the `imageUpload` function is a Blob object\n   * representing the image file that you want to upload. It contains the binary data of the image\n   * file.\n   * @returns The `imageUpload` function is returning a Promise that resolves to the result of calling\n   * the `fileUpload` function with the provided parameters: `blob`, `'image/jpeg'`, `'images'`,\n   * `'image'`, and `\".jpg\"`.\n   */\n  public imageUpload(blob: Blob): Promise {\n    return this.fileUpload(blob, 'image/jpeg', 'images', 'image', '.jpg');\n  }\n\n  /**\n   * The function `createDocument` creates a document in a specified collection in a database and\n   * returns a Promise with the document ID.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocument` function represents the\n   * information or document that you want to add to the specified collection in the database. It can\n   * be of any type (`any` in this case), allowing you to pass different kinds of data to be stored in\n   * the database. This data\n   * @returns The `createDocument` function returns a `Promise` that resolves to a string, which is the\n   * ID of the newly created document in the specified collection.\n   */\n  public createDocument(collectionName: string, data: any): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      addDoc(collectionRef, data)\n        .then((docRef) => resolve(docRef.id))\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * The function `createDocumentWithId` creates a document with a specific ID in a specified\n   * collection in a Firestore database.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in which you want to create a new document.\n   * @param {any} data - The `data` parameter in the `createDocumentWithId` function represents the\n   * information or document that you want to store in the specified collection with the provided\n   * document ID. It can be any type of data that you want to save in the Firestore database, such as\n   * an object, string, number,\n   * @param {string} docId - The `docId` parameter in the `createDocumentWithId` function is a string\n   * that represents the unique identifier or name of the document you want to create in the specified\n   * collection. It is used to uniquely identify the document within the collection.\n   * @returns A Promise is being returned.\n   */\n  public createDocumentWithId(\n    collectionName: string,\n    data: any,\n    docId: string\n  ): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      const docRef = doc(this._db!, collectionName, docId);\n      setDoc(docRef, data)\n        .then(() => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This TypeScript function updates a document in a specified collection with the provided data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the database where the document will be updated.\n   * @param {string} document - The `document` parameter in the `updateDocument` function refers to the\n   * specific document within the collection that you want to update. It is typically identified by a\n   * unique document ID or name within the specified collection.\n   * @param {any} data - The `data` parameter in the `updateDocument` function represents the new data\n   * that you want to update in the specified document within the collection. This data can be of any\n   * type (`any` in this case) and should contain the updated values that you want to set in the\n   * document.\n   * @returns This function returns a Promise that resolves to void.\n   */\n  public updateDocument(\n    collectionName: string,\n    document: string,\n    data: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const collectionRef = collection(this._db!, collectionName);\n      updateDoc(doc(collectionRef, document), data)\n        .then((docRef) => resolve())\n        .catch((err) => reject(err));\n    });\n  }\n\n  /**\n   * This function retrieves documents from a specified collection in Firebase and returns them as an\n   * array of FirebaseDocument objects.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firebase Firestore database from which you want to retrieve\n   * documents.\n   * @returns A Promise that resolves to an array of FirebaseDocument objects. Each FirebaseDocument\n   * object contains an id property representing the document ID and a data property representing the\n   * document data.\n   */\n  public getDocuments(collectionName: string): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const querySnapshot = await getDocs(\n        collection(this._db!, collectionName)\n      );\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firebase collection based on a substring match\n   * in the document IDs.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firebase Firestore database from which you want to retrieve documents. It is a\n   * string that specifies the collection's name.\n   * @param {string} substring - The `substring` parameter in the `getDocumentsBySubstring` function is\n   * a string that represents the substring you want to search for within the document IDs in a\n   * specific collection. The function will return a Promise that resolves to an array of Firebase\n   * documents whose IDs contain the specified substring.\n   * @returns This function `getDocumentsBySubstring` returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. The `FirebaseDocument` objects contain the `id` and `data` properties\n   * of the documents that match the provided `substring` within the specified `collectionName`. If no\n   * documents match the criteria, an empty array is returned.\n   */\n  public getDocumentsBySubstring(\n    collectionName: string,\n    substring: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n      try {\n        const allDocs = await getDocs(collection(this._db!, collectionName));\n\n        const filteredDocs = allDocs.docs.filter((doc) =>\n          doc.id.includes(substring)\n        );\n\n        if (filteredDocs && filteredDocs.length > 0) {\n          resolve(\n            filteredDocs.map((doc) => {\n              return { id: doc.id, data: doc.data() };\n            })\n          );\n        } else {\n          // No se encontraron documentos que coincidan con el criterio de búsqueda\n          resolve([]);\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves a document from a Firebase collection and returns a Promise\n   * with the document data if it exists.\n   * @param {string} collectionName - The `collectionName` parameter in the `getDocument` function\n   * refers to the name of the collection in the Firestore database from which you want to retrieve a\n   * specific document. It is a string value that specifies the collection where the document is\n   * stored.\n   * @param {string} document - The `document` parameter in the `getDocument` function represents the\n   * specific document ID that you want to retrieve from the specified collection in the Firestore\n   * database. It is used to identify the document within the collection and fetch its data.\n   * @returns A Promise is being returned, which resolves to a FirebaseDocument object if the document\n   * exists in the specified collection, and rejects with an error message if the database is not\n   * connected or if the document does not exist.\n   */\n  public getDocument(\n    collectionName: string,\n    document: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const docRef = doc(this._db!, collectionName, document);\n      const docSnap = await getDoc(docRef);\n\n      if (docSnap.exists()) {\n        resolve({ id: docSnap.id, data: docSnap.data() });\n      } else {\n        // doc.data() will be undefined in this case\n        reject('document does not exists');\n      }\n    });\n  }\n\n  /**\n   * This TypeScript function retrieves documents from a Firestore collection based on a specified\n   * field and value.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in your Firestore database from which you want to retrieve documents. It is a string\n   * that specifies the collection's name.\n   * @param {string} field - The `field` parameter in the `getDocumentsBy` function represents the\n   * field in the Firestore collection that you want to query against. It is used to specify the field\n   * on which you want to apply the equality condition in the query.\n   * @param {any} value - The `value` parameter in the `getDocumentsBy` function represents the value\n   * that you want to query for in the specified field of the documents in the collection. It is the\n   * value that you are searching for in the database.\n   * @returns The `getDocumentsBy` function returns a Promise that resolves to an array of\n   * `FirebaseDocument` objects. Each `FirebaseDocument` object contains an `id` property representing\n   * the document ID and a `data` property representing the document data.\n   */\n  public getDocumentsBy(\n    collectionName: string,\n    field: string,\n    value: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db)\n        reject({\n          msg: 'Database is not connected',\n        });\n      const q = query(\n        collection(this._db!, collectionName),\n        where(field, '==', value)\n      );\n\n      const querySnapshot = await getDocs(q);\n      resolve(\n        querySnapshot.docs.map((doc) => {\n          return { id: doc.id, data: doc.data() };\n        })\n      );\n    });\n  }\n\n  /**\n   * The function `deleteDocument` deletes a document from a specified collection in a database and\n   * returns a promise indicating the success status.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection from which you want to delete a document.\n   * @param {string} docId - The `docId` parameter in the `deleteDocument` function represents the\n   * unique identifier of the document that you want to delete from the specified collection in the\n   * database. It is used to locate the specific document that needs to be removed.\n   * @returns The `deleteDocument` function is returning a Promise that resolves to an object with a\n   * `success` property set to a boolean value. The object structure being returned is `{ success:\n   * boolean }`.\n   */\n  public deleteDocument(\n    collectionName: string,\n    docId: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      try {\n        if (!this._db) {\n          throw new Error('Database is not connected');\n        }\n        const docRef = doc(this._db, collectionName, docId);\n        await deleteDoc(docRef);\n        resolve({ success: true });\n      } catch (error) {\n        console.error('Error deleting document:', error);\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `subscribeToCollection` subscribes to changes in a Firestore collection and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} collectionName - The `collectionName` parameter is a string that represents the\n   * name of the collection in the Firestore database that you want to subscribe to for real-time\n   * updates.\n   * @param subject - The `subject` parameter is a BehaviorSubject that emits an array of items.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToCollection` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of object. This\n   * function is used to transform the data from the Firestore document into the desired format before\n   * emitting it to the `subject`.\n   * @returns The `subscribeToCollection` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToCollection(\n    collectionName: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) return null;\n    return onSnapshot(\n      collection(this._db, collectionName),\n      (snapshot) => {\n        subject.next(snapshot.docs.map((doc) => mapFunction(doc.data())));\n      },\n      (error) => {}\n    );\n  }\n\n  /**\n   * The function `subscribeToDocument` subscribes to changes in a Firestore document and updates a\n   * BehaviorSubject with the mapped data.\n   * @param {string} documentPath - The `documentPath` parameter is a string that represents the path\n   * to a specific document in a Firestore database.\n   * @param subject - The `subject` parameter is an instance of `BehaviorSubject`, which is a type\n   * of subject in RxJS that stores the most recent value emitted to its subscribers and emits that\n   * value immediately to new subscribers.\n   * @param mapFunction - The `mapFunction` parameter in the `subscribeToDocument` function is a\n   * function that takes a `DocumentData` object as input and returns any other type of data. This\n   * function is used to transform the raw data from the Firestore document into a format that can be\n   * emitted by the `subject`\n   * @returns The `subscribeToDocument` function returns either an `Unsubscribe` function or `null`.\n   */\n  public subscribeToDocument(\n    documentPath: string,\n    subject: BehaviorSubject,\n    mapFunction: (el: DocumentData) => any\n  ): Unsubscribe | null {\n    if (!this._db) {\n      return null;\n    }\n    const documentRef: DocumentReference = doc(this._db, documentPath);\n\n    return onSnapshot(\n      documentRef,\n      (snapshot: DocumentSnapshot) => {\n        const data = snapshot.data();\n        if (data) {\n          subject.next(mapFunction(data));\n        }\n      },\n      (error) => {\n        console.error('Error:', error);\n      }\n    );\n  }\n\n  /**\n   * The `signOut` function in TypeScript signs out the user and optionally signs in anonymously.\n   * @param {boolean} [signInAnon=false] - The `signInAnon` parameter is a boolean flag that indicates\n   * whether the user should be signed in anonymously after signing out. If `signInAnon` is set to\n   * `true`, the `connectAnonymously` method will be called after signing out.\n   */\n  public async signOut(signInAnon: boolean = false): Promise {\n    new Promise(async (resolve, reject) => {\n      if (this._auth)\n        try {\n          await this._auth.signOut();\n          if (signInAnon) await this.connectAnonymously();\n          resolve();\n        } catch (error) {\n          reject(error);\n        }\n    });\n  }\n\n  /**\n   * The function `isUserConnected` returns a Promise that resolves to a boolean indicating whether a\n   * user is currently connected.\n   * @returns The `isUserConnected` function returns a Promise that resolves to a boolean value\n   * indicating whether the user is connected or not.\n   */\n  public isUserConnected(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(this._auth!.currentUser != null);\n    });\n    return response;\n  }\n\n  /**\n   * The function `isUserConnectedAnonymously` checks if the user is connected anonymously and returns\n   * a Promise with a boolean value.\n   * @returns A Promise that resolves to a boolean value indicating whether the user is connected\n   * anonymously or not.\n   */\n  public isUserConnectedAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(false);\n      resolve(\n        this._auth!.currentUser != null && this._auth!.currentUser.isAnonymous\n      );\n    });\n    return response;\n  }\n\n  /**\n   * The function `connectAnonymously` connects a user anonymously if not already connected.\n   * @returns A Promise is being returned from the `connectAnonymously` function.\n   */\n  public async connectAnonymously(): Promise {\n    const response = new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve();\n      if (\n        !(await this.isUserConnected()) &&\n        !(await this.isUserConnectedAnonymously())\n      ) {\n        await signInAnonymously(this._auth!).catch((error) => reject(error));\n        resolve();\n      } else if (await this.isUserConnectedAnonymously()) resolve();\n      else reject({ msg: 'An user is already connected' });\n    });\n    return response;\n  }\n\n  /**\n   * This TypeScript function creates a user with email and password authentication, handling various\n   * error cases.\n   * @param {string} email - The `email` parameter in the `createUserWithEmailAndPassword` function is\n   * a string that represents the email address of the user you want to create an account for. It is\n   * used as a unique identifier for the user's account and must be in a valid email format (e.g.,\n   * example@example.com).\n   * @param {string} password - The `password` parameter in the `createUserWithEmailAndPassword`\n   * function is a string that represents the password that the user wants to set for their account. It\n   * is used to authenticate the user during the sign-up process and is typically required to meet\n   * certain security criteria, such as having a minimum length, containing\n   * @returns The `createUserWithEmailAndPassword` function is being called with the provided email and\n   * password parameters. If successful, it returns a `FirebaseUserCredential` object containing\n   * information about the user. If there is an error during the process, it logs specific error\n   * messages based on the error code and then rejects the promise with the error.\n   */\n  public async createUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._auth) resolve(null);\n      try {\n        resolve({\n          user: await createUserWithEmailAndPassword(\n            this._auth!,\n            email,\n            password\n          ),\n        });\n      } catch (error: any) {\n        switch (error.code) {\n          case 'auth/email-already-in-use':\n            console.log(`Email address ${email} already in use.`);\n            break;\n          case 'auth/invalid-email':\n            console.log(`Email address ${email} is invalid.`);\n            break;\n          case 'auth/operation-not-allowed':\n            console.log(`Error during sign up.`);\n            break;\n          case 'auth/weak-password':\n            console.log(\n              'Password is not strong enough. Add additional characters including special characters and numbers.'\n            );\n            break;\n          default:\n            console.log(error.message);\n            break;\n        }\n        reject(error);\n      }\n    });\n  }\n\n  /**\n   * The function `connectUserWithEmailAndPassword` attempts to sign in a user with the provided email\n   * and password using Firebase authentication and returns a `FirebaseUserCredential` or `null` in a\n   * Promise.\n   * @param {string} email - The `email` parameter is a string that represents the user's email address\n   * that they use to sign in.\n   * @param {string} password - The `password` parameter in the `connectUserWithEmailAndPassword`\n   * function is a string that represents the user's password for authentication.\n   * @returns The `connectUserWithEmailAndPassword` function returns a Promise that resolves to a\n   * `FirebaseUserCredential` object if the sign-in is successful, or `null` if the authentication\n   * object `_auth` is not available. If there is an error during sign-in, the Promise will be rejected\n   * with the error.\n   */\n  public async connectUserWithEmailAndPassword(\n    email: string,\n    password: string\n  ): Promise {\n    return new Promise(\n      async (resolve, reject) => {\n        if (!this._auth) resolve(null);\n        try {\n          const user = await signInWithEmailAndPassword(\n            this._auth,\n            email,\n            password\n          );\n          return { user };\n        } catch (error) {\n          reject(error);\n          return error;\n        }\n      }\n    );\n  }\n\n  /**\n   * The function deleteUser deletes a user and returns a Promise that resolves when the user is\n   * successfully deleted or rejects if there is no user to delete.\n   * @returns The `deleteUser` method is returning a Promise that resolves with void.\n   */\n  public deleteUser(): Promise {\n    return new Promise((resolve, reject) => {\n      if (!this._user) reject();\n      resolve(deleteUser(this._user!));\n    });\n  }\n\n  /**\n   * The function `updateDocumentField` updates a specific field with a new value in a document within\n   * a Firestore collection.\n   * @param {string} collectionName - The `collectionName` parameter refers to the name of the\n   * collection in the Firestore database where the document is located.\n   * @param {string} document - The `document` parameter in the `updateDocumentField` function\n   * represents the unique identifier of the document within the specified collection that you want to\n   * update. It is a string value that identifies the specific document you want to modify in the\n   * Firestore database.\n   * @param {string} fieldName - The `fieldName` parameter in the `updateDocumentField` function\n   * represents the name of the field in the document that you want to update. For example, if you have\n   * a document in a Firestore collection with fields like \"name\", \"age\", \"email\", etc., the\n   * `fieldName` parameter would\n   * @param {any} fieldValue - The `fieldValue` parameter in the `updateDocumentField` function\n   * represents the new value that you want to set for the specified field (`fieldName`) in the\n   * document identified by `document` within the collection `collectionName`. This value can be of any\n   * data type (`string`, `number`, `\n   * @returns This function `updateDocumentField` returns a Promise that resolves to void (undefined)\n   * when the document field update operation is successful, or rejects with an error object if there\n   * is an issue such as the database not being connected or an error during the update operation.\n   */\n  public updateDocumentField(\n    collectionName: string,\n    document: string,\n    fieldName: string,\n    fieldValue: any\n  ): Promise {\n    return new Promise(async (resolve, reject) => {\n      if (!this._db) {\n        reject({\n          msg: 'Database is not connected',\n        });\n      }\n\n      const documentRef = doc(this._db as Firestore, collectionName, document);\n      const fieldUpdate = { [fieldName]: fieldValue }; // Crear un objeto con el campo a actualizar\n\n      try {\n        await updateDoc(documentRef, fieldUpdate);\n        resolve();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomePage.html":{"url":"components/HomePage.html","title":"component - HomePage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomePage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/home.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                home.page.scss\n            \n\n\n\n            \n                templateUrl\n                home.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filteredIncidents$\n                            \n                            \n                                    Public\n                                firebaseService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                incidentInfo\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilterChange\n                            \n                            \n                                    Async\n                                openFilterModal\n                            \n                            \n                                showAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_auth: AuthService, router: Router, firebaseService: FirebaseService, myModal: ModalController, filterService: FilterService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/home.page.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                AuthService - a service for handling authentication and user authorization.\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router - an instance of the Angular Router service used for navigating between different components.\n\n                                                        \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController - a service for managing modal dialogs.\n\n\n                                                        \n                                                \n                                                \n                                                        filterService\n                                                  \n                                                        \n                                                                        FilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nA service for managing filter service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        incidentInfo\n                        \n                    \n                \n            \n            \n                \nincidentInfo(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:43\n                        \n                    \n\n\n            \n                \n                        Navigates to the incident data page.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the incident.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:72\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nInitializes the component by showing all incidents and subscribing to changes in the filter state.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilterChange\n                        \n                    \n                \n            \n            \n                \nonFilterChange(filterValues: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:95\n                        \n                    \n\n\n            \n                \n                        Applies the specified filter settings to the incidents.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filterValues\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe filter settings to apply.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openFilterModal\n                        \n                    \n                \n            \n            \n                \n                        \n                    openFilterModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:53\n                        \n                    \n\n\n            \n                \n                        Opens the filter modal and applies the selected filter settings.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showAll\n                        \n                    \n                \n            \n            \n                \nshowAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/home.page.ts:86\n                        \n                    \n\n\n            \n                \n                        Shows all incidents without applying any filters.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredIncidents$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this.firebaseService.incidents$\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebaseService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/home.page.ts:33\n                        \n                    \n\n            \n                \n                    FirebaseService - a service for handling Firebase-related operations.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { Observable, map } from 'rxjs';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { ModalCategoryComponent } from '../data/modal-category/modal-category.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { FilterMobileComponent } from './filter-mobile/filter-mobile.component';\nimport { FilterService } from 'src/app/core/services/filter/filter.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage {\n  filteredIncidents$: Observable = this.firebaseService.incidents$;\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _auth AuthService - a service for handling authentication and user authorization.\n   * @param router Router - an instance of the Angular Router service used for navigating between different components.\n   * @param firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param myModal - The ModalController - a service for managing modal dialogs.\n   * @param filterService - A service for managing filter service.\n   */\n  constructor(\n    private _auth: AuthService,\n    private router: Router,\n    public firebaseService: FirebaseService,\n    private myModal: ModalController,\n    private filterService: FilterService\n  ) {}\n\n  /**\n   * Navigates to the incident data page.\n   *\n   * @param id string - the ID of the incident.\n   */\n  incidentInfo(id: string) {\n    if (id) {\n      console.log(id);\n      this.router.navigate(['/home/incident-data', id]);\n    }\n  }\n\n  /**\n   * Opens the filter modal and applies the selected filter settings.\n   */\n  async openFilterModal() {\n    const mod = await this.myModal.create({\n      component: FilterMobileComponent,\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      if (results.data === 'reset') {\n        this.showAll();\n      } else if (results.data) {\n        this.onFilterChange(results.data);\n      }\n    }\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Initializes the component by showing all incidents and subscribing to changes in the filter state.\n   */\n  ngOnInit() {\n    this.showAll();\n    this.filterService.getFilter().subscribe((filterValues) => {\n      if (filterValues) {\n        this.onFilterChange(filterValues);\n      } else {\n        this.showAll();\n      }\n    });\n  }\n\n  /**\n   * Shows all incidents without applying any filters.\n   */\n  showAll() {\n    this.filteredIncidents$ = this.firebaseService.incidents$;\n  }\n\n  /**\n   * Applies the specified filter settings to the incidents.\n   *\n   * @param filterValues - The filter settings to apply.\n   */\n  onFilterChange(filterValues: any) {\n    console.log('filterValues:', filterValues.controls);\n    this.filteredIncidents$ = this.firebaseService.incidents$.pipe(\n      map((incidents) =>\n        incidents.filter((incident: incidentInfo) => {\n          const userIdValue = filterValues.controls.userId.value;\n          const categoryNameValue = filterValues.controls.categoryName.value;\n          const checkedValue = filterValues.controls.checked.value;\n          const resolvedValue = filterValues.controls.resolved.value;\n\n          if (userIdValue && !categoryNameValue) {\n            return (\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue &&\n              incident.userId == userIdValue\n            );\n          } else if (userIdValue) {\n            return (\n              incident.categoryName == categoryNameValue &&\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue &&\n              incident.userId == userIdValue\n            );\n          } else if (!userIdValue && categoryNameValue) {\n            return (\n              incident.categoryName == categoryNameValue &&\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue\n            );\n          } else if (!userIdValue && !categoryNameValue) {\n            return (\n              incident.checked == checkedValue &&\n              incident.resolved == resolvedValue\n            );\n          } else {\n            return incident;\n          }\n        })\n      )\n    );\n  }\n}\n\n    \n\n    \n        \n    \n    \n        {{'filter.filter' | translate}}\n    \n    \n        \n    \n\n\n    \n\n    \n                \n                    home.page.scss\n                \n                .incidents {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: flex-start;\n  row-gap: 20px;\n  column-gap: 30px;\n  width: 100%;\n  padding: 20px;\n\n  app-incidents-info {\n    flex: 0 0 calc(33.333% - 40px);\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: flex-start;\n  }\n\n  @media (max-width: 850px) {\n    app-incidents-info {\n      flex: 0 0 100%;\n    }\n  }\n}\n\n.mobile {\n  display: none;\n}\n\n@media (max-width: 600px) {\n  .mobile {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 95%;\n    box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n    border-radius: 0.5rem;\n    margin: 2% auto;\n    background-color: #BD1E1E;\n\n    p {\n      font-weight: bold;\n      color: #fff;\n    }\n  }\n\n  .desktop {\n    display: none;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{\\'filter.filter\\' | translate}}                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomePage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\n\nCategorySelectableComponent\n\nCategorySelectableComponent\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nCategorySelectableComponent->HomePageModule\n\n\n\n\n\nCategorySelectableMobileComponent\n\nCategorySelectableMobileComponent\n\nHomePageModule -->\n\nCategorySelectableMobileComponent->HomePageModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nHomePageModule -->\n\nFilterComponent->HomePageModule\n\n\n\n\n\nFilterMobileComponent\n\nFilterMobileComponent\n\nHomePageModule -->\n\nFilterMobileComponent->HomePageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nItemCategoryComponent\n\nItemCategoryComponent\n\nHomePageModule -->\n\nItemCategoryComponent->HomePageModule\n\n\n\n\n\nItemUserComponent\n\nItemUserComponent\n\nHomePageModule -->\n\nItemUserComponent->HomePageModule\n\n\n\n\n\nUserSelectableComponent\n\nUserSelectableComponent\n\nHomePageModule -->\n\nUserSelectableComponent->HomePageModule\n\n\n\n\n\nUserSelectableMobileComponent\n\nUserSelectableMobileComponent\n\nHomePageModule -->\n\nUserSelectableMobileComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategorySelectableComponent\n                        \n                        \n                            CategorySelectableMobileComponent\n                        \n                        \n                            FilterComponent\n                        \n                        \n                            FilterMobileComponent\n                        \n                        \n                            HomePage\n                        \n                        \n                            ItemCategoryComponent\n                        \n                        \n                            ItemUserComponent\n                        \n                        \n                            UserSelectableComponent\n                        \n                        \n                            UserSelectableMobileComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\n\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { CategorySelectableComponent } from './category-selectable/category-selectable.component';\nimport { FilterComponent } from './filter/filter.component';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport { UserSelectableComponent } from './user-selectable/user-selectable.component';\nimport { ItemCategoryComponent } from './item-category/item-category.component';\nimport { ItemUserComponent } from './item-user/item-user.component';\nimport { FilterMobileComponent } from './filter-mobile/filter-mobile.component';\nimport { UserSelectableMobileComponent } from './user-selectable-mobile/user-selectable-mobile.component';\nimport { CategorySelectableMobileComponent } from './category-selectable-mobile/category-selectable-mobile.component';\n\n\n@NgModule({\n  imports: [\n    ReactiveFormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    SharedModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    MatCheckboxModule\n  ],\n  declarations: [\n    HomePage,\n    CategorySelectableComponent,\n    ItemCategoryComponent,\n    ItemUserComponent,\n    FilterComponent,\n    UserSelectableComponent,\n    FilterMobileComponent,\n    UserSelectableMobileComponent,\n    CategorySelectableMobileComponent\n  ]\n})\nexport class HomePageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientProvider.html":{"url":"injectables/HttpClientProvider.html","title":"injectable - HttpClientProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client.provider.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                delete\n                            \n                            \n                                    Public\n                                    Abstract\n                                get\n                            \n                            \n                                    Public\n                                    Abstract\n                                getImage\n                            \n                            \n                                    Public\n                                    Abstract\n                                patch\n                            \n                            \n                                    Public\n                                    Abstract\n                                post\n                            \n                            \n                                    Public\n                                    Abstract\n                                put\n                            \n                            \n                                    Public\n                                    Abstract\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:84\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        delete\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:26\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        get\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:16\n                        \n                    \n\n\n            \n                \n                        getImage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:69\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        patch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:37\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        post\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded?: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:53\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        put\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client.provider.ts:94\n                        \n                    \n\n\n            \n                \n                        Sets the trust mode for the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n// rxjs\nimport { Observable } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport abstract class HttpClientProvider {\n  /**\n   * getImage\n   *\n   * @param url http request url\n   * @param options http request options\n   * @returns observable with http response\n   */\n  public abstract getImage(url: string): Observable;\n\n  /**\n   * get\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public abstract get(url: string, params: any, headers: any): Observable;\n\n  /**\n   * post\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract post(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * put\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract put(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * patch\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public abstract patch(\n    url: string,\n    body: any,\n    headers: any,\n    urlEncoded?: boolean\n  ): Observable;\n\n  /**\n   * delete\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public abstract delete(\n    url: string,\n    params: any,\n    headers: any\n  ): Observable;\n\n  /**\n   * Sets the trust mode for the server\n   * @param mode server trust mode\n   */\n  public abstract setServerTrustMode(\n    mode: 'default' | 'nocheck' | 'pinned' | 'legacy'\n  ): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpClientWebProvider.html":{"url":"injectables/HttpClientWebProvider.html","title":"injectable - HttpClientWebProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpClientWebProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/http/http-client-web.provider.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            HttpClientProvider\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createBody\n                            \n                            \n                                    Private\n                                createHeaders\n                            \n                            \n                                    Public\n                                delete\n                            \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getImage\n                            \n                            \n                                    Public\n                                patch\n                            \n                            \n                                    Public\n                                post\n                            \n                            \n                                    Public\n                                put\n                            \n                            \n                                    Public\n                                setServerTrustMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/http/http-client-web.provider.ts:12\n                            \n                        \n\n                \n                    \n                            provider constructor\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                angular http client\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createBody\n                        \n                    \n                \n            \n            \n                \n                        \n                    createBody(body: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:170\n                        \n                    \n\n\n            \n                \n                        create http request body\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any | HttpParams\n\n                        \n                            \n                                http request body\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    createHeaders(headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/http/http-client-web.provider.ts:153\n                        \n                    \n\n\n            \n                \n                        create http headers\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     HttpHeaders\n\n                        \n                            \n                                angular http headers\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:126\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        delete\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string, params: any, headers: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:43\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        get\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                params\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request params\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getImage(url: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:29\n\n                        \n                    \n\n\n            \n                \n                        getImage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:103\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        patch\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:63\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        post\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        put\n                        \n                    \n                \n            \n            \n                \n                        \n                    put(url: string, body: any, headers: any, urlEncoded: boolean)\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:83\n\n                        \n                    \n\n                    \n                        \n                            Type parameters :\n                            \n                                    T\n                            \n                        \n                    \n\n            \n                \n                        put\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    http request url\n\n                                            \n                                        \n                                        \n                                                body\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request body\n\n                                            \n                                        \n                                        \n                                                headers\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    http request headers\n\n                                            \n                                        \n                                        \n                                                urlEncoded\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    http request as url encoded content-type\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                observable with http response\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        setServerTrustMode\n                        \n                    \n                \n            \n            \n                \n                        \n                    setServerTrustMode(mode: \"default\" | \"nocheck\" | \"pinned\" | \"legacy\")\n                \n            \n\n\n                    \n                        \n                            Inherited from         HttpClientProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         HttpClientProvider:142\n\n                        \n                    \n\n\n            \n                \n                        Sets the trust mode for the server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                mode\n                                            \n                                                        \"default\" | \"nocheck\" | \"pinned\" | \"legacy\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    server trust mode\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n// rxjs\nimport { Observable } from 'rxjs';\n\n// providers\nimport { HttpClientProvider } from './http-client.provider';\n\n@Injectable({ providedIn: 'root' })\nexport class HttpClientWebProvider extends HttpClientProvider {\n  /**\n   * provider constructor\n   *\n   * @param httpClient angular http client\n   */\n  constructor(private readonly httpClient: HttpClient) {\n    super();\n  }\n\n  /**\n   * getImage\n   *\n   * @param url http request url\n   * @param options http request options\n   * @returns observable with http response\n   */\n  public getImage(url: string): Observable {\n    return this.httpClient.get(url, {\n      responseType: 'blob',\n    });\n  }\n\n  /**\n   * get\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public get(\n    url: string,\n    params: any = {},\n    headers: any = {}\n  ): Observable {\n    return this.httpClient.get(url, {\n      params: new HttpParams({ fromObject: params }),\n      headers: this.createHeaders(headers),\n    });\n  }\n\n  /**\n   * post\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public post(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    return this.httpClient.post(url, this.createBody(body, urlEncoded), {\n      headers: this.createHeaders(headers, urlEncoded),\n    });\n  }\n\n  /**\n   * put\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public put(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    return this.httpClient.put(url, this.createBody(body, urlEncoded), {\n      headers: this.createHeaders(headers, urlEncoded),\n    });\n  }\n\n  /**\n   * patch\n   *\n   * @param url http request url\n   * @param body http request body\n   * @param headers http request headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns observable with http response\n   */\n  public patch(\n    url: string,\n    body: any = {},\n    headers: any = {},\n    urlEncoded: boolean = false\n  ): Observable {\n    if (body instanceof FormData) {\n      return this.httpClient.patch(url, body, { headers: headers });\n    } else {\n      return this.httpClient.patch(url, this.createBody(body, urlEncoded), {\n        headers: this.createHeaders(headers, urlEncoded),\n      });\n    }\n  }\n\n  /**\n   * delete\n   *\n   * @param url http request url\n   * @param params http request params\n   * @param headers http request headers\n   * @returns observable with http response\n   */\n  public delete(\n    url: string,\n    params: any = {},\n    headers: any = {}\n  ): Observable {\n    return this.httpClient.delete(url, {\n      params: new HttpParams({ fromObject: params }),\n      headers: this.createHeaders(headers),\n    });\n  }\n\n  /**\n   * Sets the trust mode for the server\n   *\n   * @param mode server trust mode\n   */\n  public setServerTrustMode(\n    mode: 'default' | 'nocheck' | 'pinned' | 'legacy'\n  ): void {}\n\n  /**\n   * create http headers\n   *\n   * @param headers http headers\n   * @param urlEncoded http request as url encoded content-type\n   * @returns angular http headers\n   */\n  private createHeaders(\n    headers: any,\n    urlEncoded: boolean = false\n  ): HttpHeaders {\n    var _headers = new HttpHeaders(headers);\n    if (urlEncoded)\n      _headers.set('Accept', ' application/x-www-form-urlencoded');\n    return _headers;\n  }\n\n  /**\n   * create http request body\n   *\n   * @param body http request body\n   * @param urlEncoded http request as url encoded content-type\n   * @returns http request body\n   */\n  private createBody(body: any, urlEncoded: boolean): any | HttpParams {\n    return urlEncoded ? new HttpParams({ fromObject: body }) : body;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentDataPage.html":{"url":"components/IncidentDataPage.html","title":"component - IncidentDataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentDataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/incident-data/incident-data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-incident-data\n            \n\n\n\n            \n                styleUrls\n                ./incident-data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./incident-data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                incident\n                            \n                            \n                                incidentId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                setResolvedIncident\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, incidentsService: IncidentsService, translate: CustomTranslateService, messageService: MessageService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:19\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ActivatedRoute - a service provided by Angular that gives access to information about a route associated with a component loaded in an outlet.\n\n                                                        \n                                                \n                                                \n                                                        incidentsService\n                                                  \n                                                        \n                                                                        IncidentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                IncidentsService - a service for managing incidents.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MessageService - a service for displaying messages or notifications to the user within the application.\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                MatDialog - a service for displaying dialog boxes.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:40\n                        \n                    \n\n\n            \n                \n                        Initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setResolvedIncident\n                        \n                    \n                \n            \n            \n                \n                        \n                    setResolvedIncident(incident: incidentInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:64\n                        \n                    \n\n\n            \n                \n                        Sets an incident as resolved.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incident\n                                            \n                                                            incidentInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    incidentInfo - the incident to be marked as resolved.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n            \n                \nshowError(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:115\n                        \n                    \n\n\n            \n                \n                        The function showError displays an error message using a translation service and a message\nservice.\nmessage to be displayed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showError function is a string that represents the error\nmessage to be displayed.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n            \n                \nshowSuccess(text: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/incident-data/incident-data.page.ts:95\n                        \n                    \n\n\n            \n                \n                        The function showSuccess displays a success message after translating the input text.\nmessage to be displayed as a success toast notification.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The text parameter in the showSuccess function is a string that represents the\nmessage to be displayed as a success toast notification.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:34\n                        \n                    \n\n            \n                \n                    MatDialog - a service for displaying dialog boxes.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incident\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incidentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/incident-data/incident-data.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { IncidentsService } from 'src/app/core/services/api/incidents.service';\nimport { Haptics, ImpactStyle } from '@capacitor/haptics';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ConfirmDialogComponent } from 'src/app/shared/components/confirm-dialog/confirm-dialog.component';\nimport { MessageService } from 'primeng/api';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-incident-data',\n  templateUrl: './incident-data.page.html',\n  styleUrls: ['./incident-data.page.scss'],\n  providers: [MessageService],\n})\nexport class IncidentDataPage implements OnInit {\n  incidentId: string | null = '';\n  incident: any | undefined;\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param route ActivatedRoute - a service provided by Angular that gives access to information about a route associated with a component loaded in an outlet.\n   * @param incidentsService IncidentsService - a service for managing incidents.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   * @param messageService MessageService - a service for displaying messages or notifications to the user within the application.\n   * @param dialog MatDialog - a service for displaying dialog boxes.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private incidentsService: IncidentsService,\n    private translate: CustomTranslateService,\n    private messageService: MessageService,\n    public dialog: MatDialog,\n  ) {}\n\n  /**\n   * Initializes the component.\n   */\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.incidentId = params.get('id');\n      if (this.incidentId) {\n        this.incidentsService.getIncidentById(this.incidentId).subscribe({\n          next: (incident) => {\n            if (incident) {\n              this.incident = incident;\n              if (!incident.checked) {\n                incident.checked = true;\n                this.incidentsService.updateIncident(incident);\n              }\n            }\n          },\n        });\n      }\n    });\n  }\n\n  /**\n   * Sets an incident as resolved.\n   *\n   * @param incident incidentInfo - the incident to be marked as resolved.\n   */\n  async setResolvedIncident(incident: incidentInfo) {\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\n      width: '250px',\n      data: { message: 'resolved' },\n    });\n\n    dialogRef.afterClosed().subscribe(async (result) => {\n      if (result) {\n        incident.resolved = true;\n        this.incident = incident;\n        this.incidentsService.updateIncident(incident).subscribe({\n          next: async _ => {\n            this.showSuccess('good');\n            await Haptics.impact({ style: ImpactStyle.Medium });\n          },\n          error: async error => {\n            this.incident.resolved = false;\n            this.showError('error');\n            await Haptics.impact({ style: ImpactStyle.Heavy });\n          }\n        });\n      }\n    });\n  }\n  \n  /**\n   * The function `showSuccess` displays a success message after translating the input text.\n   *\n   * @param text The `text` parameter in the `showSuccess` function is a string that represents the\n   * message to be displayed as a success toast notification.\n   */\n  showSuccess(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'success',\n          detail: text,\n        });\n      },\n    });\n  }\n\n  /**\n   * The function `showError` displays an error message using a translation service and a message\n   * service.\n   *\n   * @param text The `text` parameter in the `showError` function is a string that represents the error\n   * message to be displayed.\n   */\n  showError(text: string) {\n    let message = `toast.${text}`;\n    this.translate.get(message).subscribe({\n      next: (text: string) => {\n        this.messageService.add({\n          key: 'tl',\n          severity: 'error',\n          detail: text,\n          life: 6000,\n        });\n      },\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n\n        {{incident.title}}\n\n        {{incident.categoryName}}\n\n        {{incident.userName}}\n\n        {{incident.description}}\n\n        {{\"incidents.resolved\" | translate}}\n       \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./incident-data.page.scss\n                \n                .user {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--username {\n        margin: 0;\n    }\n\n    &--role {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n    \n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{incident.title}}        {{incident.categoryName}}        {{incident.userName}}        {{incident.description}}        {{\"incidents.resolved\" | translate}}               '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentDataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IncidentDataPageModule.html":{"url":"modules/IncidentDataPageModule.html","title":"module - IncidentDataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    IncidentDataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IncidentDataPageModule\n\n\n\ncluster_IncidentDataPageModule_declarations\n\n\n\ncluster_IncidentDataPageModule_imports\n\n\n\n\nIncidentDataPage\n\nIncidentDataPage\n\n\n\nIncidentDataPageModule\n\nIncidentDataPageModule\n\nIncidentDataPageModule -->\n\nIncidentDataPage->IncidentDataPageModule\n\n\n\n\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageModule -->\n\nIncidentDataPageRoutingModule->IncidentDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/incident-data/incident-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IncidentDataPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IncidentDataPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { IncidentDataPageRoutingModule } from './incident-data-routing.module';\n\nimport { IncidentDataPage } from './incident-data.page';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { ToastModule } from 'primeng/toast';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    IncidentDataPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ToastModule,\n  ],\n  declarations: [IncidentDataPage]\n})\nexport class IncidentDataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IncidentDataPageRoutingModule.html":{"url":"modules/IncidentDataPageRoutingModule.html","title":"module - IncidentDataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    IncidentDataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/incident-data/incident-data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IncidentDataPage } from './incident-data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: IncidentDataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class IncidentDataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentsCircleGraphicComponent.html":{"url":"components/IncidentsCircleGraphicComponent.html","title":"component - IncidentsCircleGraphicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentsCircleGraphicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-incidents-circle-graphic\n            \n\n\n\n            \n                styleUrls\n                ./incidents-circle-graphic.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./incidents-circle-graphic.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:29\n                        \n                    \n\n\n            \n                \n                        Initializes the component and fetches user data from Firebase to generate a chart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { map, switchMap, forkJoin } from 'rxjs';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-incidents-circle-graphic',\n  templateUrl: './incidents-circle-graphic.component.html',\n  styleUrls: ['./incidents-circle-graphic.component.scss'],\n})\nexport class IncidentsCircleGraphicComponent implements OnInit {\n  data: any;\n  options: any;\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n   * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n   */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private translate: CustomTranslateService\n  ) {}\n\n  /**\n   * Initializes the component and fetches user data from Firebase to generate a chart.\n   */\n  ngOnInit() {\n    this._firebaseService.incidents$\n      .pipe(\n        map((incidents) => {\n          const categoryCounts = incidents.reduce((acc: any, incident: any) => {\n            const categoryName = incident.categoryName;\n            acc[categoryName] = (acc[categoryName] || 0) + 1;\n            return acc;\n          }, {});\n\n          return {\n            labels: Object.keys(categoryCounts),\n            datasets: [\n              {\n                data: Object.values(categoryCounts),\n                backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n                hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],\n              },\n            ],\n          };\n        })\n      )\n      .subscribe((chartData) => {\n        this.data = chartData;\n        this.options = {\n          plugins: {\n            legend: {\n              labels: {\n                color: '#495057',\n              },\n            },\n          },\n        };\n      });\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./incidents-circle-graphic.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentsCircleGraphicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IncidentsInfoComponent.html":{"url":"components/IncidentsInfoComponent.html","title":"component - IncidentsInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IncidentsInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/incidents-info/incidents-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-incidents-info\n            \n\n\n\n            \n                styleUrls\n                ./incidents-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./incidents-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formattedDay\n                            \n                            \n                                formattedTime\n                            \n                            \n                                isScreenSmall\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onIncidentClick\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                incident\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onIncidentClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:33\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\nInitializes the component by checking the initial screen size.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                UsersService - a service for managing user-related operations.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        incident\n                    \n                \n                \n                    \n                        Type :         incidentInfo | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:23\n                            \n                        \n                \n                    \n                        Represents the input property for passing incident information to the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onIncidentClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:28\n                            \n                        \n                \n                    \n                        Represents the output property for emitting events when an incident is clicked.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Initializes the component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onIncidentClick\n                        \n                    \n                \n            \n            \n                \nonIncidentClick(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Handles the click event on the incident.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Event - the click event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formattedDay\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formattedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/incidents-info/incidents-info.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { incidentInfo } from 'src/app/core/interfaces/incidents-info';\nimport { UsersService } from 'src/app/core/services/api/users.service';\n\n@Component({\n  selector: 'app-incidents-info',\n  templateUrl: './incidents-info.component.html',\n  styleUrls: ['./incidents-info.component.scss'],\n})\nexport class IncidentsInfoComponent implements OnInit {\n  isScreenSmall: boolean = false;\n\n  /**\n   * Represents the input property for passing incident information to the component.\n   */\n  @Input() incident: incidentInfo | undefined;\n\n  /**\n   * Represents the output property for emitting events when an incident is clicked.\n   */\n  @Output() onIncidentClicked: EventEmitter =\n    new EventEmitter();\n\n  formattedTime: string | undefined;\n  formattedDay: string | undefined;\n  userName: string | undefined;\n\n  /**\n   * Constructs a component constructor function.\n   * Initializes the component by checking the initial screen size.\n   *\n   * @param userService UsersService - a service for managing user-related operations.\n   */\n\n  constructor(private userService: UsersService) {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  /**\n   * Initializes the component.\n   */\n\n  ngOnInit() {\n    if (this.incident) {\n      if (typeof this.incident.date === 'string') {\n        const timestamp = new Date(this.incident.date);\n        this.formattedDay = timestamp.toLocaleDateString();\n        this.formattedTime = timestamp.toLocaleTimeString();\n      } else {\n        const timestamp = this.incident.date;\n        const date = timestamp.toDate();\n        this.formattedDay = date.toLocaleDateString();\n        this.formattedTime = date.toLocaleTimeString();\n      }\n      this.userService.getUserById(this.incident.userId).subscribe((user) => {\n        this.userName = user ? user.name : '';\n      });\n    }\n  }\n\n  /**\n   * Handles the click event on the incident.\n   *\n   * @param event Event - the click event.\n   */\n  onIncidentClick(event: Event) {\n    this.onIncidentClicked.emit(this.incident?.uuid);\n    event.stopPropagation();\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{incident?.title}}\n    {{incident?.title | shortenText}}\n    \n      {{'incidents.unresolved' | translate}}\n    \n  \n\n  \n    \n      \n      \n        {{'incidents.day' |translate}}: {{formattedDay}}\n      \n    \n    \n      \n      \n        {{'incidents.hour' |translate}}: {{formattedTime}}\n      \n    \n    \n      \n      \n        {{'incidents.user' |translate}}: {{userName ? userName : ('incidents.anonymous' | translate)}}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./incidents-info.component.scss\n                \n                  .card {\n    padding: 15px;\n    border-radius: 0.5rem;\n    box-shadow: 0px 2px 15px -2px rgba(71, 71, 71, 0.24);\n    width: calc((100vw / 3) - (30px * 2) + 10px);\n    height: 190px;\n\n    &--header {\n      display: flex;\n      align-items: center;\n      justify-content: space-between;\n\n      &__title {\n        font-weight: bold;\n      }\n\n      &__status {\n        background-color: #bd1e1e;\n        padding: 2% 5%;\n        border-radius: 2em;\n\n        span {\n          color: #ffffff;\n          font-weight: bold;\n        }\n      }\n    }\n\n    ion-icon {\n      color: #bd1e1e;\n    }\n\n    &--info {\n      margin-top: 5%;\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n\n      span {\n        margin-left: 3%;\n        font-weight: bold;\n      }\n    }\n\n    &:hover {\n      cursor: pointer;\n    }\n\n    @media (max-width: 850px) {\n      width: 100% !important;\n\n      &--header {\n        &__status {\n          margin-left: 1rem;\n        }\n      }\n\n      &--info {\n        margin-top: 0;\n      }\n    }\n  }\n\n  .noCheck {\n    background-color: #BBBBBB;\n  }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{incident?.title}}    {{incident?.title | shortenText}}          {{\\'incidents.unresolved\\' | translate}}                                {{\\'incidents.day\\' |translate}}: {{formattedDay}}                                  {{\\'incidents.hour\\' |translate}}: {{formattedTime}}                                  {{\\'incidents.user\\' |translate}}: {{userName ? userName : (\\'incidents.anonymous\\' | translate)}}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IncidentsInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IncidentsService.html":{"url":"injectables/IncidentsService.html","title":"injectable - IncidentsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  IncidentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/incidents.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getIncidentById\n                            \n                            \n                                updateIncident\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/incidents.service.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor function initializes a private firebaseService property using dependency\ninjection.\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The firebaseService parameter is an instance of the FirebaseService\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getIncidentById\n                        \n                    \n                \n            \n            \n                \ngetIncidentById(incidentId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/incidents.service.ts:27\n                        \n                    \n\n\n            \n                \n                        Retrieves an incident by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incidentId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string - the ID of the incident to retrieve.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable that emits the incident information if found, otherwise undefined.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateIncident\n                        \n                    \n                \n            \n            \n                \nupdateIncident(incident: incidentInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/incidents.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Updates an incident.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                incident\n                                            \n                                                            incidentInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    incidentInfo - the updated incident information.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                An Observable that emits a success message if the incident is updated successfully, otherwise emits an error message.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { incidentInfo } from '../../interfaces/incidents-info';\nimport { Observable, catchError, from, map, of, take, throwError } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IncidentsService {\n  /**\n   * The constructor function initializes a private firebaseService property using dependency\n   * injection.\n   *\n   * @param firebaseService The `firebaseService` parameter is an instance of the `FirebaseService`\n   * class that is being injected into the constructor using Angular's dependency injection mechanism.\n   * This allows the component or service to have access to the functionality provided by the\n   * `FirebaseService` class.\n   */\n  constructor(private firebaseService: FirebaseService) {}\n\n  /**\n   * Retrieves an incident by its ID.\n   *\n   * @param incidentId string - the ID of the incident to retrieve.\n   * @returns An Observable that emits the incident information if found, otherwise undefined.\n   */\n  getIncidentById(incidentId: string): Observable {\n    return this.firebaseService.incidents$.pipe(\n      take(1),\n      map((incident) =>\n        incident.find((incident) => incident.uuid === incidentId)\n      )\n    );\n  }\n\n  /**\n   * Updates an incident.\n   *\n   * @param incident incidentInfo - the updated incident information.\n   * @returns An Observable that emits a success message if the incident is updated successfully, otherwise emits an error message.\n   */\n  updateIncident(incident: incidentInfo): Observable {\n    return from(this.firebaseService.updateDocument('incidentsInfo', incident.uuid, incident)).pipe(\n      map(response => ({ success: true, data: response })),\n      catchError((err) =>\n        throwError(\n          () =>\n            new Error(\n              `Error: ${err.message}`\n            )\n        ))\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemCategoryComponent.html":{"url":"components/ItemCategoryComponent.html","title":"component - ItemCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ItemCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/item-category/item-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-category\n            \n\n\n\n            \n                styleUrls\n                ./item-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    item\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/item-category/item-category.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:16\n                            \n                        \n                \n                    \n                        Setter method for setting the item data.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:23\n                            \n                        \n                \n                    \n                        Output property for emitting a click event.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-category/item-category.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-category/item-category.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Event handler for when the user clicks on the item.\nEmits a click event with the item data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/item-category/item-category.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n\n                \n                    \n                        getitem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:30\n                                \n                            \n                    \n                        \n                                Getter method for retrieving the item data.\n\n\n                                \n                                \n                                \n                                    Returns :     any | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setitem(_item: any | undefined)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-category/item-category.component.ts:16\n                                \n                            \n                    \n                        \n                                Setter method for setting the item data.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _item\n                                                    \n                                                            \n                                                                        any | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe item data to be set.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-item-category',\n  templateUrl: './item-category.component.html',\n  styleUrls: ['./item-category.component.scss'],\n})\nexport class ItemCategoryComponent implements OnInit {\n  private _item: any | undefined;\n\n  /**\n   * Setter method for setting the item data.\n   *\n   * @param _item - The item data to be set.\n   */\n  @Input('item') set item(_item: any | undefined) {\n    this._item = _item;\n  }\n\n  /**\n   * Output property for emitting a click event.\n   */\n  @Output('clicked') clicked = new EventEmitter();\n\n  /**\n   * Getter method for retrieving the item data.\n   *\n   * @returns The item data.\n   */\n  get item(): any | undefined {\n    return this._item;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for when the user clicks on the item.\n   * Emits a click event with the item data.\n   */\n  onUserClicked() {\n    this.clicked.emit(this._item);\n  }\n}\n\n    \n\n    \n        \n  {{item?.name}}\n\n    \n\n    \n                \n                    ./item-category.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{item?.name}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ItemUserComponent.html":{"url":"components/ItemUserComponent.html","title":"component - ItemUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ItemUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/item-user/item-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-item-user\n            \n\n\n\n            \n                styleUrls\n                ./item-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./item-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                clicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    item\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/item-user/item-user.component.ts:32\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:16\n                            \n                        \n                \n                    \n                        Input property to set the item data.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        clicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:23\n                            \n                        \n                \n                    \n                        Output property to emit a click event.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-user/item-user.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/item-user/item-user.component.ts:42\n                        \n                    \n\n\n            \n                \n                        Event handler for when the user clicks on the item.\nEmits a click event with the item data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _item\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/item-user/item-user.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n\n                \n                    \n                        getitem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:30\n                                \n                            \n                    \n                        \n                                Getter method to retrieve the item data.\n\n\n                                \n                                \n                                \n                                    Returns :     any | undefined\n\n                                \n                        \n                    \n\n                \n                    \n                        setitem(_item: any | undefined)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/item-user/item-user.component.ts:16\n                                \n                            \n                    \n                        \n                                Input property to set the item data.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _item\n                                                    \n                                                            \n                                                                        any | undefined\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe item data to be set.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-item-user',\n  templateUrl: './item-user.component.html',\n  styleUrls: ['./item-user.component.scss'],\n})\nexport class ItemUserComponent implements OnInit {\n  private _item: any | undefined;\n\n  /**\n   * Input property to set the item data.\n   *\n   * @param _item - The item data to be set.\n   */\n  @Input('item') set item(_item: any | undefined) {\n    this._item = _item;\n  }\n\n  /**\n   * Output property to emit a click event.\n   */\n  @Output('clicked') clicked = new EventEmitter();\n\n  /**\n   * Getter method to retrieve the item data.\n   *\n   * @returns The item data.\n   */\n  get item(): any | undefined {\n    return this._item;\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for when the user clicks on the item.\n   * Emits a click event with the item data.\n   */\n  onUserClicked() {\n    this.clicked.emit(this._item);\n  }\n}\n\n    \n\n    \n        \n  {{item?.name}}\n\n    \n\n    \n                \n                    ./item-user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{item?.name}}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ItemUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalService.html":{"url":"injectables/LocalService.html","title":"injectable - LocalService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/translate/local.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                browserLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(lang: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/translate/local.service.ts:8\n                            \n                        \n\n                \n                    \n                            The constructor function sets the browser language based on the value returned by\nwindow.navigator.language.\nproperty of type CustomTranslateService. It is used to handle language translation within the\ncomponent or service where this constructor is defined.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        lang\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe lang parameter in the constructor is a private\nproperty of type CustomTranslateService. It is used to handle language translation within the\ncomponent or service where this constructor is defined.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        browserLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/translate/local.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnInit } from '@angular/core';\nimport { CustomTranslateService } from './translate.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LocalService {\n  browserLanguage: string = '';\n\n  /**\n   * The constructor function sets the browser language based on the value returned by\n   * window.navigator.language.\n   * @param {CustomTranslateService} lang - The `lang` parameter in the constructor is a private\n   * property of type `CustomTranslateService`. It is used to handle language translation within the\n   * component or service where this constructor is defined.\n   */\n  constructor(private lang: CustomTranslateService) {\n    // window.navigator.language returns 'es-ES', we only need 'es'\n    this.browserLanguage = window.navigator.language.split('-')[0];\n    this.lang.use(this.browserLanguage);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/login-form/login-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-form\n            \n\n\n\n            \n                styleUrls\n                ./login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                            Constructs the LoginFormComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder service for building the form.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/access/login-form/login-form.component.ts:18\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/login-form/login-form.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/login-form/login-form.component.ts:38\n                        \n                    \n\n\n            \n                \n                        Event handler for form submission.\nEmits the user credentials through the onsubmit event emitter.\nResets the form after submission.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/login-form/login-form.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserCredentials } from 'src/app/core/interfaces/user-info';\n\n@Component({\n  selector: 'app-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent implements OnInit {\n  form: FormGroup;\n  @Output() onsubmit = new EventEmitter();\n\n  /**\n   * Constructs the LoginFormComponent.\n   * @param {FormBuilder} formBuilder - FormBuilder service for building the form.\n   */\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group({\n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for form submission.\n   * Emits the user credentials through the onsubmit event emitter.\n   * Resets the form after submission.\n   */\n  onSub() {\n    this.onsubmit.emit(this.form?.value);\n    this.form.reset();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      {{'forms.email' | translate}}\n      \n      {{'errors.valid' | translate}}\n    \n  \n    \n      {{'forms.password' | translate}}\n      \n      {{'errors.valid' | translate}}\n    \n  \n    {{\"forms.logIn\" | translate}}\n  \n  \n\n    \n\n    \n                \n                    ./login-form.component.scss\n                \n                div {\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    \n    \n    .mat-form-field {\n      width: 350px;\n      margin-bottom: 2rem;\n    }\n\n    button {\n      padding: 1rem;\n      border: none;\n      border-radius: 4px;\n      background-color: #0F212D;\n      color: white;\n      font-weight: bold;\n      cursor: pointer;\n      \n      &:hover {\n        background-color: #1b3e56;\n      }\n    \n      &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n      }\n    }\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{\\'forms.email\\' | translate}}            {{\\'errors.valid\\' | translate}}                {{\\'forms.password\\' | translate}}            {{\\'errors.valid\\' | translate}}          {{\"forms.logIn\" | translate}}    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Media.html":{"url":"interfaces/Media.html","title":"interface - Media","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Media\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/firebase/api/firebase-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url_large\n                                        \n                                \n                                \n                                        \n                                            url_medium\n                                        \n                                \n                                \n                                        \n                                            url_small\n                                        \n                                \n                                \n                                        \n                                            url_thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_large:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_medium:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_small:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { FirebaseService } from '../../firebase/firebase.service';\nimport { MediaService } from '../../media.service';\n\nexport interface Media {\n  id: number;\n  url_small: string;\n  url_medium: string;\n  url_large: string;\n  url_thumbnail: string;\n}\n\nexport class FirebaseMediaService extends MediaService {\n  /**\n   * Constructs the FirebaseMediaService with a reference to FirebaseService.\n   * This service will be used to interact with Firebase's functionalities, particularly for uploading images.\n   * @param {FirebaseService} firebase - A service that provides methods for interacting with Firebase.\n   */\n  constructor(private firebase: FirebaseService) {\n    super();\n  }\n\n  /**\n   * Uploads a blob (file data) to Firebase storage and returns an observable that emits an array of Media objects.\n   * The method is designed to handle the upload process asynchronously and emit the result as an array of Media.\n   * Each Media object contains various URLs pointing to the same file, representing different resolutions or thumbnails.\n   *\n   * @param {Blob} blob - The file data to be uploaded, typically an image file.\n   * @returns {Observable} - An observable that emits an array containing the uploaded media information.\n   * If an error occurs during upload, the observable will emit an error.\n   */\n  public upload(blob: Blob): Observable {\n    return new Observable((obs) => {\n      this.firebase\n        .imageUpload(blob)\n        .then((data) => {\n          var imgs = [];\n          var media: any = data.file;\n          imgs.push(media);\n          obs.next(imgs);\n        })\n        .catch((error) => obs.error(error));\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MediaService.html":{"url":"injectables/MediaService.html","title":"injectable - MediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/media.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/media.service.ts:13\n                        \n                    \n\n\n            \n                \n                        Uploads a media blob.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe blob representing the media to upload.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable emitting the result of the upload process.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class MediaService {\n  /**\n   * Uploads a media blob.\n   * @param {Blob} blob - The blob representing the media to upload.\n   * @returns {Observable} Observable emitting the result of the upload process.\n   */\n  public abstract upload(blob: Blob): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalCategoryComponent.html":{"url":"components/ModalCategoryComponent.html","title":"component - ModalCategoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalCategoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/data/modal-category/modal-category.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-modal-category\n            \n\n\n\n            \n                styleUrls\n                ./modal-category.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./modal-category.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                mod\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                categoryInfo\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    categoryInfo\n                                \n                                \n                                    mode\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:37\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FormBuilder - a service for creating and managing Angular forms.\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ModalController - a service for managing modal dialogs.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        categoryInfo\n                    \n                \n                \n                    \n                        Type :         CategoryInfo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:20\n                            \n                        \n                \n                    \n                        Sets the category information for the form.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:33\n                            \n                        \n                \n                    \n                        Sets the mode for the component.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Handler for cancel action.\nDismisses the modal without passing any data to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/data/modal-category/modal-category.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Handler for form submission.\nDismisses the modal and passes the updated user information to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mod\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/data/modal-category/modal-category.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        categoryInfo\n                    \n                \n\n\n                \n                    \n                        setcategoryInfo(category: CategoryInfo)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:20\n                                \n                            \n                    \n                        \n                                Sets the category information for the form.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            category\n                                                    \n                                                            \n                                                                            CategoryInfo\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    CategoryInfo - the category information to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n\n\n                \n                    \n                        setmode(m: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/data/modal-category/modal-category.component.ts:33\n                                \n                            \n                    \n                        \n                                Sets the mode for the component.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            m\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    string - the mode to be set.\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { CategoryInfo } from 'src/app/core/interfaces/category-info';\n\n@Component({\n  selector: 'app-modal-category',\n  templateUrl: './modal-category.component.html',\n  styleUrls: ['./modal-category.component.scss'],\n})\nexport class ModalCategoryComponent implements OnInit {\n  form: FormGroup;\n  mod: string = '';\n  \n  /**\n   * Sets the category information for the form.\n   *\n   * @param category CategoryInfo - the category information to be set.\n   */\n  @Input() set categoryInfo(category: CategoryInfo) {\n    if (category) {\n      this.form.controls['name'].setValue(category.name);\n      this.form.controls['description'].setValue(category.description);\n      this.form.controls['uuid'].setValue(category.uuid);\n    }\n  }\n\n  /**\n   * Sets the mode for the component.\n   *\n   * @param m string - the mode to be set.\n   */\n  @Input() set mode(m: string) {\n    if (m) {\n      this.mod = m;\n    }\n  }\n\n  /**\n   * Constructs a component constructor function.\n   *\n   * @param formBuilder FormBuilder - a service for creating and managing Angular forms.\n   * @param modal ModalController - a service for managing modal dialogs.\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController\n  ) {\n    this.form = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      uuid: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Handler for form submission.\n   * Dismisses the modal and passes the updated user information to the parent component.\n   */\n  onSub() {\n    this.modal.dismiss(this.form.value);\n  }\n\n  /**\n   * Handler for cancel action.\n   * Dismisses the modal without passing any data to the parent component.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n    \n      {{'forms.update' | translate}}\n    \n    \n      {{'data.create' | translate}}\n    \n  \n\n\n\n  \n\n    \n      \n        {{ 'forms.name' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n    \n      \n        {{ 'forms.description' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      {{'forms.update' | translate}}\n      {{'data.create' | translate}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./modal-category.component.scss\n                \n                ion-icon {\n    color: #0f212d;\n  }\n  .form {\n    display: flex;\n    flex-direction: column;\n    padding: 5%;\n  \n    button {\n      padding: 1rem;\n      border: none;\n      border-radius: 4px;\n      background-color: #0f212d;\n      color: white;\n      font-weight: bold;\n      cursor: pointer;\n  \n      &:hover {\n        background-color: #1b3e56;\n      }\n  \n      &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n      }\n    }\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\\'forms.update\\' | translate}}              {{\\'data.create\\' | translate}}                          {{ \\'forms.name\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                                {{ \\'forms.description\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                    {{\\'forms.update\\' | translate}}      {{\\'data.create\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ModalCategoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedData.html":{"url":"interfaces/PaginatedData.html","title":"interface - PaginatedData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         Pagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pagination\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pageCount\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PasswordValidation.html":{"url":"classes/PasswordValidation.html","title":"class - PasswordValidation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PasswordValidation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/validators/password.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                passwordMatch\n                            \n                            \n                                    Static\n                                passwordProto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordMatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordMatch(passwordControlName: string, confirmControlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:35\n                        \n                    \n\n\n            \n                \n                        Validates if password and confirm password match.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                passwordControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the password control.\n\n\n                                            \n                                        \n                                        \n                                                confirmControlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the confirm password control.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for password match validation.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        passwordProto\n                        \n                    \n                \n            \n            \n                \n                        \n                    passwordProto(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/validators/password.ts:13\n                        \n                    \n\n\n            \n                \n                        Validates password according to a specified pattern.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ''\n                                            \n\n                                            \n                                                    \nThe name of the control to validate.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                Validator function for password validation.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AbstractControl,\n  FormControl,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\nexport class PasswordValidation {\n  /**\n   * Validates password according to a specified pattern.\n   * @param {string} controlName - The name of the control to validate.\n   * @returns {ValidatorFn} Validator function for password validation.\n   */\n  public static passwordProto(controlName: string = ''): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      let password = '';\n      if (control instanceof FormControl) password = control?.value;\n      else password = control.get(controlName)?.value;\n      if (\n        password &&\n        !password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[A-Za-z\\d]{8,}$/)\n      ) {\n        return { passwordProto: true };\n      } else {\n        return null;\n      }\n    };\n  }\n\n  /**\n   * Validates if password and confirm password match.\n   * @param {string} passwordControlName - The name of the password control.\n   * @param {string} confirmControlName - The name of the confirm password control.\n   * @returns {ValidatorFn} Validator function for password match validation.\n   */\n  public static passwordMatch(\n    passwordControlName: string,\n    confirmControlName: string\n  ): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const password = control.get(passwordControlName)?.value;\n      const confirmPassword = control.get(confirmControlName)?.value;\n\n      if (password != confirmPassword) {\n        let errors = control?.errors;\n        if (errors && typeof errors === 'object') {\n          Object.assign(errors, {\n            passwordMatch: true,\n          });\n        } else {\n          errors = {\n            passwordMatch: true,\n          };\n        }\n        return errors;\n      } else {\n        let errors = control?.errors;\n        if (errors && typeof errors === 'object') {\n          if (errors['passwordMatch']) delete errors['passwordMatch'];\n        }\n        return control.errors;\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Photo.html":{"url":"interfaces/Photo.html","title":"interface - Photo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/data.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            url_large\n                                        \n                                \n                                \n                                        \n                                            url_medium\n                                        \n                                \n                                \n                                        \n                                            url_small\n                                        \n                                \n                                \n                                        \n                                            url_thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_large:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_medium:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_small:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url_thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url_thumbnail:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Pagination{\n    page:number,\n    pageSize:number,\n    pageCount:number,\n    total:number\n}\n\nexport interface PaginatedData{\n    data:T[],\n    pagination:Pagination\n}\n\nexport interface Photo {\n    id: number,\n    url_small: string,\n    url_medium: string,\n    url_large: string,\n    url_thumbnail: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PictureSelectableComponent.html":{"url":"components/PictureSelectableComponent.html","title":"component - PictureSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PictureSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PICTURE_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-picture-selectable\n            \n\n\n\n            \n                styleUrls\n                ./picture-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./picture-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _picture\n                            \n                            \n                                hasValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                picture$\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePicture\n                            \n                            \n                                close\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePicture\n                            \n                            \n                                onDeletePicture\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pictureModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of PictureSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        pictureModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for managing modal windows.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePicture\n                        \n                    \n                \n            \n            \n                \nchangePicture(picture: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Changes the selected picture.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new picture value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:124\n                        \n                    \n\n\n            \n                \n                        Closes the picture modal.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:35\n                        \n                    \n\n\n            \n                \n                        This method is called when the component is being destroyed. It ensures\nthat any subscriptions to the BehaviorSubject for the selected picture are properly\nterminated by completing the BehaviorSubject, preventing potential memory leaks.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangePicture\n                        \n                    \n                \n            \n            \n                \nonChangePicture(event: Event, fileLoader: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Event handler for changing the picture by uploading a file.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event triggering the picture change.\n\n\n                                            \n                                        \n                                        \n                                                fileLoader\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HTML input element for file uploading.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeletePicture\n                        \n                    \n                \n            \n            \n                \nonDeletePicture(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:116\n                        \n                    \n\n\n            \n                \n                        Event handler for deleting the selected picture.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event triggering the picture deletion.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:61\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating if the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _picture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        picture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._picture.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:44\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const PICTURE_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-picture-selectable',\n  templateUrl: './picture-selectable.component.html',\n  styleUrls: ['./picture-selectable.component.scss'],\n  providers: [PICTURE_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class PictureSelectableComponent implements OnInit {\n  private _picture = new BehaviorSubject('');\n  public picture$ = this._picture.asObservable();\n  isDisabled: boolean = false;\n  hasValue: boolean = false;\n\n  /**\n   * Creates an instance of PictureSelectableComponent.\n   * @param pictureModal - The ModalController for managing modal windows.\n   */\n  constructor(private pictureModal: ModalController) {}\n\n  /**\n   * This method is called when the component is being destroyed. It ensures\n   * that any subscriptions to the BehaviorSubject for the selected picture are properly\n   * terminated by completing the BehaviorSubject, preventing potential memory leaks.\n   */\n  ngOnDestroy(): void {\n    this._picture.complete();\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Writes a new value to the component.\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.hasValue = true;\n      this._picture.next(obj);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   * @param isDisabled - Boolean value indicating if the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.isDisabled = isDisabled;\n  }\n\n  /**\n   * Changes the selected picture.\n   * @param picture - The new picture value.\n   */\n  changePicture(picture: string) {\n    this.hasValue = picture != '';\n    this._picture.next(picture);\n    this.propagateChange(picture);\n  }\n\n  /**\n   * Event handler for changing the picture by uploading a file.\n   * @param event - The event triggering the picture change.\n   * @param fileLoader - The HTML input element for file uploading.\n   */\n  onChangePicture(event: Event, fileLoader: HTMLInputElement) {\n    event.stopPropagation();\n    fileLoader.onchange = () => {\n      if (fileLoader.files && fileLoader.files?.length > 0) {\n        var file = fileLoader.files[0];\n        var reader = new FileReader();\n        reader.onload = () => {\n          this.changePicture(reader.result as string);\n        };\n        reader.onerror = (error) => {\n          console.log(error);\n        };\n        reader.readAsDataURL(file);\n      }\n    };\n    fileLoader.click();\n  }\n\n  /**\n   * Event handler for deleting the selected picture.\n   * @param event - The event triggering the picture deletion.\n   */\n  onDeletePicture(event: Event) {\n    event.stopPropagation();\n    this.changePicture('');\n  }\n\n  /**\n   * Closes the picture modal.\n   */\n  close() {\n    this.pictureModal?.dismiss();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n        \n    \n    \n        \n    \n  \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./picture-selectable.component.scss\n                \n                div.user-picture {\n    height: 200px;\n    width: 300px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  \n    ion-img {\n      width: 100%;\n      height: 100%;\n      align-items: center;\n      cursor: pointer;\n    }\n  \n    ion-button.picture-button {\n      margin: 0;\n      --padding-start: 0;\n      --padding-end: 0;\n  \n      .button-native {\n        padding: 0 !important;\n      }\n    }\n  }\n  \n  ion-modal.auto-height {\n    &.bottom {\n      align-items: flex-end;\n    }\n  \n    --height: auto;\n  \n    .ion-page {\n      position: relative;\n      display: block;\n      contain: content;\n  \n      .inner-content {\n        max-height: 80vh;\n        overflow: auto;\n        padding: 10px;\n      }\n    }\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PictureSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterFormComponent.html":{"url":"components/RegisterFormComponent.html","title":"component - RegisterFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/access/register-form/register-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register-form\n            \n\n\n\n            \n                styleUrls\n                ./register-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./register-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                hide\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onsubmit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:25\n                            \n                        \n\n                \n                    \n                            Constructs the RegisterFormComponent.\nInitializes the form with form controls and validators.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nFormBuilder service for building the form.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onsubmit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/access/register-form/register-form.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/register-form/register-form.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/access/register-form/register-form.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Event handler for form submission.\nEmits the user registration information through the onsubmit event emitter.\nResets the form after submission.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/access/register-form/register-form.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport {\n  FormGroup,\n  FormControl,\n  FormBuilder,\n  Validators,\n} from '@angular/forms';\nimport { UserRegisterInfo } from 'src/app/core/interfaces/user-info';\nimport { EmailValidation } from 'src/app/core/validators/email';\nimport { PasswordValidation } from 'src/app/core/validators/password';\n\n@Component({\n  selector: 'app-register-form',\n  templateUrl: './register-form.component.html',\n  styleUrls: ['./register-form.component.scss'],\n})\nexport class RegisterFormComponent implements OnInit {\n  form: FormGroup;\n  hide = true;\n\n  /* The `@Output() onsubmit = new EventEmitter();` line in the code snippet is\n  creating an output property named `onsubmit` of type `EventEmitter`. This output\n  property allows the `RegisterFormComponent` to emit events containing `UserRegisterInfo` data to\n  its parent component or any component that uses this form. */\n  @Output() onsubmit = new EventEmitter();\n\n  /**\n   * Constructs the RegisterFormComponent.\n   * Initializes the form with form controls and validators.\n   * @param {FormBuilder} formBuilder - FormBuilder service for building the form.\n   */\n  constructor(private formBuilder: FormBuilder) {\n    this.form = this.formBuilder.group(\n      {\n        name: ['', [Validators.required]],\n        surname: ['', [Validators.required]],\n        email: ['', [Validators.required, EmailValidation.email()]],\n        username: ['', [Validators.required]],\n        password: [\n          '',\n          [Validators.required, PasswordValidation.passwordProto()],\n        ],\n        repPassword: [\n          '',\n          [Validators.required, PasswordValidation.passwordProto()],\n        ],\n      },\n      {\n        validators: [\n          PasswordValidation.passwordMatch('password', 'repPassword'),\n        ],\n      }\n    );\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Event handler for form submission.\n   * Emits the user registration information through the onsubmit event emitter.\n   * Resets the form after submission.\n   */\n  onSub() {\n    this.onsubmit.emit(this.form?.value);\n    this.form.reset({\n      name: '',\n      surname: '',\n      email: '',\n      username: '',\n      password: '',\n      repPassword: '',\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{ 'forms.name' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.surname' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.email' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n    \n      {{ 'errors.emailError' | translate }}\n    \n  \n\n  \n    {{ 'forms.username' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n\n  \n    {{ 'forms.password' | translate }}\n    \n    \n      {{ 'errors.valid' | translate }}\n    \n  \n  \n  \n    {{ 'forms.repPassword' | translate }}\n    \n    \n      {{ hide ? 'visibility_off' : 'visibility' }}\n    \n    \n      {{ 'errors.repeatError' | translate }}\n    \n  \n\n  {{ \"forms.register\" | translate }}\n\n    \n\n    \n                \n                    ./register-form.component.scss\n                \n                form {\n  margin-top: 8%;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n\n  .register--button {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n  }\n}\n\n@media (max-width: 900px) {\n  div {\n    margin-top: 30%;\n  }\n  .access__image {\n      display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'forms.name\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.surname\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.email\\' | translate }}              {{ \\'errors.valid\\' | translate }}              {{ \\'errors.emailError\\' | translate }}            {{ \\'forms.username\\' | translate }}              {{ \\'errors.valid\\' | translate }}            {{ \\'forms.password\\' | translate }}              {{ \\'errors.valid\\' | translate }}              {{ \\'forms.repPassword\\' | translate }}              {{ hide ? \\'visibility_off\\' : \\'visibility\\' }}              {{ \\'errors.repeatError\\' | translate }}        {{ \"forms.register\" | translate }}'\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsPage.html":{"url":"components/SettingsPage.html","title":"component - SettingsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/settings/settings.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings\n            \n\n\n\n            \n                styleUrls\n                ./settings.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentLang\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setLanguage\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, userService: UsersService, myModal: ModalController, media: MediaService, _router: Router, auth: AuthService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/settings/settings.page.ts:20\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserDataPage.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for Firebase operations.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService for user-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for creating and managing modals.\n\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe MediaService for media-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Router for navigating between routes.\n\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe AuthService for authentication-related operations.\n\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The translate parameter in the constructor is of type CustomTranslateService.\nIt is used for handling translation services within the component or service where it is injected.\nThis service likely provides methods for translating text or messages into different languages or\nfor managing localization in the application.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:52\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nRetrieves the user data for the currently logged-in user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLanguage\n                        \n                    \n                \n            \n            \n                \nsetLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:108\n                        \n                    \n\n\n            \n                \n                        The function setLanguage sets the language for translation in a TypeScript application.\nlanguage code or identifier for the language to be set. This parameter is used to switch the\nlanguage of the application to the specified language\n:type lang: string\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe lang parameter in the setLanguage function is a string that represents the\nlanguage code or identifier for the language to be set. This parameter is used to switch the\nlanguage of the application to the specified language\n:type lang: string\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/settings/settings.page.ts:69\n                        \n                    \n\n\n            \n                \n                        Method for updating user profile information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/settings/settings.page.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { UpdateUserComponent } from '../user-data/update-user/update-user.component';\nimport { ModalController } from '@ionic/angular';\nimport { MediaService } from 'src/app/core/services/media.service';\nimport { Router } from '@angular/router';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  user: any | undefined;\n  currentLang: string;\n\n  /**\n   * Creates an instance of UserDataPage.\n   *\n   * @param _firebaseService - The FirebaseService for Firebase operations.\n   * @param userService - The UsersService for user-related operations.\n   * @param myModal - The ModalController for creating and managing modals.\n   * @param media - The MediaService for media-related operations.\n   * @param _router - The Router for navigating between routes.\n   * @param auth - The AuthService for authentication-related operations.\n   * @param translate The `translate` parameter in the constructor is of type `CustomTranslateService`.\n   * It is used for handling translation services within the component or service where it is injected.\n   * This service likely provides methods for translating text or messages into different languages or\n   * for managing localization in the application.\n   */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private userService: UsersService,\n    private myModal: ModalController,\n    private media: MediaService,\n    private _router: Router,\n    protected auth: AuthService,\n    private translate: CustomTranslateService\n  ) {\n    this.currentLang = this.translate.getCurrentLang();\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Retrieves the user data for the currently logged-in user.\n   */\n  ngOnInit() {\n    this.userService\n      .getUserById(this._firebaseService.user!.uid)\n      .subscribe((user) => {\n        if (user) {\n          this.user = user;\n        } else {\n          console.log('User not found!');\n        }\n      });\n  }\n\n  /**\n   * Method for updating user profile information.\n   *\n   * @param user - The updated user information.\n   */\n  async updateUser(user: UserInfo) {\n    const mod = await this.myModal.create({\n      component: UpdateUserComponent,\n      componentProps: {\n        userInfo: user,\n      },\n      cssClass: 'modalDesign',\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      console.log(results.data);\n      if (results?.data?.picture) {\n        if (results?.data?.picture?.substring(0, 4) == 'data') {\n          dataURLtoBlob(results.data.picture, (blob: Blob) => {\n            this.media.upload(blob).subscribe((media: number[]) => {\n              results.data.picture = media[0];\n              this.userService.updateUser(results.data);\n            });\n          });\n        } else {\n          results.data.picture = user.picture;\n          this.userService.updateUser(results.data);\n        }\n      } else {\n        results.data.picture = '';\n        this.userService.updateUser(results.data);\n      }\n    }\n  }\n\n  /**\n   * The function `setLanguage` sets the language for translation in a TypeScript application.\n   * \n   * @param lang - The `lang` parameter in the `setLanguage` function is a string that represents the\n   * language code or identifier for the language to be set. This parameter is used to switch the\n   * language of the application to the specified language\n   * :type lang: string\n   */\n  setLanguage(lang: string) {\n    this.translate.use(lang);\n    this.currentLang = lang;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n\n        {{(auth.user$|async)?.name}} {{(auth.user$|async)?.surname}}\n\n        {{(auth.user$|async)?.username}}\n\n        {{'forms.admin' | translate}}\n\n        {{\"data.update\" | translate}}\n       \n    \n  \n\n  \n    \n      \n        \n          \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./settings.page.scss\n                \n                .content {\n    width: 70%;\n    margin: 3% auto;\n\n    .languages {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-around;\n        padding: 2%;\n        gap: 50px;\n\n        div {\n            display: flex;\n            justify-content: center;\n\n            img {\n                width: 40%;\n            }\n        }\n\n        .selected {\n            outline: 2px solid #0F212D;\n            border-radius: 4px;\n        }\n\n    }\n}\n\n.user {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--username {\n        margin: 0;\n    }\n\n    &--role {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n\n    &:hover {\n        background-color: #1b3e56;\n    }\n\n    &:disabled {\n        background-color: #cccccc;\n        color: #777777;\n        cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .content {\n        width: 80%;\n    }\n\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n\n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{(auth.user$|async)?.name}} {{(auth.user$|async)?.surname}}        {{(auth.user$|async)?.username}}        {{\\'forms.admin\\' | translate}}        {{\"data.update\" | translate}}                                                                                                                     '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageModule.html":{"url":"modules/SettingsPageModule.html","title":"module - SettingsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_imports\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nSettingsPageRoutingModule\n\nSettingsPageRoutingModule\n\nSettingsPageModule -->\n\nSettingsPageRoutingModule->SettingsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SettingsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { SettingsPageRoutingModule } from './settings-routing.module';\n\nimport { SettingsPage } from './settings.page';\nimport { AccordionModule } from 'primeng/accordion';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule,\n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    AccordionModule\n  ],\n  declarations: [SettingsPage]\n})\nexport class SettingsPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsPageRoutingModule.html":{"url":"modules/SettingsPageRoutingModule.html","title":"module - SettingsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/settings/settings-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsPage } from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nCategoriesInfoComponent\n\nCategoriesInfoComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nCategoriesInfoComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nIncidentsCircleGraphicComponent\n\nIncidentsCircleGraphicComponent\n\nSharedModule -->\n\nIncidentsCircleGraphicComponent->SharedModule\n\n\n\n\n\nIncidentsInfoComponent\n\nIncidentsInfoComponent\n\nSharedModule -->\n\nIncidentsInfoComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nUserCircleGraphicComponent\n\nUserCircleGraphicComponent\n\nSharedModule -->\n\nUserCircleGraphicComponent->SharedModule\n\n\n\n\n\nUsersInfoComponent\n\nUsersInfoComponent\n\nSharedModule -->\n\nUsersInfoComponent->SharedModule\n\n\n\n\n\nCategoriesInfoComponent \n\nCategoriesInfoComponent \n\nCategoriesInfoComponent  -->\n\nSharedModule->CategoriesInfoComponent \n\n\n\n\n\nConfirmDialogComponent \n\nConfirmDialogComponent \n\nConfirmDialogComponent  -->\n\nSharedModule->ConfirmDialogComponent \n\n\n\n\n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent  -->\n\nSharedModule->IncidentsCircleGraphicComponent \n\n\n\n\n\nIncidentsInfoComponent \n\nIncidentsInfoComponent \n\nIncidentsInfoComponent  -->\n\nSharedModule->IncidentsInfoComponent \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent  -->\n\nSharedModule->UserCircleGraphicComponent \n\n\n\n\n\nUsersInfoComponent \n\nUsersInfoComponent \n\nUsersInfoComponent  -->\n\nSharedModule->UsersInfoComponent \n\n\n\n\n\nShortenTextPipe\n\nShortenTextPipe\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CategoriesInfoComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            IncidentsCircleGraphicComponent\n                        \n                        \n                            IncidentsInfoComponent\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            UserCircleGraphicComponent\n                        \n                        \n                            UsersInfoComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ShortenTextPipe\n                        \n                        \n                            ShortenTextPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoriesInfoComponent\n                        \n                        \n                            ConfirmDialogComponent\n                        \n                        \n                            IncidentsCircleGraphicComponent\n                        \n                        \n                            IncidentsInfoComponent\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            UserCircleGraphicComponent\n                        \n                        \n                            UsersInfoComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { IonicModule } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from '../core/translate/translate';\nimport { UsersInfoComponent } from './components/users-info/users-info.component';\nimport { ShortenTextPipe } from '../core/pipes/shorten-text.pipe';\nimport { PictureSelectableComponent } from './components/picture-selectable/picture-selectable.component';\nimport { IncidentsInfoComponent } from './components/incidents-info/incidents-info.component';\nimport { CategoriesInfoComponent } from './components/categories-info/categories-info.component';\nimport { ConfirmDialogComponent } from './components/confirm-dialog/confirm-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ChartModule } from 'primeng/chart';\nimport { UserCircleGraphicComponent } from './components/user-circle-graphic/user-circle-graphic.component';\nimport { IncidentsCircleGraphicComponent } from './components/incidents-circle-graphic/incidents-circle-graphic.component';\n\n\n@NgModule({\n  declarations: [\n    UsersInfoComponent,\n    PictureSelectableComponent,\n    IncidentsInfoComponent,\n    CategoriesInfoComponent,\n    ConfirmDialogComponent,\n    UserCircleGraphicComponent,\n    IncidentsCircleGraphicComponent\n  ],\n  imports: [\n    CommonModule,\n    ChartModule,\n    IonicModule.forRoot(), \n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    ShortenTextPipe,\n    ShortenTextPipe,\n    MatDialogModule,\n    MatButtonModule\n  ],\n  exports: [\n    UsersInfoComponent,\n    PictureSelectableComponent,\n    IncidentsInfoComponent,\n    CategoriesInfoComponent,\n    ConfirmDialogComponent,\n    UserCircleGraphicComponent,\n    IncidentsCircleGraphicComponent\n  ]\n})\nexport class SharedModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShortenTextPipe.html":{"url":"pipes/ShortenTextPipe.html","title":"pipe - ShortenTextPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ShortenTextPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/core/pipes/shorten-text.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        shortenText\n                    \n                    \n                        Standalone\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | undefined, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/pipes/shorten-text.pipe.ts:23\n                        \n                    \n\n\n            \n                \n                        The function \"transform\" takes a string value and limits its length to a specified number, adding\nellipsis if necessary.\ntransformed.\nreturned by the transform function. If the length of the value string is greater than the\nlimit, the function will truncate the string to the limit length and append a period ('.') at\nthe end\ndefault value of 15. It checks if the length of the value is greater than the limit. If it is,\nit returns a substring of the value up to the limit followed by a period. If the length of the\nvalue is not greater than the\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    The value parameter is a string that represents the input value that will be\ntransformed.\n\n                                            \n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    6\n                                            \n\n                                            \n                                                    The limit parameter specifies the maximum length of the string that will be\nreturned by the transform function. If the length of the value string is greater than the\nlimit, the function will truncate the string to the limit length and append a period ('.') at\nthe end\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | undefined\n\n                        \n                            \n                                The function transform takes a string value and an optional number limit with a\ndefault value of 15. It checks if the length of the value is greater than the limit. If it is,\nit returns a substring of the value up to the limit followed by a period. If the length of the\nvalue is not greater than the\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'shortenText',\n  standalone: true,\n})\nexport class ShortenTextPipe implements PipeTransform {\n  /**\n   * The function \"transform\" takes a string value and limits its length to a specified number, adding\n   * ellipsis if necessary.\n   *\n   * @param value The `value` parameter is a string that represents the input value that will be\n   * transformed.\n   * @param limit The `limit` parameter specifies the maximum length of the string that will be\n   * returned by the `transform` function. If the length of the `value` string is greater than the\n   * `limit`, the function will truncate the string to the `limit` length and append a period ('.') at\n   * the end\n   * @return The function `transform` takes a string `value` and an optional number `limit` with a\n   * default value of 15. It checks if the length of the `value` is greater than the `limit`. If it is,\n   * it returns a substring of the `value` up to the `limit` followed by a period. If the length of the\n   * `value` is not greater than the\n   */\n  transform(value: string | undefined, limit: number = 6): string | undefined {\n    return value!.length > limit ? value!.substring(0, limit) + '...' : value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UpdateUserComponent.html":{"url":"components/UpdateUserComponent.html","title":"component - UpdateUserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UpdateUserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-data/update-user/update-user.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-update-user\n            \n\n\n\n            \n                styleUrls\n                ./update-user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./update-user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                showRoleField\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onCancel\n                            \n                            \n                                onSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userInfo\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userInfo\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modal: ModalController, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:36\n                            \n                        \n\n                \n                    \n                            Creates an instance of UpdateUserComponent.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FormBuilder service for building form instances.\n\n\n                                                        \n                                                \n                                                \n                                                        modal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ModalController for managing modal windows.\n\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userInfo\n                    \n                \n                \n                    \n                        Type :         UserInfo\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/user-data/update-user/update-user.component.ts:21\n                            \n                        \n                \n                    \n                        Setter method for setting user information to be edited.\nPopulates the form fields with the provided user information.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onCancel\n                        \n                    \n                \n            \n            \n                \nonCancel()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:79\n                        \n                    \n\n\n            \n                \n                        Handler for cancel action.\nDismisses the modal without passing any data to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSub\n                        \n                    \n                \n            \n            \n                \nonSub()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/update-user/update-user.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Handler for form submission.\nDismisses the modal and passes the updated user information to the parent component.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRoleField\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/update-user/update-user.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userInfo\n                    \n                \n\n\n                \n                    \n                        setuserInfo(user: UserInfo)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/user-data/update-user/update-user.component.ts:21\n                                \n                            \n                    \n                        \n                                Setter method for setting user information to be edited.\nPopulates the form fields with the provided user information.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            user\n                                                    \n                                                            \n                                                                            UserInfo\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe user information to be edited.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\n\n@Component({\n  selector: 'app-update-user',\n  templateUrl: './update-user.component.html',\n  styleUrls: ['./update-user.component.scss'],\n})\nexport class UpdateUserComponent implements OnInit {\n  form: FormGroup;\n  showRoleField: boolean = true;\n\n  /**\n   * Setter method for setting user information to be edited.\n   * Populates the form fields with the provided user information.\n   * @param user - The user information to be edited.\n   */\n  @Input() set userInfo(user: UserInfo) {\n    if (user) {\n      this.form.controls['picture'].setValue(user.picture);\n      this.form.controls['name'].setValue(user.name);\n      this.form.controls['surname'].setValue(user.surname);\n      this.form.controls['username'].setValue(user.username);\n      this.form.controls['uuid'].setValue(user.uuid);\n      this.form.controls['role'].setValue(user.role);\n\n      this.auth.user$.subscribe(currentUser => {\n        if (currentUser?.uuid === user.uuid) {\n          this.showRoleField = false;\n        }\n      });\n    }\n  }\n\n  /**\n   * Creates an instance of UpdateUserComponent.\n   * @param formBuilder - The FormBuilder service for building form instances.\n   * @param modal - The ModalController for managing modal windows.\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private modal: ModalController,\n    private auth: AuthService\n  ) {\n    this.form = this.formBuilder.group({\n      picture: ['', [Validators.required]],\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      username: ['', [Validators.required]],\n      role: ['', [Validators.required]],\n      uuid: [''],\n    });\n  }\n\n  ngOnInit() {}\n\n  /**\n   * Handler for form submission.\n   * Dismisses the modal and passes the updated user information to the parent component.\n   */\n  onSub() {\n    if (!this.showRoleField && this.form) {\n      this?.form?.get('role')?.setValue('admin');\n    }\n    this.modal.dismiss(this.form.value);\n  }\n\n  /**\n   * Handler for cancel action.\n   * Dismisses the modal without passing any data to the parent component.\n   */\n  onCancel() {\n    this.modal.dismiss(null);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n          \n      \n    \n    \n      {{'forms.update' | translate}}\n    \n  \n\n\n\n  \n      \n\n    \n      \n        {{ 'forms.name' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n    \n      \n        {{ 'forms.surname' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      \n        {{ 'forms.username' | translate }}\n        \n        \n          {{ 'errors.valid' | translate }}\n        \n      \n\n      \n        {{'forms.role' | translate}}\n        \n          {{'forms.admin' | translate}}\n          {{'forms.user' | translate}}\n        \n      \n\n      {{'forms.update' | translate}}\n    \n\n  \n\n\n    \n\n    \n                \n                    ./update-user.component.scss\n                \n                ion-icon {\n  color: #0F212D;\n}\n.form {\n  display: flex;\n  flex-direction: column;\n  padding: 2%;\n\n\n  button {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{\\'forms.update\\' | translate}}                                {{ \\'forms.name\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                                {{ \\'forms.surname\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                            {{ \\'forms.username\\' | translate }}                          {{ \\'errors.valid\\' | translate }}                            {{\\'forms.role\\' | translate}}                  {{\\'forms.admin\\' | translate}}          {{\\'forms.user\\' | translate}}                    {{\\'forms.update\\' | translate}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UpdateUserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserCircleGraphicComponent.html":{"url":"components/UserCircleGraphicComponent.html","title":"component - UserCircleGraphicComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserCircleGraphicComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-circle-graphic\n            \n\n\n\n            \n                styleUrls\n                ./user-circle-graphic.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-circle-graphic.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_firebaseService: FirebaseService, translate: CustomTranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:14\n                            \n                        \n\n                \n                    \n                            Constructs a component constructor function.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                FirebaseService - a service for handling Firebase-related operations.\n\n                                                        \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                        CustomTranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:30\n                        \n                    \n\n\n            \n                \n                        Initializes the component and fetches user data from Firebase to generate a chart.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { forkJoin, map, switchMap } from 'rxjs';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { CustomTranslateService } from 'src/app/core/services/translate/translate.service';\n\n@Component({\n  selector: 'app-user-circle-graphic',\n  templateUrl: './user-circle-graphic.component.html',\n  styleUrls: ['./user-circle-graphic.component.scss'],\n})\nexport class UserCircleGraphicComponent  implements OnInit {\n\n  data: any;\n  options: any;\n\n  /**\n  * Constructs a component constructor function.\n  * \n  * @param _firebaseService FirebaseService - a service for handling Firebase-related operations.\n  * @param translate CustomTranslateService - a service for handling translation services within the component or service where it is injected.\n  */\n  constructor(\n    private _firebaseService: FirebaseService,\n    private translate: CustomTranslateService\n  ) { }\n\n  /**\n  * Initializes the component and fetches user data from Firebase to generate a chart.\n  */\n  ngOnInit() {\n    this._firebaseService.users$.pipe(\n      map(users => {\n        const rolesCount = users.reduce((acc: any, user: any) => {\n          acc[user.role] = (acc[user.role] || 0) + 1;\n          return acc;\n        }, {});\n        const roles = Object.keys(rolesCount);\n        return { roles, rolesCount };\n      }),\n      switchMap(({ roles, rolesCount }) => {\n        return forkJoin(\n          roles.map(role => this.translate.get(`forms.${role}`))\n        ).pipe(\n          map(translations => ({\n            labels: translations,\n            datasets: [{\n              data: roles.map(role => rolesCount[role]),\n              backgroundColor: ['#42A5F5', '#66BB6A'],\n              hoverBackgroundColor: ['#64B5F6', '#81C784']\n            }]\n          }))\n        );\n      })\n    ).subscribe(chartData => {\n      this.data = chartData;\n      this.options = {\n        plugins: {\n          legend: {\n            labels: {\n              color: '#495057'\n            }\n          }\n        }\n      };\n    });\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./user-circle-graphic.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserCircleGraphicComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCredentials.html":{"url":"interfaces/UserCredentials.html","title":"interface - UserCredentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCredentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserDataPage.html":{"url":"components/UserDataPage.html","title":"component - UserDataPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserDataPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/user-data/user-data.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-data\n            \n\n\n\n            \n                styleUrls\n                ./user-data.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-data.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(route: ActivatedRoute, userService: UsersService, _router: Router, myModal: ModalController, media: MediaService, _firebaseSvc: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/user-data/user-data.page.ts:19\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserDataPage.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe ActivatedRoute service to get URL parameters.\n\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService to manage user data.\n\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe Router service for page navigation.\n\n\n                                                        \n                                                \n                                                \n                                                        myModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe modal controller to display and control modal windows.\n\n\n                                                        \n                                                \n                                                \n                                                        media\n                                                  \n                                                        \n                                                                        MediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe MediaService for handling media operations.\n\n\n                                                        \n                                                \n                                                \n                                                        _firebaseSvc\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/user-data.page.ts:44\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nSubscribes to changes in URL parameters to get the user ID\nand load corresponding user data.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(user: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/user-data/user-data.page.ts:65\n                        \n                    \n\n\n            \n                \n                        Method to update user data.\nOpens a modal for editing user data and updates the data\non the server once the editing is confirmed.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe updated user information.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/user-data.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/user-data/user-data.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ModalController } from '@ionic/angular';\nimport { User } from 'firebase/auth';\nimport { dataURLtoBlob } from 'src/app/core/helpers/blob';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\nimport { MediaService } from 'src/app/core/services/media.service';\nimport { UpdateUserComponent } from './update-user/update-user.component';\n\n@Component({\n  selector: 'app-user-data',\n  templateUrl: './user-data.page.html',\n  styleUrls: ['./user-data.page.scss'],\n})\nexport class UserDataPage implements OnInit {\n  userId: string | null = '';\n  user: any | undefined;\n\n  /**\n   * Creates an instance of UserDataPage.\n   * @param route - The ActivatedRoute service to get URL parameters.\n   * @param userService - The UsersService to manage user data.\n   * @param _router - The Router service for page navigation.\n   * @param myModal - The modal controller to display and control modal windows.\n   * @param media - The MediaService for handling media operations.\n   * @param _firebaseSvc - The FirebaseService for interacting with Firebase.\n   */\n  constructor(\n    private route: ActivatedRoute,\n    private userService: UsersService,\n    private _router: Router,\n    private myModal: ModalController,\n    private media: MediaService,\n    private _firebaseSvc: FirebaseService\n  ) {}\n\n  /**\n   * Method executed when the component is initialized.\n   * Subscribes to changes in URL parameters to get the user ID\n   * and load corresponding user data.\n   */\n  ngOnInit() {\n    this.route.paramMap.subscribe((params) => {\n      this.userId = params.get('id');\n      if (this.userId) {\n        this.userService.getUserById(this.userId).subscribe((user) => {\n          if (user) {\n            this.user = user;\n          } else {\n            console.log('User not found!');\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Method to update user data.\n   * Opens a modal for editing user data and updates the data\n   * on the server once the editing is confirmed.\n   * @param user - The updated user information.\n   */\n  async updateUser(user: UserInfo) {\n    const mod = await this.myModal.create({\n      component: UpdateUserComponent,\n      componentProps: {\n        userInfo: user,\n      },\n      cssClass: 'modalDesign',\n    });\n    await mod.present();\n    const results = await mod.onDidDismiss();\n    if (results && results.data) {\n      console.log(results.data);\n      if (results?.data?.picture) {\n        if (results?.data?.picture?.substring(0, 4) == 'data') {\n          dataURLtoBlob(results.data.picture, (blob: Blob) => {\n            this.media.upload(blob).subscribe((media: number[]) => {\n              results.data.picture = media[0];\n              this.userService.updateUser(results.data);\n            });\n          });\n          this._router.navigate(['/data']);\n        } else {\n          results.data.picture = user.picture;\n          this.userService.updateUser(results.data);\n          this._router.navigate(['/data']);\n        }\n      } else {\n        results.data.picture = '';\n        this.userService.updateUser(results.data);\n        this._router.navigate(['/data']);\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n\n    \n      \n\n        {{user.name}} {{user.surname}}\n\n        {{user.username}}\n\n        {{'forms.user' | translate}}\n        {{'forms.admin' | translate}}\n\n        {{\"data.update\" | translate}}\n       \n    \n  \n\n    \n\n    \n                \n                    ./user-data.page.scss\n                \n                .user {\n    width: 80%;\n    margin: 2% auto;\n    justify-content: center;\n    flex-wrap: wrap;\n    display: flex;\n    gap: 2%;\n\n    &--image {\n        width: 49%;\n        min-width: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n\n        img {\n            width: 40%;\n        }\n    }\n\n    &--info {\n        width: 40%;\n        min-width: 300px;\n\n    }\n}\n\n.detail {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n\n    &--name {\n        margin: 0;\n        font-weight: bold;\n        font-size: 2rem;\n    }\n\n    &--username {\n        margin: 0;\n    }\n\n    &--role {\n        margin: 0;\n    }\n}\n\nbutton {\n    padding: 1rem;\n    border: none;\n    border-radius: 4px;\n    background-color: #0F212D;\n    color: white;\n    font-weight: bold;\n    cursor: pointer;\n    \n    &:hover {\n      background-color: #1b3e56;\n    }\n  \n    &:disabled {\n      background-color: #cccccc;\n      color: #777777;\n      cursor: not-allowed;\n    }\n}\n\n@media (max-width: 900px) {\n    .user {\n        width: 80%;\n        margin: 8% auto;\n\n        &--image {\n            width: 100%;\n        }\n    \n        &--info {\n            width: 100%;\n\n            .detail {\n                margin-top: 5%;\n                &--name {\n                    font-size: 1.6rem;\n                }\n            }\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{user.name}} {{user.surname}}        {{user.username}}        {{\\'forms.user\\' | translate}}        {{\\'forms.admin\\' | translate}}        {{\"data.update\" | translate}}             '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserDataPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserDataPageModule.html":{"url":"modules/UserDataPageModule.html","title":"module - UserDataPageModule","body":"\n                   \n\n\n\n\n    Modules\n    UserDataPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserDataPageModule\n\n\n\ncluster_UserDataPageModule_imports\n\n\n\ncluster_UserDataPageModule_declarations\n\n\n\n\nUpdateUserComponent\n\nUpdateUserComponent\n\n\n\nUserDataPageModule\n\nUserDataPageModule\n\nUserDataPageModule -->\n\nUpdateUserComponent->UserDataPageModule\n\n\n\n\n\nUserDataPage\n\nUserDataPage\n\nUserDataPageModule -->\n\nUserDataPage->UserDataPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nUserDataPageModule -->\n\nSharedModule->UserDataPageModule\n\n\n\n\n\nUserDataPageRoutingModule\n\nUserDataPageRoutingModule\n\nUserDataPageModule -->\n\nUserDataPageRoutingModule->UserDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/user-data/user-data.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UpdateUserComponent\n                        \n                        \n                            UserDataPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            UserDataPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserDataPageRoutingModule } from './user-data-routing.module';\n\nimport { UserDataPage } from './user-data.page';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { createTranslateLoader } from 'src/app/core/translate/translate';\nimport { UpdateUserComponent } from './update-user/update-user.component';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    // Reactive form\n    ReactiveFormsModule,\n    IonicModule,\n    UserDataPageRoutingModule, \n    // Translate\n    TranslateModule.forChild({\n      loader: {\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [HttpClient]\n      }\n    }),\n    // Angular Material\n    MatFormFieldModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    MatSelectModule,\n    SharedModule\n  ],\n  declarations: [\n    UserDataPage,\n    UpdateUserComponent\n  ]\n})\nexport class UserDataPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserDataPageRoutingModule.html":{"url":"modules/UserDataPageRoutingModule.html","title":"module - UserDataPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserDataPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/user-data/user-data-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserDataPage } from './user-data.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserDataPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserDataPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRegisterInfo.html":{"url":"interfaces/UserRegisterInfo.html","title":"interface - UserRegisterInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRegisterInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/user-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Photo } from \"./data\";\n\nexport interface UserCredentials{\n    email:string,\n    password:string\n}\n\nexport interface UserInfo {\n    name: string;\n    surname: string;\n    picture?: string;\n    email: string;\n    role: string;\n    username: string;\n    uuid?: string;\n}\n\nexport interface UserRegisterInfo{\n    name: string;\n    surname: string;\n    username: string;\n    email: string;\n    password:string;\n    role: string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserSelectableComponent.html":{"url":"components/UserSelectableComponent.html","title":"component - UserSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/user-selectable/user-selectable.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                USER_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-user-selectable\n            \n\n\n\n            \n                styleUrls\n                ./user-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                            \n                                users\n                            \n                            \n                                userSelected\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                onUserClicked\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectUser\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                resetSignal\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:46\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService for fetching user data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:30\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:41\n                            \n                        \n                \n                    \n                        Setter method for setting the selected user.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:177\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Clears the selected user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:187\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Filters users based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter users.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:132\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:157\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Loads users from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked(popover: IonPopover, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:167\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a user from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectUser(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:80\n                        \n                    \n\n\n            \n                \n                        Selects a user by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the user to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:98\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:56\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:46\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:55\n                        \n                    \n\n            \n                \n                    - The UsersService for fetching user data.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n\n                \n                    \n                        setuser(_user: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/user-selectable/user-selectable.component.ts:41\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected user.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _user\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected user.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  SimpleChanges,\n  forwardRef,\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const USER_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-user-selectable',\n  templateUrl: './user-selectable.component.html',\n  styleUrls: ['./user-selectable.component.scss'],\n  providers: [USER_SELECTABLE_VALUE_ACCESSOR],\n})\nexport class UserSelectableComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  userSelected: any | undefined;\n  disabled: boolean = true;\n  users: any[] = [];\n\n  /**\n   * Setter method for setting the selected user.\n   *\n   * @param _user - The selected user.\n   */\n  @Input() set user(_user: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of UserSelectableComponent.\n   *\n   * @param userService - The UsersService for fetching user data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public userService: UsersService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads users from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.users$.subscribe({\n        next: (users) => {\n          this.users = users;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a user by its ID.\n   *\n   * @param id - The ID of the user to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectUser(id: string | undefined, propagate: boolean = false) {\n    if (id) {\n      await this.userService.getUserById(id).subscribe({\n        next: (user) => {\n          this.userSelected = user;\n        },\n      });\n    } else this.userSelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.userSelected.uuid);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectUser(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected user.\n   */\n  clearSelection() {\n    this.userSelected = undefined;\n  }\n\n  /**\n   * Filters users based on a search value.\n   *\n   * @param value - The search value to filter users.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering users.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a user from the list.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   * @param user - The selected user.\n   */\n  onUserClicked(popover: IonPopover, user: any) {\n    this.selectUser(user.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected user.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectUser(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n    {{userSelected.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n    \n\n    \n                \n                    ./user-selectable.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}    {{userSelected.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserSelectableMobileComponent.html":{"url":"components/UserSelectableMobileComponent.html","title":"component - UserSelectableMobileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserSelectableMobileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                USER_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-user-selectable-mobile\n            \n\n\n\n            \n                styleUrls\n                ./user-selectable-mobile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-selectable-mobile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                            \n                                    Public\n                                firebase\n                            \n                            \n                                propagateChange\n                            \n                            \n                                users\n                            \n                            \n                                userSelected\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearSearch\n                            \n                            \n                                clearSelection\n                            \n                            \n                                deselect\n                            \n                            \n                                    Private\n                                    Async\n                                filter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFilter\n                            \n                            \n                                    Async\n                                onLoadCategories\n                            \n                            \n                                onUserClicked\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Private\n                                    Async\n                                selectUser\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                resetSignal\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    user\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UsersService, firebase: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:39\n                            \n                        \n\n                \n                    \n                            Creates an instance of UserSelectableComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe UsersService for fetching user data.\n\n\n                                                        \n                                                \n                                                \n                                                        firebase\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for handling Firebase operations.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        resetSignal\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                \n                    \n                        Default value : new EventEmitter()\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:23\n                            \n                        \n                \n                    \n                        EventEmitter to emit a signal for resetting the selection.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :     any | null\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:34\n                            \n                        \n                \n                    \n                        Setter method for setting the selected user.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clearSearch\n                        \n                    \n                \n            \n            \n                \nclearSearch(input: IonInput)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Clears the search input field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                input\n                                            \n                                                        IonInput\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonInput component representing the search input field.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clearSelection\n                        \n                    \n                \n            \n            \n                \nclearSelection()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Clears the selected user.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deselect\n                        \n                    \n                \n            \n            \n                \ndeselect(popover: IonPopover | null)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:180\n                        \n                    \n\n\n            \n                \n                        Deselects the currently selected user.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover | null\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        filter\n                        \n                    \n                \n            \n            \n                \n                        \n                    filter(value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Filters users based on a search value.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe search value to filter users.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFilter\n                        \n                    \n                \n            \n            \n                \nonFilter(evt: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:150\n                        \n                    \n\n\n            \n                \n                        Event handler for filtering users.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                evt\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event containing the filter value.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoadCategories\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoadCategories()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:55\n                        \n                    \n\n\n            \n                \n                        Loads users from the backend.\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onUserClicked\n                        \n                    \n                \n            \n            \n                \nonUserClicked(popover: IonPopover, user: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:160\n                        \n                    \n\n\n            \n                \n                        Event handler for selecting a user from the list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                popover\n                                            \n                                                        IonPopover\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe IonPopover component for displaying the user list.\n\n\n                                            \n                                        \n                                        \n                                                user\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe selected user.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:102\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the value changes.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Registers a callback function to be executed when the component is touched.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe callback function to register.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        selectUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    selectUser(id: string | undefined, propagate: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Selects a user by its ID.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe ID of the user to select.\n\n\n                                            \n                                        \n                                        \n                                                propagate\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    false\n                                            \n\n                                            \n                                                    \nBoolean indicating whether to propagate the selection change.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:118\n                        \n                    \n\n\n            \n                \n                        Sets the disabled state of the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nBoolean value indicating whether the component should be disabled.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:91\n                        \n                    \n\n\n            \n                \n                        Writes a new value to the component.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe new value to be written.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        disabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        firebase\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FirebaseService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:49\n                        \n                    \n\n            \n                \n                    - The FirebaseService for handling Firebase operations.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:39\n                        \n                    \n\n            \n                \n                    Method for propagating changes to the Angular forms API.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userSelected\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UsersService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:48\n                        \n                    \n\n            \n                \n                    - The UsersService for fetching user data.\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n\n\n                \n                    \n                        setuser(_user: any | null)\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts:34\n                                \n                            \n                    \n                        \n                                Setter method for setting the selected user.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            _user\n                                                    \n                                                            \n                                                                        any | null\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    \nThe selected user.\n\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, forwardRef } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { IonPopover, IonInput } from '@ionic/angular';\nimport { UsersService } from 'src/app/core/services/api/users.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\nexport const USER_SELECTABLE_MOBILE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableMobileComponent),\n  multi: true,\n};\n\n@Component({\n  selector: 'app-user-selectable-mobile',\n  templateUrl: './user-selectable-mobile.component.html',\n  styleUrls: ['./user-selectable-mobile.component.scss'],\n  providers: [USER_SELECTABLE_MOBILE_VALUE_ACCESSOR]\n})\nexport class UserSelectableMobileComponent implements OnInit {\n  /**\n   * EventEmitter to emit a signal for resetting the selection.\n   */\n  @Input() resetSignal: EventEmitter = new EventEmitter();\n\n  userSelected: any | undefined;\n  disabled: boolean = true;\n  users: any[] = [];\n\n  /**\n   * Setter method for setting the selected user.\n   *\n   * @param _user - The selected user.\n   */\n  @Input() set user(_user: any | null) {}\n\n  /**\n   * Method for propagating changes to the Angular forms API.\n   */\n  propagateChange = (obj: any) => {};\n\n  /**\n   * Creates an instance of UserSelectableComponent.\n   *\n   * @param userService - The UsersService for fetching user data.\n   * @param firebase - The FirebaseService for handling Firebase operations.\n   */\n  constructor(\n    public userService: UsersService,\n    public firebase: FirebaseService\n  ) {}\n\n  /**\n   * Loads users from the backend.\n   */\n  async onLoadCategories() {\n    try {\n      this.firebase.users$.subscribe({\n        next: (users) => {\n          this.users = users;\n        },\n      });\n    } catch (error) {\n      console.error('Error loading categories:', error);\n    }\n  }\n\n  /**\n   * Selects a user by its ID.\n   *\n   * @param id - The ID of the user to select.\n   * @param propagate - Boolean indicating whether to propagate the selection change.\n   */\n  private async selectUser(id: string | undefined, propagate: boolean = false) {\n    if (id) {\n      await this.userService.getUserById(id).subscribe({\n        next: (user) => {\n          this.userSelected = user;\n        },\n      });\n    } else this.userSelected = undefined;\n    if (propagate) {\n      this.propagateChange(this.userSelected.uuid);\n    }\n  }\n\n  /**\n   * Writes a new value to the component.\n   *\n   * @param obj - The new value to be written.\n   */\n  writeValue(obj: any): void {\n    if (obj) {\n      this.selectUser(obj.name);\n    }\n  }\n\n  /**\n   * Registers a callback function to be executed when the value changes.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  /**\n   * Registers a callback function to be executed when the component is touched.\n   *\n   * @param fn - The callback function to register.\n   */\n  registerOnTouched(fn: any): void {}\n\n  /**\n   * Sets the disabled state of the component.\n   *\n   * @param isDisabled - Boolean value indicating whether the component should be disabled.\n   */\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   */\n  ngOnInit() {\n    this.resetSignal.subscribe(() => {\n      this.clearSelection();\n    });\n  }\n\n  /**\n   * Clears the selected user.\n   */\n  clearSelection() {\n    this.userSelected = undefined;\n  }\n\n  /**\n   * Filters users based on a search value.\n   *\n   * @param value - The search value to filter users.\n   */\n  private async filter(value: string) {}\n\n  /**\n   * Event handler for filtering users.\n   *\n   * @param evt - The event containing the filter value.\n   */\n  onFilter(evt: any) {\n    this.filter(evt.detail.value);\n  }\n\n  /**\n   * Event handler for selecting a user from the list.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   * @param user - The selected user.\n   */\n  onUserClicked(popover: IonPopover, user: any) {\n    this.selectUser(user.uuid, true);\n    popover.dismiss();\n  }\n\n  /**\n   * Clears the search input field.\n   *\n   * @param input - The IonInput component representing the search input field.\n   */\n  clearSearch(input: IonInput) {\n    input.value = '';\n    this.filter('');\n  }\n\n  /**\n   * Deselects the currently selected user.\n   *\n   * @param popover - The IonPopover component for displaying the user list.\n   */\n  deselect(popover: IonPopover | null = null) {\n    this.selectUser(undefined, true);\n    if (popover) popover.dismiss();\n  }\n}\n\n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n    {{userSelected.name}}\n\n\n\n\n\n  \n    \n      \n      \n        \n      \n\n    \n  \n\n\n    \n\n    \n                \n                    ./user-selectable-mobile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}    {{userSelected.name}}                                      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserSelectableMobileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersInfoComponent.html":{"url":"components/UsersInfoComponent.html","title":"component - UsersInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/users-info/users-info.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-info\n            \n\n\n\n            \n                styleUrls\n                ./users-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./users-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isScreenSmall\n                            \n                            \n                                users$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                dataUser\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                onUserClicked\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, auth: AuthService, firebaseService: FirebaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:32\n                            \n                        \n\n                \n                    \n                            The constructor function takes a Router object as a parameter and assigns it to a private property\nin a TypeScript class.\ninjection that allows the class to navigate between different components in the Angular\napplication.\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The router parameter in the constructor is of type Router. It is a dependency\ninjection that allows the class to navigate between different components in the Angular\napplication.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The auth parameter is of type AuthService, which is used for handling\nauthentication-related functionalities in the application. It seems to have an observable property\nisLogged$ that emits a boolean value indicating whether a user is logged in or not. The\nconstructor subscribes to this observable and navigates\n\n                                                        \n                                                \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nThe FirebaseService for interacting with Firebase.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        users\n                    \n                \n                \n                    \n                        Type :         UserInfo[] | null | undefined\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/users-info/users-info.component.ts:27\n                            \n                        \n                \n                    \n                        Represents the input property for passing user information to the component.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        onUserClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/users-info/users-info.component.ts:32\n                            \n                        \n                \n                    \n                        Represents the output property for emitting events when a user is clicked.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize(width: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Checks the screen size and sets a boolean flag accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                width\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    number - the width of the window.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataUser\n                        \n                    \n                \n            \n            \n                \ndataUser(userId: string | undefined)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:75\n                        \n                    \n\n\n            \n                \n                        Emits an event when a user is clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                        string | undefined\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    string | undefined - the ID of the user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Method executed when the component is initialized.\nRetrieves and filters user data from Firebase and the authentication service.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize(event: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/components/users-info/users-info.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Listens for window resize events and updates the screen size accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    any - the resize event.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isScreenSmall\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/users-info/users-info.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, combineLatest, map } from 'rxjs';\nimport { UserInfo } from 'src/app/core/interfaces/user-info';\nimport { AuthService } from 'src/app/core/services/auth.service';\nimport { FirebaseService } from 'src/app/core/services/firebase/firebase.service';\n\n@Component({\n  selector: 'app-users-info',\n  templateUrl: './users-info.component.html',\n  styleUrls: ['./users-info.component.scss'],\n})\nexport class UsersInfoComponent implements OnInit {\n  users$: Observable | null = null;\n  isScreenSmall: boolean = false;\n\n  /**\n   * Represents the input property for passing user information to the component.\n   */\n  @Input() users: UserInfo[] | null | undefined;\n\n  /**\n   * Represents the output property for emitting events when a user is clicked.\n   */\n  @Output() onUserClicked: EventEmitter = new EventEmitter();\n\n  /**\n   * The constructor function takes a Router object as a parameter and assigns it to a private property\n   * in a TypeScript class.\n   *\n   * @param router The `router` parameter in the constructor is of type `Router`. It is a dependency\n   * injection that allows the class to navigate between different components in the Angular\n   * application.\n   * @param auth The `auth` parameter is of type `AuthService`, which is used for handling\n   * authentication-related functionalities in the application. It seems to have an observable property\n   * `isLogged$` that emits a boolean value indicating whether a user is logged in or not. The\n   * constructor subscribes to this observable and navigates\n   * @param firebaseService - The FirebaseService for interacting with Firebase.\n   */\n  constructor(\n    private router: Router,\n    protected auth: AuthService,\n    protected firebaseService: FirebaseService\n  ) {\n    this.checkScreenSize(window.innerWidth);\n  }\n\n  /**\n   * Method executed when the component is initialized.\n   * Retrieves and filters user data from Firebase and the authentication service.\n   */\n  ngOnInit() {\n    this.users$ = combineLatest([\n      this.firebaseService.users$,\n      this.auth.user$,\n    ]).pipe(\n      map(([users, currentUser]) =>\n        users.filter((user) => user.uuid !== currentUser?.uuid)\n      )\n    );\n  }\n\n  /**\n   * Emits an event when a user is clicked.\n   *\n   * @param userId string | undefined - the ID of the user.\n   */\n  dataUser(userId: string | undefined) {\n    this.onUserClicked.emit(userId);\n  }\n\n  /**\n   * Listens for window resize events and updates the screen size accordingly.\n   *\n   * @param event any - the resize event.\n   */\n  @HostListener('window:resize', ['$event'])\n  onResize(event: any) {\n    this.checkScreenSize(event.target.innerWidth);\n  }\n\n  /**\n   * Checks the screen size and sets a boolean flag accordingly.\n   *\n   * @param width number - the width of the window.\n   */\n  private checkScreenSize(width: number) {\n    this.isScreenSmall = width \n    \n\n    \n        \n  \n    {{'data.users' | translate}}\n  \n\n  \n    {{'forms.name' | translate }}\n    {{'forms.surname' | translate }}\n    {{'forms.username' | translate }}\n    {{'forms.role' | translate }}\n  \n\n  \n    {{ user.name | shortenText }}\n    {{ user.name }}\n\n    {{ user.surname | shortenText }}\n    {{ user.surname }}\n\n    {{ user.username | shortenText }}\n    {{ user.username }}\n\n    {{'forms.user' | translate}}\n    {{'forms.user' | translate | shortenText }}\n\n    {{'forms.admin' | translate}}\n    {{'forms.admin' | translate | shortenText }}\n\n  \n\n    \n\n    \n                \n                    ./users-info.component.scss\n                \n                ion-list {\n    width: 80%;\n    margin: 3% auto;\n\n    ion-list-header {\n        --background: #0F212D;\n        --color: #fff;\n    }\n\n    .subheader {\n        ion-label {\n          font-weight: bold;\n        }\n    }\n\n    .data {\n        cursor: pointer;\n        position: relative;\n        border-top: 2px solid transparent;\n        border-bottom: 2px solid transparent;\n\n        &:hover {\n            border-color: #0F212D;\n        }\n    }\n}\n\n@media (max-width: 900px) {\n    .subheader {\n        ion-label {\n          margin-left: 0.2%;\n        }\n    }\n}\n\n@media (max-width: 700px) {\n    ion-list {\n        width: 100%;\n        margin-top: 5%;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{\\'data.users\\' | translate}}        {{\\'forms.name\\' | translate }}    {{\\'forms.surname\\' | translate }}    {{\\'forms.username\\' | translate }}    {{\\'forms.role\\' | translate }}        {{ user.name | shortenText }}    {{ user.name }}    {{ user.surname | shortenText }}    {{ user.surname }}    {{ user.username | shortenText }}    {{ user.username }}    {{\\'forms.user\\' | translate}}    {{\\'forms.user\\' | translate | shortenText }}    {{\\'forms.admin\\' | translate}}    {{\\'forms.admin\\' | translate | shortenText }}  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AccessPage', 'selector': 'app-access'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CategoriesInfoComponent', 'selector': 'app-categories-info'},{'name': 'CategorySelectableComponent', 'selector': 'app-category-selectable'},{'name': 'CategorySelectableMobileComponent', 'selector': 'app-category-selectable-mobile'},{'name': 'ConfirmDialogComponent', 'selector': 'app-confirm-dialog'},{'name': 'DataPage', 'selector': 'app-data'},{'name': 'FilterComponent', 'selector': 'app-filter'},{'name': 'FilterMobileComponent', 'selector': 'app-filter-mobile'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'IncidentDataPage', 'selector': 'app-incident-data'},{'name': 'IncidentsCircleGraphicComponent', 'selector': 'app-incidents-circle-graphic'},{'name': 'IncidentsInfoComponent', 'selector': 'app-incidents-info'},{'name': 'ItemCategoryComponent', 'selector': 'app-item-category'},{'name': 'ItemUserComponent', 'selector': 'app-item-user'},{'name': 'LoginFormComponent', 'selector': 'app-login-form'},{'name': 'ModalCategoryComponent', 'selector': 'app-modal-category'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'RegisterFormComponent', 'selector': 'app-register-form'},{'name': 'SettingsPage', 'selector': 'app-settings'},{'name': 'UpdateUserComponent', 'selector': 'app-update-user'},{'name': 'UserCircleGraphicComponent', 'selector': 'app-user-circle-graphic'},{'name': 'UserDataPage', 'selector': 'app-user-data'},{'name': 'UserSelectableComponent', 'selector': 'app-user-selectable'},{'name': 'UserSelectableMobileComponent', 'selector': 'app-user-selectable-mobile'},{'name': 'UsersInfoComponent', 'selector': 'app-users-info'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/api/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUserById\n                            \n                            \n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseService: FirebaseService, auth: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/api/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor function initializes a private firebaseService property using dependency\ninjection.\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseService\n                                                  \n                                                        \n                                                                        FirebaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The firebaseService parameter is an instance of the FirebaseService\nclass that is being injected into the constructor using Angular's dependency injection mechanism.\nThis allows the component or service to have access to the functionality provided by the\nFirebaseService class.\n\n                                                        \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUserById\n                        \n                    \n                \n            \n            \n                \ngetUserById(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:32\n                        \n                    \n\n\n            \n                \n                        The function getUserById retrieves user information by user ID from a Firebase service and\nreturns it as an observable stream.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The userId parameter is a string that represents the unique identifier of a user.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                An Observable of type UserInfo or undefined is being returned.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateUser\n                        \n                    \n                \n            \n            \n                \nupdateUser(data: UserInfo)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/api/users.service.ts:46\n                        \n                    \n\n\n            \n                \n                        The updateUser function in TypeScript updates user information using an authentication service.\ncontains information about the user that needs to be updated, such as their name, email, or other\nprofile details.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            UserInfo\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The data parameter in the updateUser function is of type UserInfo. It likely\ncontains information about the user that needs to be updated, such as their name, email, or other\nprofile details.\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserInfo } from '../../interfaces/user-info';\nimport { FirebaseService } from '../firebase/firebase.service';\nimport { take, map, Observable } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UsersService {\n  /**\n   * The constructor function initializes a private firebaseService property using dependency\n   * injection.\n   *\n   * @param firebaseService The `firebaseService` parameter is an instance of the `FirebaseService`\n   * class that is being injected into the constructor using Angular's dependency injection mechanism.\n   * This allows the component or service to have access to the functionality provided by the\n   * `FirebaseService` class.\n   */\n  constructor(\n    private firebaseService: FirebaseService,\n    private auth: AuthService\n  ) {}\n\n  /**\n   * The function `getUserById` retrieves user information by user ID from a Firebase service and\n   * returns it as an observable stream.\n   *\n   * @param userId The `userId` parameter is a string that represents the unique identifier of a user.\n   * @return An Observable of type UserInfo or undefined is being returned.\n   */\n  getUserById(userId: string): Observable {\n    return this.firebaseService.users$.pipe(\n      take(1),\n      map((users) => users.find((user) => user.uuid === userId))\n    );\n  }\n\n  /**\n   * The `updateUser` function in TypeScript updates user information using an authentication service.\n   *\n   * @param data The `data` parameter in the `updateUser` function is of type `UserInfo`. It likely\n   * contains information about the user that needs to be updated, such as their name, email, or other\n   * profile details.\n   */\n  updateUser(data: UserInfo) {\n    this.auth.updateUser(data).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                capacitor.config.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            AuthServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            httpProviderFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.module.ts\n            \n            function\n            MediaServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/guards/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/core/helpers/blob.ts\n            \n            function\n            dataURLtoBlob\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/category-info.ts\n            \n            interface\n            CategoryInfo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            PaginatedData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/data.ts\n            \n            interface\n            Photo\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/incidents-info.ts\n            \n            interface\n            incidentInfo\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserCredentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/interfaces/user-info.ts\n            \n            interface\n            UserRegisterInfo\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/pipes/capitalize-initial.pipe.ts\n            \n            pipe\n            CapitalizeInitialPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/pipes/shorten-text.pipe.ts\n            \n            pipe\n            ShortenTextPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/api/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/core/services/api/incidents.service.ts\n            \n            injectable\n            IncidentsService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/services/api/users.service.ts\n            \n            injectable\n            UsersService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/core/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (5/10)\n            \n        \n        \n            \n                \n                src/app/core/services/data.service.ts\n            \n            injectable\n            DataService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/app/core/services/filter/filter.service.ts\n            \n            injectable\n            FilterService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-auth.service.ts\n            \n            class\n            FirebaseAuthService\n            \n                58 %\n                (7/12)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-data.service.ts\n            \n            class\n            FirebaseDataService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-media.service.ts\n            \n            class\n            FirebaseMediaService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/api/firebase-media.service.ts\n            \n            interface\n            Media\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            injectable\n            FirebaseService\n            \n                59 %\n                (22/37)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseDocument\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseStorageFile\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/firebase/firebase.service.ts\n            \n            interface\n            FirebaseUserCredential\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client-web.provider.ts\n            \n            injectable\n            HttpClientWebProvider\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/core/services/http/http-client.provider.ts\n            \n            injectable\n            HttpClientProvider\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/services/media.service.ts\n            \n            injectable\n            MediaService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/services/translate/local.service.ts\n            \n            injectable\n            LocalService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/services/translate/translate.service.ts\n            \n            injectable\n            CustomTranslateService\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/core/translate/translate.ts\n            \n            function\n            createTranslateLoader\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/validators/email.ts\n            \n            class\n            EmailValidation\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/core/validators/password.ts\n            \n            class\n            PasswordValidation\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/pages/access/access.page.ts\n            \n            component\n            AccessPage\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/pages/access/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/pages/access/register-form/register-form.component.ts\n            \n            component\n            RegisterFormComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/pages/data/data.page.ts\n            \n            component\n            DataPage\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/pages/data/modal-category/modal-category.component.ts\n            \n            component\n            ModalCategoryComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n            \n            component\n            CategorySelectableMobileComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n            \n            variable\n            CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable/category-selectable.component.ts\n            \n            component\n            CategorySelectableComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/category-selectable/category-selectable.component.ts\n            \n            variable\n            CATEGORY_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/filter-mobile/filter-mobile.component.ts\n            \n            component\n            FilterMobileComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/pages/home/filter/filter.component.ts\n            \n            component\n            FilterComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/pages/home/item-category/item-category.component.ts\n            \n            component\n            ItemCategoryComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/pages/home/item-user/item-user.component.ts\n            \n            component\n            ItemUserComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n            \n            component\n            UserSelectableMobileComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n            \n            variable\n            USER_SELECTABLE_MOBILE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable/user-selectable.component.ts\n            \n            component\n            UserSelectableComponent\n            \n                82 %\n                (19/23)\n            \n        \n        \n            \n                \n                src/app/pages/home/user-selectable/user-selectable.component.ts\n            \n            variable\n            USER_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/incident-data/incident-data.page.ts\n            \n            component\n            IncidentDataPage\n            \n                66 %\n                (6/9)\n            \n        \n        \n            \n                \n                src/app/pages/settings/settings.page.ts\n            \n            component\n            SettingsPage\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/pages/user-data/update-user/update-user.component.ts\n            \n            component\n            UpdateUserComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/pages/user-data/user-data.page.ts\n            \n            component\n            UserDataPage\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/categories-info/categories-info.component.ts\n            \n            component\n            CategoriesInfoComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/shared/components/confirm-dialog/confirm-dialog.component.ts\n            \n            component\n            ConfirmDialogComponent\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/app/shared/components/incidents-circle-graphic/incidents-circle-graphic.component.ts\n            \n            component\n            IncidentsCircleGraphicComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/incidents-info/incidents-info.component.ts\n            \n            component\n            IncidentsInfoComponent\n            \n                61 %\n                (8/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            component\n            PictureSelectableComponent\n            \n                64 %\n                (11/17)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            variable\n            PICTURE_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/user-circle-graphic/user-circle-graphic.component.ts\n            \n            component\n            UserCircleGraphicComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/shared/components/users-info/users-info.component.ts\n            \n            component\n            UsersInfoComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.2\n        \n            @angular/cdk : ^17.3.3\n        \n            @angular/common : ^17.0.2\n        \n            @angular/compiler : ^17.0.2\n        \n            @angular/core : ^17.0.2\n        \n            @angular/forms : ^17.0.2\n        \n            @angular/material : ^17.3.3\n        \n            @angular/platform-browser : ^17.0.2\n        \n            @angular/platform-browser-dynamic : ^17.0.2\n        \n            @angular/router : ^17.0.2\n        \n            @capacitor/android : 5.7.4\n        \n            @capacitor/app : 5.0.7\n        \n            @capacitor/core : 5.7.4\n        \n            @capacitor/haptics : ^5.0.7\n        \n            @capacitor/keyboard : 5.0.8\n        \n            @capacitor/status-bar : 5.0.7\n        \n            @fortawesome/fontawesome-svg-core : ^6.5.2\n        \n            @fortawesome/free-solid-svg-icons : ^6.5.2\n        \n            @ionic/angular : ^7.0.0\n        \n            @lottiefiles/lottie-player : ^2.0.4\n        \n            @ngx-translate/core : ^15.0.0\n        \n            @ngx-translate/http-loader : ^8.0.0\n        \n            chart.js : ^4.4.3\n        \n            firebase : ^10.10.0\n        \n            ionicons : ^7.0.0\n        \n            lottie-web : ^5.12.2\n        \n            ngx-lottie : ^11.0.2\n        \n            papaparse : ^5.4.1\n        \n            primeng : ^17.13.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AuthServiceFactory   (src/.../app.module.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../translate.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../blob.ts)\n                        \n                        \n                            httpProviderFactory   (src/.../app.module.ts)\n                        \n                        \n                            MediaServiceFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthServiceFactory\n                        \n                    \n                \n            \n            \n                \nAuthServiceFactory(backend: string, firebase: FirebaseService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        httpProviderFactory\n                        \n                    \n                \n            \n            \n                \nhttpProviderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MediaServiceFactory\n                        \n                    \n                \n            \n            \n                \nMediaServiceFactory(backend: string, firebase: FirebaseService)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                backend\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                firebase\n                                            \n                                                            FirebaseService\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/translate/translate.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n                        Function to create a loader for translation files.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nHttpClient instance used for loading translation files.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/core/helpers/blob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataUrl: string, callback)\n                \n            \n\n\n\n\n            \n                \n                        The function dataURLtoBlob converts a data URL to a Blob object and provides the Blob through a\ncallback function.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                dataUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The dataUrl parameter in the dataURLtoBlob function is a string that represents a\ndata URL. Data URLs are URLs that contain data, such as base64 encoded images or other resources,\ndirectly within the URL string.\n\n                                            \n                                        \n                                        \n                                                callback\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    The callback parameter is a function that will be called once the operation is\ncompleted. It takes a Blob object as its argument. You can pass a function to the dataURLtoBlob\nfunction as the callback parameter to handle the Blob object once it is created\n\n                                            \n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/incidentInfo.html":{"url":"interfaces/incidentInfo.html","title":"interface - incidentInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  incidentInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/interfaces/incidents-info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            categoryName\n                                        \n                                \n                                \n                                        \n                                            checked\n                                        \n                                \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            resolved\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                                \n                                        \n                                            uuid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        categoryName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        categoryName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        checked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        checked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:     Timestamp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Timestamp\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         Photo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Photo\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolved\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resolved:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uuid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uuid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Timestamp } from \"firebase/firestore\";\nimport { Photo } from \"./data\";\n\nexport interface incidentInfo {\n    checked: boolean,\n    date: Timestamp,\n    description: string,\n    image: Photo,\n    resolved: boolean,\n    title: string,\n    userId: string,\n    uuid: string,\n    categoryName: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\ncluster_AccessPageModule\n\n\n\ncluster_AccessPageModule_declarations\n\n\n\ncluster_AccessPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_DataPageModule\n\n\n\ncluster_DataPageModule_declarations\n\n\n\ncluster_DataPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_IncidentDataPageModule\n\n\n\ncluster_IncidentDataPageModule_declarations\n\n\n\ncluster_IncidentDataPageModule_imports\n\n\n\ncluster_SettingsPageModule\n\n\n\ncluster_SettingsPageModule_declarations\n\n\n\ncluster_SettingsPageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_imports\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_UserDataPageModule\n\n\n\ncluster_UserDataPageModule_declarations\n\n\n\ncluster_UserDataPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nAccessPage\n\nAccessPage\n\n\n\nAccessPageModule\n\nAccessPageModule\n\nAccessPageModule -->\n\nAccessPage->AccessPageModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nAccessPageModule -->\n\nLoginFormComponent->AccessPageModule\n\n\n\n\n\nRegisterFormComponent\n\nRegisterFormComponent\n\nAccessPageModule -->\n\nRegisterFormComponent->AccessPageModule\n\n\n\n\n\nAccessPageRoutingModule\n\nAccessPageRoutingModule\n\nAccessPageModule -->\n\nAccessPageRoutingModule->AccessPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAccessPageModule -->\n\nSharedModule->AccessPageModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nDataPageModule\n\nDataPageModule\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\nDataPageModule -->\n\nSharedModule->DataPageModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\nCategoriesInfoComponent \n\nCategoriesInfoComponent \n\nCategoriesInfoComponent  -->\n\nSharedModule->CategoriesInfoComponent \n\n\n\n\n\nConfirmDialogComponent \n\nConfirmDialogComponent \n\nConfirmDialogComponent  -->\n\nSharedModule->ConfirmDialogComponent \n\n\n\n\n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent \n\nIncidentsCircleGraphicComponent  -->\n\nSharedModule->IncidentsCircleGraphicComponent \n\n\n\n\n\nIncidentsInfoComponent \n\nIncidentsInfoComponent \n\nIncidentsInfoComponent  -->\n\nSharedModule->IncidentsInfoComponent \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent \n\nUserCircleGraphicComponent  -->\n\nSharedModule->UserCircleGraphicComponent \n\n\n\n\n\nUsersInfoComponent \n\nUsersInfoComponent \n\nUsersInfoComponent  -->\n\nSharedModule->UsersInfoComponent \n\n\n\n\n\nUserDataPageModule\n\nUserDataPageModule\n\nUserDataPageModule -->\n\nSharedModule->UserDataPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nCapitalizeInitialPipe\n\nCapitalizeInitialPipe\n\nAppModule -->\n\nCapitalizeInitialPipe->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nDataPage\n\nDataPage\n\nDataPageModule -->\n\nDataPage->DataPageModule\n\n\n\n\n\nModalCategoryComponent\n\nModalCategoryComponent\n\nDataPageModule -->\n\nModalCategoryComponent->DataPageModule\n\n\n\n\n\nDataPageRoutingModule\n\nDataPageRoutingModule\n\nDataPageModule -->\n\nDataPageRoutingModule->DataPageModule\n\n\n\n\n\nCategorySelectableComponent\n\nCategorySelectableComponent\n\nHomePageModule -->\n\nCategorySelectableComponent->HomePageModule\n\n\n\n\n\nCategorySelectableMobileComponent\n\nCategorySelectableMobileComponent\n\nHomePageModule -->\n\nCategorySelectableMobileComponent->HomePageModule\n\n\n\n\n\nFilterComponent\n\nFilterComponent\n\nHomePageModule -->\n\nFilterComponent->HomePageModule\n\n\n\n\n\nFilterMobileComponent\n\nFilterMobileComponent\n\nHomePageModule -->\n\nFilterMobileComponent->HomePageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nItemCategoryComponent\n\nItemCategoryComponent\n\nHomePageModule -->\n\nItemCategoryComponent->HomePageModule\n\n\n\n\n\nItemUserComponent\n\nItemUserComponent\n\nHomePageModule -->\n\nItemUserComponent->HomePageModule\n\n\n\n\n\nUserSelectableComponent\n\nUserSelectableComponent\n\nHomePageModule -->\n\nUserSelectableComponent->HomePageModule\n\n\n\n\n\nUserSelectableMobileComponent\n\nUserSelectableMobileComponent\n\nHomePageModule -->\n\nUserSelectableMobileComponent->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nIncidentDataPage\n\nIncidentDataPage\n\n\n\nIncidentDataPageModule\n\nIncidentDataPageModule\n\nIncidentDataPageModule -->\n\nIncidentDataPage->IncidentDataPageModule\n\n\n\n\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageRoutingModule\n\nIncidentDataPageModule -->\n\nIncidentDataPageRoutingModule->IncidentDataPageModule\n\n\n\n\n\nSettingsPage\n\nSettingsPage\n\n\n\nSettingsPageModule\n\nSettingsPageModule\n\nSettingsPageModule -->\n\nSettingsPage->SettingsPageModule\n\n\n\n\n\nSettingsPageRoutingModule\n\nSettingsPageRoutingModule\n\nSettingsPageModule -->\n\nSettingsPageRoutingModule->SettingsPageModule\n\n\n\n\n\nCategoriesInfoComponent\n\nCategoriesInfoComponent\n\nSharedModule -->\n\nCategoriesInfoComponent->SharedModule\n\n\n\n\n\nConfirmDialogComponent\n\nConfirmDialogComponent\n\nSharedModule -->\n\nConfirmDialogComponent->SharedModule\n\n\n\n\n\nIncidentsCircleGraphicComponent\n\nIncidentsCircleGraphicComponent\n\nSharedModule -->\n\nIncidentsCircleGraphicComponent->SharedModule\n\n\n\n\n\nIncidentsInfoComponent\n\nIncidentsInfoComponent\n\nSharedModule -->\n\nIncidentsInfoComponent->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nUserCircleGraphicComponent\n\nUserCircleGraphicComponent\n\nSharedModule -->\n\nUserCircleGraphicComponent->SharedModule\n\n\n\n\n\nUsersInfoComponent\n\nUsersInfoComponent\n\nSharedModule -->\n\nUsersInfoComponent->SharedModule\n\n\n\n\n\nShortenTextPipe\n\nShortenTextPipe\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\nSharedModule -->\n\nShortenTextPipe->SharedModule\n\n\n\n\n\nUpdateUserComponent\n\nUpdateUserComponent\n\nUserDataPageModule -->\n\nUpdateUserComponent->UserDataPageModule\n\n\n\n\n\nUserDataPage\n\nUserDataPage\n\nUserDataPageModule -->\n\nUserDataPage->UserDataPageModule\n\n\n\n\n\nUserDataPageRoutingModule\n\nUserDataPageRoutingModule\n\nUserDataPageModule -->\n\nUserDataPageRoutingModule->UserDataPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        17 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    27 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        24 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccessPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AccessPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IncidentDataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IncidentDataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserDataPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserDataPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR   (src/.../category-selectable-mobile.component.ts)\n                        \n                        \n                            CATEGORY_SELECTABLE_VALUE_ACCESSOR   (src/.../category-selectable.component.ts)\n                        \n                        \n                            config   (capacitor.config.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            PICTURE_SELECTABLE_VALUE_ACCESSOR   (src/.../picture-selectable.component.ts)\n                        \n                        \n                            USER_SELECTABLE_MOBILE_VALUE_ACCESSOR   (src/.../user-selectable-mobile.component.ts)\n                        \n                        \n                            USER_SELECTABLE_VALUE_ACCESSOR   (src/.../user-selectable.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/pages/home/category-selectable-mobile/category-selectable-mobile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableMobileComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/category-selectable/category-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CATEGORY_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => CategorySelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    capacitor.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CapacitorConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  appId: 'io.ionic.starter',\n  appName: 'TFCChato',\n  webDir: 'www',\n  server: {\n    androidScheme: 'https'\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDOnguE6cpcz6VKkf-RnI3RcpqS7Xmtbh4\",\n    authDomain: \"chato-a4ef9.firebaseapp.com\",\n    projectId: \"chato-a4ef9\",\n    storageBucket: \"chato-a4ef9.appspot.com\",\n    messagingSenderId: \"770666336001\",\n    appId: \"1:770666336001:web:96e7751d6f04cea0b39500\",\n    measurementId: \"G-Z70NCW6NLN\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  firebaseConfig: {\n    apiKey: \"AIzaSyDOnguE6cpcz6VKkf-RnI3RcpqS7Xmtbh4\",\n    authDomain: \"chato-a4ef9.firebaseapp.com\",\n    projectId: \"chato-a4ef9\",\n    storageBucket: \"chato-a4ef9.appspot.com\",\n    messagingSenderId: \"770666336001\",\n    appId: \"1:770666336001:web:96e7751d6f04cea0b39500\",\n    measurementId: \"G-Z70NCW6NLN\"\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PICTURE_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/user-selectable-mobile/user-selectable-mobile.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_SELECTABLE_MOBILE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableMobileComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n    src/app/pages/home/user-selectable/user-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => UserSelectableComponent),\n  multi: true,\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
